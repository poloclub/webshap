(function(){"use strict";function Q7(e,t){return t.forEach(function(n){n&&typeof n!="string"&&!Array.isArray(n)&&Object.keys(n).forEach(function(s){if(s!=="default"&&!(s in e)){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(e,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}})}),Object.freeze(e)}const kT={colors:{"red-50":"hsl(350, 100.0%, 96.08%)","red-100":"hsl(354, 100.0%, 90.2%)","red-200":"hsl(0, 72.65%, 77.06%)","red-300":"hsl(0, 68.67%, 67.45%)","red-400":"hsl(1, 83.25%, 62.55%)","red-500":"hsl(4, 89.62%, 58.43%)","red-600":"hsl(1, 77.19%, 55.29%)","red-700":"hsl(0, 65.08%, 50.59%)","red-800":"hsl(0, 66.39%, 46.67%)","red-900":"hsl(0, 73.46%, 41.37%)","red-a100":"hsl(4, 100.0%, 75.1%)","red-a200":"hsl(0, 100.0%, 66.08%)","red-a400":"hsl(348, 100.0%, 54.51%)","red-a700":"hsl(0, 100.0%, 41.76%)","pink-50":"hsl(340, 80.0%, 94.12%)","pink-100":"hsl(339, 81.33%, 85.29%)","pink-200":"hsl(339, 82.11%, 75.88%)","pink-300":"hsl(339, 82.56%, 66.27%)","pink-400":"hsl(339, 81.9%, 58.82%)","pink-500":"hsl(339, 82.19%, 51.57%)","pink-600":"hsl(338, 77.78%, 47.65%)","pink-700":"hsl(336, 77.98%, 42.75%)","pink-800":"hsl(333, 79.27%, 37.84%)","pink-900":"hsl(328, 81.33%, 29.41%)","pink-a100":"hsl(339, 100.0%, 75.1%)","pink-a200":"hsl(339, 100.0%, 62.55%)","pink-a400":"hsl(338, 100.0%, 48.04%)","pink-a700":"hsl(333, 84.11%, 41.96%)","purple-50":"hsl(292, 44.44%, 92.94%)","purple-100":"hsl(291, 46.07%, 82.55%)","purple-200":"hsl(291, 46.94%, 71.18%)","purple-300":"hsl(291, 46.6%, 59.61%)","purple-400":"hsl(291, 46.61%, 50.78%)","purple-500":"hsl(291, 63.72%, 42.16%)","purple-600":"hsl(287, 65.05%, 40.39%)","purple-700":"hsl(282, 67.88%, 37.84%)","purple-800":"hsl(277, 70.17%, 35.49%)","purple-900":"hsl(267, 75.0%, 31.37%)","purple-a100":"hsl(291, 95.38%, 74.51%)","purple-a200":"hsl(291, 95.9%, 61.76%)","purple-a400":"hsl(291, 100.0%, 48.82%)","purple-a700":"hsl(280, 100.0%, 50.0%)","deep-purple-50":"hsl(264, 45.45%, 93.53%)","deep-purple-100":"hsl(261, 45.68%, 84.12%)","deep-purple-200":"hsl(261, 46.27%, 73.73%)","deep-purple-300":"hsl(261, 46.81%, 63.14%)","deep-purple-400":"hsl(261, 46.72%, 55.1%)","deep-purple-500":"hsl(261, 51.87%, 47.25%)","deep-purple-600":"hsl(259, 53.91%, 45.1%)","deep-purple-700":"hsl(257, 57.75%, 41.76%)","deep-purple-800":"hsl(254, 60.8%, 39.02%)","deep-purple-900":"hsl(251, 68.79%, 33.92%)","deep-purple-a100":"hsl(261, 100.0%, 76.67%)","deep-purple-a200":"hsl(255, 100.0%, 65.1%)","deep-purple-a400":"hsl(258, 100.0%, 56.08%)","deep-purple-a700":"hsl(265, 100.0%, 45.88%)","indigo-50":"hsl(231, 43.75%, 93.73%)","indigo-100":"hsl(231, 45.0%, 84.31%)","indigo-200":"hsl(230, 44.36%, 73.92%)","indigo-300":"hsl(230, 44.09%, 63.53%)","indigo-400":"hsl(230, 44.25%, 55.69%)","indigo-500":"hsl(230, 48.36%, 47.84%)","indigo-600":"hsl(231, 50.0%, 44.71%)","indigo-700":"hsl(231, 53.62%, 40.59%)","indigo-800":"hsl(232, 57.22%, 36.67%)","indigo-900":"hsl(234, 65.79%, 29.8%)","indigo-a100":"hsl(230, 100.0%, 77.45%)","indigo-a200":"hsl(230, 98.84%, 66.08%)","indigo-a400":"hsl(230, 98.97%, 61.76%)","indigo-a700":"hsl(230, 99.04%, 59.22%)","blue-50":"hsl(205, 86.67%, 94.12%)","blue-100":"hsl(207, 88.89%, 85.88%)","blue-200":"hsl(206, 89.74%, 77.06%)","blue-300":"hsl(206, 89.02%, 67.84%)","blue-400":"hsl(206, 89.95%, 60.98%)","blue-500":"hsl(206, 89.74%, 54.12%)","blue-600":"hsl(208, 79.28%, 50.78%)","blue-700":"hsl(209, 78.72%, 46.08%)","blue-800":"hsl(211, 80.28%, 41.76%)","blue-900":"hsl(216, 85.06%, 34.12%)","blue-a100":"hsl(217, 100.0%, 75.49%)","blue-a200":"hsl(217, 100.0%, 63.33%)","blue-a400":"hsl(217, 100.0%, 58.04%)","blue-a700":"hsl(224, 100.0%, 58.04%)","light-blue-50":"hsl(198, 93.55%, 93.92%)","light-blue-100":"hsl(198, 92.41%, 84.51%)","light-blue-200":"hsl(198, 92.37%, 74.31%)","light-blue-300":"hsl(198, 91.3%, 63.92%)","light-blue-400":"hsl(198, 91.93%, 56.27%)","light-blue-500":"hsl(198, 97.57%, 48.43%)","light-blue-600":"hsl(199, 97.41%, 45.49%)","light-blue-700":"hsl(201, 98.1%, 41.37%)","light-blue-800":"hsl(202, 97.91%, 37.45%)","light-blue-900":"hsl(206, 98.72%, 30.59%)","light-blue-a100":"hsl(198, 100.0%, 75.1%)","light-blue-a200":"hsl(198, 100.0%, 62.55%)","light-blue-a400":"hsl(198, 100.0%, 50.0%)","light-blue-a700":"hsl(202, 100.0%, 45.88%)","cyan-50":"hsl(186, 72.22%, 92.94%)","cyan-100":"hsl(186, 71.11%, 82.35%)","cyan-200":"hsl(186, 71.62%, 70.98%)","cyan-300":"hsl(186, 71.15%, 59.22%)","cyan-400":"hsl(186, 70.87%, 50.2%)","cyan-500":"hsl(186, 100.0%, 41.57%)","cyan-600":"hsl(186, 100.0%, 37.84%)","cyan-700":"hsl(185, 100.0%, 32.75%)","cyan-800":"hsl(185, 100.0%, 28.04%)","cyan-900":"hsl(182, 100.0%, 19.61%)","cyan-a100":"hsl(180, 100.0%, 75.88%)","cyan-a200":"hsl(180, 100.0%, 54.71%)","cyan-a400":"hsl(186, 100.0%, 50.0%)","cyan-a700":"hsl(187, 100.0%, 41.57%)","teal-50":"hsl(176, 40.91%, 91.37%)","teal-100":"hsl(174, 41.28%, 78.63%)","teal-200":"hsl(174, 41.9%, 64.9%)","teal-300":"hsl(174, 41.83%, 50.78%)","teal-400":"hsl(174, 62.75%, 40.0%)","teal-500":"hsl(174, 100.0%, 29.41%)","teal-600":"hsl(173, 100.0%, 26.86%)","teal-700":"hsl(173, 100.0%, 23.73%)","teal-800":"hsl(172, 100.0%, 20.59%)","teal-900":"hsl(169, 100.0%, 15.1%)","teal-a100":"hsl(166, 100.0%, 82.75%)","teal-a200":"hsl(165, 100.0%, 69.61%)","teal-a400":"hsl(165, 82.26%, 51.37%)","teal-a700":"hsl(171, 100.0%, 37.45%)","green-50":"hsl(124, 39.39%, 93.53%)","green-100":"hsl(121, 37.5%, 84.31%)","green-200":"hsl(122, 37.4%, 74.31%)","green-300":"hsl(122, 38.46%, 64.31%)","green-400":"hsl(122, 38.46%, 56.67%)","green-500":"hsl(122, 39.44%, 49.22%)","green-600":"hsl(122, 40.97%, 44.51%)","green-700":"hsl(122, 43.43%, 38.82%)","green-800":"hsl(123, 46.2%, 33.53%)","green-900":"hsl(124, 55.37%, 23.73%)","green-a100":"hsl(136, 77.22%, 84.51%)","green-a200":"hsl(150, 81.82%, 67.65%)","green-a400":"hsl(150, 100.0%, 45.1%)","green-a700":"hsl(144, 100.0%, 39.22%)","light-green-50":"hsl(88, 51.72%, 94.31%)","light-green-100":"hsl(87, 50.68%, 85.69%)","light-green-200":"hsl(88, 50.0%, 76.47%)","light-green-300":"hsl(87, 50.0%, 67.06%)","light-green-400":"hsl(87, 50.24%, 59.8%)","light-green-500":"hsl(87, 50.21%, 52.75%)","light-green-600":"hsl(89, 46.12%, 48.04%)","light-green-700":"hsl(92, 47.91%, 42.16%)","light-green-800":"hsl(95, 49.46%, 36.47%)","light-green-900":"hsl(103, 55.56%, 26.47%)","light-green-a100":"hsl(87, 100.0%, 78.24%)","light-green-a200":"hsl(87, 100.0%, 67.45%)","light-green-a400":"hsl(92, 100.0%, 50.59%)","light-green-a700":"hsl(96, 81.15%, 47.84%)","lime-50":"hsl(65, 71.43%, 94.51%)","lime-100":"hsl(64, 69.01%, 86.08%)","lime-200":"hsl(65, 70.69%, 77.25%)","lime-300":"hsl(65, 70.37%, 68.24%)","lime-400":"hsl(65, 69.7%, 61.18%)","lime-500":"hsl(65, 69.96%, 54.31%)","lime-600":"hsl(63, 59.68%, 49.61%)","lime-700":"hsl(62, 61.43%, 43.73%)","lime-800":"hsl(59, 62.89%, 38.04%)","lime-900":"hsl(53, 69.93%, 30.0%)","lime-a100":"hsl(65, 100.0%, 75.29%)","lime-a200":"hsl(65, 100.0%, 62.75%)","lime-a400":"hsl(73, 100.0%, 50.0%)","lime-a700":"hsl(75, 100.0%, 45.88%)","yellow-50":"hsl(55, 100.0%, 95.29%)","yellow-100":"hsl(53, 100.0%, 88.43%)","yellow-200":"hsl(53, 100.0%, 80.78%)","yellow-300":"hsl(53, 100.0%, 73.14%)","yellow-400":"hsl(53, 100.0%, 67.25%)","yellow-500":"hsl(53, 100.0%, 61.57%)","yellow-600":"hsl(48, 98.04%, 60.0%)","yellow-700":"hsl(42, 96.26%, 58.04%)","yellow-800":"hsl(37, 94.64%, 56.08%)","yellow-900":"hsl(28, 91.74%, 52.55%)","yellow-a100":"hsl(60, 100.0%, 77.65%)","yellow-a200":"hsl(60, 100.0%, 50.0%)","yellow-a400":"hsl(55, 100.0%, 50.0%)","yellow-a700":"hsl(50, 100.0%, 50.0%)","amber-50":"hsl(46, 100.0%, 94.12%)","amber-100":"hsl(45, 100.0%, 85.1%)","amber-200":"hsl(45, 100.0%, 75.49%)","amber-300":"hsl(45, 100.0%, 65.49%)","amber-400":"hsl(45, 100.0%, 57.84%)","amber-500":"hsl(45, 100.0%, 51.37%)","amber-600":"hsl(42, 100.0%, 50.0%)","amber-700":"hsl(37, 100.0%, 50.0%)","amber-800":"hsl(33, 100.0%, 50.0%)","amber-900":"hsl(26, 100.0%, 50.0%)","amber-a100":"hsl(47, 100.0%, 74.9%)","amber-a200":"hsl(47, 100.0%, 62.55%)","amber-a400":"hsl(46, 100.0%, 50.0%)","amber-a700":"hsl(40, 100.0%, 50.0%)","orange-50":"hsl(36, 100.0%, 93.92%)","orange-100":"hsl(35, 100.0%, 84.9%)","orange-200":"hsl(35, 100.0%, 75.1%)","orange-300":"hsl(35, 100.0%, 65.1%)","orange-400":"hsl(35, 100.0%, 57.45%)","orange-500":"hsl(35, 100.0%, 50.0%)","orange-600":"hsl(33, 100.0%, 49.22%)","orange-700":"hsl(30, 100.0%, 48.04%)","orange-800":"hsl(27, 100.0%, 46.86%)","orange-900":"hsl(21, 100.0%, 45.1%)","orange-a100":"hsl(38, 100.0%, 75.1%)","orange-a200":"hsl(33, 100.0%, 62.55%)","orange-a400":"hsl(34, 100.0%, 50.0%)","orange-a700":"hsl(25, 100.0%, 50.0%)","deep-orange-50":"hsl(5, 71.43%, 94.51%)","deep-orange-100":"hsl(14, 100.0%, 86.86%)","deep-orange-200":"hsl(14, 100.0%, 78.43%)","deep-orange-300":"hsl(14, 100.0%, 69.8%)","deep-orange-400":"hsl(14, 100.0%, 63.14%)","deep-orange-500":"hsl(14, 100.0%, 56.67%)","deep-orange-600":"hsl(14, 90.68%, 53.73%)","deep-orange-700":"hsl(14, 80.39%, 50.0%)","deep-orange-800":"hsl(14, 82.28%, 46.47%)","deep-orange-900":"hsl(14, 88.18%, 39.8%)","deep-orange-a100":"hsl(14, 100.0%, 75.1%)","deep-orange-a200":"hsl(14, 100.0%, 62.55%)","deep-orange-a400":"hsl(14, 100.0%, 50.0%)","deep-orange-a700":"hsl(11, 100.0%, 43.33%)","brown-50":"hsl(19, 15.79%, 92.55%)","brown-100":"hsl(16, 15.79%, 81.37%)","brown-200":"hsl(14, 15.19%, 69.02%)","brown-300":"hsl(15, 15.32%, 56.47%)","brown-400":"hsl(15, 17.5%, 47.06%)","brown-500":"hsl(15, 25.39%, 37.84%)","brown-600":"hsl(15, 25.29%, 34.12%)","brown-700":"hsl(14, 25.68%, 29.02%)","brown-800":"hsl(11, 25.81%, 24.31%)","brown-900":"hsl(8, 27.84%, 19.02%)","gray-50":"hsl(0, 0.0%, 98.04%)","gray-100":"hsl(0, 0.0%, 96.08%)","gray-200":"hsl(0, 0.0%, 93.33%)","gray-300":"hsl(0, 0.0%, 87.84%)","gray-400":"hsl(0, 0.0%, 74.12%)","gray-500":"hsl(0, 0.0%, 61.96%)","gray-600":"hsl(0, 0.0%, 45.88%)","gray-700":"hsl(0, 0.0%, 38.04%)","gray-800":"hsl(0, 0.0%, 25.88%)","gray-900":"hsl(0, 0.0%, 12.94%)","blue-gray-50":"hsl(204, 15.15%, 93.53%)","blue-gray-100":"hsl(198, 15.66%, 83.73%)","blue-gray-200":"hsl(199, 15.33%, 73.14%)","blue-gray-300":"hsl(199, 15.63%, 62.35%)","blue-gray-400":"hsl(200, 15.38%, 54.12%)","blue-gray-500":"hsl(199, 18.3%, 46.08%)","blue-gray-600":"hsl(198, 18.45%, 40.39%)","blue-gray-700":"hsl(199, 18.34%, 33.14%)","blue-gray-800":"hsl(199, 17.91%, 26.27%)","blue-gray-900":"hsl(199, 19.15%, 18.43%)","blue-gray-1000":"hsl(199, 20.93%, 8.43%)"},layout:{imageSrcLength:64,imageLength:134},time:{mouseenterDelay:300},debug:!0,gridColorLight:"hsl(0, 0%, 100%)",gridColorDark:"hsl(0, 0%, 30%)"};var t9=Object.defineProperty,e9=(e,t,n)=>t in e?t9(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,Ze=(e,t,n)=>(e9(e,typeof t!="symbol"?t+"":t,n),n);function n9(e,t){for(var n=0;n<t.length;n++){const s=t[n];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in e)){const i=Object.getOwnPropertyDescriptor(s,r);i&&Object.defineProperty(e,r,i.get?i:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}const IT=Math.random,s9=function e(t){function n(s,r){return s=s==null?0:+s,r=r==null?1:+r,arguments.length===1?(r=s,s=0):r-=s,function(){return t()*r+s}}return n.source=e,n}(IT),r9=function e(t){function n(s,r){return arguments.length<2&&(r=s,s=0),s=Math.floor(s),r=Math.floor(r)-s,function(){return Math.floor(t()*r+s)}}return n.source=e,n}(IT),i9=1664525,o9=1013904223,CT=1/4294967296;function $T(e=Math.random()){let t=(0<=e&&e<1?e/CT:Math.abs(e))|0;return()=>(t=i9*t+o9|0,CT*(t>>>0))}const ST=(e,t)=>{const n=Math.min(t,e-t);return Array.from(new Array(n),(s,r)=>r+1).reduce((s,r)=>s*(e+1-r)/r,1)},a9=(e,t)=>{const n=[];function s(r=0,i=[]){if(i.length===t){n.push(i);return}for(let o=r;o<e.length;o++)s(o+1,[...i,e[o]])}return s(),n};function Cv(){return Cv=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s])}return e},Cv.apply(this,arguments)}var NT={epsilon:1e-12,matrix:"Matrix",number:"number",precision:64,predictable:!1,randomSeed:null};function Tn(e){return typeof e=="number"}function as(e){return!e||typeof e!="object"||typeof e.constructor!="function"?!1:e.isBigNumber===!0&&typeof e.constructor.prototype=="object"&&e.constructor.prototype.isBigNumber===!0||typeof e.constructor.isDecimal=="function"&&e.constructor.isDecimal(e)===!0}function ET(e){return e&&typeof e=="object"&&Object.getPrototypeOf(e).isComplex===!0||!1}function DT(e){return e&&typeof e=="object"&&Object.getPrototypeOf(e).isFraction===!0||!1}function TT(e){return e&&e.constructor.prototype.isUnit===!0||!1}function Xi(e){return typeof e=="string"}var ln=Array.isArray;function Je(e){return e&&e.constructor.prototype.isMatrix===!0||!1}function Yd(e){return Array.isArray(e)||Je(e)}function u9(e){return e&&e.isDenseMatrix&&e.constructor.prototype.isMatrix===!0||!1}function l9(e){return e&&e.isSparseMatrix&&e.constructor.prototype.isMatrix===!0||!1}function AT(e){return e&&e.constructor.prototype.isRange===!0||!1}function $v(e){return e&&e.constructor.prototype.isIndex===!0||!1}function c9(e){return typeof e=="boolean"}function h9(e){return e&&e.constructor.prototype.isResultSet===!0||!1}function d9(e){return e&&e.constructor.prototype.isHelp===!0||!1}function p9(e){return typeof e=="function"}function f9(e){return e instanceof Date}function m9(e){return e instanceof RegExp}function g9(e){return!!(e&&typeof e=="object"&&e.constructor===Object&&!ET(e)&&!DT(e))}function x9(e){return e===null}function b9(e){return e===void 0}function y9(e){return e&&e.isAccessorNode===!0&&e.constructor.prototype.isNode===!0||!1}function w9(e){return e&&e.isArrayNode===!0&&e.constructor.prototype.isNode===!0||!1}function v9(e){return e&&e.isAssignmentNode===!0&&e.constructor.prototype.isNode===!0||!1}function k9(e){return e&&e.isBlockNode===!0&&e.constructor.prototype.isNode===!0||!1}function I9(e){return e&&e.isConditionalNode===!0&&e.constructor.prototype.isNode===!0||!1}function C9(e){return e&&e.isConstantNode===!0&&e.constructor.prototype.isNode===!0||!1}function $9(e){return e&&e.isFunctionAssignmentNode===!0&&e.constructor.prototype.isNode===!0||!1}function S9(e){return e&&e.isFunctionNode===!0&&e.constructor.prototype.isNode===!0||!1}function N9(e){return e&&e.isIndexNode===!0&&e.constructor.prototype.isNode===!0||!1}function E9(e){return e&&e.isNode===!0&&e.constructor.prototype.isNode===!0||!1}function D9(e){return e&&e.isObjectNode===!0&&e.constructor.prototype.isNode===!0||!1}function T9(e){return e&&e.isOperatorNode===!0&&e.constructor.prototype.isNode===!0||!1}function A9(e){return e&&e.isParenthesisNode===!0&&e.constructor.prototype.isNode===!0||!1}function F9(e){return e&&e.isRangeNode===!0&&e.constructor.prototype.isNode===!0||!1}function R9(e){return e&&e.isRelationalNode===!0&&e.constructor.prototype.isNode===!0||!1}function _9(e){return e&&e.isSymbolNode===!0&&e.constructor.prototype.isNode===!0||!1}function M9(e){return e&&e.constructor.prototype.isChain===!0||!1}function wa(e){var t=typeof e;return t==="object"?e===null?"null":as(e)?"BigNumber":e.constructor&&e.constructor.name?e.constructor.name:"Object":t}function _e(e){var t=typeof e;if(t==="number"||t==="string"||t==="boolean"||e===null||e===void 0)return e;if(typeof e.clone=="function")return e.clone();if(Array.isArray(e))return e.map(function(n){return _e(n)});if(e instanceof Date)return new Date(e.valueOf());if(as(e))return e;if(e instanceof RegExp)throw new TypeError("Cannot clone "+e);return O9(e,_e)}function O9(e,t){var n={};for(var s in e)Zd(e,s)&&(n[s]=t(e[s]));return n}function FT(e,t){for(var n in t)Zd(t,n)&&(e[n]=t[n]);return e}function $0(e,t){var n,s,r;if(Array.isArray(e)){if(!Array.isArray(t)||e.length!==t.length)return!1;for(s=0,r=e.length;s<r;s++)if(!$0(e[s],t[s]))return!1;return!0}else{if(typeof e=="function")return e===t;if(e instanceof Object){if(Array.isArray(t)||!(t instanceof Object))return!1;for(n in e)if(!(n in t)||!$0(e[n],t[n]))return!1;for(n in t)if(!(n in e))return!1;return!0}else return e===t}}function Zd(e,t){return e&&Object.hasOwnProperty.call(e,t)}function L9(e,t){for(var n={},s=0;s<t.length;s++){var r=t[s],i=e[r];i!==void 0&&(n[r]=i)}return n}var z9=["Matrix","Array"],B9=["number","BigNumber","Fraction"],Jr=function(e){if(e)throw new Error(`The global config is readonly. 
Please create a mathjs instance if you want to change the default configuration. 
Example:

  import { create, all } from 'mathjs';
  const mathjs = create(all);
  mathjs.config({ number: 'BigNumber' });
`);return Object.freeze(NT)};Cv(Jr,NT,{MATRIX_OPTIONS:z9,NUMBER_OPTIONS:B9});function Yi(e,t){var n=typeof Symbol<"u"&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=P9(e))||t&&e&&typeof e.length=="number"){n&&(e=n);var s=0,r=function(){};return{s:r,n:function(){return s>=e.length?{done:!0}:{done:!1,value:e[s++]}},e:function(u){throw u},f:r}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var i=!0,o=!1,a;return{s:function(){n=n.call(e)},n:function(){var u=n.next();return i=u.done,u},e:function(u){o=!0,a=u},f:function(){try{!i&&n.return!=null&&n.return()}finally{if(o)throw a}}}}function P9(e,t){if(e){if(typeof e=="string")return RT(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(n==="Object"&&e.constructor&&(n=e.constructor.name),n==="Map"||n==="Set")return Array.from(e);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return RT(e,t)}}function RT(e,t){(t==null||t>e.length)&&(t=e.length);for(var n=0,s=new Array(t);n<t;n++)s[n]=e[n];return s}function Hc(e){return Hc=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(t){return typeof t}:function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Hc(e)}function _T(){return!0}function xi(){return!1}function qc(){}var MT="Argument is not a typed-function.";function OT(){function e(W){return Hc(W)==="object"&&W!==null&&W.constructor===Object}var t=[{name:"number",test:function(W){return typeof W=="number"}},{name:"string",test:function(W){return typeof W=="string"}},{name:"boolean",test:function(W){return typeof W=="boolean"}},{name:"Function",test:function(W){return typeof W=="function"}},{name:"Array",test:Array.isArray},{name:"Date",test:function(W){return W instanceof Date}},{name:"RegExp",test:function(W){return W instanceof RegExp}},{name:"Object",test:e},{name:"null",test:function(W){return W===null}},{name:"undefined",test:function(W){return W===void 0}}],n={name:"any",test:_T,isAny:!0},s,r,i=0,o={createCount:0};function a(W){var Q=s.get(W);if(Q)return Q;var lt='Unknown type "'+W+'"',yt=W.toLowerCase(),It,$t=Yi(r),At;try{for($t.s();!(At=$t.n()).done;)if(It=At.value,It.toLowerCase()===yt){lt+='. Did you mean "'+It+'" ?';break}}catch(vt){$t.e(vt)}finally{$t.f()}throw new TypeError(lt)}function u(W){for(var Q=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"any",lt=Q?a(Q).index:r.length,yt=[],It=0;It<W.length;++It){if(!W[It]||typeof W[It].name!="string"||typeof W[It].test!="function")throw new TypeError("Object with properties {name: string, test: function} expected");var $t=W[It].name;if(s.has($t))throw new TypeError('Duplicate type name "'+$t+'"');yt.push($t),s.set($t,{name:$t,test:W[It].test,isAny:W[It].isAny,index:lt+It,conversionsTo:[]})}var At=r.slice(lt);r=r.slice(0,lt).concat(yt).concat(At);for(var vt=lt+yt.length;vt<r.length;++vt)s.get(r[vt]).index=vt}function l(){s=new Map,r=[],i=0,u([n],!1)}l(),u(t);function c(){var W,Q=Yi(r),lt;try{for(Q.s();!(lt=Q.n()).done;)W=lt.value,s.get(W).conversionsTo=[]}catch(yt){Q.e(yt)}finally{Q.f()}i=0}function h(W){var Q=r.filter(function(lt){var yt=s.get(lt);return!yt.isAny&&yt.test(W)});return Q.length?Q:["any"]}function d(W){return W&&typeof W=="function"&&"_typedFunctionData"in W}function p(W,Q,lt){if(!d(W))throw new TypeError(MT);var yt=lt&&lt.exact,It=Array.isArray(Q)?Q.join(","):Q,$t=y(It),At=g($t);if(!yt||At in W.signatures){var vt=W._typedFunctionData.signatureMap.get(At);if(vt)return vt}var Vt=$t.length,Ne;if(yt){Ne=[];var Se;for(Se in W.signatures)Ne.push(W._typedFunctionData.signatureMap.get(Se))}else Ne=W._typedFunctionData.signatures;for(var zt=0;zt<Vt;++zt){var vs=$t[zt],qs=[],ks=void 0,Os=Yi(Ne),hr;try{for(Os.s();!(hr=Os.n()).done;){ks=hr.value;var Er=I(ks.params,zt);if(!(!Er||vs.restParam&&!Er.restParam)){if(!Er.hasAny){var Ki=function(){var Zr=w(Er);if(vs.types.some(function(Gc){return!Zr.has(Gc.name)}))return"continue"}();if(Ki==="continue")continue}qs.push(ks)}}}catch(Zr){Os.e(Zr)}finally{Os.f()}if(Ne=qs,Ne.length===0)break}var gi,Dr=Yi(Ne),Uc;try{for(Dr.s();!(Uc=Dr.n()).done;)if(gi=Uc.value,gi.params.length<=Vt)return gi}catch(Zr){Dr.e(Zr)}finally{Dr.f()}throw new TypeError("Signature not found (signature: "+(W.name||"unnamed")+"("+g($t,", ")+"))")}function f(W,Q,lt){return p(W,Q,lt).implementation}function m(W,Q){var lt=a(Q);if(lt.test(W))return W;var yt=lt.conversionsTo;if(yt.length===0)throw new Error("There are no conversions to "+Q+" defined.");for(var It=0;It<yt.length;It++){var $t=a(yt[It].from);if($t.test(W))return yt[It].convert(W)}throw new Error("Cannot convert "+W+" to "+Q)}function g(W){var Q=arguments.length>1&&arguments[1]!==void 0?arguments[1]:",";return W.map(function(lt){return lt.name}).join(Q)}function x(W){var Q=W.indexOf("...")===0,lt=Q?W.length>3?W.slice(3):"any":W,yt=lt.split("|").map(function(vt){return a(vt.trim())}),It=!1,$t=Q?"...":"",At=yt.map(function(vt){return It=vt.isAny||It,$t+=vt.name+"|",{name:vt.name,typeIndex:vt.index,test:vt.test,isAny:vt.isAny,conversion:null,conversionIndex:-1}});return{types:At,name:$t.slice(0,-1),hasAny:It,hasConversion:!1,restParam:Q}}function b(W){var Q=W.types.map(function(At){return At.name}),lt=R(Q),yt=W.hasAny,It=W.name,$t=lt.map(function(At){var vt=a(At.from);return yt=vt.isAny||yt,It+="|"+At.from,{name:At.from,typeIndex:vt.index,test:vt.test,isAny:vt.isAny,conversion:At,conversionIndex:At.index}});return{types:W.types.concat($t),name:It,hasAny:yt,hasConversion:$t.length>0,restParam:W.restParam}}function w(W){return W.typeSet||(W.typeSet=new Set,W.types.forEach(function(Q){return W.typeSet.add(Q.name)})),W.typeSet}function y(W){var Q=[];if(typeof W!="string")throw new TypeError("Signatures must be strings");var lt=W.trim();if(lt==="")return Q;for(var yt=lt.split(","),It=0;It<yt.length;++It){var $t=x(yt[It].trim());if($t.restParam&&It!==yt.length-1)throw new SyntaxError('Unexpected rest parameter "'+yt[It]+'": only allowed for the last parameter');if($t.types.length===0)return null;Q.push($t)}return Q}function v(W){var Q=X(W);return Q?Q.restParam:!1}function k(W){if(!W||W.types.length===0)return _T;if(W.types.length===1)return a(W.types[0].name).test;if(W.types.length===2){var Q=a(W.types[0].name).test,lt=a(W.types[1].name).test;return function(It){return Q(It)||lt(It)}}else{var yt=W.types.map(function(It){return a(It.name).test});return function(It){for(var $t=0;$t<yt.length;$t++)if(yt[$t](It))return!0;return!1}}}function C(W){var Q,lt,yt;if(v(W)){Q=ft(W).map(k);var It=Q.length,$t=k(X(W)),At=function(vt){for(var Vt=It;Vt<vt.length;Vt++)if(!$t(vt[Vt]))return!1;return!0};return function(vt){for(var Vt=0;Vt<Q.length;Vt++)if(!Q[Vt](vt[Vt]))return!1;return At(vt)&&vt.length>=It+1}}else return W.length===0?function(vt){return vt.length===0}:W.length===1?(lt=k(W[0]),function(vt){return lt(vt[0])&&vt.length===1}):W.length===2?(lt=k(W[0]),yt=k(W[1]),function(vt){return lt(vt[0])&&yt(vt[1])&&vt.length===2}):(Q=W.map(k),function(vt){for(var Vt=0;Vt<Q.length;Vt++)if(!Q[Vt](vt[Vt]))return!1;return vt.length===Q.length})}function I(W,Q){return Q<W.length?W[Q]:v(W)?X(W):null}function $(W,Q){var lt=I(W,Q);return lt?w(lt):new Set}function S(W){return W.conversion===null||W.conversion===void 0}function N(W,Q){var lt=new Set;return W.forEach(function(yt){var It=$(yt.params,Q),$t,At=Yi(It),vt;try{for(At.s();!(vt=At.n()).done;)$t=vt.value,lt.add($t)}catch(Vt){At.e(Vt)}finally{At.f()}}),lt.has("any")?["any"]:Array.from(lt)}function F(W,Q,lt){var yt,It,$t=W||"unnamed",At=lt,vt,Vt=function(){var ks=[];if(At.forEach(function(hr){var Er=I(hr.params,vt),Ki=k(Er);(vt<hr.params.length||v(hr.params))&&Ki(Q[vt])&&ks.push(hr)}),ks.length===0){if(It=N(At,vt),It.length>0){var Os=h(Q[vt]);return yt=new TypeError("Unexpected type of argument in function "+$t+" (expected: "+It.join(" or ")+", actual: "+Os.join(" | ")+", index: "+vt+")"),yt.data={category:"wrongType",fn:$t,index:vt,actual:Os,expected:It},{v:yt}}}else At=ks};for(vt=0;vt<Q.length;vt++){var Ne=Vt();if(Hc(Ne)==="object")return Ne.v}var Se=At.map(function(ks){return v(ks.params)?1/0:ks.params.length});if(Q.length<Math.min.apply(null,Se))return It=N(At,vt),yt=new TypeError("Too few arguments in function "+$t+" (expected: "+It.join(" or ")+", index: "+Q.length+")"),yt.data={category:"tooFewArgs",fn:$t,index:Q.length,expected:It},yt;var zt=Math.max.apply(null,Se);if(Q.length>zt)return yt=new TypeError("Too many arguments in function "+$t+" (expected: "+zt+", actual: "+Q.length+")"),yt.data={category:"tooManyArgs",fn:$t,index:Q.length,expectedLength:zt},yt;for(var vs=[],qs=0;qs<Q.length;++qs)vs.push(h(Q[qs]).join("|"));return yt=new TypeError('Arguments of type "'+vs.join(", ")+'" do not match any of the defined signatures of function '+$t+"."),yt.data={category:"mismatch",actual:vs},yt}function D(W){for(var Q=r.length+1,lt=0;lt<W.types.length;lt++)S(W.types[lt])&&(Q=Math.min(Q,W.types[lt].typeIndex));return Q}function E(W){for(var Q=i+1,lt=0;lt<W.types.length;lt++)S(W.types[lt])||(Q=Math.min(Q,W.types[lt].conversionIndex));return Q}function A(W,Q){if(W.hasAny){if(!Q.hasAny)return 1}else if(Q.hasAny)return-1;if(W.restParam){if(!Q.restParam)return 1}else if(Q.restParam)return-1;if(W.hasConversion){if(!Q.hasConversion)return 1}else if(Q.hasConversion)return-1;var lt=D(W)-D(Q);if(lt<0)return-1;if(lt>0)return 1;var yt=E(W)-E(Q);return yt<0?-1:yt>0?1:0}function T(W,Q){var lt=W.params,yt=Q.params,It=X(lt),$t=X(yt),At=v(lt),vt=v(yt);if(At&&It.hasAny){if(!vt||!$t.hasAny)return 1}else if(vt&&$t.hasAny)return-1;var Vt=0,Ne=0,Se,zt=Yi(lt),vs;try{for(zt.s();!(vs=zt.n()).done;)Se=vs.value,Se.hasAny&&++Vt,Se.hasConversion&&++Ne}catch(k0){zt.e(k0)}finally{zt.f()}var qs=0,ks=0,Os=Yi(yt),hr;try{for(Os.s();!(hr=Os.n()).done;)Se=hr.value,Se.hasAny&&++qs,Se.hasConversion&&++ks}catch(k0){Os.e(k0)}finally{Os.f()}if(Vt!==qs)return Vt-qs;if(At&&It.hasConversion){if(!vt||!$t.hasConversion)return 1}else if(vt&&$t.hasConversion)return-1;if(Ne!==ks)return Ne-ks;if(At){if(!vt)return 1}else if(vt)return-1;var Er=(lt.length-yt.length)*(At?-1:1);if(Er!==0)return Er;for(var Ki=[],gi=0,Dr=0;Dr<lt.length;++Dr){var Uc=A(lt[Dr],yt[Dr]);Ki.push(Uc),gi+=Uc}if(gi!==0)return gi;for(var Zr,Gc=0,vv=Ki;Gc<vv.length;Gc++)if(Zr=vv[Gc],Zr!==0)return Zr;return 0}function R(W){if(W.length===0)return[];var Q=W.map(a);W.length>1&&Q.sort(function(Vt,Ne){return Vt.index-Ne.index});var lt=Q[0].conversionsTo;if(W.length===1)return lt;lt=lt.concat([]);for(var yt=new Set(W),It=1;It<Q.length;++It){var $t=void 0,At=Yi(Q[It].conversionsTo),vt;try{for(At.s();!(vt=At.n()).done;)$t=vt.value,yt.has($t.from)||(lt.push($t),yt.add($t.from))}catch(Vt){At.e(Vt)}finally{At.f()}}return lt}function _(W,Q){var lt=Q;if(W.some(function(vt){return vt.hasConversion})){var yt=v(W),It=W.map(M);lt=function(){for(var vt=[],Vt=yt?arguments.length-1:arguments.length,Ne=0;Ne<Vt;Ne++)vt[Ne]=It[Ne](arguments[Ne]);return yt&&(vt[Vt]=arguments[Vt].map(It[Vt])),Q.apply(this,vt)}}var $t=lt;if(v(W)){var At=W.length-1;$t=function(){return lt.apply(this,ut(arguments,0,At).concat([ut(arguments,At)]))}}return $t}function M(W){var Q,lt,yt,It,$t=[],At=[];switch(W.types.forEach(function(vt){vt.conversion&&($t.push(a(vt.conversion.from).test),At.push(vt.conversion.convert))}),At.length){case 0:return function(vt){return vt};case 1:return Q=$t[0],yt=At[0],function(vt){return Q(vt)?yt(vt):vt};case 2:return Q=$t[0],lt=$t[1],yt=At[0],It=At[1],function(vt){return Q(vt)?yt(vt):lt(vt)?It(vt):vt};default:return function(vt){for(var Vt=0;Vt<At.length;Vt++)if($t[Vt](vt))return At[Vt](vt);return vt}}}function z(W){function Q(lt,yt,It){if(yt<lt.length){var $t=lt[yt],At=[];if($t.restParam){var vt=$t.types.filter(S);vt.length<$t.types.length&&At.push({types:vt,name:"..."+vt.map(function(Vt){return Vt.name}).join("|"),hasAny:vt.some(function(Vt){return Vt.isAny}),hasConversion:!1,restParam:!0}),At.push($t)}else At=$t.types.map(function(Vt){return{types:[Vt],name:Vt.name,hasAny:Vt.isAny,hasConversion:Vt.conversion,restParam:!1}});return ot(At,function(Vt){return Q(lt,yt+1,It.concat([Vt]))})}else return[It]}return Q(W,0,[])}function B(W,Q){for(var lt=Math.max(W.length,Q.length),yt=0;yt<lt;yt++){var It=$(W,yt),$t=$(Q,yt),At=!1,vt=void 0,Vt=Yi($t),Ne;try{for(Vt.s();!(Ne=Vt.n()).done;)if(vt=Ne.value,It.has(vt)){At=!0;break}}catch(ks){Vt.e(ks)}finally{Vt.f()}if(!At)return!1}var Se=W.length,zt=Q.length,vs=v(W),qs=v(Q);return vs?qs?Se===zt:zt>=Se:qs?Se>=zt:Se===zt}function V(W){return W.map(function(Q){return kt(Q)?Rt(Q.referToSelf.callback):_t(Q)?Tt(Q.referTo.references,Q.referTo.callback):Q})}function G(W,Q,lt){var yt=[],It,$t=Yi(W),At;try{for($t.s();!(At=$t.n()).done;){It=At.value;var vt=lt[It];if(typeof vt!="number")throw new TypeError('No definition for referenced signature "'+It+'"');if(vt=Q[vt],typeof vt!="function")return!1;yt.push(vt)}}catch(Vt){$t.e(Vt)}finally{$t.f()}return yt}function j(W,Q,lt){for(var yt=V(W),It=new Array(yt.length).fill(!1),$t=!0;$t;){$t=!1;for(var At=!0,vt=0;vt<yt.length;++vt)if(!It[vt]){var Vt=yt[vt];if(kt(Vt))yt[vt]=Vt.referToSelf.callback(lt),yt[vt].referToSelf=Vt.referToSelf,It[vt]=!0,At=!1;else if(_t(Vt)){var Ne=G(Vt.referTo.references,yt,Q);Ne?(yt[vt]=Vt.referTo.callback.apply(this,Ne),yt[vt].referTo=Vt.referTo,It[vt]=!0,At=!1):$t=!0}}if(At&&$t)throw new SyntaxError("Circular reference detected in resolving typed.referTo")}return yt}function H(W){var Q=/\bthis(\(|\.signatures\b)/;Object.keys(W).forEach(function(lt){var yt=W[lt];if(Q.test(yt.toString()))throw new SyntaxError("Using `this` to self-reference a function is deprecated since typed-function@3. Use typed.referTo and typed.referToSelf instead.")})}function at(W,Q){if(o.createCount++,Object.keys(Q).length===0)throw new SyntaxError("No signatures provided");o.warnAgainstDeprecatedThis&&H(Q);var lt=[],yt=[],It={},$t=[],At,vt=function(){if(!Object.prototype.hasOwnProperty.call(Q,At))return"continue";var Kn=y(At);if(!Kn)return"continue";lt.forEach(function(Xd){if(B(Xd,Kn))throw new TypeError('Conflicting signatures "'+g(Xd)+'" and "'+g(Kn)+'".')}),lt.push(Kn);var Ya=yt.length;yt.push(Q[At]);var $Qt=Kn.map(b),kv=void 0,Iv=Yi(z($Qt)),Z7;try{for(Iv.s();!(Z7=Iv.n()).done;){kv=Z7.value;var J7=g(kv);$t.push({params:kv,name:J7,fn:Ya}),kv.every(function(Xd){return!Xd.hasConversion})&&(It[J7]=Ya)}}catch(Xd){Iv.e(Xd)}finally{Iv.f()}};for(At in Q)var Vt=vt();$t.sort(T);var Ne=j(yt,It,C0),Se;for(Se in It)Object.prototype.hasOwnProperty.call(It,Se)&&(It[Se]=Ne[It[Se]]);for(var zt=[],vs=new Map,qs=0,ks=$t;qs<ks.length;qs++)Se=ks[qs],vs.has(Se.name)||(Se.fn=Ne[Se.fn],zt.push(Se),vs.set(Se.name,Se));for(var Os=zt[0]&&zt[0].params.length<=2&&!v(zt[0].params),hr=zt[1]&&zt[1].params.length<=2&&!v(zt[1].params),Er=zt[2]&&zt[2].params.length<=2&&!v(zt[2].params),Ki=zt[3]&&zt[3].params.length<=2&&!v(zt[3].params),gi=zt[4]&&zt[4].params.length<=2&&!v(zt[4].params),Dr=zt[5]&&zt[5].params.length<=2&&!v(zt[5].params),Uc=Os&&hr&&Er&&Ki&&gi&&Dr,Zr=0;Zr<zt.length;++Zr)zt[Zr].test=C(zt[Zr].params);for(var Gc=Os?k(zt[0].params[0]):xi,vv=hr?k(zt[1].params[0]):xi,k0=Er?k(zt[2].params[0]):xi,QJt=Ki?k(zt[3].params[0]):xi,tQt=gi?k(zt[4].params[0]):xi,eQt=Dr?k(zt[5].params[0]):xi,nQt=Os?k(zt[0].params[1]):xi,sQt=hr?k(zt[1].params[1]):xi,rQt=Er?k(zt[2].params[1]):xi,iQt=Ki?k(zt[3].params[1]):xi,oQt=gi?k(zt[4].params[1]):xi,aQt=Dr?k(zt[5].params[1]):xi,I0=0;I0<zt.length;++I0)zt[I0].implementation=_(zt[I0].params,zt[I0].fn);var uQt=Os?zt[0].implementation:qc,lQt=hr?zt[1].implementation:qc,cQt=Er?zt[2].implementation:qc,hQt=Ki?zt[3].implementation:qc,dQt=gi?zt[4].implementation:qc,pQt=Dr?zt[5].implementation:qc,fQt=Os?zt[0].params.length:-1,mQt=hr?zt[1].params.length:-1,gQt=Er?zt[2].params.length:-1,xQt=Ki?zt[3].params.length:-1,bQt=gi?zt[4].params.length:-1,yQt=Dr?zt[5].params.length:-1,wQt=Uc?6:0,vQt=zt.length,kQt=zt.map(function(Kn){return Kn.test}),IQt=zt.map(function(Kn){return Kn.implementation}),CQt=function(){for(var Kn=wQt;Kn<vQt;Kn++)if(kQt[Kn](arguments))return IQt[Kn].apply(this,arguments);return o.onMismatch(W,arguments,zt)};function C0(Kn,Ya){return arguments.length===fQt&&Gc(Kn)&&nQt(Ya)?uQt.apply(this,arguments):arguments.length===mQt&&vv(Kn)&&sQt(Ya)?lQt.apply(this,arguments):arguments.length===gQt&&k0(Kn)&&rQt(Ya)?cQt.apply(this,arguments):arguments.length===xQt&&QJt(Kn)&&iQt(Ya)?hQt.apply(this,arguments):arguments.length===bQt&&tQt(Kn)&&oQt(Ya)?dQt.apply(this,arguments):arguments.length===yQt&&eQt(Kn)&&aQt(Ya)?pQt.apply(this,arguments):CQt.apply(this,arguments)}try{Object.defineProperty(C0,"name",{value:W})}catch{}return C0.signatures=It,C0._typedFunctionData={signatures:zt,signatureMap:vs},C0}function it(W,Q,lt){throw F(W,Q,lt)}function ft(W){return ut(W,0,W.length-1)}function X(W){return W[W.length-1]}function ut(W,Q,lt){return Array.prototype.slice.call(W,Q,lt)}function wt(W,Q){for(var lt=0;lt<W.length;lt++)if(Q(W[lt]))return W[lt]}function ot(W,Q){return Array.prototype.concat.apply([],W.map(Q))}function Et(){var W=ft(arguments).map(function(lt){return g(y(lt))}),Q=X(arguments);if(typeof Q!="function")throw new TypeError("Callback function expected as last argument");return Tt(W,Q)}function Tt(W,Q){return{referTo:{references:W,callback:Q}}}function Rt(W){if(typeof W!="function")throw new TypeError("Callback function expected as first argument");return{referToSelf:{callback:W}}}function _t(W){return W&&Hc(W.referTo)==="object"&&Array.isArray(W.referTo.references)&&typeof W.referTo.callback=="function"}function kt(W){return W&&Hc(W.referToSelf)==="object"&&typeof W.referToSelf.callback=="function"}function Lt(W,Q){if(!W)return Q;if(Q&&Q!==W){var lt=new Error("Function names do not match (expected: "+W+", actual: "+Q+")");throw lt.data={actual:Q,expected:W},lt}return W}function Ue(W){var Q;for(var lt in W)Object.prototype.hasOwnProperty.call(W,lt)&&(d(W[lt])||typeof W[lt].signature=="string")&&(Q=Lt(Q,W[lt].name));return Q}function he(W,Q){var lt;for(lt in Q)if(Object.prototype.hasOwnProperty.call(Q,lt)){if(lt in W&&Q[lt]!==W[lt]){var yt=new Error('Signature "'+lt+'" is defined twice');throw yt.data={signature:lt,sourceFunction:Q[lt],destFunction:W[lt]},yt}W[lt]=Q[lt]}}var os=o;o=function(W){for(var Q=typeof W=="string",lt=Q?1:0,yt=Q?W:"",It={},$t=lt;$t<arguments.length;++$t){var At=arguments[$t],vt={},Vt=void 0;if(typeof At=="function"?(Vt=At.name,typeof At.signature=="string"?vt[At.signature]=At:d(At)&&(vt=At.signatures)):e(At)&&(vt=At,Q||(Vt=Ue(At))),Object.keys(vt).length===0){var Ne=new TypeError("Argument to 'typed' at index "+$t+" is not a (typed) function, nor an object with signatures as keys and functions as values.");throw Ne.data={index:$t,argument:At},Ne}Q||(yt=Lt(yt,Vt)),he(It,vt)}return at(yt||"",It)},o.create=OT,o.createCount=os.createCount,o.onMismatch=it,o.throwMismatchError=it,o.createError=F,o.clear=l,o.clearConversions=c,o.addTypes=u,o._findType=a,o.referTo=Et,o.referToSelf=Rt,o.convert=m,o.findSignature=p,o.find=f,o.isTypedFunction=d,o.warnAgainstDeprecatedThis=!0,o.addType=function(W,Q){var lt="any";Q!==!1&&s.has("Object")&&(lt="Object"),o.addTypes([W],lt)};function je(W){if(!W||typeof W.from!="string"||typeof W.to!="string"||typeof W.convert!="function")throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");if(W.to===W.from)throw new SyntaxError('Illegal to define conversion from "'+W.from+'" to itself.')}return o.addConversion=function(W){je(W);var Q=a(W.to);if(Q.conversionsTo.every(function(lt){return lt.from!==W.from}))Q.conversionsTo.push({from:W.from,convert:W.convert,index:i++});else throw new Error('There is already a conversion from "'+W.from+'" to "'+Q.name+'"')},o.addConversions=function(W){W.forEach(o.addConversion)},o.removeConversion=function(W){je(W);var Q=a(W.to),lt=wt(Q.conversionsTo,function(It){return It.from===W.from});if(!lt)throw new Error("Attempt to remove nonexistent conversion from "+W.from+" to "+W.to);if(lt.convert!==W.convert)throw new Error("Conversion to remove does not match existing conversion");var yt=Q.conversionsTo.indexOf(lt);Q.conversionsTo.splice(yt,1)},o.resolve=function(W,Q){if(!d(W))throw new TypeError(MT);for(var lt=W._typedFunctionData.signatures,yt=0;yt<lt.length;++yt)if(lt[yt].test(Q))return lt[yt];return null},o}const LT=OT();function In(e){return typeof e=="boolean"?!0:isFinite(e)?e===Math.round(e):!1}function Sv(e,t,n){var s={2:"0b",8:"0o",16:"0x"},r=s[t],i="";if(n){if(n<1)throw new Error("size must be in greater than 0");if(!In(n))throw new Error("size must be an integer");if(e>2**(n-1)-1||e<-(2**(n-1)))throw new Error("Value must be in range [-2^".concat(n-1,", 2^").concat(n-1,"-1]"));if(!In(e))throw new Error("Value must be an integer");e<0&&(e=e+2**n),i="i".concat(n)}var o="";return e<0&&(e=-e,o="-"),"".concat(o).concat(r).concat(e.toString(t)).concat(i)}function Nv(e,t){if(typeof t=="function")return t(e);if(e===1/0)return"Infinity";if(e===-1/0)return"-Infinity";if(isNaN(e))return"NaN";var n="auto",s,r;if(t&&(t.notation&&(n=t.notation),Tn(t)?s=t:Tn(t.precision)&&(s=t.precision),t.wordSize&&(r=t.wordSize,typeof r!="number")))throw new Error('Option "wordSize" must be a number');switch(n){case"fixed":return V9(e,s);case"exponential":return zT(e,s);case"engineering":return W9(e,s);case"bin":return Sv(e,2,r);case"oct":return Sv(e,8,r);case"hex":return Sv(e,16,r);case"auto":return U9(e,s,t&&t).replace(/((\.\d*?)(0+))($|e)/,function(){var i=arguments[2],o=arguments[4];return i!=="."?i+o:o});default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function S0(e){var t=String(e).toLowerCase().match(/^(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!t)throw new SyntaxError("Invalid number "+e);var n=t[1],s=t[2],r=parseFloat(t[4]||"0"),i=s.indexOf(".");r+=i!==-1?i-1:s.length-1;var o=s.replace(".","").replace(/^0*/,function(a){return r-=a.length,""}).replace(/0*$/,"").split("").map(function(a){return parseInt(a)});return o.length===0&&(o.push(0),r++),{sign:n,coefficients:o,exponent:r}}function W9(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=S0(e),s=N0(n,t),r=s.exponent,i=s.coefficients,o=r%3===0?r:r<0?r-3-r%3:r-r%3;if(Tn(t))for(;t>i.length||r-o+1>i.length;)i.push(0);else for(var a=Math.abs(r-o)-(i.length-1),u=0;u<a;u++)i.push(0);for(var l=Math.abs(r-o),c=1;l>0;)c++,l--;var h=i.slice(c).join(""),d=Tn(t)&&h.length||h.match(/[1-9]/)?"."+h:"",p=i.slice(0,c).join("")+d+"e"+(r>=0?"+":"")+o.toString();return s.sign+p}function V9(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=S0(e),s=typeof t=="number"?N0(n,n.exponent+1+t):n,r=s.coefficients,i=s.exponent+1,o=i+(t||0);return r.length<o&&(r=r.concat(jc(o-r.length))),i<0&&(r=jc(-i+1).concat(r),i=1),i<r.length&&r.splice(i,0,i===0?"0.":"."),s.sign+r.join("")}function zT(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=S0(e),s=t?N0(n,t):n,r=s.coefficients,i=s.exponent;r.length<t&&(r=r.concat(jc(t-r.length)));var o=r.shift();return s.sign+o+(r.length>0?"."+r.join(""):"")+"e"+(i>=0?"+":"")+i}function U9(e,t,n){if(isNaN(e)||!isFinite(e))return String(e);var s=n&&n.lowerExp!==void 0?n.lowerExp:-3,r=n&&n.upperExp!==void 0?n.upperExp:5,i=S0(e),o=t?N0(i,t):i;if(o.exponent<s||o.exponent>=r)return zT(e,t);var a=o.coefficients,u=o.exponent;a.length<t&&(a=a.concat(jc(t-a.length))),a=a.concat(jc(u-a.length+1+(a.length<t?t-a.length:0))),a=jc(-u).concat(a);var l=u>0?u:0;return l<a.length-1&&a.splice(l+1,0,"."),o.sign+a.join("")}function N0(e,t){for(var n={sign:e.sign,coefficients:e.coefficients,exponent:e.exponent},s=n.coefficients;t<=0;)s.unshift(0),n.exponent++,t++;if(s.length>t){var r=s.splice(t,s.length-t);if(r[0]>=5){var i=t-1;for(s[i]++;s[i]===10;)s.pop(),i===0&&(s.unshift(0),n.exponent++,i++),i--,s[i]++}}return n}function jc(e){for(var t=[],n=0;n<e;n++)t.push(0);return t}function G9(e){return e.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length}var H9=Number.EPSILON||2220446049250313e-31;function Za(e,t,n){if(n==null)return e===t;if(e===t)return!0;if(isNaN(e)||isNaN(t))return!1;if(isFinite(e)&&isFinite(t)){var s=Math.abs(e-t);return s<H9?!0:s<=Math.max(Math.abs(e),Math.abs(t))*n}return!1}function Ev(e,t,n){var s=e.constructor,r=new s(2),i="";if(n){if(n<1)throw new Error("size must be in greater than 0");if(!In(n))throw new Error("size must be an integer");if(e.greaterThan(r.pow(n-1).sub(1))||e.lessThan(r.pow(n-1).mul(-1)))throw new Error("Value must be in range [-2^".concat(n-1,", 2^").concat(n-1,"-1]"));if(!e.isInteger())throw new Error("Value must be an integer");e.lessThan(0)&&(e=e.add(r.pow(n))),i="i".concat(n)}switch(t){case 2:return"".concat(e.toBinary()).concat(i);case 8:return"".concat(e.toOctal()).concat(i);case 16:return"".concat(e.toHexadecimal()).concat(i);default:throw new Error("Base ".concat(t," not supported "))}}function q9(e,t){if(typeof t=="function")return t(e);if(!e.isFinite())return e.isNaN()?"NaN":e.gt(0)?"Infinity":"-Infinity";var n="auto",s,r;if(t!==void 0&&(t.notation&&(n=t.notation),typeof t=="number"?s=t:t.precision&&(s=t.precision),t.wordSize&&(r=t.wordSize,typeof r!="number")))throw new Error('Option "wordSize" must be a number');switch(n){case"fixed":return K9(e,s);case"exponential":return BT(e,s);case"engineering":return j9(e,s);case"bin":return Ev(e,2,r);case"oct":return Ev(e,8,r);case"hex":return Ev(e,16,r);case"auto":{var i=t&&t.lowerExp!==void 0?t.lowerExp:-3,o=t&&t.upperExp!==void 0?t.upperExp:5;if(e.isZero())return"0";var a,u=e.toSignificantDigits(s),l=u.e;return l>=i&&l<o?a=u.toFixed():a=BT(e,s),a.replace(/((\.\d*?)(0+))($|e)/,function(){var c=arguments[2],h=arguments[4];return c!=="."?c+h:h})}default:throw new Error('Unknown notation "'+n+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function j9(e,t){var n=e.e,s=n%3===0?n:n<0?n-3-n%3:n-n%3,r=e.mul(Math.pow(10,-s)),i=r.toPrecision(t);return i.indexOf("e")!==-1&&(i=r.toString()),i+"e"+(n>=0?"+":"")+s.toString()}function BT(e,t){return t!==void 0?e.toExponential(t-1):e.toExponential()}function K9(e,t){return e.toFixed(t)}function Dn(e,t){var n=X9(e,t);return t&&typeof t=="object"&&"truncate"in t&&n.length>t.truncate?n.substring(0,t.truncate-3)+"...":n}function X9(e,t){if(typeof e=="number")return Nv(e,t);if(as(e))return q9(e,t);if(Y9(e))return!t||t.fraction!=="decimal"?e.s*e.n+"/"+e.d:e.toString();if(Array.isArray(e))return PT(e,t);if(Xi(e))return'"'+e+'"';if(typeof e=="function")return e.syntax?String(e.syntax):"function";if(e&&typeof e=="object"){if(typeof e.format=="function")return e.format(t);if(e&&e.toString(t)!=={}.toString())return e.toString(t);var n=Object.keys(e).map(s=>'"'+s+'": '+Dn(e[s],t));return"{"+n.join(", ")+"}"}return String(e)}function PT(e,t){if(Array.isArray(e)){for(var n="[",s=e.length,r=0;r<s;r++)r!==0&&(n+=", "),n+=PT(e[r],t);return n+="]",n}else return Dn(e,t)}function Y9(e){return e&&typeof e=="object"&&typeof e.s=="number"&&typeof e.n=="number"&&typeof e.d=="number"||!1}function Ge(e,t,n){if(!(this instanceof Ge))throw new SyntaxError("Constructor must be called with the new operator");this.actual=e,this.expected=t,this.relation=n,this.message="Dimension mismatch ("+(Array.isArray(e)?"["+e.join(", ")+"]":e)+" "+(this.relation||"!=")+" "+(Array.isArray(t)?"["+t.join(", ")+"]":t)+")",this.stack=new Error().stack}Ge.prototype=new RangeError,Ge.prototype.constructor=RangeError,Ge.prototype.name="DimensionError",Ge.prototype.isDimensionError=!0;function el(e,t,n){if(!(this instanceof el))throw new SyntaxError("Constructor must be called with the new operator");this.index=e,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=n),this.min!==void 0&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":this.max!==void 0&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=new Error().stack}el.prototype=new RangeError,el.prototype.constructor=RangeError,el.prototype.name="IndexError",el.prototype.isIndexError=!0;function Is(e){for(var t=[];Array.isArray(e);)t.push(e.length),e=e[0];return t}function WT(e,t,n){var s,r=e.length;if(r!==t[n])throw new Ge(r,t[n]);if(n<t.length-1){var i=n+1;for(s=0;s<r;s++){var o=e[s];if(!Array.isArray(o))throw new Ge(t.length-1,t.length,"<");WT(e[s],t,i)}}else for(s=0;s<r;s++)if(Array.isArray(e[s]))throw new Ge(t.length+1,t.length,">")}function VT(e,t){var n=t.length===0;if(n){if(Array.isArray(e))throw new Ge(e.length,0)}else WT(e,t,0)}function bn(e,t){if(!Tn(e)||!In(e))throw new TypeError("Index must be an integer (value: "+e+")");if(e<0||typeof t=="number"&&e>=t)throw new el(e,t)}function Jd(e,t,n){if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(t.length===0)throw new Error("Resizing to scalar is not supported");t.forEach(function(r){if(!Tn(r)||!In(r)||r<0)throw new TypeError("Invalid size, must contain positive integers (size: "+Dn(t)+")")});var s=n!==void 0?n:0;return Dv(e,t,0,s),e}function Dv(e,t,n,s){var r,i,o=e.length,a=t[n],u=Math.min(o,a);if(e.length=a,n<t.length-1){var l=n+1;for(r=0;r<u;r++)i=e[r],Array.isArray(i)||(i=[i],e[r]=i),Dv(i,t,l,s);for(r=u;r<a;r++)i=[],e[r]=i,Dv(i,t,l,s)}else{for(r=0;r<u;r++)for(;Array.isArray(e[r]);)e[r]=e[r][0];for(r=u;r<a;r++)e[r]=s}}function UT(e,t){var n=Av(e),s=n.length;if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(t.length===0)throw new Ge(0,s,"!=");t=Tv(t,s);var r=GT(t);if(s!==r)throw new Ge(r,s,"!=");try{return Z9(n,t)}catch(i){throw i instanceof Ge?new Ge(r,s,"!="):i}}function Tv(e,t){var n=GT(e),s=e.slice(),r=-1,i=e.indexOf(r),o=e.indexOf(r,i+1)>=0;if(o)throw new Error("More than one wildcard in sizes");var a=i>=0,u=t%n===0;if(a)if(u)s[i]=-t/n;else throw new Error("Could not replace wildcard, since "+t+" is no multiple of "+-n);return s}function GT(e){return e.reduce((t,n)=>t*n,1)}function Z9(e,t){for(var n=e,s,r=t.length-1;r>0;r--){var i=t[r];s=[];for(var o=n.length/i,a=0;a<o;a++)s.push(n.slice(a*i,(a+1)*i));n=s}return n}function HT(e,t){for(var n=t||Is(e);Array.isArray(e)&&e.length===1;)e=e[0],n.shift();for(var s=n.length;n[s-1]===1;)s--;return s<n.length&&(e=qT(e,s,0),n.length=s),e}function qT(e,t,n){var s,r;if(n<t){var i=n+1;for(s=0,r=e.length;s<r;s++)e[s]=qT(e[s],t,i)}else for(;Array.isArray(e);)e=e[0];return e}function jT(e,t,n,s){var r=s||Is(e);if(n)for(var i=0;i<n;i++)e=[e],r.unshift(1);for(e=KT(e,t,0);r.length<t;)r.push(1);return e}function KT(e,t,n){var s,r;if(Array.isArray(e)){var i=n+1;for(s=0,r=e.length;s<r;s++)e[s]=KT(e[s],t,i)}else for(var o=n;o<t;o++)e=[e];return e}function Av(e){if(!Array.isArray(e))return e;var t=[];return e.forEach(function n(s){Array.isArray(s)?s.forEach(n):t.push(s)}),t}function E0(e,t){for(var n,s=0,r=0;r<e.length;r++){var i=e[r],o=Array.isArray(i);if(r===0&&o&&(s=i.length),o&&i.length!==s)return;var a=o?E0(i,t):t(i);if(n===void 0)n=a;else if(n!==a)return"mixed"}return n}function Ht(e,t,n,s){function r(i){var o=L9(i,t.map(tq));return J9(e,t,i),n(o)}return r.isFactory=!0,r.fn=e,r.dependencies=t.slice().sort(),s&&(r.meta=s),r}function J9(e,t,n){var s=t.filter(i=>!Q9(i)).every(i=>n[i]!==void 0);if(!s){var r=t.filter(i=>n[i]===void 0);throw new Error('Cannot create function "'.concat(e,'", ')+"some dependencies are missing: ".concat(r.map(i=>'"'.concat(i,'"')).join(", "),"."))}}function Q9(e){return e&&e[0]==="?"}function tq(e){return e&&e[0]==="?"?e.slice(1):e}function eq(e,t){if(YT(e)&&XT(e,t))return e[t];throw typeof e[t]=="function"&&rq(e,t)?new Error('Cannot access method "'+t+'" as a property'):new Error('No access to property "'+t+'"')}function nq(e,t,n){if(YT(e)&&XT(e,t))return e[t]=n,n;throw new Error('No access to property "'+t+'"')}function sq(e,t){return t in e}function XT(e,t){return!e||typeof e!="object"?!1:Zd(iq,t)?!0:!(t in Object.prototype||t in Function.prototype)}function rq(e,t){return e==null||typeof e[t]!="function"||Zd(e,t)&&Object.getPrototypeOf&&t in Object.getPrototypeOf(e)?!1:Zd(oq,t)?!0:!(t in Object.prototype||t in Function.prototype)}function YT(e){return typeof e=="object"&&e&&e.constructor===Object}var iq={length:!0,name:!0},oq={toString:!0,valueOf:!0,toLocaleString:!0};class aq{constructor(t){this.wrappedObject=t}keys(){return Object.keys(this.wrappedObject)}get(t){return eq(this.wrappedObject,t)}set(t,n){return nq(this.wrappedObject,t,n),this}has(t){return sq(this.wrappedObject,t)}}function uq(e){return e?e instanceof Map||e instanceof aq||typeof e.set=="function"&&typeof e.get=="function"&&typeof e.keys=="function"&&typeof e.has=="function":!1}var ZT=function(){return ZT=LT.create,LT},lq=["?BigNumber","?Complex","?DenseMatrix","?Fraction"],cq=Ht("typed",lq,function(e){var{BigNumber:t,Complex:n,DenseMatrix:s,Fraction:r}=e,i=ZT();return i.clear(),i.addTypes([{name:"number",test:Tn},{name:"Complex",test:ET},{name:"BigNumber",test:as},{name:"Fraction",test:DT},{name:"Unit",test:TT},{name:"identifier",test:o=>Xi&&/^(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])*$/.test(o)},{name:"string",test:Xi},{name:"Chain",test:M9},{name:"Array",test:ln},{name:"Matrix",test:Je},{name:"DenseMatrix",test:u9},{name:"SparseMatrix",test:l9},{name:"Range",test:AT},{name:"Index",test:$v},{name:"boolean",test:c9},{name:"ResultSet",test:h9},{name:"Help",test:d9},{name:"function",test:p9},{name:"Date",test:f9},{name:"RegExp",test:m9},{name:"null",test:x9},{name:"undefined",test:b9},{name:"AccessorNode",test:y9},{name:"ArrayNode",test:w9},{name:"AssignmentNode",test:v9},{name:"BlockNode",test:k9},{name:"ConditionalNode",test:I9},{name:"ConstantNode",test:C9},{name:"FunctionNode",test:S9},{name:"FunctionAssignmentNode",test:$9},{name:"IndexNode",test:N9},{name:"Node",test:E9},{name:"ObjectNode",test:D9},{name:"OperatorNode",test:T9},{name:"ParenthesisNode",test:A9},{name:"RangeNode",test:F9},{name:"RelationalNode",test:R9},{name:"SymbolNode",test:_9},{name:"Map",test:uq},{name:"Object",test:g9}]),i.addConversions([{from:"number",to:"BigNumber",convert:function(o){if(t||Fv(o),G9(o)>15)throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+o+"). Use function bignumber(x) to convert to BigNumber.");return new t(o)}},{from:"number",to:"Complex",convert:function(o){return n||D0(o),new n(o,0)}},{from:"BigNumber",to:"Complex",convert:function(o){return n||D0(o),new n(o.toNumber(),0)}},{from:"Fraction",to:"BigNumber",convert:function(o){throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")}},{from:"Fraction",to:"Complex",convert:function(o){return n||D0(o),new n(o.valueOf(),0)}},{from:"number",to:"Fraction",convert:function(o){r||Rv(o);var a=new r(o);if(a.valueOf()!==o)throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: "+o+"). Use function fraction(x) to convert to Fraction.");return a}},{from:"string",to:"number",convert:function(o){var a=Number(o);if(isNaN(a))throw new Error('Cannot convert "'+o+'" to a number');return a}},{from:"string",to:"BigNumber",convert:function(o){t||Fv(o);try{return new t(o)}catch{throw new Error('Cannot convert "'+o+'" to BigNumber')}}},{from:"string",to:"Fraction",convert:function(o){r||Rv(o);try{return new r(o)}catch{throw new Error('Cannot convert "'+o+'" to Fraction')}}},{from:"string",to:"Complex",convert:function(o){n||D0(o);try{return new n(o)}catch{throw new Error('Cannot convert "'+o+'" to Complex')}}},{from:"boolean",to:"number",convert:function(o){return+o}},{from:"boolean",to:"BigNumber",convert:function(o){return t||Fv(o),new t(+o)}},{from:"boolean",to:"Fraction",convert:function(o){return r||Rv(o),new r(+o)}},{from:"boolean",to:"string",convert:function(o){return String(o)}},{from:"Array",to:"Matrix",convert:function(o){return s||hq(),new s(o)}},{from:"Matrix",to:"Array",convert:function(o){return o.valueOf()}}]),i.onMismatch=(o,a,u)=>{var l=i.createError(o,a,u);if(["wrongType","mismatch"].includes(l.data.category)&&a.length===1&&Yd(a[0])&&u.some(h=>!h.params.includes(","))){var c=new TypeError("Function '".concat(o,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(o,")'."));throw c.data=l.data,c}throw l},i.onMismatch=(o,a,u)=>{var l=i.createError(o,a,u);if(["wrongType","mismatch"].includes(l.data.category)&&a.length===1&&Yd(a[0])&&u.some(h=>!h.params.includes(","))){var c=new TypeError("Function '".concat(o,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(o,")'."));throw c.data=l.data,c}throw l},i});function Fv(e){throw new Error("Cannot convert value ".concat(e," into a BigNumber: no class 'BigNumber' provided"))}function D0(e){throw new Error("Cannot convert value ".concat(e," into a Complex number: no class 'Complex' provided"))}function hq(){throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")}function Rv(e){throw new Error("Cannot convert value ".concat(e," into a Fraction, no class 'Fraction' provided."))}/*!
 *  decimal.js v10.4.3
 *  An arbitrary-precision Decimal type for JavaScript.
 *  https://github.com/MikeMcl/decimal.js
 *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>
 *  MIT Licence
 */var Kc=9e15,Ja=1e9,_v="0123456789abcdef",T0="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",A0="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",Mv={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-Kc,maxE:Kc,crypto:!1},JT,va,de=!0,F0="[DecimalError] ",Qa=F0+"Invalid argument: ",QT=F0+"Precision limit exceeded",tA=F0+"crypto unavailable",eA="[object Decimal]",js=Math.floor,us=Math.pow,dq=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,pq=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,fq=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,nA=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,Zi=1e7,oe=7,mq=9007199254740991,gq=T0.length-1,Ov=A0.length-1,Ct={toStringTag:eA};Ct.absoluteValue=Ct.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),se(e)},Ct.ceil=function(){return se(new this.constructor(this),this.e+1,2)},Ct.clampedTo=Ct.clamp=function(e,t){var n,s=this,r=s.constructor;if(e=new r(e),t=new r(t),!e.s||!t.s)return new r(NaN);if(e.gt(t))throw Error(Qa+t);return n=s.cmp(e),n<0?e:s.cmp(t)>0?t:new r(s)},Ct.comparedTo=Ct.cmp=function(e){var t,n,s,r,i=this,o=i.d,a=(e=new i.constructor(e)).d,u=i.s,l=e.s;if(!o||!a)return!u||!l?NaN:u!==l?u:o===a?0:!o^u<0?1:-1;if(!o[0]||!a[0])return o[0]?u:a[0]?-l:0;if(u!==l)return u;if(i.e!==e.e)return i.e>e.e^u<0?1:-1;for(s=o.length,r=a.length,t=0,n=s<r?s:r;t<n;++t)if(o[t]!==a[t])return o[t]>a[t]^u<0?1:-1;return s===r?0:s>r^u<0?1:-1},Ct.cosine=Ct.cos=function(){var e,t,n=this,s=n.constructor;return n.d?n.d[0]?(e=s.precision,t=s.rounding,s.precision=e+Math.max(n.e,n.sd())+oe,s.rounding=1,n=xq(s,uA(s,n)),s.precision=e,s.rounding=t,se(va==2||va==3?n.neg():n,e,t,!0)):new s(1):new s(NaN)},Ct.cubeRoot=Ct.cbrt=function(){var e,t,n,s,r,i,o,a,u,l,c=this,h=c.constructor;if(!c.isFinite()||c.isZero())return new h(c);for(de=!1,i=c.s*us(c.s*c,1/3),!i||Math.abs(i)==1/0?(n=Ls(c.d),e=c.e,(i=(e-n.length+1)%3)&&(n+=i==1||i==-2?"0":"00"),i=us(n,1/3),e=js((e+1)/3)-(e%3==(e<0?-1:2)),i==1/0?n="5e"+e:(n=i.toExponential(),n=n.slice(0,n.indexOf("e")+1)+e),s=new h(n),s.s=c.s):s=new h(i.toString()),o=(e=h.precision)+3;;)if(a=s,u=a.times(a).times(a),l=u.plus(c),s=Qe(l.plus(c).times(a),l.plus(u),o+2,1),Ls(a.d).slice(0,o)===(n=Ls(s.d)).slice(0,o))if(n=n.slice(o-3,o+1),n=="9999"||!r&&n=="4999"){if(!r&&(se(a,e+1,0),a.times(a).times(a).eq(c))){s=a;break}o+=4,r=1}else{(!+n||!+n.slice(1)&&n.charAt(0)=="5")&&(se(s,e+1,1),t=!s.times(s).times(s).eq(c));break}return de=!0,se(s,e,h.rounding,t)},Ct.decimalPlaces=Ct.dp=function(){var e,t=this.d,n=NaN;if(t){if(e=t.length-1,n=(e-js(this.e/oe))*oe,e=t[e],e)for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},Ct.dividedBy=Ct.div=function(e){return Qe(this,new this.constructor(e))},Ct.dividedToIntegerBy=Ct.divToInt=function(e){var t=this,n=t.constructor;return se(Qe(t,new n(e),0,1,1),n.precision,n.rounding)},Ct.equals=Ct.eq=function(e){return this.cmp(e)===0},Ct.floor=function(){return se(new this.constructor(this),this.e+1,3)},Ct.greaterThan=Ct.gt=function(e){return this.cmp(e)>0},Ct.greaterThanOrEqualTo=Ct.gte=function(e){var t=this.cmp(e);return t==1||t===0},Ct.hyperbolicCosine=Ct.cosh=function(){var e,t,n,s,r,i=this,o=i.constructor,a=new o(1);if(!i.isFinite())return new o(i.s?1/0:NaN);if(i.isZero())return a;n=o.precision,s=o.rounding,o.precision=n+Math.max(i.e,i.sd())+4,o.rounding=1,r=i.d.length,r<32?(e=Math.ceil(r/3),t=(1/O0(4,e)).toString()):(e=16,t="2.3283064365386962890625e-10"),i=Xc(o,1,i.times(t),new o(1),!0);for(var u,l=e,c=new o(8);l--;)u=i.times(i),i=a.minus(u.times(c.minus(u.times(c))));return se(i,o.precision=n,o.rounding=s,!0)},Ct.hyperbolicSine=Ct.sinh=function(){var e,t,n,s,r=this,i=r.constructor;if(!r.isFinite()||r.isZero())return new i(r);if(t=i.precision,n=i.rounding,i.precision=t+Math.max(r.e,r.sd())+4,i.rounding=1,s=r.d.length,s<3)r=Xc(i,2,r,r,!0);else{e=1.4*Math.sqrt(s),e=e>16?16:e|0,r=r.times(1/O0(5,e)),r=Xc(i,2,r,r,!0);for(var o,a=new i(5),u=new i(16),l=new i(20);e--;)o=r.times(r),r=r.times(a.plus(o.times(u.times(o).plus(l))))}return i.precision=t,i.rounding=n,se(r,t,n,!0)},Ct.hyperbolicTangent=Ct.tanh=function(){var e,t,n=this,s=n.constructor;return n.isFinite()?n.isZero()?new s(n):(e=s.precision,t=s.rounding,s.precision=e+7,s.rounding=1,Qe(n.sinh(),n.cosh(),s.precision=e,s.rounding=t)):new s(n.s)},Ct.inverseCosine=Ct.acos=function(){var e,t=this,n=t.constructor,s=t.abs().cmp(1),r=n.precision,i=n.rounding;return s!==-1?s===0?t.isNeg()?Ji(n,r,i):new n(0):new n(NaN):t.isZero()?Ji(n,r+4,i).times(.5):(n.precision=r+6,n.rounding=1,t=t.asin(),e=Ji(n,r+4,i).times(.5),n.precision=r,n.rounding=i,e.minus(t))},Ct.inverseHyperbolicCosine=Ct.acosh=function(){var e,t,n=this,s=n.constructor;return n.lte(1)?new s(n.eq(1)?0:NaN):n.isFinite()?(e=s.precision,t=s.rounding,s.precision=e+Math.max(Math.abs(n.e),n.sd())+4,s.rounding=1,de=!1,n=n.times(n).minus(1).sqrt().plus(n),de=!0,s.precision=e,s.rounding=t,n.ln()):new s(n)},Ct.inverseHyperbolicSine=Ct.asinh=function(){var e,t,n=this,s=n.constructor;return!n.isFinite()||n.isZero()?new s(n):(e=s.precision,t=s.rounding,s.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,s.rounding=1,de=!1,n=n.times(n).plus(1).sqrt().plus(n),de=!0,s.precision=e,s.rounding=t,n.ln())},Ct.inverseHyperbolicTangent=Ct.atanh=function(){var e,t,n,s,r=this,i=r.constructor;return r.isFinite()?r.e>=0?new i(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(e=i.precision,t=i.rounding,s=r.sd(),Math.max(s,e)<2*-r.e-1?se(new i(r),e,t,!0):(i.precision=n=s-r.e,r=Qe(r.plus(1),new i(1).minus(r),n+e,1),i.precision=e+4,i.rounding=1,r=r.ln(),i.precision=e,i.rounding=t,r.times(.5))):new i(NaN)},Ct.inverseSine=Ct.asin=function(){var e,t,n,s,r=this,i=r.constructor;return r.isZero()?new i(r):(t=r.abs().cmp(1),n=i.precision,s=i.rounding,t!==-1?t===0?(e=Ji(i,n+4,s).times(.5),e.s=r.s,e):new i(NaN):(i.precision=n+6,i.rounding=1,r=r.div(new i(1).minus(r.times(r)).sqrt().plus(1)).atan(),i.precision=n,i.rounding=s,r.times(2)))},Ct.inverseTangent=Ct.atan=function(){var e,t,n,s,r,i,o,a,u,l=this,c=l.constructor,h=c.precision,d=c.rounding;if(l.isFinite()){if(l.isZero())return new c(l);if(l.abs().eq(1)&&h+4<=Ov)return o=Ji(c,h+4,d).times(.25),o.s=l.s,o}else{if(!l.s)return new c(NaN);if(h+4<=Ov)return o=Ji(c,h+4,d).times(.5),o.s=l.s,o}for(c.precision=a=h+10,c.rounding=1,n=Math.min(28,a/oe+2|0),e=n;e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(de=!1,t=Math.ceil(a/oe),s=1,u=l.times(l),o=new c(l),r=l;e!==-1;)if(r=r.times(u),i=o.minus(r.div(s+=2)),r=r.times(u),o=i.plus(r.div(s+=2)),o.d[t]!==void 0)for(e=t;o.d[e]===i.d[e]&&e--;);return n&&(o=o.times(2<<n-1)),de=!0,se(o,c.precision=h,c.rounding=d,!0)},Ct.isFinite=function(){return!!this.d},Ct.isInteger=Ct.isInt=function(){return!!this.d&&js(this.e/oe)>this.d.length-2},Ct.isNaN=function(){return!this.s},Ct.isNegative=Ct.isNeg=function(){return this.s<0},Ct.isPositive=Ct.isPos=function(){return this.s>0},Ct.isZero=function(){return!!this.d&&this.d[0]===0},Ct.lessThan=Ct.lt=function(e){return this.cmp(e)<0},Ct.lessThanOrEqualTo=Ct.lte=function(e){return this.cmp(e)<1},Ct.logarithm=Ct.log=function(e){var t,n,s,r,i,o,a,u,l=this,c=l.constructor,h=c.precision,d=c.rounding,p=5;if(e==null)e=new c(10),t=!0;else{if(e=new c(e),n=e.d,e.s<0||!n||!n[0]||e.eq(1))return new c(NaN);t=e.eq(10)}if(n=l.d,l.s<0||!n||!n[0]||l.eq(1))return new c(n&&!n[0]?-1/0:l.s!=1?NaN:n?0:1/0);if(t)if(n.length>1)i=!0;else{for(r=n[0];r%10===0;)r/=10;i=r!==1}if(de=!1,a=h+p,o=eu(l,a),s=t?M0(c,a+10):eu(e,a),u=Qe(o,s,a,1),Qd(u.d,r=h,d))do if(a+=10,o=eu(l,a),s=t?M0(c,a+10):eu(e,a),u=Qe(o,s,a,1),!i){+Ls(u.d).slice(r+1,r+15)+1==1e14&&(u=se(u,h+1,0));break}while(Qd(u.d,r+=10,d));return de=!0,se(u,h,d)},Ct.minus=Ct.sub=function(e){var t,n,s,r,i,o,a,u,l,c,h,d,p=this,f=p.constructor;if(e=new f(e),!p.d||!e.d)return!p.s||!e.s?e=new f(NaN):p.d?e.s=-e.s:e=new f(e.d||p.s!==e.s?p:NaN),e;if(p.s!=e.s)return e.s=-e.s,p.plus(e);if(l=p.d,d=e.d,a=f.precision,u=f.rounding,!l[0]||!d[0]){if(d[0])e.s=-e.s;else if(l[0])e=new f(p);else return new f(u===3?-0:0);return de?se(e,a,u):e}if(n=js(e.e/oe),c=js(p.e/oe),l=l.slice(),i=c-n,i){for(h=i<0,h?(t=l,i=-i,o=d.length):(t=d,n=c,o=l.length),s=Math.max(Math.ceil(a/oe),o)+2,i>s&&(i=s,t.length=1),t.reverse(),s=i;s--;)t.push(0);t.reverse()}else{for(s=l.length,o=d.length,h=s<o,h&&(o=s),s=0;s<o;s++)if(l[s]!=d[s]){h=l[s]<d[s];break}i=0}for(h&&(t=l,l=d,d=t,e.s=-e.s),o=l.length,s=d.length-o;s>0;--s)l[o++]=0;for(s=d.length;s>i;){if(l[--s]<d[s]){for(r=s;r&&l[--r]===0;)l[r]=Zi-1;--l[r],l[s]+=Zi}l[s]-=d[s]}for(;l[--o]===0;)l.pop();for(;l[0]===0;l.shift())--n;return l[0]?(e.d=l,e.e=_0(l,n),de?se(e,a,u):e):new f(u===3?-0:0)},Ct.modulo=Ct.mod=function(e){var t,n=this,s=n.constructor;return e=new s(e),!n.d||!e.s||e.d&&!e.d[0]?new s(NaN):!e.d||n.d&&!n.d[0]?se(new s(n),s.precision,s.rounding):(de=!1,s.modulo==9?(t=Qe(n,e.abs(),0,3,1),t.s*=e.s):t=Qe(n,e,0,s.modulo,1),t=t.times(e),de=!0,n.minus(t))},Ct.naturalExponential=Ct.exp=function(){return Lv(this)},Ct.naturalLogarithm=Ct.ln=function(){return eu(this)},Ct.negated=Ct.neg=function(){var e=new this.constructor(this);return e.s=-e.s,se(e)},Ct.plus=Ct.add=function(e){var t,n,s,r,i,o,a,u,l,c,h=this,d=h.constructor;if(e=new d(e),!h.d||!e.d)return!h.s||!e.s?e=new d(NaN):h.d||(e=new d(e.d||h.s===e.s?h:NaN)),e;if(h.s!=e.s)return e.s=-e.s,h.minus(e);if(l=h.d,c=e.d,a=d.precision,u=d.rounding,!l[0]||!c[0])return c[0]||(e=new d(h)),de?se(e,a,u):e;if(i=js(h.e/oe),s=js(e.e/oe),l=l.slice(),r=i-s,r){for(r<0?(n=l,r=-r,o=c.length):(n=c,s=i,o=l.length),i=Math.ceil(a/oe),o=i>o?i+1:o+1,r>o&&(r=o,n.length=1),n.reverse();r--;)n.push(0);n.reverse()}for(o=l.length,r=c.length,o-r<0&&(r=o,n=c,c=l,l=n),t=0;r;)t=(l[--r]=l[r]+c[r]+t)/Zi|0,l[r]%=Zi;for(t&&(l.unshift(t),++s),o=l.length;l[--o]==0;)l.pop();return e.d=l,e.e=_0(l,s),de?se(e,a,u):e},Ct.precision=Ct.sd=function(e){var t,n=this;if(e!==void 0&&e!==!!e&&e!==1&&e!==0)throw Error(Qa+e);return n.d?(t=sA(n.d),e&&n.e+1>t&&(t=n.e+1)):t=NaN,t},Ct.round=function(){var e=this,t=e.constructor;return se(new t(e),e.e+1,t.rounding)},Ct.sine=Ct.sin=function(){var e,t,n=this,s=n.constructor;return n.isFinite()?n.isZero()?new s(n):(e=s.precision,t=s.rounding,s.precision=e+Math.max(n.e,n.sd())+oe,s.rounding=1,n=yq(s,uA(s,n)),s.precision=e,s.rounding=t,se(va>2?n.neg():n,e,t,!0)):new s(NaN)},Ct.squareRoot=Ct.sqrt=function(){var e,t,n,s,r,i,o=this,a=o.d,u=o.e,l=o.s,c=o.constructor;if(l!==1||!a||!a[0])return new c(!l||l<0&&(!a||a[0])?NaN:a?o:1/0);for(de=!1,l=Math.sqrt(+o),l==0||l==1/0?(t=Ls(a),(t.length+u)%2==0&&(t+="0"),l=Math.sqrt(t),u=js((u+1)/2)-(u<0||u%2),l==1/0?t="5e"+u:(t=l.toExponential(),t=t.slice(0,t.indexOf("e")+1)+u),s=new c(t)):s=new c(l.toString()),n=(u=c.precision)+3;;)if(i=s,s=i.plus(Qe(o,i,n+2,1)).times(.5),Ls(i.d).slice(0,n)===(t=Ls(s.d)).slice(0,n))if(t=t.slice(n-3,n+1),t=="9999"||!r&&t=="4999"){if(!r&&(se(i,u+1,0),i.times(i).eq(o))){s=i;break}n+=4,r=1}else{(!+t||!+t.slice(1)&&t.charAt(0)=="5")&&(se(s,u+1,1),e=!s.times(s).eq(o));break}return de=!0,se(s,u,c.rounding,e)},Ct.tangent=Ct.tan=function(){var e,t,n=this,s=n.constructor;return n.isFinite()?n.isZero()?new s(n):(e=s.precision,t=s.rounding,s.precision=e+10,s.rounding=1,n=n.sin(),n.s=1,n=Qe(n,new s(1).minus(n.times(n)).sqrt(),e+10,0),s.precision=e,s.rounding=t,se(va==2||va==4?n.neg():n,e,t,!0)):new s(NaN)},Ct.times=Ct.mul=function(e){var t,n,s,r,i,o,a,u,l,c=this,h=c.constructor,d=c.d,p=(e=new h(e)).d;if(e.s*=c.s,!d||!d[0]||!p||!p[0])return new h(!e.s||d&&!d[0]&&!p||p&&!p[0]&&!d?NaN:!d||!p?e.s/0:e.s*0);for(n=js(c.e/oe)+js(e.e/oe),u=d.length,l=p.length,u<l&&(i=d,d=p,p=i,o=u,u=l,l=o),i=[],o=u+l,s=o;s--;)i.push(0);for(s=l;--s>=0;){for(t=0,r=u+s;r>s;)a=i[r]+p[s]*d[r-s-1]+t,i[r--]=a%Zi|0,t=a/Zi|0;i[r]=(i[r]+t)%Zi|0}for(;!i[--o];)i.pop();return t?++n:i.shift(),e.d=i,e.e=_0(i,n),de?se(e,h.precision,h.rounding):e},Ct.toBinary=function(e,t){return Bv(this,2,e,t)},Ct.toDecimalPlaces=Ct.toDP=function(e,t){var n=this,s=n.constructor;return n=new s(n),e===void 0?n:(Tr(e,0,Ja),t===void 0?t=s.rounding:Tr(t,0,8),se(n,e+n.e+1,t))},Ct.toExponential=function(e,t){var n,s=this,r=s.constructor;return e===void 0?n=_o(s,!0):(Tr(e,0,Ja),t===void 0?t=r.rounding:Tr(t,0,8),s=se(new r(s),e+1,t),n=_o(s,!0,e+1)),s.isNeg()&&!s.isZero()?"-"+n:n},Ct.toFixed=function(e,t){var n,s,r=this,i=r.constructor;return e===void 0?n=_o(r):(Tr(e,0,Ja),t===void 0?t=i.rounding:Tr(t,0,8),s=se(new i(r),e+r.e+1,t),n=_o(s,!1,e+s.e+1)),r.isNeg()&&!r.isZero()?"-"+n:n},Ct.toFraction=function(e){var t,n,s,r,i,o,a,u,l,c,h,d,p=this,f=p.d,m=p.constructor;if(!f)return new m(p);if(l=n=new m(1),s=u=new m(0),t=new m(s),i=t.e=sA(f)-p.e-1,o=i%oe,t.d[0]=us(10,o<0?oe+o:o),e==null)e=i>0?t:l;else{if(a=new m(e),!a.isInt()||a.lt(l))throw Error(Qa+a);e=a.gt(t)?i>0?t:l:a}for(de=!1,a=new m(Ls(f)),c=m.precision,m.precision=i=f.length*oe*2;h=Qe(a,t,0,1,1),r=n.plus(h.times(s)),r.cmp(e)!=1;)n=s,s=r,r=l,l=u.plus(h.times(r)),u=r,r=t,t=a.minus(h.times(r)),a=r;return r=Qe(e.minus(n),s,0,1,1),u=u.plus(r.times(l)),n=n.plus(r.times(s)),u.s=l.s=p.s,d=Qe(l,s,i,1).minus(p).abs().cmp(Qe(u,n,i,1).minus(p).abs())<1?[l,s]:[u,n],m.precision=c,de=!0,d},Ct.toHexadecimal=Ct.toHex=function(e,t){return Bv(this,16,e,t)},Ct.toNearest=function(e,t){var n=this,s=n.constructor;if(n=new s(n),e==null){if(!n.d)return n;e=new s(1),t=s.rounding}else{if(e=new s(e),t===void 0?t=s.rounding:Tr(t,0,8),!n.d)return e.s?n:e;if(!e.d)return e.s&&(e.s=n.s),e}return e.d[0]?(de=!1,n=Qe(n,e,0,t,1).times(e),de=!0,se(n)):(e.s=n.s,n=e),n},Ct.toNumber=function(){return+this},Ct.toOctal=function(e,t){return Bv(this,8,e,t)},Ct.toPower=Ct.pow=function(e){var t,n,s,r,i,o,a=this,u=a.constructor,l=+(e=new u(e));if(!a.d||!e.d||!a.d[0]||!e.d[0])return new u(us(+a,l));if(a=new u(a),a.eq(1))return a;if(s=u.precision,i=u.rounding,e.eq(1))return se(a,s,i);if(t=js(e.e/oe),t>=e.d.length-1&&(n=l<0?-l:l)<=mq)return r=rA(u,a,n,s),e.s<0?new u(1).div(r):se(r,s,i);if(o=a.s,o<0){if(t<e.d.length-1)return new u(NaN);if(e.d[t]&1||(o=1),a.e==0&&a.d[0]==1&&a.d.length==1)return a.s=o,a}return n=us(+a,l),t=n==0||!isFinite(n)?js(l*(Math.log("0."+Ls(a.d))/Math.LN10+a.e+1)):new u(n+"").e,t>u.maxE+1||t<u.minE-1?new u(t>0?o/0:0):(de=!1,u.rounding=a.s=1,n=Math.min(12,(t+"").length),r=Lv(e.times(eu(a,s+n)),s),r.d&&(r=se(r,s+5,1),Qd(r.d,s,i)&&(t=s+10,r=se(Lv(e.times(eu(a,t+n)),t),t+5,1),+Ls(r.d).slice(s+1,s+15)+1==1e14&&(r=se(r,s+1,0)))),r.s=o,de=!0,u.rounding=i,se(r,s,i))},Ct.toPrecision=function(e,t){var n,s=this,r=s.constructor;return e===void 0?n=_o(s,s.e<=r.toExpNeg||s.e>=r.toExpPos):(Tr(e,1,Ja),t===void 0?t=r.rounding:Tr(t,0,8),s=se(new r(s),e,t),n=_o(s,e<=s.e||s.e<=r.toExpNeg,e)),s.isNeg()&&!s.isZero()?"-"+n:n},Ct.toSignificantDigits=Ct.toSD=function(e,t){var n=this,s=n.constructor;return e===void 0?(e=s.precision,t=s.rounding):(Tr(e,1,Ja),t===void 0?t=s.rounding:Tr(t,0,8)),se(new s(n),e,t)},Ct.toString=function(){var e=this,t=e.constructor,n=_o(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?"-"+n:n},Ct.truncated=Ct.trunc=function(){return se(new this.constructor(this),this.e+1,1)},Ct.valueOf=Ct.toJSON=function(){var e=this,t=e.constructor,n=_o(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?"-"+n:n};function Ls(e){var t,n,s,r=e.length-1,i="",o=e[0];if(r>0){for(i+=o,t=1;t<r;t++)s=e[t]+"",n=oe-s.length,n&&(i+=tu(n)),i+=s;o=e[t],s=o+"",n=oe-s.length,n&&(i+=tu(n))}else if(o===0)return"0";for(;o%10===0;)o/=10;return i+o}function Tr(e,t,n){if(e!==~~e||e<t||e>n)throw Error(Qa+e)}function Qd(e,t,n,s){var r,i,o,a;for(i=e[0];i>=10;i/=10)--t;return--t<0?(t+=oe,r=0):(r=Math.ceil((t+1)/oe),t%=oe),i=us(10,oe-t),a=e[r]%i|0,s==null?t<3?(t==0?a=a/100|0:t==1&&(a=a/10|0),o=n<4&&a==99999||n>3&&a==49999||a==5e4||a==0):o=(n<4&&a+1==i||n>3&&a+1==i/2)&&(e[r+1]/i/100|0)==us(10,t-2)-1||(a==i/2||a==0)&&(e[r+1]/i/100|0)==0:t<4?(t==0?a=a/1e3|0:t==1?a=a/100|0:t==2&&(a=a/10|0),o=(s||n<4)&&a==9999||!s&&n>3&&a==4999):o=((s||n<4)&&a+1==i||!s&&n>3&&a+1==i/2)&&(e[r+1]/i/1e3|0)==us(10,t-3)-1,o}function R0(e,t,n){for(var s,r=[0],i,o=0,a=e.length;o<a;){for(i=r.length;i--;)r[i]*=t;for(r[0]+=_v.indexOf(e.charAt(o++)),s=0;s<r.length;s++)r[s]>n-1&&(r[s+1]===void 0&&(r[s+1]=0),r[s+1]+=r[s]/n|0,r[s]%=n)}return r.reverse()}function xq(e,t){var n,s,r;if(t.isZero())return t;s=t.d.length,s<32?(n=Math.ceil(s/3),r=(1/O0(4,n)).toString()):(n=16,r="2.3283064365386962890625e-10"),e.precision+=n,t=Xc(e,1,t.times(r),new e(1));for(var i=n;i--;){var o=t.times(t);t=o.times(o).minus(o).times(8).plus(1)}return e.precision-=n,t}var Qe=function(){function e(s,r,i){var o,a=0,u=s.length;for(s=s.slice();u--;)o=s[u]*r+a,s[u]=o%i|0,a=o/i|0;return a&&s.unshift(a),s}function t(s,r,i,o){var a,u;if(i!=o)u=i>o?1:-1;else for(a=u=0;a<i;a++)if(s[a]!=r[a]){u=s[a]>r[a]?1:-1;break}return u}function n(s,r,i,o){for(var a=0;i--;)s[i]-=a,a=s[i]<r[i]?1:0,s[i]=a*o+s[i]-r[i];for(;!s[0]&&s.length>1;)s.shift()}return function(s,r,i,o,a,u){var l,c,h,d,p,f,m,g,x,b,w,y,v,k,C,I,$,S,N,F,D=s.constructor,E=s.s==r.s?1:-1,A=s.d,T=r.d;if(!A||!A[0]||!T||!T[0])return new D(!s.s||!r.s||(A?T&&A[0]==T[0]:!T)?NaN:A&&A[0]==0||!T?E*0:E/0);for(u?(p=1,c=s.e-r.e):(u=Zi,p=oe,c=js(s.e/p)-js(r.e/p)),N=T.length,$=A.length,x=new D(E),b=x.d=[],h=0;T[h]==(A[h]||0);h++);if(T[h]>(A[h]||0)&&c--,i==null?(k=i=D.precision,o=D.rounding):a?k=i+(s.e-r.e)+1:k=i,k<0)b.push(1),f=!0;else{if(k=k/p+2|0,h=0,N==1){for(d=0,T=T[0],k++;(h<$||d)&&k--;h++)C=d*u+(A[h]||0),b[h]=C/T|0,d=C%T|0;f=d||h<$}else{for(d=u/(T[0]+1)|0,d>1&&(T=e(T,d,u),A=e(A,d,u),N=T.length,$=A.length),I=N,w=A.slice(0,N),y=w.length;y<N;)w[y++]=0;F=T.slice(),F.unshift(0),S=T[0],T[1]>=u/2&&++S;do d=0,l=t(T,w,N,y),l<0?(v=w[0],N!=y&&(v=v*u+(w[1]||0)),d=v/S|0,d>1?(d>=u&&(d=u-1),m=e(T,d,u),g=m.length,y=w.length,l=t(m,w,g,y),l==1&&(d--,n(m,N<g?F:T,g,u))):(d==0&&(l=d=1),m=T.slice()),g=m.length,g<y&&m.unshift(0),n(w,m,y,u),l==-1&&(y=w.length,l=t(T,w,N,y),l<1&&(d++,n(w,N<y?F:T,y,u))),y=w.length):l===0&&(d++,w=[0]),b[h++]=d,l&&w[0]?w[y++]=A[I]||0:(w=[A[I]],y=1);while((I++<$||w[0]!==void 0)&&k--);f=w[0]!==void 0}b[0]||b.shift()}if(p==1)x.e=c,JT=f;else{for(h=1,d=b[0];d>=10;d/=10)h++;x.e=h+c*p-1,se(x,a?i+x.e+1:i,o,f)}return x}}();function se(e,t,n,s){var r,i,o,a,u,l,c,h,d,p=e.constructor;t:if(t!=null){if(h=e.d,!h)return e;for(r=1,a=h[0];a>=10;a/=10)r++;if(i=t-r,i<0)i+=oe,o=t,c=h[d=0],u=c/us(10,r-o-1)%10|0;else if(d=Math.ceil((i+1)/oe),a=h.length,d>=a)if(s){for(;a++<=d;)h.push(0);c=u=0,r=1,i%=oe,o=i-oe+1}else break t;else{for(c=a=h[d],r=1;a>=10;a/=10)r++;i%=oe,o=i-oe+r,u=o<0?0:c/us(10,r-o-1)%10|0}if(s=s||t<0||h[d+1]!==void 0||(o<0?c:c%us(10,r-o-1)),l=n<4?(u||s)&&(n==0||n==(e.s<0?3:2)):u>5||u==5&&(n==4||s||n==6&&(i>0?o>0?c/us(10,r-o):0:h[d-1])%10&1||n==(e.s<0?8:7)),t<1||!h[0])return h.length=0,l?(t-=e.e+1,h[0]=us(10,(oe-t%oe)%oe),e.e=-t||0):h[0]=e.e=0,e;if(i==0?(h.length=d,a=1,d--):(h.length=d+1,a=us(10,oe-i),h[d]=o>0?(c/us(10,r-o)%us(10,o)|0)*a:0),l)for(;;)if(d==0){for(i=1,o=h[0];o>=10;o/=10)i++;for(o=h[0]+=a,a=1;o>=10;o/=10)a++;i!=a&&(e.e++,h[0]==Zi&&(h[0]=1));break}else{if(h[d]+=a,h[d]!=Zi)break;h[d--]=0,a=1}for(i=h.length;h[--i]===0;)h.pop()}return de&&(e.e>p.maxE?(e.d=null,e.e=NaN):e.e<p.minE&&(e.e=0,e.d=[0])),e}function _o(e,t,n){if(!e.isFinite())return aA(e);var s,r=e.e,i=Ls(e.d),o=i.length;return t?(n&&(s=n-o)>0?i=i.charAt(0)+"."+i.slice(1)+tu(s):o>1&&(i=i.charAt(0)+"."+i.slice(1)),i=i+(e.e<0?"e":"e+")+e.e):r<0?(i="0."+tu(-r-1)+i,n&&(s=n-o)>0&&(i+=tu(s))):r>=o?(i+=tu(r+1-o),n&&(s=n-r-1)>0&&(i=i+"."+tu(s))):((s=r+1)<o&&(i=i.slice(0,s)+"."+i.slice(s)),n&&(s=n-o)>0&&(r+1===o&&(i+="."),i+=tu(s))),i}function _0(e,t){var n=e[0];for(t*=oe;n>=10;n/=10)t++;return t}function M0(e,t,n){if(t>gq)throw de=!0,n&&(e.precision=n),Error(QT);return se(new e(T0),t,1,!0)}function Ji(e,t,n){if(t>Ov)throw Error(QT);return se(new e(A0),t,n,!0)}function sA(e){var t=e.length-1,n=t*oe+1;if(t=e[t],t){for(;t%10==0;t/=10)n--;for(t=e[0];t>=10;t/=10)n++}return n}function tu(e){for(var t="";e--;)t+="0";return t}function rA(e,t,n,s){var r,i=new e(1),o=Math.ceil(s/oe+4);for(de=!1;;){if(n%2&&(i=i.times(t),lA(i.d,o)&&(r=!0)),n=js(n/2),n===0){n=i.d.length-1,r&&i.d[n]===0&&++i.d[n];break}t=t.times(t),lA(t.d,o)}return de=!0,i}function iA(e){return e.d[e.d.length-1]&1}function oA(e,t,n){for(var s,r=new e(t[0]),i=0;++i<t.length;)if(s=new e(t[i]),s.s)r[n](s)&&(r=s);else{r=s;break}return r}function Lv(e,t){var n,s,r,i,o,a,u,l=0,c=0,h=0,d=e.constructor,p=d.rounding,f=d.precision;if(!e.d||!e.d[0]||e.e>17)return new d(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:0/0);for(t==null?(de=!1,u=f):u=t,a=new d(.03125);e.e>-2;)e=e.times(a),h+=5;for(s=Math.log(us(2,h))/Math.LN10*2+5|0,u+=s,n=i=o=new d(1),d.precision=u;;){if(i=se(i.times(e),u,1),n=n.times(++c),a=o.plus(Qe(i,n,u,1)),Ls(a.d).slice(0,u)===Ls(o.d).slice(0,u)){for(r=h;r--;)o=se(o.times(o),u,1);if(t==null)if(l<3&&Qd(o.d,u-s,p,l))d.precision=u+=10,n=i=a=new d(1),c=0,l++;else return se(o,d.precision=f,p,de=!0);else return d.precision=f,o}o=a}}function eu(e,t){var n,s,r,i,o,a,u,l,c,h,d,p=1,f=10,m=e,g=m.d,x=m.constructor,b=x.rounding,w=x.precision;if(m.s<0||!g||!g[0]||!m.e&&g[0]==1&&g.length==1)return new x(g&&!g[0]?-1/0:m.s!=1?NaN:g?0:m);if(t==null?(de=!1,c=w):c=t,x.precision=c+=f,n=Ls(g),s=n.charAt(0),Math.abs(i=m.e)<15e14){for(;s<7&&s!=1||s==1&&n.charAt(1)>3;)m=m.times(e),n=Ls(m.d),s=n.charAt(0),p++;i=m.e,s>1?(m=new x("0."+n),i++):m=new x(s+"."+n.slice(1))}else return l=M0(x,c+2,w).times(i+""),m=eu(new x(s+"."+n.slice(1)),c-f).plus(l),x.precision=w,t==null?se(m,w,b,de=!0):m;for(h=m,u=o=m=Qe(m.minus(1),m.plus(1),c,1),d=se(m.times(m),c,1),r=3;;){if(o=se(o.times(d),c,1),l=u.plus(Qe(o,new x(r),c,1)),Ls(l.d).slice(0,c)===Ls(u.d).slice(0,c))if(u=u.times(2),i!==0&&(u=u.plus(M0(x,c+2,w).times(i+""))),u=Qe(u,new x(p),c,1),t==null)if(Qd(u.d,c-f,b,a))x.precision=c+=f,l=o=m=Qe(h.minus(1),h.plus(1),c,1),d=se(m.times(m),c,1),r=a=1;else return se(u,x.precision=w,b,de=!0);else return x.precision=w,u;u=l,r+=2}}function aA(e){return String(e.s*e.s/0)}function zv(e,t){var n,s,r;for((n=t.indexOf("."))>-1&&(t=t.replace(".","")),(s=t.search(/e/i))>0?(n<0&&(n=s),n+=+t.slice(s+1),t=t.substring(0,s)):n<0&&(n=t.length),s=0;t.charCodeAt(s)===48;s++);for(r=t.length;t.charCodeAt(r-1)===48;--r);if(t=t.slice(s,r),t){if(r-=s,e.e=n=n-s-1,e.d=[],s=(n+1)%oe,n<0&&(s+=oe),s<r){for(s&&e.d.push(+t.slice(0,s)),r-=oe;s<r;)e.d.push(+t.slice(s,s+=oe));t=t.slice(s),s=oe-t.length}else s-=r;for(;s--;)t+="0";e.d.push(+t),de&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function bq(e,t){var n,s,r,i,o,a,u,l,c;if(t.indexOf("_")>-1){if(t=t.replace(/(\d)_(?=\d)/g,"$1"),nA.test(t))return zv(e,t)}else if(t==="Infinity"||t==="NaN")return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(pq.test(t))n=16,t=t.toLowerCase();else if(dq.test(t))n=2;else if(fq.test(t))n=8;else throw Error(Qa+t);for(i=t.search(/p/i),i>0?(u=+t.slice(i+1),t=t.substring(2,i)):t=t.slice(2),i=t.indexOf("."),o=i>=0,s=e.constructor,o&&(t=t.replace(".",""),a=t.length,i=a-i,r=rA(s,new s(n),i,i*2)),l=R0(t,n,Zi),c=l.length-1,i=c;l[i]===0;--i)l.pop();return i<0?new s(e.s*0):(e.e=_0(l,c),e.d=l,de=!1,o&&(e=Qe(e,r,a*4)),u&&(e=e.times(Math.abs(u)<54?us(2,u):Yc.pow(2,u))),de=!0,e)}function yq(e,t){var n,s=t.d.length;if(s<3)return t.isZero()?t:Xc(e,2,t,t);n=1.4*Math.sqrt(s),n=n>16?16:n|0,t=t.times(1/O0(5,n)),t=Xc(e,2,t,t);for(var r,i=new e(5),o=new e(16),a=new e(20);n--;)r=t.times(t),t=t.times(i.plus(r.times(o.times(r).minus(a))));return t}function Xc(e,t,n,s,r){var i,o,a,u,l=e.precision,c=Math.ceil(l/oe);for(de=!1,u=n.times(n),a=new e(s);;){if(o=Qe(a.times(u),new e(t++*t++),l,1),a=r?s.plus(o):s.minus(o),s=Qe(o.times(u),new e(t++*t++),l,1),o=a.plus(s),o.d[c]!==void 0){for(i=c;o.d[i]===a.d[i]&&i--;);if(i==-1)break}i=a,a=s,s=o,o=i}return de=!0,o.d.length=c+1,o}function O0(e,t){for(var n=e;--t;)n*=e;return n}function uA(e,t){var n,s=t.s<0,r=Ji(e,e.precision,1),i=r.times(.5);if(t=t.abs(),t.lte(i))return va=s?4:1,t;if(n=t.divToInt(r),n.isZero())va=s?3:2;else{if(t=t.minus(n.times(r)),t.lte(i))return va=iA(n)?s?2:3:s?4:1,t;va=iA(n)?s?1:4:s?3:2}return t.minus(r).abs()}function Bv(e,t,n,s){var r,i,o,a,u,l,c,h,d,p=e.constructor,f=n!==void 0;if(f?(Tr(n,1,Ja),s===void 0?s=p.rounding:Tr(s,0,8)):(n=p.precision,s=p.rounding),!e.isFinite())c=aA(e);else{for(c=_o(e),o=c.indexOf("."),f?(r=2,t==16?n=n*4-3:t==8&&(n=n*3-2)):r=t,o>=0&&(c=c.replace(".",""),d=new p(1),d.e=c.length-o,d.d=R0(_o(d),10,r),d.e=d.d.length),h=R0(c,10,r),i=u=h.length;h[--u]==0;)h.pop();if(!h[0])c=f?"0p+0":"0";else{if(o<0?i--:(e=new p(e),e.d=h,e.e=i,e=Qe(e,d,n,s,0,r),h=e.d,i=e.e,l=JT),o=h[n],a=r/2,l=l||h[n+1]!==void 0,l=s<4?(o!==void 0||l)&&(s===0||s===(e.s<0?3:2)):o>a||o===a&&(s===4||l||s===6&&h[n-1]&1||s===(e.s<0?8:7)),h.length=n,l)for(;++h[--n]>r-1;)h[n]=0,n||(++i,h.unshift(1));for(u=h.length;!h[u-1];--u);for(o=0,c="";o<u;o++)c+=_v.charAt(h[o]);if(f){if(u>1)if(t==16||t==8){for(o=t==16?4:3,--u;u%o;u++)c+="0";for(h=R0(c,r,t),u=h.length;!h[u-1];--u);for(o=1,c="1.";o<u;o++)c+=_v.charAt(h[o])}else c=c.charAt(0)+"."+c.slice(1);c=c+(i<0?"p":"p+")+i}else if(i<0){for(;++i;)c="0"+c;c="0."+c}else if(++i>u)for(i-=u;i--;)c+="0";else i<u&&(c=c.slice(0,i)+"."+c.slice(i))}c=(t==16?"0x":t==2?"0b":t==8?"0o":"")+c}return e.s<0?"-"+c:c}function lA(e,t){if(e.length>t)return e.length=t,!0}function wq(e){return new this(e).abs()}function vq(e){return new this(e).acos()}function kq(e){return new this(e).acosh()}function Iq(e,t){return new this(e).plus(t)}function Cq(e){return new this(e).asin()}function $q(e){return new this(e).asinh()}function Sq(e){return new this(e).atan()}function Nq(e){return new this(e).atanh()}function Eq(e,t){e=new this(e),t=new this(t);var n,s=this.precision,r=this.rounding,i=s+4;return!e.s||!t.s?n=new this(NaN):!e.d&&!t.d?(n=Ji(this,i,1).times(t.s>0?.25:.75),n.s=e.s):!t.d||e.isZero()?(n=t.s<0?Ji(this,s,r):new this(0),n.s=e.s):!e.d||t.isZero()?(n=Ji(this,i,1).times(.5),n.s=e.s):t.s<0?(this.precision=i,this.rounding=1,n=this.atan(Qe(e,t,i,1)),t=Ji(this,i,1),this.precision=s,this.rounding=r,n=e.s<0?n.minus(t):n.plus(t)):n=this.atan(Qe(e,t,i,1)),n}function Dq(e){return new this(e).cbrt()}function Tq(e){return se(e=new this(e),e.e+1,2)}function Aq(e,t,n){return new this(e).clamp(t,n)}function Fq(e){if(!e||typeof e!="object")throw Error(F0+"Object expected");var t,n,s,r=e.defaults===!0,i=["precision",1,Ja,"rounding",0,8,"toExpNeg",-Kc,0,"toExpPos",0,Kc,"maxE",0,Kc,"minE",-Kc,0,"modulo",0,9];for(t=0;t<i.length;t+=3)if(n=i[t],r&&(this[n]=Mv[n]),(s=e[n])!==void 0)if(js(s)===s&&s>=i[t+1]&&s<=i[t+2])this[n]=s;else throw Error(Qa+n+": "+s);if(n="crypto",r&&(this[n]=Mv[n]),(s=e[n])!==void 0)if(s===!0||s===!1||s===0||s===1)if(s)if(typeof crypto<"u"&&crypto&&(crypto.getRandomValues||crypto.randomBytes))this[n]=!0;else throw Error(tA);else this[n]=!1;else throw Error(Qa+n+": "+s);return this}function Rq(e){return new this(e).cos()}function _q(e){return new this(e).cosh()}function cA(e){var t,n,s;function r(i){var o,a,u,l=this;if(!(l instanceof r))return new r(i);if(l.constructor=r,hA(i)){l.s=i.s,de?!i.d||i.e>r.maxE?(l.e=NaN,l.d=null):i.e<r.minE?(l.e=0,l.d=[0]):(l.e=i.e,l.d=i.d.slice()):(l.e=i.e,l.d=i.d?i.d.slice():i.d);return}if(u=typeof i,u==="number"){if(i===0){l.s=1/i<0?-1:1,l.e=0,l.d=[0];return}if(i<0?(i=-i,l.s=-1):l.s=1,i===~~i&&i<1e7){for(o=0,a=i;a>=10;a/=10)o++;de?o>r.maxE?(l.e=NaN,l.d=null):o<r.minE?(l.e=0,l.d=[0]):(l.e=o,l.d=[i]):(l.e=o,l.d=[i]);return}else if(i*0!==0){i||(l.s=NaN),l.e=NaN,l.d=null;return}return zv(l,i.toString())}else if(u!=="string")throw Error(Qa+i);return(a=i.charCodeAt(0))===45?(i=i.slice(1),l.s=-1):(a===43&&(i=i.slice(1)),l.s=1),nA.test(i)?zv(l,i):bq(l,i)}if(r.prototype=Ct,r.ROUND_UP=0,r.ROUND_DOWN=1,r.ROUND_CEIL=2,r.ROUND_FLOOR=3,r.ROUND_HALF_UP=4,r.ROUND_HALF_DOWN=5,r.ROUND_HALF_EVEN=6,r.ROUND_HALF_CEIL=7,r.ROUND_HALF_FLOOR=8,r.EUCLID=9,r.config=r.set=Fq,r.clone=cA,r.isDecimal=hA,r.abs=wq,r.acos=vq,r.acosh=kq,r.add=Iq,r.asin=Cq,r.asinh=$q,r.atan=Sq,r.atanh=Nq,r.atan2=Eq,r.cbrt=Dq,r.ceil=Tq,r.clamp=Aq,r.cos=Rq,r.cosh=_q,r.div=Mq,r.exp=Oq,r.floor=Lq,r.hypot=zq,r.ln=Bq,r.log=Pq,r.log10=Vq,r.log2=Wq,r.max=Uq,r.min=Gq,r.mod=Hq,r.mul=qq,r.pow=jq,r.random=Kq,r.round=Xq,r.sign=Yq,r.sin=Zq,r.sinh=Jq,r.sqrt=Qq,r.sub=tj,r.sum=ej,r.tan=nj,r.tanh=sj,r.trunc=rj,e===void 0&&(e={}),e&&e.defaults!==!0)for(s=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],t=0;t<s.length;)e.hasOwnProperty(n=s[t++])||(e[n]=this[n]);return r.config(e),r}function Mq(e,t){return new this(e).div(t)}function Oq(e){return new this(e).exp()}function Lq(e){return se(e=new this(e),e.e+1,3)}function zq(){var e,t,n=new this(0);for(de=!1,e=0;e<arguments.length;)if(t=new this(arguments[e++]),t.d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return de=!0,new this(1/0);n=t}return de=!0,n.sqrt()}function hA(e){return e instanceof Yc||e&&e.toStringTag===eA||!1}function Bq(e){return new this(e).ln()}function Pq(e,t){return new this(e).log(t)}function Wq(e){return new this(e).log(2)}function Vq(e){return new this(e).log(10)}function Uq(){return oA(this,arguments,"lt")}function Gq(){return oA(this,arguments,"gt")}function Hq(e,t){return new this(e).mod(t)}function qq(e,t){return new this(e).mul(t)}function jq(e,t){return new this(e).pow(t)}function Kq(e){var t,n,s,r,i=0,o=new this(1),a=[];if(e===void 0?e=this.precision:Tr(e,1,Ja),s=Math.ceil(e/oe),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(s));i<s;)r=t[i],r>=429e7?t[i]=crypto.getRandomValues(new Uint32Array(1))[0]:a[i++]=r%1e7;else if(crypto.randomBytes){for(t=crypto.randomBytes(s*=4);i<s;)r=t[i]+(t[i+1]<<8)+(t[i+2]<<16)+((t[i+3]&127)<<24),r>=214e7?crypto.randomBytes(4).copy(t,i):(a.push(r%1e7),i+=4);i=s/4}else throw Error(tA);else for(;i<s;)a[i++]=Math.random()*1e7|0;for(s=a[--i],e%=oe,s&&e&&(r=us(10,oe-e),a[i]=(s/r|0)*r);a[i]===0;i--)a.pop();if(i<0)n=0,a=[0];else{for(n=-1;a[0]===0;n-=oe)a.shift();for(s=1,r=a[0];r>=10;r/=10)s++;s<oe&&(n-=oe-s)}return o.e=n,o.d=a,o}function Xq(e){return se(e=new this(e),e.e+1,this.rounding)}function Yq(e){return e=new this(e),e.d?e.d[0]?e.s:0*e.s:e.s||NaN}function Zq(e){return new this(e).sin()}function Jq(e){return new this(e).sinh()}function Qq(e){return new this(e).sqrt()}function tj(e,t){return new this(e).sub(t)}function ej(){var e=0,t=arguments,n=new this(t[e]);for(de=!1;n.s&&++e<t.length;)n=n.plus(t[e]);return de=!0,se(n,this.precision,this.rounding)}function nj(e){return new this(e).tan()}function sj(e){return new this(e).tanh()}function rj(e){return se(e=new this(e),e.e+1,1)}Ct[Symbol.for("nodejs.util.inspect.custom")]=Ct.toString,Ct[Symbol.toStringTag]="Decimal";var Yc=Ct.constructor=cA(Mv);T0=new Yc(T0),A0=new Yc(A0);var ij="BigNumber",oj=["?on","config"],aj=Ht(ij,oj,e=>{var{on:t,config:n}=e,s=Yc.clone({precision:n.precision,modulo:Yc.EUCLID});return s.prototype=Object.create(s.prototype),s.prototype.type="BigNumber",s.prototype.isBigNumber=!0,s.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},s.fromJSON=function(r){return new s(r.value)},t&&t("config",function(r,i){r.precision!==i.precision&&s.config({precision:r.precision})}),s},{isClass:!0}),nl=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function dA(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function uj(e){if(e.__esModule)return e;var t=e.default;if(typeof t=="function"){var n=function s(){if(this instanceof s){var r=[null];r.push.apply(r,arguments);var i=Function.bind.apply(t,r);return new i}return t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach(function(s){var r=Object.getOwnPropertyDescriptor(e,s);Object.defineProperty(n,s,r.get?r:{enumerable:!0,get:function(){return e[s]}})}),n}var Pv={},lj={get exports(){return Pv},set exports(e){Pv=e}};/**
 * @license Complex.js v2.1.1 12/05/2020
 *
 * Copyright (c) 2020, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/(function(e,t){(function(n){var s=Math.cosh||function(h){return Math.abs(h)<1e-9?1-h:(Math.exp(h)+Math.exp(-h))*.5},r=Math.sinh||function(h){return Math.abs(h)<1e-9?h:(Math.exp(h)-Math.exp(-h))*.5},i=function(h){var d=Math.PI/4;if(-d>h||h>d)return Math.cos(h)-1;var p=h*h;return p*(p*(p*(p*(p*(p*(p*(p/20922789888e3-1/87178291200)+1/479001600)-1/3628800)+1/40320)-1/720)+1/24)-1/2)},o=function(h,d){var p=Math.abs(h),f=Math.abs(d);return p<3e3&&f<3e3?Math.sqrt(p*p+f*f):(p<f?(p=f,f=h/d):f=d/h,p*Math.sqrt(1+f*f))},a=function(){throw SyntaxError("Invalid Param")};function u(h,d){var p=Math.abs(h),f=Math.abs(d);return h===0?Math.log(f):d===0?Math.log(p):p<3e3&&f<3e3?Math.log(h*h+d*d)*.5:(h=h/2,d=d/2,.5*Math.log(h*h+d*d)+Math.LN2)}var l=function(h,d){var p={re:0,im:0};if(h==null)p.re=p.im=0;else if(d!==void 0)p.re=h,p.im=d;else switch(typeof h){case"object":if("im"in h&&"re"in h)p.re=h.re,p.im=h.im;else if("abs"in h&&"arg"in h){if(!Number.isFinite(h.abs)&&Number.isFinite(h.arg))return c.INFINITY;p.re=h.abs*Math.cos(h.arg),p.im=h.abs*Math.sin(h.arg)}else if("r"in h&&"phi"in h){if(!Number.isFinite(h.r)&&Number.isFinite(h.phi))return c.INFINITY;p.re=h.r*Math.cos(h.phi),p.im=h.r*Math.sin(h.phi)}else h.length===2?(p.re=h[0],p.im=h[1]):a();break;case"string":p.im=p.re=0;var f=h.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g),m=1,g=0;f===null&&a();for(var x=0;x<f.length;x++){var b=f[x];b===" "||b==="	"||b===`
`||(b==="+"?m++:b==="-"?g++:b==="i"||b==="I"?(m+g===0&&a(),f[x+1]!==" "&&!isNaN(f[x+1])?(p.im+=parseFloat((g%2?"-":"")+f[x+1]),x++):p.im+=parseFloat((g%2?"-":"")+"1"),m=g=0):((m+g===0||isNaN(b))&&a(),f[x+1]==="i"||f[x+1]==="I"?(p.im+=parseFloat((g%2?"-":"")+b),x++):p.re+=parseFloat((g%2?"-":"")+b),m=g=0))}m+g>0&&a();break;case"number":p.im=0,p.re=h;break;default:a()}return isNaN(p.re)||isNaN(p.im),p};function c(h,d){if(!(this instanceof c))return new c(h,d);var p=l(h,d);this.re=p.re,this.im=p.im}c.prototype={re:0,im:0,sign:function(){var h=this.abs();return new c(this.re/h,this.im/h)},add:function(h,d){var p=new c(h,d);return this.isInfinite()&&p.isInfinite()?c.NAN:this.isInfinite()||p.isInfinite()?c.INFINITY:new c(this.re+p.re,this.im+p.im)},sub:function(h,d){var p=new c(h,d);return this.isInfinite()&&p.isInfinite()?c.NAN:this.isInfinite()||p.isInfinite()?c.INFINITY:new c(this.re-p.re,this.im-p.im)},mul:function(h,d){var p=new c(h,d);return this.isInfinite()&&p.isZero()||this.isZero()&&p.isInfinite()?c.NAN:this.isInfinite()||p.isInfinite()?c.INFINITY:p.im===0&&this.im===0?new c(this.re*p.re,0):new c(this.re*p.re-this.im*p.im,this.re*p.im+this.im*p.re)},div:function(h,d){var p=new c(h,d);if(this.isZero()&&p.isZero()||this.isInfinite()&&p.isInfinite())return c.NAN;if(this.isInfinite()||p.isZero())return c.INFINITY;if(this.isZero()||p.isInfinite())return c.ZERO;h=this.re,d=this.im;var f=p.re,m=p.im,g,x;return m===0?new c(h/f,d/f):Math.abs(f)<Math.abs(m)?(x=f/m,g=f*x+m,new c((h*x+d)/g,(d*x-h)/g)):(x=m/f,g=m*x+f,new c((h+d*x)/g,(d-h*x)/g))},pow:function(h,d){var p=new c(h,d);if(h=this.re,d=this.im,p.isZero())return c.ONE;if(p.im===0){if(d===0&&h>0)return new c(Math.pow(h,p.re),0);if(h===0)switch((p.re%4+4)%4){case 0:return new c(Math.pow(d,p.re),0);case 1:return new c(0,Math.pow(d,p.re));case 2:return new c(-Math.pow(d,p.re),0);case 3:return new c(0,-Math.pow(d,p.re))}}if(h===0&&d===0&&p.re>0&&p.im>=0)return c.ZERO;var f=Math.atan2(d,h),m=u(h,d);return h=Math.exp(p.re*m-p.im*f),d=p.im*m+p.re*f,new c(h*Math.cos(d),h*Math.sin(d))},sqrt:function(){var h=this.re,d=this.im,p=this.abs(),f,m;if(h>=0){if(d===0)return new c(Math.sqrt(h),0);f=.5*Math.sqrt(2*(p+h))}else f=Math.abs(d)/Math.sqrt(2*(p-h));return h<=0?m=.5*Math.sqrt(2*(p-h)):m=Math.abs(d)/Math.sqrt(2*(p+h)),new c(f,d<0?-m:m)},exp:function(){var h=Math.exp(this.re);return this.im,new c(h*Math.cos(this.im),h*Math.sin(this.im))},expm1:function(){var h=this.re,d=this.im;return new c(Math.expm1(h)*Math.cos(d)+i(d),Math.exp(h)*Math.sin(d))},log:function(){var h=this.re,d=this.im;return new c(u(h,d),Math.atan2(d,h))},abs:function(){return o(this.re,this.im)},arg:function(){return Math.atan2(this.im,this.re)},sin:function(){var h=this.re,d=this.im;return new c(Math.sin(h)*s(d),Math.cos(h)*r(d))},cos:function(){var h=this.re,d=this.im;return new c(Math.cos(h)*s(d),-Math.sin(h)*r(d))},tan:function(){var h=2*this.re,d=2*this.im,p=Math.cos(h)+s(d);return new c(Math.sin(h)/p,r(d)/p)},cot:function(){var h=2*this.re,d=2*this.im,p=Math.cos(h)-s(d);return new c(-Math.sin(h)/p,r(d)/p)},sec:function(){var h=this.re,d=this.im,p=.5*s(2*d)+.5*Math.cos(2*h);return new c(Math.cos(h)*s(d)/p,Math.sin(h)*r(d)/p)},csc:function(){var h=this.re,d=this.im,p=.5*s(2*d)-.5*Math.cos(2*h);return new c(Math.sin(h)*s(d)/p,-Math.cos(h)*r(d)/p)},asin:function(){var h=this.re,d=this.im,p=new c(d*d-h*h+1,-2*h*d).sqrt(),f=new c(p.re-d,p.im+h).log();return new c(f.im,-f.re)},acos:function(){var h=this.re,d=this.im,p=new c(d*d-h*h+1,-2*h*d).sqrt(),f=new c(p.re-d,p.im+h).log();return new c(Math.PI/2-f.im,f.re)},atan:function(){var h=this.re,d=this.im;if(h===0){if(d===1)return new c(0,1/0);if(d===-1)return new c(0,-1/0)}var p=h*h+(1-d)*(1-d),f=new c((1-d*d-h*h)/p,-2*h/p).log();return new c(-.5*f.im,.5*f.re)},acot:function(){var h=this.re,d=this.im;if(d===0)return new c(Math.atan2(1,h),0);var p=h*h+d*d;return p!==0?new c(h/p,-d/p).atan():new c(h!==0?h/0:0,d!==0?-d/0:0).atan()},asec:function(){var h=this.re,d=this.im;if(h===0&&d===0)return new c(0,1/0);var p=h*h+d*d;return p!==0?new c(h/p,-d/p).acos():new c(h!==0?h/0:0,d!==0?-d/0:0).acos()},acsc:function(){var h=this.re,d=this.im;if(h===0&&d===0)return new c(Math.PI/2,1/0);var p=h*h+d*d;return p!==0?new c(h/p,-d/p).asin():new c(h!==0?h/0:0,d!==0?-d/0:0).asin()},sinh:function(){var h=this.re,d=this.im;return new c(r(h)*Math.cos(d),s(h)*Math.sin(d))},cosh:function(){var h=this.re,d=this.im;return new c(s(h)*Math.cos(d),r(h)*Math.sin(d))},tanh:function(){var h=2*this.re,d=2*this.im,p=s(h)+Math.cos(d);return new c(r(h)/p,Math.sin(d)/p)},coth:function(){var h=2*this.re,d=2*this.im,p=s(h)-Math.cos(d);return new c(r(h)/p,-Math.sin(d)/p)},csch:function(){var h=this.re,d=this.im,p=Math.cos(2*d)-s(2*h);return new c(-2*r(h)*Math.cos(d)/p,2*s(h)*Math.sin(d)/p)},sech:function(){var h=this.re,d=this.im,p=Math.cos(2*d)+s(2*h);return new c(2*s(h)*Math.cos(d)/p,-2*r(h)*Math.sin(d)/p)},asinh:function(){var h=this.im;this.im=-this.re,this.re=h;var d=this.asin();return this.re=-this.im,this.im=h,h=d.re,d.re=-d.im,d.im=h,d},acosh:function(){var h=this.acos();if(h.im<=0){var d=h.re;h.re=-h.im,h.im=d}else{var d=h.im;h.im=-h.re,h.re=d}return h},atanh:function(){var h=this.re,d=this.im,p=h>1&&d===0,f=1-h,m=1+h,g=f*f+d*d,x=g!==0?new c((m*f-d*d)/g,(d*f+m*d)/g):new c(h!==-1?h/0:0,d!==0?d/0:0),b=x.re;return x.re=u(x.re,x.im)/2,x.im=Math.atan2(x.im,b)/2,p&&(x.im=-x.im),x},acoth:function(){var h=this.re,d=this.im;if(h===0&&d===0)return new c(0,Math.PI/2);var p=h*h+d*d;return p!==0?new c(h/p,-d/p).atanh():new c(h!==0?h/0:0,d!==0?-d/0:0).atanh()},acsch:function(){var h=this.re,d=this.im;if(d===0)return new c(h!==0?Math.log(h+Math.sqrt(h*h+1)):1/0,0);var p=h*h+d*d;return p!==0?new c(h/p,-d/p).asinh():new c(h!==0?h/0:0,d!==0?-d/0:0).asinh()},asech:function(){var h=this.re,d=this.im;if(this.isZero())return c.INFINITY;var p=h*h+d*d;return p!==0?new c(h/p,-d/p).acosh():new c(h!==0?h/0:0,d!==0?-d/0:0).acosh()},inverse:function(){if(this.isZero())return c.INFINITY;if(this.isInfinite())return c.ZERO;var h=this.re,d=this.im,p=h*h+d*d;return new c(h/p,-d/p)},conjugate:function(){return new c(this.re,-this.im)},neg:function(){return new c(-this.re,-this.im)},ceil:function(h){return h=Math.pow(10,h||0),new c(Math.ceil(this.re*h)/h,Math.ceil(this.im*h)/h)},floor:function(h){return h=Math.pow(10,h||0),new c(Math.floor(this.re*h)/h,Math.floor(this.im*h)/h)},round:function(h){return h=Math.pow(10,h||0),new c(Math.round(this.re*h)/h,Math.round(this.im*h)/h)},equals:function(h,d){var p=new c(h,d);return Math.abs(p.re-this.re)<=c.EPSILON&&Math.abs(p.im-this.im)<=c.EPSILON},clone:function(){return new c(this.re,this.im)},toString:function(){var h=this.re,d=this.im,p="";return this.isNaN()?"NaN":this.isInfinite()?"Infinity":(Math.abs(h)<c.EPSILON&&(h=0),Math.abs(d)<c.EPSILON&&(d=0),d===0?p+h:(h!==0?(p+=h,p+=" ",d<0?(d=-d,p+="-"):p+="+",p+=" "):d<0&&(d=-d,p+="-"),d!==1&&(p+=d),p+"i"))},toVector:function(){return[this.re,this.im]},valueOf:function(){return this.im===0?this.re:null},isNaN:function(){return isNaN(this.re)||isNaN(this.im)},isZero:function(){return this.im===0&&this.re===0},isFinite:function(){return isFinite(this.re)&&isFinite(this.im)},isInfinite:function(){return!(this.isNaN()||this.isFinite())}},c.ZERO=new c(0,0),c.ONE=new c(1,0),c.I=new c(0,1),c.PI=new c(Math.PI,0),c.E=new c(Math.E,0),c.INFINITY=new c(1/0,1/0),c.NAN=new c(NaN,NaN),c.EPSILON=1e-15,Object.defineProperty(c,"__esModule",{value:!0}),c.default=c,c.Complex=c,e.exports=c})()})(lj);const zs=dA(Pv);var cj="Complex",hj=[],dj=Ht(cj,hj,()=>(Object.defineProperty(zs,"name",{value:"Complex"}),zs.prototype.constructor=zs,zs.prototype.type="Complex",zs.prototype.isComplex=!0,zs.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},zs.prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}},zs.prototype.format=function(e){var t="",n=this.im,s=this.re,r=Nv(this.re,e),i=Nv(this.im,e),o=Tn(e)?e:e?e.precision:null;if(o!==null){var a=Math.pow(10,-o);Math.abs(s/n)<a&&(s=0),Math.abs(n/s)<a&&(n=0)}return n===0?t=r:s===0?n===1?t="i":n===-1?t="-i":t=i+"i":n<0?n===-1?t=r+" - i":t=r+" - "+i.substring(1)+"i":n===1?t=r+" + i":t=r+" + "+i+"i",t},zs.fromPolar=function(e){switch(arguments.length){case 1:{var t=arguments[0];if(typeof t=="object")return zs(t);throw new TypeError("Input has to be an object with r and phi keys.")}case 2:{var n=arguments[0],s=arguments[1];if(Tn(n)){if(TT(s)&&s.hasBase("ANGLE")&&(s=s.toNumber("rad")),Tn(s))return new zs({r:n,phi:s});throw new TypeError("Phi is not a number nor an angle unit.")}else throw new TypeError("Radius r is not a number.")}default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},zs.prototype.valueOf=zs.prototype.toString,zs.fromJSON=function(e){return new zs(e)},zs.compare=function(e,t){return e.re>t.re?1:e.re<t.re?-1:e.im>t.im?1:e.im<t.im?-1:0},zs),{isClass:!0}),Wv={},pj={get exports(){return Wv},set exports(e){Wv=e}};/**
 * @license Fraction.js v4.2.0 05/03/2022
 * https://www.xarg.org/2014/03/rational-numbers-in-javascript/
 *
 * Copyright (c) 2021, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/(function(e,t){(function(n){var s=2e3,r={s:1,n:0,d:1};function i(f,m){if(isNaN(f=parseInt(f,10)))throw p.InvalidParameter;return f*m}function o(f,m){if(m===0)throw p.DivisionByZero;var g=Object.create(p.prototype);g.s=f<0?-1:1,f=f<0?-f:f;var x=d(f,m);return g.n=f/x,g.d=m/x,g}function a(f){for(var m={},g=f,x=2,b=4;b<=g;){for(;g%x===0;)g/=x,m[x]=(m[x]||0)+1;b+=1+2*x++}return g!==f?g>1&&(m[g]=(m[g]||0)+1):m[f]=(m[f]||0)+1,m}var u=function(f,m){var g=0,x=1,b=1,w=0,y=0,v=0,k=1,C=1,I=0,$=1,S=1,N=1,F=1e7,D;if(f!=null)if(m!==void 0){if(g=f,x=m,b=g*x,g%1!==0||x%1!==0)throw p.NonIntegerParameter}else switch(typeof f){case"object":{if("d"in f&&"n"in f)g=f.n,x=f.d,"s"in f&&(g*=f.s);else if(0 in f)g=f[0],1 in f&&(x=f[1]);else throw p.InvalidParameter;b=g*x;break}case"number":{if(f<0&&(b=f,f=-f),f%1===0)g=f;else if(f>0){for(f>=1&&(C=Math.pow(10,Math.floor(1+Math.log(f)/Math.LN10)),f/=C);$<=F&&N<=F;)if(D=(I+S)/($+N),f===D){$+N<=F?(g=I+S,x=$+N):N>$?(g=S,x=N):(g=I,x=$);break}else f>D?(I+=S,$+=N):(S+=I,N+=$),$>F?(g=S,x=N):(g=I,x=$);g*=C}else(isNaN(f)||isNaN(m))&&(x=g=NaN);break}case"string":{if($=f.match(/\d+|./g),$===null)throw p.InvalidParameter;if($[I]==="-"?(b=-1,I++):$[I]==="+"&&I++,$.length===I+1?y=i($[I++],b):$[I+1]==="."||$[I]==="."?($[I]!=="."&&(w=i($[I++],b)),I++,(I+1===$.length||$[I+1]==="("&&$[I+3]===")"||$[I+1]==="'"&&$[I+3]==="'")&&(y=i($[I],b),k=Math.pow(10,$[I].length),I++),($[I]==="("&&$[I+2]===")"||$[I]==="'"&&$[I+2]==="'")&&(v=i($[I+1],b),C=Math.pow(10,$[I+1].length)-1,I+=3)):$[I+1]==="/"||$[I+1]===":"?(y=i($[I],b),k=i($[I+2],1),I+=3):$[I+3]==="/"&&$[I+1]===" "&&(w=i($[I],b),y=i($[I+2],b),k=i($[I+4],1),I+=5),$.length<=I){x=k*C,b=g=v+x*w+C*y;break}}default:throw p.InvalidParameter}if(x===0)throw p.DivisionByZero;r.s=b<0?-1:1,r.n=Math.abs(g),r.d=Math.abs(x)};function l(f,m,g){for(var x=1;m>0;f=f*f%g,m>>=1)m&1&&(x=x*f%g);return x}function c(f,m){for(;m%2===0;m/=2);for(;m%5===0;m/=5);if(m===1)return 0;for(var g=10%m,x=1;g!==1;x++)if(g=g*10%m,x>s)return 0;return x}function h(f,m,g){for(var x=1,b=l(10,g,m),w=0;w<300;w++){if(x===b)return w;x=x*10%m,b=b*10%m}return 0}function d(f,m){if(!f)return m;if(!m)return f;for(;;){if(f%=m,!f)return m;if(m%=f,!m)return f}}function p(f,m){if(u(f,m),this instanceof p)f=d(r.d,r.n),this.s=r.s,this.n=r.n/f,this.d=r.d/f;else return o(r.s*r.n,r.d)}p.DivisionByZero=new Error("Division by Zero"),p.InvalidParameter=new Error("Invalid argument"),p.NonIntegerParameter=new Error("Parameters must be integer"),p.prototype={s:1,n:0,d:1,abs:function(){return o(this.n,this.d)},neg:function(){return o(-this.s*this.n,this.d)},add:function(f,m){return u(f,m),o(this.s*this.n*r.d+r.s*this.d*r.n,this.d*r.d)},sub:function(f,m){return u(f,m),o(this.s*this.n*r.d-r.s*this.d*r.n,this.d*r.d)},mul:function(f,m){return u(f,m),o(this.s*r.s*this.n*r.n,this.d*r.d)},div:function(f,m){return u(f,m),o(this.s*r.s*this.n*r.d,this.d*r.n)},clone:function(){return o(this.s*this.n,this.d)},mod:function(f,m){if(isNaN(this.n)||isNaN(this.d))return new p(NaN);if(f===void 0)return o(this.s*this.n%this.d,1);if(u(f,m),r.n===0&&this.d===0)throw p.DivisionByZero;return o(this.s*(r.d*this.n)%(r.n*this.d),r.d*this.d)},gcd:function(f,m){return u(f,m),o(d(r.n,this.n)*d(r.d,this.d),r.d*this.d)},lcm:function(f,m){return u(f,m),r.n===0&&this.n===0?o(0,1):o(r.n*this.n,d(r.n,this.n)*d(r.d,this.d))},ceil:function(f){return f=Math.pow(10,f||0),isNaN(this.n)||isNaN(this.d)?new p(NaN):o(Math.ceil(f*this.s*this.n/this.d),f)},floor:function(f){return f=Math.pow(10,f||0),isNaN(this.n)||isNaN(this.d)?new p(NaN):o(Math.floor(f*this.s*this.n/this.d),f)},round:function(f){return f=Math.pow(10,f||0),isNaN(this.n)||isNaN(this.d)?new p(NaN):o(Math.round(f*this.s*this.n/this.d),f)},inverse:function(){return o(this.s*this.d,this.n)},pow:function(f,m){if(u(f,m),r.d===1)return r.s<0?o(Math.pow(this.s*this.d,r.n),Math.pow(this.n,r.n)):o(Math.pow(this.s*this.n,r.n),Math.pow(this.d,r.n));if(this.s<0)return null;var g=a(this.n),x=a(this.d),b=1,w=1;for(var y in g)if(y!=="1"){if(y==="0"){b=0;break}if(g[y]*=r.n,g[y]%r.d===0)g[y]/=r.d;else return null;b*=Math.pow(y,g[y])}for(var y in x)if(y!=="1"){if(x[y]*=r.n,x[y]%r.d===0)x[y]/=r.d;else return null;w*=Math.pow(y,x[y])}return r.s<0?o(w,b):o(b,w)},equals:function(f,m){return u(f,m),this.s*this.n*r.d===r.s*r.n*this.d},compare:function(f,m){u(f,m);var g=this.s*this.n*r.d-r.s*r.n*this.d;return(0<g)-(g<0)},simplify:function(f){if(isNaN(this.n)||isNaN(this.d))return this;f=f||.001;for(var m=this.abs(),g=m.toContinued(),x=1;x<g.length;x++){for(var b=o(g[x-1],1),w=x-2;w>=0;w--)b=b.inverse().add(g[w]);if(b.sub(m).abs().valueOf()<f)return b.mul(this.s)}return this},divisible:function(f,m){return u(f,m),!(!(r.n*this.d)||this.n*r.d%(r.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(f){var m,g="",x=this.n,b=this.d;return this.s<0&&(g+="-"),b===1?g+=x:(f&&(m=Math.floor(x/b))>0&&(g+=m,g+=" ",x%=b),g+=x,g+="/",g+=b),g},toLatex:function(f){var m,g="",x=this.n,b=this.d;return this.s<0&&(g+="-"),b===1?g+=x:(f&&(m=Math.floor(x/b))>0&&(g+=m,x%=b),g+="\\frac{",g+=x,g+="}{",g+=b,g+="}"),g},toContinued:function(){var f,m=this.n,g=this.d,x=[];if(isNaN(m)||isNaN(g))return x;do x.push(Math.floor(m/g)),f=m%g,m=g,g=f;while(m!==1);return x},toString:function(f){var m=this.n,g=this.d;if(isNaN(m)||isNaN(g))return"NaN";f=f||15;var x=c(m,g),b=h(m,g,x),w=this.s<0?"-":"";if(w+=m/g|0,m%=g,m*=10,m&&(w+="."),x){for(var y=b;y--;)w+=m/g|0,m%=g,m*=10;w+="(";for(var y=x;y--;)w+=m/g|0,m%=g,m*=10;w+=")"}else for(var y=f;m&&y--;)w+=m/g|0,m%=g,m*=10;return w}},Object.defineProperty(p,"__esModule",{value:!0}),p.default=p,p.Fraction=p,e.exports=p})()})(pj);const ka=dA(Wv);var fj="Fraction",mj=[],gj=Ht(fj,mj,()=>(Object.defineProperty(ka,"name",{value:"Fraction"}),ka.prototype.constructor=ka,ka.prototype.type="Fraction",ka.prototype.isFraction=!0,ka.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},ka.fromJSON=function(e){return new ka(e)},ka),{isClass:!0}),xj="Matrix",bj=[],yj=Ht(xj,bj,()=>{function e(){if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator")}return e.prototype.type="Matrix",e.prototype.isMatrix=!0,e.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},e.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},e.prototype.create=function(t,n){throw new Error("Cannot invoke create on a Matrix interface")},e.prototype.subset=function(t,n,s){throw new Error("Cannot invoke subset on a Matrix interface")},e.prototype.get=function(t){throw new Error("Cannot invoke get on a Matrix interface")},e.prototype.set=function(t,n,s){throw new Error("Cannot invoke set on a Matrix interface")},e.prototype.resize=function(t,n){throw new Error("Cannot invoke resize on a Matrix interface")},e.prototype.reshape=function(t,n){throw new Error("Cannot invoke reshape on a Matrix interface")},e.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},e.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},e.prototype.map=function(t,n){throw new Error("Cannot invoke map on a Matrix interface")},e.prototype.forEach=function(t){throw new Error("Cannot invoke forEach on a Matrix interface")},e.prototype[Symbol.iterator]=function(){throw new Error("Cannot iterate a Matrix interface")},e.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},e.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},e.prototype.format=function(t){throw new Error("Cannot invoke format on a Matrix interface")},e.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},e},{isClass:!0});function pA(e){return Object.keys(e.signatures||{}).reduce(function(t,n){var s=(n.match(/,/g)||[]).length+1;return Math.max(t,s)},-1)}var wj="DenseMatrix",vj=["Matrix"],kj=Ht(wj,vj,e=>{var{Matrix:t}=e;function n(c,h){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(h&&!Xi(h))throw new Error("Invalid datatype: "+h);if(Je(c))c.type==="DenseMatrix"?(this._data=_e(c._data),this._size=_e(c._size),this._datatype=h||c._datatype):(this._data=c.toArray(),this._size=c.size(),this._datatype=h||c._datatype);else if(c&&ln(c.data)&&ln(c.size))this._data=c.data,this._size=c.size,VT(this._data,this._size),this._datatype=h||c.datatype;else if(ln(c))this._data=l(c),this._size=Is(this._data),VT(this._data,this._size),this._datatype=h;else{if(c)throw new TypeError("Unsupported type of data ("+wa(c)+")");this._data=[],this._size=[0],this._datatype=h}}n.prototype=new t,n.prototype.createDenseMatrix=function(c,h){return new n(c,h)},Object.defineProperty(n,"name",{value:"DenseMatrix"}),n.prototype.constructor=n,n.prototype.type="DenseMatrix",n.prototype.isDenseMatrix=!0,n.prototype.getDataType=function(){return E0(this._data,wa)},n.prototype.storage=function(){return"dense"},n.prototype.datatype=function(){return this._datatype},n.prototype.create=function(c,h){return new n(c,h)},n.prototype.subset=function(c,h,d){switch(arguments.length){case 1:return s(this,c);case 2:case 3:return i(this,c,h,d);default:throw new SyntaxError("Wrong number of arguments")}},n.prototype.get=function(c){if(!ln(c))throw new TypeError("Array expected");if(c.length!==this._size.length)throw new Ge(c.length,this._size.length);for(var h=0;h<c.length;h++)bn(c[h],this._size[h]);for(var d=this._data,p=0,f=c.length;p<f;p++){var m=c[p];bn(m,d.length),d=d[m]}return d},n.prototype.set=function(c,h,d){if(!ln(c))throw new TypeError("Array expected");if(c.length<this._size.length)throw new Ge(c.length,this._size.length,"<");var p,f,m,g=c.map(function(b){return b+1});u(this,g,d);var x=this._data;for(p=0,f=c.length-1;p<f;p++)m=c[p],bn(m,x.length),x=x[m];return m=c[c.length-1],bn(m,x.length),x[m]=h,this};function s(c,h){if(!$v(h))throw new TypeError("Invalid index");var d=h.isScalar();if(d)return c.get(h.min());var p=h.size();if(p.length!==c._size.length)throw new Ge(p.length,c._size.length);for(var f=h.min(),m=h.max(),g=0,x=c._size.length;g<x;g++)bn(f[g],c._size[g]),bn(m[g],c._size[g]);return new n(r(c._data,h,p.length,0),c._datatype)}function r(c,h,d,p){var f=p===d-1,m=h.dimension(p);return f?m.map(function(g){return bn(g,c.length),c[g]}).valueOf():m.map(function(g){bn(g,c.length);var x=c[g];return r(x,h,d,p+1)}).valueOf()}function i(c,h,d,p){if(!h||h.isIndex!==!0)throw new TypeError("Invalid index");var f=h.size(),m=h.isScalar(),g;if(Je(d)?(g=d.size(),d=d.valueOf()):g=Is(d),m){if(g.length!==0)throw new TypeError("Scalar expected");c.set(h.min(),d,p)}else{if(f.length<c._size.length)throw new Ge(f.length,c._size.length,"<");if(g.length<f.length){for(var x=0,b=0;f[x]===1&&g[x]===1;)x++;for(;f[x]===1;)b++,x++;d=jT(d,f.length,b,g)}if(!$0(f,g))throw new Ge(f,g,">");var w=h.max().map(function(k){return k+1});u(c,w,p);var y=f.length,v=0;o(c._data,h,d,y,v)}return c}function o(c,h,d,p,f){var m=f===p-1,g=h.dimension(f);m?g.forEach(function(x,b){bn(x),c[x]=d[b[0]]}):g.forEach(function(x,b){bn(x),o(c[x],h,d[b[0]],p,f+1)})}n.prototype.resize=function(c,h,d){if(!Yd(c))throw new TypeError("Array or Matrix expected");var p=c.valueOf().map(m=>Array.isArray(m)&&m.length===1?m[0]:m),f=d?this.clone():this;return a(f,p,h)};function a(c,h,d){if(h.length===0){for(var p=c._data;ln(p);)p=p[0];return p}return c._size=h.slice(0),c._data=Jd(c._data,c._size,d),c}n.prototype.reshape=function(c,h){var d=h?this.clone():this;d._data=UT(d._data,c);var p=d._size.reduce((f,m)=>f*m);return d._size=Tv(c,p),d};function u(c,h,d){for(var p=c._size.slice(0),f=!1;p.length<h.length;)p.push(0),f=!0;for(var m=0,g=h.length;m<g;m++)h[m]>p[m]&&(p[m]=h[m],f=!0);f&&a(c,p,d)}n.prototype.clone=function(){var c=new n({data:_e(this._data),size:_e(this._size),datatype:this._datatype});return c},n.prototype.size=function(){return this._size.slice(0)},n.prototype.map=function(c){var h=this,d=pA(c),p=function g(x,b){return ln(x)?x.map(function(w,y){return g(w,b.concat(y))}):d===1?c(x):d===2?c(x,b):c(x,b,h)},f=p(this._data,[]),m=this._datatype!==void 0?E0(f,wa):void 0;return new n(f,m)},n.prototype.forEach=function(c){var h=this,d=function p(f,m){ln(f)?f.forEach(function(g,x){p(g,m.concat(x))}):c(f,m,h)};d(this._data,[])},n.prototype[Symbol.iterator]=function*(){var c=function*h(d,p){if(ln(d))for(var f=0;f<d.length;f++)yield*h(d[f],p.concat(f));else yield{value:d,index:p}};yield*c(this._data,[])},n.prototype.rows=function(){var c=[],h=this.size();if(h.length!==2)throw new TypeError("Rows can only be returned for a 2D matrix.");var d=this._data;for(var p of d)c.push(new n([p],this._datatype));return c},n.prototype.columns=function(){var c=this,h=[],d=this.size();if(d.length!==2)throw new TypeError("Rows can only be returned for a 2D matrix.");for(var p=this._data,f=function(g){var x=p.map(b=>[b[g]]);h.push(new n(x,c._datatype))},m=0;m<d[1];m++)f(m);return h},n.prototype.toArray=function(){return _e(this._data)},n.prototype.valueOf=function(){return this._data},n.prototype.format=function(c){return Dn(this._data,c)},n.prototype.toString=function(){return Dn(this._data)},n.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},n.prototype.diagonal=function(c){if(c){if(as(c)&&(c=c.toNumber()),!Tn(c)||!In(c))throw new TypeError("The parameter k must be an integer number")}else c=0;for(var h=c>0?c:0,d=c<0?-c:0,p=this._size[0],f=this._size[1],m=Math.min(p-d,f-h),g=[],x=0;x<m;x++)g[x]=this._data[x+d][x+h];return new n({data:g,size:[m],datatype:this._datatype})},n.diagonal=function(c,h,d,p){if(!ln(c))throw new TypeError("Array expected, size parameter");if(c.length!==2)throw new Error("Only two dimensions matrix are supported");if(c=c.map(function(C){if(as(C)&&(C=C.toNumber()),!Tn(C)||!In(C)||C<1)throw new Error("Size values must be positive integers");return C}),d){if(as(d)&&(d=d.toNumber()),!Tn(d)||!In(d))throw new TypeError("The parameter k must be an integer number")}else d=0;var f=d>0?d:0,m=d<0?-d:0,g=c[0],x=c[1],b=Math.min(g-m,x-f),w;if(ln(h)){if(h.length!==b)throw new Error("Invalid value array length");w=function(C){return h[C]}}else if(Je(h)){var y=h.size();if(y.length!==1||y[0]!==b)throw new Error("Invalid matrix length");w=function(C){return h.get([C])}}else w=function(){return h};p||(p=as(w(0))?w(0).mul(0):0);var v=[];if(c.length>0){v=Jd(v,c,p);for(var k=0;k<b;k++)v[k+m][k+f]=w(k)}return new n({data:v,size:[g,x]})},n.fromJSON=function(c){return new n(c)},n.prototype.swapRows=function(c,h){if(!Tn(c)||!In(c)||!Tn(h)||!In(h))throw new Error("Row index must be positive integers");if(this._size.length!==2)throw new Error("Only two dimensional matrix is supported");return bn(c,this._size[0]),bn(h,this._size[0]),n._swapRows(c,h,this._data),this},n._swapRows=function(c,h,d){var p=d[c];d[c]=d[h],d[h]=p};function l(c){for(var h=0,d=c.length;h<d;h++){var p=c[h];ln(p)?c[h]=l(p):p&&p.isMatrix===!0&&(c[h]=l(p.valueOf()))}return c}return n},{isClass:!0});function Ij(e){var t=e.length,n=e[0].length,s,r,i=[];for(r=0;r<n;r++){var o=[];for(s=0;s<t;s++)o.push(e[s][r]);i.push(o)}return i}function fA(e){for(var t=0;t<e.length;t++)if(Yd(e[t]))return!0;return!1}function Vv(e,t){Je(e)&&(e=e.valueOf());for(var n=0,s=e.length;n<s;n++){var r=e[n];Array.isArray(r)?Vv(r,t):t(r)}}function Ia(e,t,n){return e&&typeof e.map=="function"?e.map(function(s){return Ia(s,t)}):t(e)}function mA(e,t,n){var s=Array.isArray(e)?Is(e):e.size();if(t<0||t>=s.length)throw new el(t,s.length);return Je(e)?e.create(L0(e.valueOf(),t,n)):L0(e,t,n)}function L0(e,t,n){var s,r,i,o;if(t<=0)if(Array.isArray(e[0])){for(o=Ij(e),r=[],s=0;s<o.length;s++)r[s]=L0(o[s],t-1,n);return r}else{for(i=e[0],s=1;s<e.length;s++)i=n(i,e[s]);return i}else{for(r=[],s=0;s<e.length;s++)r[s]=L0(e[s],t-1,n);return r}}var gA="isInteger",Cj=["typed"],$j=Ht(gA,Cj,e=>{var{typed:t}=e;return t(gA,{number:In,BigNumber:function(n){return n.isInt()},Fraction:function(n){return n.d===1&&isFinite(n.n)},"Array | Matrix":t.referToSelf(n=>s=>Ia(s,n))})}),xA="number",bA="number, number";function yA(e){return Math.abs(e)}yA.signature=xA;function wA(e,t){return e+t}wA.signature=bA;function vA(e,t){return e*t}vA.signature=bA;function kA(e){return-e}kA.signature=xA;var Sj="number";function IA(e){return e===0}IA.signature=Sj;var CA="isZero",Nj=["typed"],Ej=Ht(CA,Nj,e=>{var{typed:t}=e;return t(CA,{number:IA,BigNumber:function(n){return n.isZero()},Complex:function(n){return n.re===0&&n.im===0},Fraction:function(n){return n.d===1&&n.n===0},Unit:t.referToSelf(n=>s=>t.find(n,s.valueType())(s.value)),"Array | Matrix":t.referToSelf(n=>s=>Ia(s,n))})});function tp(e,t,n){if(n==null)return e.eq(t);if(e.eq(t))return!0;if(e.isNaN()||t.isNaN())return!1;if(e.isFinite()&&t.isFinite()){var s=e.minus(t).abs();if(s.isZero())return!0;var r=e.constructor.max(e.abs(),t.abs());return s.lte(r.times(n))}return!1}function Dj(e,t,n){return Za(e.re,t.re,n)&&Za(e.im,t.im,n)}var ep=Ht("compareUnits",["typed"],e=>{var{typed:t}=e;return{"Unit, Unit":t.referToSelf(n=>(s,r)=>{if(!s.equalBase(r))throw new Error("Cannot compare units with different base");return t.find(n,[s.valueType(),r.valueType()])(s.value,r.value)})}}),z0="equalScalar",Tj=["typed","config"],Aj=Ht(z0,Tj,e=>{var{typed:t,config:n}=e,s=ep({typed:t});return t(z0,{"boolean, boolean":function(r,i){return r===i},"number, number":function(r,i){return Za(r,i,n.epsilon)},"BigNumber, BigNumber":function(r,i){return r.eq(i)||tp(r,i,n.epsilon)},"Fraction, Fraction":function(r,i){return r.equals(i)},"Complex, Complex":function(r,i){return Dj(r,i,n.epsilon)}},s)});Ht(z0,["typed","config"],e=>{var{typed:t,config:n}=e;return t(z0,{"number, number":function(s,r){return Za(s,r,n.epsilon)}})});var Fj="SparseMatrix",Rj=["typed","equalScalar","Matrix"],_j=Ht(Fj,Rj,e=>{var{typed:t,equalScalar:n,Matrix:s}=e;function r(m,g){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");if(g&&!Xi(g))throw new Error("Invalid datatype: "+g);if(Je(m))i(this,m,g);else if(m&&ln(m.index)&&ln(m.ptr)&&ln(m.size))this._values=m.values,this._index=m.index,this._ptr=m.ptr,this._size=m.size,this._datatype=g||m.datatype;else if(ln(m))o(this,m,g);else{if(m)throw new TypeError("Unsupported type of data ("+wa(m)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=g}}function i(m,g,x){g.type==="SparseMatrix"?(m._values=g._values?_e(g._values):void 0,m._index=_e(g._index),m._ptr=_e(g._ptr),m._size=_e(g._size),m._datatype=x||g._datatype):o(m,g.valueOf(),x||g._datatype)}function o(m,g,x){m._values=[],m._index=[],m._ptr=[],m._datatype=x;var b=g.length,w=0,y=n,v=0;if(Xi(x)&&(y=t.find(n,[x,x])||n,v=t.convert(0,x)),b>0){var k=0;do{m._ptr.push(m._index.length);for(var C=0;C<b;C++){var I=g[C];if(ln(I)){if(k===0&&w<I.length&&(w=I.length),k<I.length){var $=I[k];y($,v)||(m._values.push($),m._index.push(C))}}else k===0&&w<1&&(w=1),y(I,v)||(m._values.push(I),m._index.push(C))}k++}while(k<w)}m._ptr.push(m._index.length),m._size=[b,w]}r.prototype=new s,r.prototype.createSparseMatrix=function(m,g){return new r(m,g)},Object.defineProperty(r,"name",{value:"SparseMatrix"}),r.prototype.constructor=r,r.prototype.type="SparseMatrix",r.prototype.isSparseMatrix=!0,r.prototype.getDataType=function(){return E0(this._values,wa)},r.prototype.storage=function(){return"sparse"},r.prototype.datatype=function(){return this._datatype},r.prototype.create=function(m,g){return new r(m,g)},r.prototype.density=function(){var m=this._size[0],g=this._size[1];return m!==0&&g!==0?this._index.length/(m*g):0},r.prototype.subset=function(m,g,x){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return a(this,m);case 2:case 3:return u(this,m,g,x);default:throw new SyntaxError("Wrong number of arguments")}};function a(m,g){if(!$v(g))throw new TypeError("Invalid index");var x=g.isScalar();if(x)return m.get(g.min());var b=g.size();if(b.length!==m._size.length)throw new Ge(b.length,m._size.length);var w,y,v,k,C=g.min(),I=g.max();for(w=0,y=m._size.length;w<y;w++)bn(C[w],m._size[w]),bn(I[w],m._size[w]);var $=m._values,S=m._index,N=m._ptr,F=g.dimension(0),D=g.dimension(1),E=[],A=[];F.forEach(function(M,z){A[M]=z[0],E[M]=!0});var T=$?[]:void 0,R=[],_=[];return D.forEach(function(M){for(_.push(R.length),v=N[M],k=N[M+1];v<k;v++)w=S[v],E[w]===!0&&(R.push(A[w]),T&&T.push($[v]))}),_.push(R.length),new r({values:T,index:R,ptr:_,size:b,datatype:m._datatype})}function u(m,g,x,b){if(!g||g.isIndex!==!0)throw new TypeError("Invalid index");var w=g.size(),y=g.isScalar(),v;if(Je(x)?(v=x.size(),x=x.toArray()):v=Is(x),y){if(v.length!==0)throw new TypeError("Scalar expected");m.set(g.min(),x,b)}else{if(w.length!==1&&w.length!==2)throw new Ge(w.length,m._size.length,"<");if(v.length<w.length){for(var k=0,C=0;w[k]===1&&v[k]===1;)k++;for(;w[k]===1;)C++,k++;x=jT(x,w.length,C,v)}if(!$0(w,v))throw new Ge(w,v,">");if(w.length===1){var I=g.dimension(0);I.forEach(function(N,F){bn(N),m.set([N,0],x[F[0]],b)})}else{var $=g.dimension(0),S=g.dimension(1);$.forEach(function(N,F){bn(N),S.forEach(function(D,E){bn(D),m.set([N,D],x[F[0]][E[0]],b)})})}}return m}r.prototype.get=function(m){if(!ln(m))throw new TypeError("Array expected");if(m.length!==this._size.length)throw new Ge(m.length,this._size.length);if(!this._values)throw new Error("Cannot invoke get on a Pattern only matrix");var g=m[0],x=m[1];bn(g,this._size[0]),bn(x,this._size[1]);var b=l(g,this._ptr[x],this._ptr[x+1],this._index);return b<this._ptr[x+1]&&this._index[b]===g?this._values[b]:0},r.prototype.set=function(m,g,x){if(!ln(m))throw new TypeError("Array expected");if(m.length!==this._size.length)throw new Ge(m.length,this._size.length);if(!this._values)throw new Error("Cannot invoke set on a Pattern only matrix");var b=m[0],w=m[1],y=this._size[0],v=this._size[1],k=n,C=0;Xi(this._datatype)&&(k=t.find(n,[this._datatype,this._datatype])||n,C=t.convert(0,this._datatype)),(b>y-1||w>v-1)&&(d(this,Math.max(b+1,y),Math.max(w+1,v),x),y=this._size[0],v=this._size[1]),bn(b,y),bn(w,v);var I=l(b,this._ptr[w],this._ptr[w+1],this._index);return I<this._ptr[w+1]&&this._index[I]===b?k(g,C)?c(I,w,this._values,this._index,this._ptr):this._values[I]=g:k(g,C)||h(I,b,w,g,this._values,this._index,this._ptr),this};function l(m,g,x,b){if(x-g===0)return x;for(var w=g;w<x;w++)if(b[w]===m)return w;return g}function c(m,g,x,b,w){x.splice(m,1),b.splice(m,1);for(var y=g+1;y<w.length;y++)w[y]--}function h(m,g,x,b,w,y,v){w.splice(m,0,b),y.splice(m,0,g);for(var k=x+1;k<v.length;k++)v[k]++}r.prototype.resize=function(m,g,x){if(!Yd(m))throw new TypeError("Array or Matrix expected");var b=m.valueOf().map(y=>Array.isArray(y)&&y.length===1?y[0]:y);if(b.length!==2)throw new Error("Only two dimensions matrix are supported");b.forEach(function(y){if(!Tn(y)||!In(y)||y<0)throw new TypeError("Invalid size, must contain positive integers (size: "+Dn(b)+")")});var w=x?this.clone():this;return d(w,b[0],b[1],g)};function d(m,g,x,b){var w=b||0,y=n,v=0;Xi(m._datatype)&&(y=t.find(n,[m._datatype,m._datatype])||n,v=t.convert(0,m._datatype),w=t.convert(w,m._datatype));var k=!y(w,v),C=m._size[0],I=m._size[1],$,S,N;if(x>I){for(S=I;S<x;S++)if(m._ptr[S]=m._values.length,k)for($=0;$<C;$++)m._values.push(w),m._index.push($);m._ptr[x]=m._values.length}else x<I&&(m._ptr.splice(x+1,I-x),m._values.splice(m._ptr[x],m._values.length),m._index.splice(m._ptr[x],m._index.length));if(I=x,g>C){if(k){var F=0;for(S=0;S<I;S++){m._ptr[S]=m._ptr[S]+F,N=m._ptr[S+1]+F;var D=0;for($=C;$<g;$++,D++)m._values.splice(N+D,0,w),m._index.splice(N+D,0,$),F++}m._ptr[I]=m._values.length}}else if(g<C){var E=0;for(S=0;S<I;S++){m._ptr[S]=m._ptr[S]-E;var A=m._ptr[S],T=m._ptr[S+1]-E;for(N=A;N<T;N++)$=m._index[N],$>g-1&&(m._values.splice(N,1),m._index.splice(N,1),E++)}m._ptr[S]=m._values.length}return m._size[0]=g,m._size[1]=x,m}r.prototype.reshape=function(m,g){if(!ln(m))throw new TypeError("Array expected");if(m.length!==2)throw new Error("Sparse matrices can only be reshaped in two dimensions");m.forEach(function(M){if(!Tn(M)||!In(M)||M<=-2||M===0)throw new TypeError("Invalid size, must contain positive integers or -1 (size: "+Dn(m)+")")});var x=this._size[0]*this._size[1];m=Tv(m,x);var b=m[0]*m[1];if(x!==b)throw new Error("Reshaping sparse matrix will result in the wrong number of elements");var w=g?this.clone():this;if(this._size[0]===m[0]&&this._size[1]===m[1])return w;for(var y=[],v=0;v<w._ptr.length;v++)for(var k=0;k<w._ptr[v+1]-w._ptr[v];k++)y.push(v);for(var C=w._values.slice(),I=w._index.slice(),$=0;$<w._index.length;$++){var S=I[$],N=y[$],F=S*w._size[1]+N;y[$]=F%m[1],I[$]=Math.floor(F/m[1])}w._values.length=0,w._index.length=0,w._ptr.length=m[1]+1,w._size=m.slice();for(var D=0;D<w._ptr.length;D++)w._ptr[D]=0;for(var E=0;E<C.length;E++){var A=I[E],T=y[E],R=C[E],_=l(A,w._ptr[T],w._ptr[T+1],w._index);h(_,A,T,R,w._values,w._index,w._ptr)}return w},r.prototype.clone=function(){var m=new r({values:this._values?_e(this._values):void 0,index:_e(this._index),ptr:_e(this._ptr),size:_e(this._size),datatype:this._datatype});return m},r.prototype.size=function(){return this._size.slice(0)},r.prototype.map=function(m,g){if(!this._values)throw new Error("Cannot invoke map on a Pattern only matrix");var x=this,b=this._size[0],w=this._size[1],y=pA(m),v=function(k,C,I){return y===1?m(k):y===2?m(k,[C,I]):m(k,[C,I],x)};return p(this,0,b-1,0,w-1,v,g)};function p(m,g,x,b,w,y,v){var k=[],C=[],I=[],$=n,S=0;Xi(m._datatype)&&($=t.find(n,[m._datatype,m._datatype])||n,S=t.convert(0,m._datatype));for(var N=function(V,G,j){V=y(V,G,j),$(V,S)||(k.push(V),C.push(G))},F=b;F<=w;F++){I.push(k.length);var D=m._ptr[F],E=m._ptr[F+1];if(v)for(var A=D;A<E;A++){var T=m._index[A];T>=g&&T<=x&&N(m._values[A],T-g,F-b)}else{for(var R={},_=D;_<E;_++){var M=m._index[_];R[M]=m._values[_]}for(var z=g;z<=x;z++){var B=z in R?R[z]:0;N(B,z-g,F-b)}}}return I.push(k.length),new r({values:k,index:C,ptr:I,size:[x-g+1,w-b+1]})}r.prototype.forEach=function(m,g){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var x=this,b=this._size[0],w=this._size[1],y=0;y<w;y++){var v=this._ptr[y],k=this._ptr[y+1];if(g)for(var C=v;C<k;C++){var I=this._index[C];m(this._values[C],[I,y],x)}else{for(var $={},S=v;S<k;S++){var N=this._index[S];$[N]=this._values[S]}for(var F=0;F<b;F++){var D=F in $?$[F]:0;m(D,[F,y],x)}}}},r.prototype[Symbol.iterator]=function*(){if(!this._values)throw new Error("Cannot iterate a Pattern only matrix");for(var m=this._size[1],g=0;g<m;g++)for(var x=this._ptr[g],b=this._ptr[g+1],w=x;w<b;w++){var y=this._index[w];yield{value:this._values[w],index:[y,g]}}},r.prototype.toArray=function(){return f(this._values,this._index,this._ptr,this._size,!0)},r.prototype.valueOf=function(){return f(this._values,this._index,this._ptr,this._size,!1)};function f(m,g,x,b,w){var y=b[0],v=b[1],k=[],C,I;for(C=0;C<y;C++)for(k[C]=[],I=0;I<v;I++)k[C][I]=0;for(I=0;I<v;I++)for(var $=x[I],S=x[I+1],N=$;N<S;N++)C=g[N],k[C][I]=m?w?_e(m[N]):m[N]:1;return k}return r.prototype.format=function(m){for(var g=this._size[0],x=this._size[1],b=this.density(),w="Sparse Matrix ["+Dn(g,m)+" x "+Dn(x,m)+"] density: "+Dn(b,m)+`
`,y=0;y<x;y++)for(var v=this._ptr[y],k=this._ptr[y+1],C=v;C<k;C++){var I=this._index[C];w+=`
    (`+Dn(I,m)+", "+Dn(y,m)+") ==> "+(this._values?Dn(this._values[C],m):"X")}return w},r.prototype.toString=function(){return Dn(this.toArray())},r.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},r.prototype.diagonal=function(m){if(m){if(as(m)&&(m=m.toNumber()),!Tn(m)||!In(m))throw new TypeError("The parameter k must be an integer number")}else m=0;var g=m>0?m:0,x=m<0?-m:0,b=this._size[0],w=this._size[1],y=Math.min(b-x,w-g),v=[],k=[],C=[];C[0]=0;for(var I=g;I<w&&v.length<y;I++)for(var $=this._ptr[I],S=this._ptr[I+1],N=$;N<S;N++){var F=this._index[N];if(F===I-g+x){v.push(this._values[N]),k[v.length-1]=F-x;break}}return C.push(v.length),new r({values:v,index:k,ptr:C,size:[y,1]})},r.fromJSON=function(m){return new r(m)},r.diagonal=function(m,g,x,b,w){if(!ln(m))throw new TypeError("Array expected, size parameter");if(m.length!==2)throw new Error("Only two dimensions matrix are supported");if(m=m.map(function(M){if(as(M)&&(M=M.toNumber()),!Tn(M)||!In(M)||M<1)throw new Error("Size values must be positive integers");return M}),x){if(as(x)&&(x=x.toNumber()),!Tn(x)||!In(x))throw new TypeError("The parameter k must be an integer number")}else x=0;var y=n,v=0;Xi(w)&&(y=t.find(n,[w,w])||n,v=t.convert(0,w));var k=x>0?x:0,C=x<0?-x:0,I=m[0],$=m[1],S=Math.min(I-C,$-k),N;if(ln(g)){if(g.length!==S)throw new Error("Invalid value array length");N=function(M){return g[M]}}else if(Je(g)){var F=g.size();if(F.length!==1||F[0]!==S)throw new Error("Invalid matrix length");N=function(M){return g.get([M])}}else N=function(){return g};for(var D=[],E=[],A=[],T=0;T<$;T++){A.push(D.length);var R=T-k;if(R>=0&&R<S){var _=N(R);y(_,v)||(E.push(R+C),D.push(_))}}return A.push(D.length),new r({values:D,index:E,ptr:A,size:[I,$]})},r.prototype.swapRows=function(m,g){if(!Tn(m)||!In(m)||!Tn(g)||!In(g))throw new Error("Row index must be positive integers");if(this._size.length!==2)throw new Error("Only two dimensional matrix is supported");return bn(m,this._size[0]),bn(g,this._size[0]),r._swapRows(m,g,this._size[1],this._values,this._index,this._ptr),this},r._forEachRow=function(m,g,x,b,w){for(var y=b[m],v=b[m+1],k=y;k<v;k++)w(x[k],g[k])},r._swapRows=function(m,g,x,b,w,y){for(var v=0;v<x;v++){var k=y[v],C=y[v+1],I=l(m,k,C,w),$=l(g,k,C,w);if(I<C&&$<C&&w[I]===m&&w[$]===g){if(b){var S=b[I];b[I]=b[$],b[$]=S}continue}if(I<C&&w[I]===m&&($>=C||w[$]!==g)){var N=b?b[I]:void 0;w.splice($,0,g),b&&b.splice($,0,N),w.splice($<=I?I+1:I,1),b&&b.splice($<=I?I+1:I,1);continue}if($<C&&w[$]===g&&(I>=C||w[I]!==m)){var F=b?b[$]:void 0;w.splice(I,0,m),b&&b.splice(I,0,F),w.splice(I<=$?$+1:$,1),b&&b.splice(I<=$?$+1:$,1)}}},r},{isClass:!0}),Mj="number",Oj=["typed"];function Lj(e){var t=e.match(/(0[box])([0-9a-fA-F]*)\.([0-9a-fA-F]*)/);if(t){var n={"0b":2,"0o":8,"0x":16}[t[1]],s=t[2],r=t[3];return{input:e,radix:n,integerPart:s,fractionalPart:r}}else return null}function zj(e){for(var t=parseInt(e.integerPart,e.radix),n=0,s=0;s<e.fractionalPart.length;s++){var r=parseInt(e.fractionalPart[s],e.radix);n+=r/Math.pow(e.radix,s+1)}var i=t+n;if(isNaN(i))throw new SyntaxError('String "'+e.input+'" is no valid number');return i}var Bj=Ht(Mj,Oj,e=>{var{typed:t}=e,n=t("number",{"":function(){return 0},number:function(s){return s},string:function(s){if(s==="NaN")return NaN;var r=Lj(s);if(r)return zj(r);var i=0,o=s.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);o&&(i=Number(o[2]),s=o[1]);var a=Number(s);if(isNaN(a))throw new SyntaxError('String "'+s+'" is no valid number');if(o){if(a>2**i-1)throw new SyntaxError('String "'.concat(s,'" is out of range'));a>=2**(i-1)&&(a=a-2**i)}return a},BigNumber:function(s){return s.toNumber()},Fraction:function(s){return s.valueOf()},Unit:function(s){throw new Error("Second argument with valueless unit expected")},null:function(s){return 0},"Unit, string | Unit":function(s,r){return s.toNumber(r)},"Array | Matrix":t.referToSelf(s=>r=>Ia(r,s))});return n.fromJSON=function(s){return parseFloat(s.value)},n}),Pj="bignumber",Wj=["typed","BigNumber"],Vj=Ht(Pj,Wj,e=>{var{typed:t,BigNumber:n}=e;return t("bignumber",{"":function(){return new n(0)},number:function(s){return new n(s+"")},string:function(s){var r=s.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);if(r){var i=r[2],o=n(r[1]),a=new n(2).pow(Number(i));if(o.gt(a.sub(1)))throw new SyntaxError('String "'.concat(s,'" is out of range'));var u=new n(2).pow(Number(i)-1);return o.gte(u)?o.sub(a):o}return new n(s)},BigNumber:function(s){return s},Fraction:function(s){return new n(s.n).div(s.d).times(s.s)},null:function(s){return new n(0)},"Array | Matrix":t.referToSelf(s=>r=>Ia(r,s))})}),Uj="fraction",Gj=["typed","Fraction"],Hj=Ht(Uj,Gj,e=>{var{typed:t,Fraction:n}=e;return t("fraction",{number:function(s){if(!isFinite(s)||isNaN(s))throw new Error(s+" cannot be represented as a fraction");return new n(s)},string:function(s){return new n(s)},"number, number":function(s,r){return new n(s,r)},null:function(s){return new n(0)},BigNumber:function(s){return new n(s.toString())},Fraction:function(s){return s},Object:function(s){return new n(s)},"Array | Matrix":t.referToSelf(s=>r=>Ia(r,s))})}),$A="matrix",qj=["typed","Matrix","DenseMatrix","SparseMatrix"],jj=Ht($A,qj,e=>{var{typed:t,Matrix:n,DenseMatrix:s,SparseMatrix:r}=e;return t($A,{"":function(){return i([])},string:function(o){return i([],o)},"string, string":function(o,a){return i([],o,a)},Array:function(o){return i(o)},Matrix:function(o){return i(o,o.storage())},"Array | Matrix, string":i,"Array | Matrix, string, string":i});function i(o,a,u){if(a==="dense"||a==="default"||a===void 0)return new s(o,u);if(a==="sparse")return new r(o,u);throw new TypeError("Unknown matrix type "+JSON.stringify(a)+".")}}),SA="unaryMinus",Kj=["typed"],Xj=Ht(SA,Kj,e=>{var{typed:t}=e;return t(SA,{number:kA,"Complex | BigNumber | Fraction":n=>n.neg(),Unit:t.referToSelf(n=>s=>{var r=s.clone();return r.value=t.find(n,r.valueType())(s.value),r}),"Array | Matrix":t.referToSelf(n=>s=>Ia(s,n))})}),NA="abs",Yj=["typed"],Zj=Ht(NA,Yj,e=>{var{typed:t}=e;return t(NA,{number:yA,"Complex | BigNumber | Fraction | Unit":n=>n.abs(),"Array | Matrix":t.referToSelf(n=>s=>Ia(s,n))})}),EA="addScalar",Jj=["typed"],Qj=Ht(EA,Jj,e=>{var{typed:t}=e;return t(EA,{"number, number":wA,"Complex, Complex":function(n,s){return n.add(s)},"BigNumber, BigNumber":function(n,s){return n.plus(s)},"Fraction, Fraction":function(n,s){return n.add(s)},"Unit, Unit":t.referToSelf(n=>(s,r)=>{if(s.value===null||s.value===void 0)throw new Error("Parameter x contains a unit with undefined value");if(r.value===null||r.value===void 0)throw new Error("Parameter y contains a unit with undefined value");if(!s.equalBase(r))throw new Error("Units do not match");var i=s.clone();return i.value=t.find(n,[i.valueType(),r.valueType()])(i.value,r.value),i.fixPrefix=!1,i})})}),tK="matAlgo11xS0s",eK=["typed","equalScalar"],Uv=Ht(tK,eK,e=>{var{typed:t,equalScalar:n}=e;return function(s,r,i,o){var a=s._values,u=s._index,l=s._ptr,c=s._size,h=s._datatype;if(!a)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var d=c[0],p=c[1],f,m=n,g=0,x=i;typeof h=="string"&&(f=h,m=t.find(n,[f,f]),g=t.convert(0,f),r=t.convert(r,f),x=t.find(i,[f,f]));for(var b=[],w=[],y=[],v=0;v<p;v++){y[v]=w.length;for(var k=l[v],C=l[v+1],I=k;I<C;I++){var $=u[I],S=o?x(r,a[I]):x(a[I],r);m(S,g)||(w.push($),b.push(S))}}return y[p]=w.length,s.createSparseMatrix({values:b,index:w,ptr:y,size:[d,p],datatype:f})}}),nK="matAlgo12xSfs",sK=["typed","DenseMatrix"],sl=Ht(nK,sK,e=>{var{typed:t,DenseMatrix:n}=e;return function(s,r,i,o){var a=s._values,u=s._index,l=s._ptr,c=s._size,h=s._datatype;if(!a)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var d=c[0],p=c[1],f,m=i;typeof h=="string"&&(f=h,r=t.convert(r,f),m=t.find(i,[f,f]));for(var g=[],x=[],b=[],w=0;w<p;w++){for(var y=w+1,v=l[w],k=l[w+1],C=v;C<k;C++){var I=u[C];x[I]=a[C],b[I]=y}for(var $=0;$<d;$++)w===0&&(g[$]=[]),b[$]===y?g[$][w]=o?m(r,x[$]):m(x[$],r):g[$][w]=o?m(r,0):m(0,r)}return new n({data:g,size:[d,p],datatype:f})}}),rK="matAlgo14xDs",iK=["typed"],Gv=Ht(rK,iK,e=>{var{typed:t}=e;return function(s,r,i,o){var a=s._data,u=s._size,l=s._datatype,c,h=i;typeof l=="string"&&(c=l,r=t.convert(r,c),h=t.find(i,[c,c]));var d=u.length>0?n(h,0,u,u[0],a,r,o):[];return s.createDenseMatrix({data:d,size:_e(u),datatype:c})};function n(s,r,i,o,a,u,l){var c=[];if(r===i.length-1)for(var h=0;h<o;h++)c[h]=l?s(u,a[h]):s(a[h],u);else for(var d=0;d<o;d++)c[d]=n(s,r+1,i,i[r+1],a[d],u,l);return c}}),oK="matAlgo01xDSid",aK=["typed"],DA=Ht(oK,aK,e=>{var{typed:t}=e;return function(n,s,r,i){var o=n._data,a=n._size,u=n._datatype,l=s._values,c=s._index,h=s._ptr,d=s._size,p=s._datatype;if(a.length!==d.length)throw new Ge(a.length,d.length);if(a[0]!==d[0]||a[1]!==d[1])throw new RangeError("Dimension mismatch. Matrix A ("+a+") must match Matrix B ("+d+")");if(!l)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var f=a[0],m=a[1],g=typeof u=="string"&&u===p?u:void 0,x=g?t.find(r,[g,g]):r,b,w,y=[];for(b=0;b<f;b++)y[b]=[];var v=[],k=[];for(w=0;w<m;w++){for(var C=w+1,I=h[w],$=h[w+1],S=I;S<$;S++)b=c[S],v[b]=i?x(l[S],o[b][w]):x(o[b][w],l[S]),k[b]=C;for(b=0;b<f;b++)k[b]===C?y[b][w]=v[b]:y[b][w]=o[b][w]}return n.createDenseMatrix({data:y,size:[f,m],datatype:g})}}),uK="matAlgo04xSidSid",lK=["typed","equalScalar"],cK=Ht(uK,lK,e=>{var{typed:t,equalScalar:n}=e;return function(s,r,i){var o=s._values,a=s._index,u=s._ptr,l=s._size,c=s._datatype,h=r._values,d=r._index,p=r._ptr,f=r._size,m=r._datatype;if(l.length!==f.length)throw new Ge(l.length,f.length);if(l[0]!==f[0]||l[1]!==f[1])throw new RangeError("Dimension mismatch. Matrix A ("+l+") must match Matrix B ("+f+")");var g=l[0],x=l[1],b,w=n,y=0,v=i;typeof c=="string"&&c===m&&(b=c,w=t.find(n,[b,b]),y=t.convert(0,b),v=t.find(i,[b,b]));var k=o&&h?[]:void 0,C=[],I=[],$=o&&h?[]:void 0,S=o&&h?[]:void 0,N=[],F=[],D,E,A,T,R;for(E=0;E<x;E++){I[E]=C.length;var _=E+1;for(T=u[E],R=u[E+1],A=T;A<R;A++)D=a[A],C.push(D),N[D]=_,$&&($[D]=o[A]);for(T=p[E],R=p[E+1],A=T;A<R;A++)if(D=d[A],N[D]===_){if($){var M=v($[D],h[A]);w(M,y)?N[D]=null:$[D]=M}}else C.push(D),F[D]=_,S&&(S[D]=h[A]);if($&&S)for(A=I[E];A<C.length;)D=C[A],N[D]===_?(k[A]=$[D],A++):F[D]===_?(k[A]=S[D],A++):C.splice(A,1)}return I[x]=C.length,s.createSparseMatrix({values:k,index:C,ptr:I,size:[g,x],datatype:b})}}),hK="matAlgo10xSids",dK=["typed","DenseMatrix"],TA=Ht(hK,dK,e=>{var{typed:t,DenseMatrix:n}=e;return function(s,r,i,o){var a=s._values,u=s._index,l=s._ptr,c=s._size,h=s._datatype;if(!a)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var d=c[0],p=c[1],f,m=i;typeof h=="string"&&(f=h,r=t.convert(r,f),m=t.find(i,[f,f]));for(var g=[],x=[],b=[],w=0;w<p;w++){for(var y=w+1,v=l[w],k=l[w+1],C=v;C<k;C++){var I=u[C];x[I]=a[C],b[I]=y}for(var $=0;$<d;$++)w===0&&(g[$]=[]),b[$]===y?g[$][w]=o?m(r,x[$]):m(x[$],r):g[$][w]=r}return new n({data:g,size:[d,p],datatype:f})}}),pK="matAlgo13xDD",fK=["typed"],mK=Ht(pK,fK,e=>{var{typed:t}=e;return function(s,r,i){var o=s._data,a=s._size,u=s._datatype,l=r._data,c=r._size,h=r._datatype,d=[];if(a.length!==c.length)throw new Ge(a.length,c.length);for(var p=0;p<a.length;p++){if(a[p]!==c[p])throw new RangeError("Dimension mismatch. Matrix A ("+a+") must match Matrix B ("+c+")");d[p]=a[p]}var f,m=i;typeof u=="string"&&u===h&&(f=u,m=t.find(i,[f,f]));var g=d.length>0?n(m,0,d,d[0],o,l):[];return s.createDenseMatrix({data:g,size:d,datatype:f})};function n(s,r,i,o,a,u){var l=[];if(r===i.length-1)for(var c=0;c<o;c++)l[c]=s(a[c],u[c]);else for(var h=0;h<o;h++)l[h]=n(s,r+1,i,i[r+1],a[h],u[h]);return l}}),gK="matrixAlgorithmSuite",xK=["typed","matrix"],nu=Ht(gK,xK,e=>{var{typed:t,matrix:n}=e,s=mK({typed:t}),r=Gv({typed:t});return function(i){var o=i.elop,a=i.SD||i.DS,u;o?(u={"DenseMatrix, DenseMatrix":(d,p)=>s(d,p,o),"Array, Array":(d,p)=>s(n(d),n(p),o).valueOf(),"Array, DenseMatrix":(d,p)=>s(n(d),p,o),"DenseMatrix, Array":(d,p)=>s(d,n(p),o)},i.SS&&(u["SparseMatrix, SparseMatrix"]=(d,p)=>i.SS(d,p,o,!1)),i.DS&&(u["DenseMatrix, SparseMatrix"]=(d,p)=>i.DS(d,p,o,!1),u["Array, SparseMatrix"]=(d,p)=>i.DS(n(d),p,o,!1)),a&&(u["SparseMatrix, DenseMatrix"]=(d,p)=>a(p,d,o,!0),u["SparseMatrix, Array"]=(d,p)=>a(n(p),d,o,!0))):(u={"DenseMatrix, DenseMatrix":t.referToSelf(d=>(p,f)=>s(p,f,d)),"Array, Array":t.referToSelf(d=>(p,f)=>s(n(p),n(f),d).valueOf()),"Array, DenseMatrix":t.referToSelf(d=>(p,f)=>s(n(p),f,d)),"DenseMatrix, Array":t.referToSelf(d=>(p,f)=>s(p,n(f),d))},i.SS&&(u["SparseMatrix, SparseMatrix"]=t.referToSelf(d=>(p,f)=>i.SS(p,f,d,!1))),i.DS&&(u["DenseMatrix, SparseMatrix"]=t.referToSelf(d=>(p,f)=>i.DS(p,f,d,!1)),u["Array, SparseMatrix"]=t.referToSelf(d=>(p,f)=>i.DS(n(p),f,d,!1))),a&&(u["SparseMatrix, DenseMatrix"]=t.referToSelf(d=>(p,f)=>a(f,p,d,!0)),u["SparseMatrix, Array"]=t.referToSelf(d=>(p,f)=>a(n(f),p,d,!0))));var l=i.scalar||"any",c=i.Ds||i.Ss;c&&(o?(u["DenseMatrix,"+l]=(d,p)=>r(d,p,o,!1),u[l+", DenseMatrix"]=(d,p)=>r(p,d,o,!0),u["Array,"+l]=(d,p)=>r(n(d),p,o,!1).valueOf(),u[l+", Array"]=(d,p)=>r(n(p),d,o,!0).valueOf()):(u["DenseMatrix,"+l]=t.referToSelf(d=>(p,f)=>r(p,f,d,!1)),u[l+", DenseMatrix"]=t.referToSelf(d=>(p,f)=>r(f,p,d,!0)),u["Array,"+l]=t.referToSelf(d=>(p,f)=>r(n(p),f,d,!1).valueOf()),u[l+", Array"]=t.referToSelf(d=>(p,f)=>r(n(f),p,d,!0).valueOf())));var h=i.sS!==void 0?i.sS:i.Ss;return o?(i.Ss&&(u["SparseMatrix,"+l]=(d,p)=>i.Ss(d,p,o,!1)),h&&(u[l+", SparseMatrix"]=(d,p)=>h(p,d,o,!0))):(i.Ss&&(u["SparseMatrix,"+l]=t.referToSelf(d=>(p,f)=>i.Ss(p,f,d,!1))),h&&(u[l+", SparseMatrix"]=t.referToSelf(d=>(p,f)=>h(f,p,d,!0)))),o&&o.signatures&&FT(u,o.signatures),u}}),bK="matAlgo02xDS0",yK=["typed","equalScalar"],wK=Ht(bK,yK,e=>{var{typed:t,equalScalar:n}=e;return function(s,r,i,o){var a=s._data,u=s._size,l=s._datatype,c=r._values,h=r._index,d=r._ptr,p=r._size,f=r._datatype;if(u.length!==p.length)throw new Ge(u.length,p.length);if(u[0]!==p[0]||u[1]!==p[1])throw new RangeError("Dimension mismatch. Matrix A ("+u+") must match Matrix B ("+p+")");if(!c)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var m=u[0],g=u[1],x,b=n,w=0,y=i;typeof l=="string"&&l===f&&(x=l,b=t.find(n,[x,x]),w=t.convert(0,x),y=t.find(i,[x,x]));for(var v=[],k=[],C=[],I=0;I<g;I++){C[I]=k.length;for(var $=d[I],S=d[I+1],N=$;N<S;N++){var F=h[N],D=o?y(c[N],a[F][I]):y(a[F][I],c[N]);b(D,w)||(k.push(F),v.push(D))}}return C[g]=k.length,r.createSparseMatrix({values:v,index:k,ptr:C,size:[m,g],datatype:x})}}),vK="matAlgo03xDSf",kK=["typed"],rl=Ht(vK,kK,e=>{var{typed:t}=e;return function(n,s,r,i){var o=n._data,a=n._size,u=n._datatype,l=s._values,c=s._index,h=s._ptr,d=s._size,p=s._datatype;if(a.length!==d.length)throw new Ge(a.length,d.length);if(a[0]!==d[0]||a[1]!==d[1])throw new RangeError("Dimension mismatch. Matrix A ("+a+") must match Matrix B ("+d+")");if(!l)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var f=a[0],m=a[1],g,x=0,b=r;typeof u=="string"&&u===p&&(g=u,x=t.convert(0,g),b=t.find(r,[g,g]));for(var w=[],y=0;y<f;y++)w[y]=[];for(var v=[],k=[],C=0;C<m;C++){for(var I=C+1,$=h[C],S=h[C+1],N=$;N<S;N++){var F=c[N];v[F]=i?b(l[N],o[F][C]):b(o[F][C],l[N]),k[F]=I}for(var D=0;D<f;D++)k[D]===I?w[D][C]=v[D]:w[D][C]=i?b(x,o[D][C]):b(o[D][C],x)}return n.createDenseMatrix({data:w,size:[f,m],datatype:g})}}),IK="matAlgo05xSfSf",CK=["typed","equalScalar"],$K=Ht(IK,CK,e=>{var{typed:t,equalScalar:n}=e;return function(s,r,i){var o=s._values,a=s._index,u=s._ptr,l=s._size,c=s._datatype,h=r._values,d=r._index,p=r._ptr,f=r._size,m=r._datatype;if(l.length!==f.length)throw new Ge(l.length,f.length);if(l[0]!==f[0]||l[1]!==f[1])throw new RangeError("Dimension mismatch. Matrix A ("+l+") must match Matrix B ("+f+")");var g=l[0],x=l[1],b,w=n,y=0,v=i;typeof c=="string"&&c===m&&(b=c,w=t.find(n,[b,b]),y=t.convert(0,b),v=t.find(i,[b,b]));var k=o&&h?[]:void 0,C=[],I=[],$=k?[]:void 0,S=k?[]:void 0,N=[],F=[],D,E,A,T;for(E=0;E<x;E++){I[E]=C.length;var R=E+1;for(A=u[E],T=u[E+1];A<T;A++)D=a[A],C.push(D),N[D]=R,$&&($[D]=o[A]);for(A=p[E],T=p[E+1];A<T;A++)D=d[A],N[D]!==R&&C.push(D),F[D]=R,S&&(S[D]=h[A]);if(k)for(A=I[E];A<C.length;){D=C[A];var _=N[D],M=F[D];if(_===R||M===R){var z=_===R?$[D]:y,B=M===R?S[D]:y,V=v(z,B);w(V,y)?C.splice(A,1):(k.push(V),A++)}}}return I[x]=C.length,s.createSparseMatrix({values:k,index:C,ptr:I,size:[g,x],datatype:b})}}),SK="multiplyScalar",NK=["typed"],EK=Ht(SK,NK,e=>{var{typed:t}=e;return t("multiplyScalar",{"number, number":vA,"Complex, Complex":function(n,s){return n.mul(s)},"BigNumber, BigNumber":function(n,s){return n.times(s)},"Fraction, Fraction":function(n,s){return n.mul(s)},"number | Fraction | BigNumber | Complex, Unit":(n,s)=>s.multiply(n),"Unit, number | Fraction | BigNumber | Complex | Unit":(n,s)=>n.multiply(s)})}),AA="multiply",DK=["typed","matrix","addScalar","multiplyScalar","equalScalar","dot"],TK=Ht(AA,DK,e=>{var{typed:t,matrix:n,addScalar:s,multiplyScalar:r,equalScalar:i,dot:o}=e,a=Uv({typed:t,equalScalar:i}),u=Gv({typed:t});function l(v,k){switch(v.length){case 1:switch(k.length){case 1:if(v[0]!==k[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(v[0]!==k[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+v[0]+") must match Matrix rows ("+k[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+k.length+" dimensions)")}break;case 2:switch(k.length){case 1:if(v[1]!==k[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+v[1]+") must match Vector length ("+k[0]+")");break;case 2:if(v[1]!==k[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+v[1]+") must match Matrix B rows ("+k[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+k.length+" dimensions)")}break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+v.length+" dimensions)")}}function c(v,k,C){if(C===0)throw new Error("Cannot multiply two empty vectors");return o(v,k)}function h(v,k){if(k.storage()!=="dense")throw new Error("Support for SparseMatrix not implemented");return d(v,k)}function d(v,k){var C=v._data,I=v._size,$=v._datatype,S=k._data,N=k._size,F=k._datatype,D=I[0],E=N[1],A,T=s,R=r;$&&F&&$===F&&typeof $=="string"&&(A=$,T=t.find(s,[A,A]),R=t.find(r,[A,A]));for(var _=[],M=0;M<E;M++){for(var z=R(C[0],S[0][M]),B=1;B<D;B++)z=T(z,R(C[B],S[B][M]));_[M]=z}return v.createDenseMatrix({data:_,size:[E],datatype:A})}var p=t("_multiplyMatrixVector",{"DenseMatrix, any":m,"SparseMatrix, any":b}),f=t("_multiplyMatrixMatrix",{"DenseMatrix, DenseMatrix":g,"DenseMatrix, SparseMatrix":x,"SparseMatrix, DenseMatrix":w,"SparseMatrix, SparseMatrix":y});function m(v,k){var C=v._data,I=v._size,$=v._datatype,S=k._data,N=k._datatype,F=I[0],D=I[1],E,A=s,T=r;$&&N&&$===N&&typeof $=="string"&&(E=$,A=t.find(s,[E,E]),T=t.find(r,[E,E]));for(var R=[],_=0;_<F;_++){for(var M=C[_],z=T(M[0],S[0]),B=1;B<D;B++)z=A(z,T(M[B],S[B]));R[_]=z}return v.createDenseMatrix({data:R,size:[F],datatype:E})}function g(v,k){var C=v._data,I=v._size,$=v._datatype,S=k._data,N=k._size,F=k._datatype,D=I[0],E=I[1],A=N[1],T,R=s,_=r;$&&F&&$===F&&typeof $=="string"&&(T=$,R=t.find(s,[T,T]),_=t.find(r,[T,T]));for(var M=[],z=0;z<D;z++){var B=C[z];M[z]=[];for(var V=0;V<A;V++){for(var G=_(B[0],S[0][V]),j=1;j<E;j++)G=R(G,_(B[j],S[j][V]));M[z][V]=G}}return v.createDenseMatrix({data:M,size:[D,A],datatype:T})}function x(v,k){var C=v._data,I=v._size,$=v._datatype,S=k._values,N=k._index,F=k._ptr,D=k._size,E=k._datatype;if(!S)throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");var A=I[0],T=D[1],R,_=s,M=r,z=i,B=0;$&&E&&$===E&&typeof $=="string"&&(R=$,_=t.find(s,[R,R]),M=t.find(r,[R,R]),z=t.find(i,[R,R]),B=t.convert(0,R));for(var V=[],G=[],j=[],H=k.createSparseMatrix({values:V,index:G,ptr:j,size:[A,T],datatype:R}),at=0;at<T;at++){j[at]=G.length;var it=F[at],ft=F[at+1];if(ft>it)for(var X=0,ut=0;ut<A;ut++){for(var wt=ut+1,ot=void 0,Et=it;Et<ft;Et++){var Tt=N[Et];X!==wt?(ot=M(C[ut][Tt],S[Et]),X=wt):ot=_(ot,M(C[ut][Tt],S[Et]))}X===wt&&!z(ot,B)&&(G.push(ut),V.push(ot))}}return j[T]=G.length,H}function b(v,k){var C=v._values,I=v._index,$=v._ptr,S=v._datatype;if(!C)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var N=k._data,F=k._datatype,D=v._size[0],E=k._size[0],A=[],T=[],R=[],_,M=s,z=r,B=i,V=0;S&&F&&S===F&&typeof S=="string"&&(_=S,M=t.find(s,[_,_]),z=t.find(r,[_,_]),B=t.find(i,[_,_]),V=t.convert(0,_));var G=[],j=[];R[0]=0;for(var H=0;H<E;H++){var at=N[H];if(!B(at,V))for(var it=$[H],ft=$[H+1],X=it;X<ft;X++){var ut=I[X];j[ut]?G[ut]=M(G[ut],z(at,C[X])):(j[ut]=!0,T.push(ut),G[ut]=z(at,C[X]))}}for(var wt=T.length,ot=0;ot<wt;ot++){var Et=T[ot];A[ot]=G[Et]}return R[1]=T.length,v.createSparseMatrix({values:A,index:T,ptr:R,size:[D,1],datatype:_})}function w(v,k){var C=v._values,I=v._index,$=v._ptr,S=v._datatype;if(!C)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var N=k._data,F=k._datatype,D=v._size[0],E=k._size[0],A=k._size[1],T,R=s,_=r,M=i,z=0;S&&F&&S===F&&typeof S=="string"&&(T=S,R=t.find(s,[T,T]),_=t.find(r,[T,T]),M=t.find(i,[T,T]),z=t.convert(0,T));for(var B=[],V=[],G=[],j=v.createSparseMatrix({values:B,index:V,ptr:G,size:[D,A],datatype:T}),H=[],at=[],it=0;it<A;it++){G[it]=V.length;for(var ft=it+1,X=0;X<E;X++){var ut=N[X][it];if(!M(ut,z))for(var wt=$[X],ot=$[X+1],Et=wt;Et<ot;Et++){var Tt=I[Et];at[Tt]!==ft?(at[Tt]=ft,V.push(Tt),H[Tt]=_(ut,C[Et])):H[Tt]=R(H[Tt],_(ut,C[Et]))}}for(var Rt=G[it],_t=V.length,kt=Rt;kt<_t;kt++){var Lt=V[kt];B[kt]=H[Lt]}}return G[A]=V.length,j}function y(v,k){var C=v._values,I=v._index,$=v._ptr,S=v._datatype,N=k._values,F=k._index,D=k._ptr,E=k._datatype,A=v._size[0],T=k._size[1],R=C&&N,_,M=s,z=r;S&&E&&S===E&&typeof S=="string"&&(_=S,M=t.find(s,[_,_]),z=t.find(r,[_,_]));for(var B=R?[]:void 0,V=[],G=[],j=v.createSparseMatrix({values:B,index:V,ptr:G,size:[A,T],datatype:_}),H=R?[]:void 0,at=[],it,ft,X,ut,wt,ot,Et,Tt,Rt=0;Rt<T;Rt++){G[Rt]=V.length;var _t=Rt+1;for(wt=D[Rt],ot=D[Rt+1],ut=wt;ut<ot;ut++)if(Tt=F[ut],R)for(ft=$[Tt],X=$[Tt+1],it=ft;it<X;it++)Et=I[it],at[Et]!==_t?(at[Et]=_t,V.push(Et),H[Et]=z(N[ut],C[it])):H[Et]=M(H[Et],z(N[ut],C[it]));else for(ft=$[Tt],X=$[Tt+1],it=ft;it<X;it++)Et=I[it],at[Et]!==_t&&(at[Et]=_t,V.push(Et));if(R)for(var kt=G[Rt],Lt=V.length,Ue=kt;Ue<Lt;Ue++){var he=V[Ue];B[Ue]=H[he]}}return G[T]=V.length,j}return t(AA,r,{"Array, Array":t.referTo("Matrix, Matrix",v=>(k,C)=>{l(Is(k),Is(C));var I=v(n(k),n(C));return Je(I)?I.valueOf():I}),"Matrix, Matrix":function(v,k){var C=v.size(),I=k.size();return l(C,I),C.length===1?I.length===1?c(v,k,C[0]):h(v,k):I.length===1?p(v,k):f(v,k)},"Matrix, Array":t.referTo("Matrix,Matrix",v=>(k,C)=>v(k,n(C))),"Array, Matrix":t.referToSelf(v=>(k,C)=>v(n(k,C.storage()),C)),"SparseMatrix, any":function(v,k){return a(v,k,r,!1)},"DenseMatrix, any":function(v,k){return u(v,k,r,!1)},"any, SparseMatrix":function(v,k){return a(k,v,r,!0)},"any, DenseMatrix":function(v,k){return u(k,v,r,!0)},"Array, any":function(v,k){return u(n(v),k,r,!1).valueOf()},"any, Array":function(v,k){return u(n(k),v,r,!0).valueOf()},"any, any":r,"any, any, ...any":t.referToSelf(v=>(k,C,I)=>{for(var $=v(k,C),S=0;S<I.length;S++)$=v($,I[S]);return $})})}),FA="subtract",AK=["typed","matrix","equalScalar","addScalar","unaryMinus","DenseMatrix"],FK=Ht(FA,AK,e=>{var{typed:t,matrix:n,equalScalar:s,addScalar:r,unaryMinus:i,DenseMatrix:o}=e,a=DA({typed:t}),u=rl({typed:t}),l=$K({typed:t,equalScalar:s}),c=TA({typed:t,DenseMatrix:o}),h=sl({typed:t,DenseMatrix:o}),d=nu({typed:t,matrix:n});return t(FA,{"number, number":(p,f)=>p-f,"Complex, Complex":(p,f)=>p.sub(f),"BigNumber, BigNumber":(p,f)=>p.minus(f),"Fraction, Fraction":(p,f)=>p.sub(f),"Unit, Unit":t.referToSelf(p=>(f,m)=>{if(f.value===null)throw new Error("Parameter x contains a unit with undefined value");if(m.value===null)throw new Error("Parameter y contains a unit with undefined value");if(!f.equalBase(m))throw new Error("Units do not match");var g=f.clone();return g.value=t.find(p,[g.valueType(),m.valueType()])(g.value,m.value),g.fixPrefix=!1,g})},d({SS:l,DS:a,SD:u,Ss:h,sS:c}))}),RK="matAlgo07xSSf",_K=["typed","DenseMatrix"],Zc=Ht(RK,_K,e=>{var{typed:t,DenseMatrix:n}=e;return function(r,i,o){var a=r._size,u=r._datatype,l=i._size,c=i._datatype;if(a.length!==l.length)throw new Ge(a.length,l.length);if(a[0]!==l[0]||a[1]!==l[1])throw new RangeError("Dimension mismatch. Matrix A ("+a+") must match Matrix B ("+l+")");var h=a[0],d=a[1],p,f=0,m=o;typeof u=="string"&&u===c&&(p=u,f=t.convert(0,p),m=t.find(o,[p,p]));var g,x,b=[];for(g=0;g<h;g++)b[g]=[];var w=[],y=[],v=[],k=[];for(x=0;x<d;x++){var C=x+1;for(s(r,x,v,w,C),s(i,x,k,y,C),g=0;g<h;g++){var I=v[g]===C?w[g]:f,$=k[g]===C?y[g]:f;b[g][x]=m(I,$)}}return new n({data:b,size:[h,d],datatype:p})};function s(r,i,o,a,u){for(var l=r._values,c=r._index,h=r._ptr,d=h[i],p=h[i+1];d<p;d++){var f=c[d];o[f]=u,a[f]=l[d]}}}),RA="conj",MK=["typed"],OK=Ht(RA,MK,e=>{var{typed:t}=e;return t(RA,{"number | BigNumber | Fraction":n=>n,Complex:n=>n.conjugate(),"Array | Matrix":t.referToSelf(n=>s=>Ia(s,n))})}),_A="column",LK=["typed","Index","matrix","range"],zK=Ht(_A,LK,e=>{var{typed:t,Index:n,matrix:s,range:r}=e;return t(_A,{"Matrix, number":i,"Array, number":function(o,a){return i(s(_e(o)),a).valueOf()}});function i(o,a){if(o.size().length!==2)throw new Error("Only two dimensional matrix is supported");bn(a,o.size()[1]);var u=r(0,o.size()[0]),l=new n(u,a);return o.subset(l)}}),MA="diag",BK=["typed","matrix","DenseMatrix","SparseMatrix"],PK=Ht(MA,BK,e=>{var{typed:t,matrix:n,DenseMatrix:s,SparseMatrix:r}=e;return t(MA,{Array:function(u){return i(u,0,Is(u),null)},"Array, number":function(u,l){return i(u,l,Is(u),null)},"Array, BigNumber":function(u,l){return i(u,l.toNumber(),Is(u),null)},"Array, string":function(u,l){return i(u,0,Is(u),l)},"Array, number, string":function(u,l,c){return i(u,l,Is(u),c)},"Array, BigNumber, string":function(u,l,c){return i(u,l.toNumber(),Is(u),c)},Matrix:function(u){return i(u,0,u.size(),u.storage())},"Matrix, number":function(u,l){return i(u,l,u.size(),u.storage())},"Matrix, BigNumber":function(u,l){return i(u,l.toNumber(),u.size(),u.storage())},"Matrix, string":function(u,l){return i(u,0,u.size(),l)},"Matrix, number, string":function(u,l,c){return i(u,l,u.size(),c)},"Matrix, BigNumber, string":function(u,l,c){return i(u,l.toNumber(),u.size(),c)}});function i(u,l,c,h){if(!In(l))throw new TypeError("Second parameter in function diag must be an integer");var d=l>0?l:0,p=l<0?-l:0;switch(c.length){case 1:return o(u,l,h,c[0],p,d);case 2:return a(u,l,h,c,p,d)}throw new RangeError("Matrix for function diag must be 2 dimensional")}function o(u,l,c,h,d,p){var f=[h+d,h+p];if(c&&c!=="sparse"&&c!=="dense")throw new TypeError("Unknown matrix type ".concat(c,'"'));var m=c==="sparse"?r.diagonal(f,u,l):s.diagonal(f,u,l);return c!==null?m:m.valueOf()}function a(u,l,c,h,d,p){if(Je(u)){var f=u.diagonal(l);return c!==null?c!==f.storage()?n(f,c):f:f.valueOf()}for(var m=Math.min(h[0]-d,h[1]-p),g=[],x=0;x<m;x++)g[x]=u[x+d][x+p];return c!==null?n(g):g}}),OA="flatten",WK=["typed","matrix"],VK=Ht(OA,WK,e=>{var{typed:t,matrix:n}=e;return t(OA,{Array:function(s){return Av(s)},Matrix:function(s){var r=Av(s.toArray());return n(r)}})}),LA="identity",UK=["typed","config","matrix","BigNumber","DenseMatrix","SparseMatrix"],GK=Ht(LA,UK,e=>{var{typed:t,config:n,matrix:s,BigNumber:r,DenseMatrix:i,SparseMatrix:o}=e;return t(LA,{"":function(){return n.matrix==="Matrix"?s([]):[]},string:function(l){return s(l)},"number | BigNumber":function(l){return u(l,l,n.matrix==="Matrix"?"dense":void 0)},"number | BigNumber, string":function(l,c){return u(l,l,c)},"number | BigNumber, number | BigNumber":function(l,c){return u(l,c,n.matrix==="Matrix"?"dense":void 0)},"number | BigNumber, number | BigNumber, string":function(l,c,h){return u(l,c,h)},Array:function(l){return a(l)},"Array, string":function(l,c){return a(l,c)},Matrix:function(l){return a(l.valueOf(),l.storage())},"Matrix, string":function(l,c){return a(l.valueOf(),c)}});function a(l,c){switch(l.length){case 0:return c?s(c):[];case 1:return u(l[0],l[0],c);case 2:return u(l[0],l[1],c);default:throw new Error("Vector containing two values expected")}}function u(l,c,h){var d=as(l)||as(c)?r:null;if(as(l)&&(l=l.toNumber()),as(c)&&(c=c.toNumber()),!In(l)||l<1)throw new Error("Parameters in function identity must be positive integers");if(!In(c)||c<1)throw new Error("Parameters in function identity must be positive integers");var p=d?new r(1):1,f=d?new d(0):0,m=[l,c];if(h){if(h==="sparse")return o.diagonal(m,p,0,f);if(h==="dense")return i.diagonal(m,p,0,f);throw new TypeError('Unknown matrix type "'.concat(h,'"'))}for(var g=Jd([],m,f),x=l<c?l:c,b=0;b<x;b++)g[b][b]=p;return g}}),HK="ones",qK=["typed","config","matrix","BigNumber"],jK=Ht(HK,qK,e=>{var{typed:t,config:n,matrix:s,BigNumber:r}=e;return t("ones",{"":function(){return n.matrix==="Array"?i([]):i([],"default")},"...number | BigNumber | string":function(u){var l=u[u.length-1];if(typeof l=="string"){var c=u.pop();return i(u,c)}else return n.matrix==="Array"?i(u):i(u,"default")},Array:i,Matrix:function(u){var l=u.storage();return i(u.valueOf(),l)},"Array | Matrix, string":function(u,l){return i(u.valueOf(),l)}});function i(u,l){var c=o(u),h=c?new r(1):1;if(a(u),l){var d=s(l);return u.length>0?d.resize(u,h):d}else{var p=[];return u.length>0?Jd(p,u,h):p}}function o(u){var l=!1;return u.forEach(function(c,h,d){as(c)&&(l=!0,d[h]=c.toNumber())}),l}function a(u){u.forEach(function(l){if(typeof l!="number"||!In(l)||l<0)throw new Error("Parameters in function ones must be positive integers")})}});function zA(){throw new Error('No "bignumber" implementation available')}function KK(){throw new Error('No "fraction" implementation available')}function BA(){throw new Error('No "matrix" implementation available')}var PA="range",XK=["typed","config","?matrix","?bignumber","smaller","smallerEq","larger","largerEq"],YK=Ht(PA,XK,e=>{var{typed:t,config:n,matrix:s,bignumber:r,smaller:i,smallerEq:o,larger:a,largerEq:u}=e;return t(PA,{string:c,"string, boolean":c,"number, number":function(g,x){return l(h(g,x,1))},"number, number, number":function(g,x,b){return l(h(g,x,b))},"number, number, boolean":function(g,x,b){return l(b?d(g,x,1):h(g,x,1))},"number, number, number, boolean":function(g,x,b,w){return l(w?d(g,x,b):h(g,x,b))},"BigNumber, BigNumber":function(g,x){var b=g.constructor;return l(p(g,x,new b(1)))},"BigNumber, BigNumber, BigNumber":function(g,x,b){return l(p(g,x,b))},"BigNumber, BigNumber, boolean":function(g,x,b){var w=g.constructor;return l(b?f(g,x,new w(1)):p(g,x,new w(1)))},"BigNumber, BigNumber, BigNumber, boolean":function(g,x,b,w){return l(w?f(g,x,b):p(g,x,b))}});function l(g){return n.matrix==="Matrix"?s?s(g):BA():g}function c(g,x){var b=m(g);if(!b)throw new SyntaxError('String "'+g+'" is no valid range');var w;return n.number==="BigNumber"?(r===void 0&&zA(),w=x?f:p,l(w(r(b.start),r(b.end),r(b.step)))):(w=x?d:h,l(w(b.start,b.end,b.step)))}function h(g,x,b){var w=[],y=g;if(b>0)for(;i(y,x);)w.push(y),y+=b;else if(b<0)for(;a(y,x);)w.push(y),y+=b;return w}function d(g,x,b){var w=[],y=g;if(b>0)for(;o(y,x);)w.push(y),y+=b;else if(b<0)for(;u(y,x);)w.push(y),y+=b;return w}function p(g,x,b){var w=r(0),y=[],v=g;if(b.gt(w))for(;i(v,x);)y.push(v),v=v.plus(b);else if(b.lt(w))for(;a(v,x);)y.push(v),v=v.plus(b);return y}function f(g,x,b){var w=r(0),y=[],v=g;if(b.gt(w))for(;o(v,x);)y.push(v),v=v.plus(b);else if(b.lt(w))for(;u(v,x);)y.push(v),v=v.plus(b);return y}function m(g){var x=g.split(":"),b=x.map(function(y){return Number(y)}),w=b.some(function(y){return isNaN(y)});if(w)return null;switch(b.length){case 2:return{start:b[0],end:b[1],step:1};case 3:return{start:b[0],end:b[2],step:b[1]};default:return null}}}),WA="reshape",ZK=["typed","isInteger","matrix"],JK=Ht(WA,ZK,e=>{var{typed:t,isInteger:n}=e;return t(WA,{"Matrix, Array":function(s,r){return s.reshape(r,!0)},"Array, Array":function(s,r){return r.forEach(function(i){if(!n(i))throw new TypeError("Invalid size for dimension: "+i)}),UT(s,r)}})}),VA="row",QK=["typed","Index","matrix","range"],tX=Ht(VA,QK,e=>{var{typed:t,Index:n,matrix:s,range:r}=e;return t(VA,{"Matrix, number":i,"Array, number":function(o,a){return i(s(_e(o)),a).valueOf()}});function i(o,a){if(o.size().length!==2)throw new Error("Only two dimensional matrix is supported");bn(a,o.size()[0]);var u=r(0,o.size()[1]),l=new n(a,u);return o.subset(l)}}),UA="size",eX=["typed","config","?matrix"],nX=Ht(UA,eX,e=>{var{typed:t,config:n,matrix:s}=e;return t(UA,{Matrix:function(r){return r.create(r.size())},Array:Is,string:function(r){return n.matrix==="Array"?[r.length]:s([r.length])},"number | Complex | BigNumber | Unit | boolean | null":function(r){return n.matrix==="Array"?[]:s?s([]):BA()}})}),GA="squeeze",sX=["typed","matrix"],rX=Ht(GA,sX,e=>{var{typed:t,matrix:n}=e;return t(GA,{Array:function(s){return HT(_e(s))},Matrix:function(s){var r=HT(s.toArray());return Array.isArray(r)?n(r):r},any:function(s){return _e(s)}})}),HA="transpose",iX=["typed","matrix"],oX=Ht(HA,iX,e=>{var{typed:t,matrix:n}=e;return t(HA,{Array:o=>s(n(o)).valueOf(),Matrix:s,any:_e});function s(o){var a=o.size(),u;switch(a.length){case 1:u=o.clone();break;case 2:{var l=a[0],c=a[1];if(c===0)throw new RangeError("Cannot transpose a 2D matrix with no columns (size: "+Dn(a)+")");switch(o.storage()){case"dense":u=r(o,l,c);break;case"sparse":u=i(o,l,c);break}}break;default:throw new RangeError("Matrix must be a vector or two dimensional (size: "+Dn(a)+")")}return u}function r(o,a,u){for(var l=o._data,c=[],h,d=0;d<u;d++){h=c[d]=[];for(var p=0;p<a;p++)h[p]=_e(l[p][d])}return o.createDenseMatrix({data:c,size:[u,a],datatype:o._datatype})}function i(o,a,u){for(var l=o._values,c=o._index,h=o._ptr,d=l?[]:void 0,p=[],f=[],m=[],g=0;g<a;g++)m[g]=0;var x,b,w;for(x=0,b=c.length;x<b;x++)m[c[x]]++;for(var y=0,v=0;v<a;v++)f.push(y),y+=m[v],m[v]=f[v];for(f.push(y),w=0;w<u;w++)for(var k=h[w],C=h[w+1],I=k;I<C;I++){var $=m[c[I]]++;p[$]=w,l&&(d[$]=_e(l[I]))}return o.createSparseMatrix({values:d,index:p,ptr:f,size:[u,a],datatype:o._datatype})}}),qA="ctranspose",aX=["typed","transpose","conj"],uX=Ht(qA,aX,e=>{var{typed:t,transpose:n,conj:s}=e;return t(qA,{any:function(r){return s(n(r))}})}),jA="zeros",lX=["typed","config","matrix","BigNumber"],cX=Ht(jA,lX,e=>{var{typed:t,config:n,matrix:s,BigNumber:r}=e;return t(jA,{"":function(){return n.matrix==="Array"?i([]):i([],"default")},"...number | BigNumber | string":function(u){var l=u[u.length-1];if(typeof l=="string"){var c=u.pop();return i(u,c)}else return n.matrix==="Array"?i(u):i(u,"default")},Array:i,Matrix:function(u){var l=u.storage();return i(u.valueOf(),l)},"Array | Matrix, string":function(u,l){return i(u.valueOf(),l)}});function i(u,l){var c=o(u),h=c?new r(0):0;if(a(u),l){var d=s(l);return u.length>0?d.resize(u,h):d}else{var p=[];return u.length>0?Jd(p,u,h):p}}function o(u){var l=!1;return u.forEach(function(c,h,d){as(c)&&(l=!0,d[h]=c.toNumber())}),l}function a(u){u.forEach(function(l){if(typeof l!="number"||!In(l)||l<0)throw new Error("Parameters in function zeros must be positive integers")})}});function B0(e,t,n){var s;return String(e).indexOf("Unexpected type")!==-1?(s=arguments.length>2?" (type: "+wa(n)+", value: "+JSON.stringify(n)+")":" (type: "+e.data.actual+")",new TypeError("Cannot calculate "+t+", unexpected type of argument"+s)):String(e).indexOf("complex numbers")!==-1?(s=arguments.length>2?" (type: "+wa(n)+", value: "+JSON.stringify(n)+")":"",new TypeError("Cannot calculate "+t+", no ordering relation is defined for complex numbers"+s)):e}var hX="numeric",dX=["number","?bignumber","?fraction"],pX=Ht(hX,dX,e=>{var{number:t,bignumber:n,fraction:s}=e,r={string:!0,number:!0,BigNumber:!0,Fraction:!0},i={number:o=>t(o),BigNumber:n?o=>n(o):zA,Fraction:s?o=>s(o):KK};return function(o){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"number",u=arguments.length>2?arguments[2]:void 0;if(u!==void 0)throw new SyntaxError("numeric() takes one or two arguments");var l=wa(o);if(!(l in r))throw new TypeError("Cannot convert "+o+' of type "'+l+'"; valid input types are '+Object.keys(r).join(", "));if(!(a in i))throw new TypeError("Cannot convert "+o+' to type "'+a+'"; valid output types are '+Object.keys(i).join(", "));return a===l?o:i[a](o)}}),KA="divideScalar",fX=["typed","numeric"],mX=Ht(KA,fX,e=>{var{typed:t,numeric:n}=e;return t(KA,{"number, number":function(s,r){return s/r},"Complex, Complex":function(s,r){return s.div(r)},"BigNumber, BigNumber":function(s,r){return s.div(r)},"Fraction, Fraction":function(s,r){return s.div(r)},"Unit, number | Complex | Fraction | BigNumber | Unit":(s,r)=>s.divide(r),"number | Fraction | Complex | BigNumber, Unit":(s,r)=>r.divideInto(s)})}),XA="dotDivide",gX=["typed","matrix","equalScalar","divideScalar","DenseMatrix"],xX=Ht(XA,gX,e=>{var{typed:t,matrix:n,equalScalar:s,divideScalar:r,DenseMatrix:i}=e,o=wK({typed:t,equalScalar:s}),a=rl({typed:t}),u=Zc({typed:t,DenseMatrix:i}),l=Uv({typed:t,equalScalar:s}),c=sl({typed:t,DenseMatrix:i}),h=nu({typed:t,matrix:n});return t(XA,h({elop:r,SS:u,DS:a,SD:o,Ss:l,sS:c}))}),P0="equal",bX=["typed","matrix","equalScalar","DenseMatrix"],yX=Ht(P0,bX,e=>{var{typed:t,matrix:n,equalScalar:s,DenseMatrix:r}=e,i=rl({typed:t}),o=Zc({typed:t,DenseMatrix:r}),a=sl({typed:t,DenseMatrix:r}),u=nu({typed:t,matrix:n});return t(P0,wX({typed:t,equalScalar:s}),u({elop:s,SS:o,DS:i,Ss:a}))}),wX=Ht(P0,["typed","equalScalar"],e=>{var{typed:t,equalScalar:n}=e;return t(P0,{"any, any":function(s,r){return s===null?r===null:r===null?s===null:s===void 0?r===void 0:r===void 0?s===void 0:n(s,r)}})}),W0="smaller",vX=["typed","config","matrix","DenseMatrix"],kX=Ht(W0,vX,e=>{var{typed:t,config:n,matrix:s,DenseMatrix:r}=e,i=rl({typed:t}),o=Zc({typed:t,DenseMatrix:r}),a=sl({typed:t,DenseMatrix:r}),u=nu({typed:t,matrix:s}),l=ep({typed:t});return t(W0,IX({typed:t,config:n}),{"boolean, boolean":(c,h)=>c<h,"BigNumber, BigNumber":function(c,h){return c.lt(h)&&!tp(c,h,n.epsilon)},"Fraction, Fraction":(c,h)=>c.compare(h)===-1,"Complex, Complex":function(c,h){throw new TypeError("No ordering relation is defined for complex numbers")}},l,u({SS:o,DS:i,Ss:a}))}),IX=Ht(W0,["typed","config"],e=>{var{typed:t,config:n}=e;return t(W0,{"number, number":function(s,r){return s<r&&!Za(s,r,n.epsilon)}})}),V0="smallerEq",CX=["typed","config","matrix","DenseMatrix"],$X=Ht(V0,CX,e=>{var{typed:t,config:n,matrix:s,DenseMatrix:r}=e,i=rl({typed:t}),o=Zc({typed:t,DenseMatrix:r}),a=sl({typed:t,DenseMatrix:r}),u=nu({typed:t,matrix:s}),l=ep({typed:t});return t(V0,SX({typed:t,config:n}),{"boolean, boolean":(c,h)=>c<=h,"BigNumber, BigNumber":function(c,h){return c.lte(h)||tp(c,h,n.epsilon)},"Fraction, Fraction":(c,h)=>c.compare(h)!==1,"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")}},l,u({SS:o,DS:i,Ss:a}))}),SX=Ht(V0,["typed","config"],e=>{var{typed:t,config:n}=e;return t(V0,{"number, number":function(s,r){return s<=r||Za(s,r,n.epsilon)}})}),U0="larger",NX=["typed","config","matrix","DenseMatrix"],EX=Ht(U0,NX,e=>{var{typed:t,config:n,matrix:s,DenseMatrix:r}=e,i=rl({typed:t}),o=Zc({typed:t,DenseMatrix:r}),a=sl({typed:t,DenseMatrix:r}),u=nu({typed:t,matrix:s}),l=ep({typed:t});return t(U0,DX({typed:t,config:n}),{"boolean, boolean":(c,h)=>c>h,"BigNumber, BigNumber":function(c,h){return c.gt(h)&&!tp(c,h,n.epsilon)},"Fraction, Fraction":(c,h)=>c.compare(h)===1,"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")}},l,u({SS:o,DS:i,Ss:a}))}),DX=Ht(U0,["typed","config"],e=>{var{typed:t,config:n}=e;return t(U0,{"number, number":function(s,r){return s>r&&!Za(s,r,n.epsilon)}})}),G0="largerEq",TX=["typed","config","matrix","DenseMatrix"],AX=Ht(G0,TX,e=>{var{typed:t,config:n,matrix:s,DenseMatrix:r}=e,i=rl({typed:t}),o=Zc({typed:t,DenseMatrix:r}),a=sl({typed:t,DenseMatrix:r}),u=nu({typed:t,matrix:s}),l=ep({typed:t});return t(G0,FX({typed:t,config:n}),{"boolean, boolean":(c,h)=>c>=h,"BigNumber, BigNumber":function(c,h){return c.gte(h)||tp(c,h,n.epsilon)},"Fraction, Fraction":(c,h)=>c.compare(h)!==-1,"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")}},l,u({SS:o,DS:i,Ss:a}))}),FX=Ht(G0,["typed","config"],e=>{var{typed:t,config:n}=e;return t(G0,{"number, number":function(s,r){return s>=r||Za(s,r,n.epsilon)}})}),YA="deepEqual",RX=["typed","equal"],_X=Ht(YA,RX,e=>{var{typed:t,equal:n}=e;return t(YA,{"any, any":function(r,i){return s(r.valueOf(),i.valueOf())}});function s(r,i){if(Array.isArray(r))if(Array.isArray(i)){var o=r.length;if(o!==i.length)return!1;for(var a=0;a<o;a++)if(!s(r[a],i[a]))return!1;return!0}else return!1;else return Array.isArray(i)?!1:n(r,i)}}),MX="ImmutableDenseMatrix",OX=["smaller","DenseMatrix"],LX=Ht(MX,OX,e=>{var{smaller:t,DenseMatrix:n}=e;function s(r,i){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if(i&&!Xi(i))throw new Error("Invalid datatype: "+i);if(Je(r)||ln(r)){var o=new n(r,i);this._data=o._data,this._size=o._size,this._datatype=o._datatype,this._min=null,this._max=null}else if(r&&ln(r.data)&&ln(r.size))this._data=r.data,this._size=r.size,this._datatype=r.datatype,this._min=typeof r.min<"u"?r.min:null,this._max=typeof r.max<"u"?r.max:null;else{if(r)throw new TypeError("Unsupported type of data ("+wa(r)+")");this._data=[],this._size=[0],this._datatype=i,this._min=null,this._max=null}}return s.prototype=new n,s.prototype.type="ImmutableDenseMatrix",s.prototype.isImmutableDenseMatrix=!0,s.prototype.subset=function(r){switch(arguments.length){case 1:{var i=n.prototype.subset.call(this,r);return Je(i)?new s({data:i._data,size:i._size,datatype:i._datatype}):i}case 2:case 3:throw new Error("Cannot invoke set subset on an Immutable Matrix instance");default:throw new SyntaxError("Wrong number of arguments")}},s.prototype.set=function(){throw new Error("Cannot invoke set on an Immutable Matrix instance")},s.prototype.resize=function(){throw new Error("Cannot invoke resize on an Immutable Matrix instance")},s.prototype.reshape=function(){throw new Error("Cannot invoke reshape on an Immutable Matrix instance")},s.prototype.clone=function(){return new s({data:_e(this._data),size:_e(this._size),datatype:this._datatype})},s.prototype.toJSON=function(){return{mathjs:"ImmutableDenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},s.fromJSON=function(r){return new s(r)},s.prototype.swapRows=function(){throw new Error("Cannot invoke swapRows on an Immutable Matrix instance")},s.prototype.min=function(){if(this._min===null){var r=null;this.forEach(function(i){(r===null||t(i,r))&&(r=i)}),this._min=r!==null?r:void 0}return this._min},s.prototype.max=function(){if(this._max===null){var r=null;this.forEach(function(i){(r===null||t(r,i))&&(r=i)}),this._max=r!==null?r:void 0}return this._max},s},{isClass:!0}),zX="Index",BX=["ImmutableDenseMatrix"],PX=Ht(zX,BX,e=>{var{ImmutableDenseMatrix:t}=e;function n(r){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");this._dimensions=[],this._isScalar=!0;for(var i=0,o=arguments.length;i<o;i++){var a=arguments[i];if(AT(a))this._dimensions.push(a),this._isScalar=!1;else if(Array.isArray(a)||Je(a)){var u=s(a.valueOf());this._dimensions.push(u);var l=u.size();(l.length!==1||l[0]!==1)&&(this._isScalar=!1)}else if(typeof a=="number")this._dimensions.push(s([a]));else if(typeof a=="string")this._dimensions.push(a);else throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range")}}n.prototype.type="Index",n.prototype.isIndex=!0;function s(r){for(var i=0,o=r.length;i<o;i++)if(typeof r[i]!="number"||!In(r[i]))throw new TypeError("Index parameters must be positive integer numbers");return new t(r)}return n.prototype.clone=function(){var r=new n;return r._dimensions=_e(this._dimensions),r._isScalar=this._isScalar,r},n.create=function(r){var i=new n;return n.apply(i,r),i},n.prototype.size=function(){for(var r=[],i=0,o=this._dimensions.length;i<o;i++){var a=this._dimensions[i];r[i]=typeof a=="string"?1:a.size()[0]}return r},n.prototype.max=function(){for(var r=[],i=0,o=this._dimensions.length;i<o;i++){var a=this._dimensions[i];r[i]=typeof a=="string"?a:a.max()}return r},n.prototype.min=function(){for(var r=[],i=0,o=this._dimensions.length;i<o;i++){var a=this._dimensions[i];r[i]=typeof a=="string"?a:a.min()}return r},n.prototype.forEach=function(r){for(var i=0,o=this._dimensions.length;i<o;i++)r(this._dimensions[i],i,this)},n.prototype.dimension=function(r){return this._dimensions[r]||null},n.prototype.isObjectProperty=function(){return this._dimensions.length===1&&typeof this._dimensions[0]=="string"},n.prototype.getObjectProperty=function(){return this.isObjectProperty()?this._dimensions[0]:null},n.prototype.isScalar=function(){return this._isScalar},n.prototype.toArray=function(){for(var r=[],i=0,o=this._dimensions.length;i<o;i++){var a=this._dimensions[i];r.push(typeof a=="string"?a:a.toArray())}return r},n.prototype.valueOf=n.prototype.toArray,n.prototype.toString=function(){for(var r=[],i=0,o=this._dimensions.length;i<o;i++){var a=this._dimensions[i];typeof a=="string"?r.push(JSON.stringify(a)):r.push(a.toString())}return"["+r.join(", ")+"]"},n.prototype.toJSON=function(){return{mathjs:"Index",dimensions:this._dimensions}},n.fromJSON=function(r){return n.create(r.dimensions)},n},{isClass:!0}),ZA="add",WX=["typed","matrix","addScalar","equalScalar","DenseMatrix","SparseMatrix"],VX=Ht(ZA,WX,e=>{var{typed:t,matrix:n,addScalar:s,equalScalar:r,DenseMatrix:i,SparseMatrix:o}=e,a=DA({typed:t}),u=cK({typed:t,equalScalar:r}),l=TA({typed:t,DenseMatrix:i}),c=nu({typed:t,matrix:n});return t(ZA,{"any, any":s,"any, any, ...any":t.referToSelf(h=>(d,p,f)=>{for(var m=h(d,p),g=0;g<f.length;g++)m=h(m,f[g]);return m})},c({elop:s,DS:a,SS:u,Ss:l}))}),JA="dot",UX=["typed","addScalar","multiplyScalar","conj","size"],GX=Ht(JA,UX,e=>{var{typed:t,addScalar:n,multiplyScalar:s,conj:r,size:i}=e;return t(JA,{"Array | DenseMatrix, Array | DenseMatrix":a,"SparseMatrix, SparseMatrix":u});function o(c,h){var d=l(c),p=l(h),f,m;if(d.length===1)f=d[0];else if(d.length===2&&d[1]===1)f=d[0];else throw new RangeError("Expected a column vector, instead got a matrix of size ("+d.join(", ")+")");if(p.length===1)m=p[0];else if(p.length===2&&p[1]===1)m=p[0];else throw new RangeError("Expected a column vector, instead got a matrix of size ("+p.join(", ")+")");if(f!==m)throw new RangeError("Vectors must have equal length ("+f+" != "+m+")");if(f===0)throw new RangeError("Cannot calculate the dot product of empty vectors");return f}function a(c,h){var d=o(c,h),p=Je(c)?c._data:c,f=Je(c)?c._datatype:void 0,m=Je(h)?h._data:h,g=Je(h)?h._datatype:void 0,x=l(c).length===2,b=l(h).length===2,w=n,y=s;if(f&&g&&f===g&&typeof f=="string"){var v=f;w=t.find(n,[v,v]),y=t.find(s,[v,v])}if(!x&&!b){for(var k=y(r(p[0]),m[0]),C=1;C<d;C++)k=w(k,y(r(p[C]),m[C]));return k}if(!x&&b){for(var I=y(r(p[0]),m[0][0]),$=1;$<d;$++)I=w(I,y(r(p[$]),m[$][0]));return I}if(x&&!b){for(var S=y(r(p[0][0]),m[0]),N=1;N<d;N++)S=w(S,y(r(p[N][0]),m[N]));return S}if(x&&b){for(var F=y(r(p[0][0]),m[0][0]),D=1;D<d;D++)F=w(F,y(r(p[D][0]),m[D][0]));return F}}function u(c,h){o(c,h);for(var d=c._index,p=c._values,f=h._index,m=h._values,g=0,x=n,b=s,w=0,y=0;w<d.length&&y<f.length;){var v=d[w],k=f[y];if(v<k){w++;continue}if(v>k){y++;continue}v===k&&(g=x(g,b(p[w],m[y])),w++,y++)}return g}function l(c){return Je(c)?c.size():i(c)}}),QA="index",HX=["typed","Index"],qX=Ht(QA,HX,e=>{var{typed:t,Index:n}=e;return t(QA,{"...number | string | BigNumber | Range | Array | Matrix":function(s){var r=s.map(function(o){return as(o)?o.toNumber():Array.isArray(o)||Je(o)?o.map(function(a){return as(a)?a.toNumber():a}):o}),i=new n;return n.apply(i,r),i}})}),tF="det",jX=["typed","matrix","subtract","multiply","divideScalar","isZero","unaryMinus"],KX=Ht(tF,jX,e=>{var{typed:t,matrix:n,subtract:s,multiply:r,divideScalar:i,isZero:o,unaryMinus:a}=e;return t(tF,{any:function(l){return _e(l)},"Array | Matrix":function(l){var c;switch(Je(l)?c=l.size():Array.isArray(l)?(l=n(l),c=l.size()):c=[],c.length){case 0:return _e(l);case 1:if(c[0]===1)return _e(l.valueOf()[0]);throw new RangeError("Matrix must be square (size: "+Dn(c)+")");case 2:{var h=c[0],d=c[1];if(h===d)return u(l.clone().valueOf(),h);throw new RangeError("Matrix must be square (size: "+Dn(c)+")")}default:throw new RangeError("Matrix must be two dimensional (size: "+Dn(c)+")")}}});function u(l,c,h){if(c===1)return _e(l[0][0]);if(c===2)return s(r(l[0][0],l[1][1]),r(l[1][0],l[0][1]));for(var d=!1,p=new Array(c).fill(0).map((C,I)=>I),f=0;f<c;f++){var m=p[f];if(o(l[m][f])){var g=void 0;for(g=f+1;g<c;g++)if(!o(l[p[g]][f])){m=p[g],p[g]=p[f],p[f]=m,d=!d;break}if(g===c)return l[m][f]}for(var x=l[m][f],b=f===0?1:l[p[f-1]][f-1],w=f+1;w<c;w++)for(var y=p[w],v=f+1;v<c;v++)l[y][v]=i(s(r(l[y][v],x),r(l[y][f],l[m][v])),b)}var k=l[p[c-1]][c-1];return d?a(k):k}}),eF="inv",XX=["typed","matrix","divideScalar","addScalar","multiply","unaryMinus","det","identity","abs"],YX=Ht(eF,XX,e=>{var{typed:t,matrix:n,divideScalar:s,addScalar:r,multiply:i,unaryMinus:o,det:a,identity:u,abs:l}=e;return t(eF,{"Array | Matrix":function(h){var d=Je(h)?h.size():Is(h);switch(d.length){case 1:if(d[0]===1)return Je(h)?n([s(1,h.valueOf()[0])]):[s(1,h[0])];throw new RangeError("Matrix must be square (size: "+Dn(d)+")");case 2:{var p=d[0],f=d[1];if(p===f)return Je(h)?n(c(h.valueOf(),p,f),h.storage()):c(h,p,f);throw new RangeError("Matrix must be square (size: "+Dn(d)+")")}default:throw new RangeError("Matrix must be two dimensional (size: "+Dn(d)+")")}},any:function(h){return s(1,h)}});function c(h,d,p){var f,m,g,x,b;if(d===1){if(x=h[0][0],x===0)throw Error("Cannot calculate inverse, determinant is zero");return[[s(1,x)]]}else if(d===2){var w=a(h);if(w===0)throw Error("Cannot calculate inverse, determinant is zero");return[[s(h[1][1],w),s(o(h[0][1]),w)],[s(o(h[1][0]),w),s(h[0][0],w)]]}else{var y=h.concat();for(f=0;f<d;f++)y[f]=y[f].concat();for(var v=u(d).valueOf(),k=0;k<p;k++){var C=l(y[k][k]),I=k;for(f=k+1;f<d;)l(y[f][k])>C&&(C=l(y[f][k]),I=f),f++;if(C===0)throw Error("Cannot calculate inverse, determinant is zero");f=I,f!==k&&(b=y[k],y[k]=y[f],y[f]=b,b=v[k],v[k]=v[f],v[f]=b);var $=y[k],S=v[k];for(f=0;f<d;f++){var N=y[f],F=v[f];if(f!==k){if(N[k]!==0){for(g=s(o(N[k]),$[k]),m=k;m<p;m++)N[m]=r(N[m],i(g,$[m]));for(m=0;m<p;m++)F[m]=r(F[m],i(g,S[m]))}}else{for(g=$[k],m=k;m<p;m++)N[m]=s(N[m],g);for(m=0;m<p;m++)F[m]=s(F[m],g)}}}return v}}}),nF="pinv",ZX=["typed","matrix","inv","deepEqual","equal","dotDivide","dot","ctranspose","divideScalar","multiply","add","Complex"],JX=Ht(nF,ZX,e=>{var{typed:t,matrix:n,inv:s,deepEqual:r,equal:i,dotDivide:o,dot:a,ctranspose:u,divideScalar:l,multiply:c,add:h,Complex:d}=e;return t(nF,{"Array | Matrix":function(b){var w=Je(b)?b.size():Is(b);switch(w.length){case 1:return x(b)?u(b):w[0]===1?s(b):o(u(b),a(b,b));case 2:{if(x(b))return u(b);var y=w[0],v=w[1];if(y===v)try{return s(b)}catch(k){if(!(k instanceof Error&&k.message.match(/Cannot calculate inverse, determinant is zero/)))throw k}return Je(b)?n(p(b.valueOf(),y,v),b.storage()):p(b,y,v)}default:throw new RangeError("Matrix must be two dimensional (size: "+Dn(w)+")")}},any:function(b){return i(b,0)?_e(b):l(1,b)}});function p(b,w,y){var{C:v,F:k}=m(b,w,y),C=c(s(c(u(v),v)),u(v)),I=c(u(k),s(c(k,u(k))));return c(I,C)}function f(b,w,y){for(var v=_e(b),k=0,C=0;C<w;C++){if(y<=k)return v;for(var I=C;g(v[I][k]);)if(I++,w===I&&(I=C,k++,y===k))return v;[v[I],v[C]]=[v[C],v[I]];for(var $=v[C][k],S=0;S<y;S++)v[C][S]=o(v[C][S],$);for(var N=0;N<w;N++)if(N!==C){$=v[N][k];for(var F=0;F<y;F++)v[N][F]=h(v[N][F],c(-1,c($,v[C][F])))}k++}return v}function m(b,w,y){var v=f(b,w,y),k=b.map((I,$)=>I.filter((S,N)=>N<w&&!g(a(v[N],v[N])))),C=v.filter((I,$)=>!g(a(v[$],v[$])));return{C:k,F:C}}function g(b){return i(h(b,d(1,1)),h(0,d(1,1)))}function x(b){return r(h(b,d(1,1)),h(c(b,0),d(1,1)))}}),QX="divide",tY=["typed","matrix","multiply","equalScalar","divideScalar","inv"],eY=Ht(QX,tY,e=>{var{typed:t,matrix:n,multiply:s,equalScalar:r,divideScalar:i,inv:o}=e,a=Uv({typed:t,equalScalar:r}),u=Gv({typed:t});return t("divide",FT({"Array | Matrix, Array | Matrix":function(l,c){return s(l,o(c))},"DenseMatrix, any":function(l,c){return u(l,c,i,!1)},"SparseMatrix, any":function(l,c){return a(l,c,i,!1)},"Array, any":function(l,c){return u(n(l),c,i,!1).valueOf()},"any, Array | Matrix":function(l,c){return s(l,o(c))}},i.signatures))}),sF="sum",nY=["typed","config","add","numeric"],sY=Ht(sF,nY,e=>{var{typed:t,config:n,add:s,numeric:r}=e;return t(sF,{"Array | Matrix":i,"Array | Matrix, number | BigNumber":o,"...":function(a){if(fA(a))throw new TypeError("Scalar values expected in function sum");return i(a)}});function i(a){var u;return Vv(a,function(l){try{u=u===void 0?l:s(u,l)}catch(c){throw B0(c,"sum",l)}}),u===void 0&&(u=r(0,n.number)),typeof u=="string"&&(u=r(u,n.number)),u}function o(a,u){try{var l=mA(a,u,s);return l}catch(c){throw B0(c,"sum")}}}),rF="mean",rY=["typed","add","divide"],iY=Ht(rF,rY,e=>{var{typed:t,add:n,divide:s}=e;return t(rF,{"Array | Matrix":i,"Array | Matrix, number | BigNumber":r,"...":function(o){if(fA(o))throw new TypeError("Scalar values expected in function mean");return i(o)}});function r(o,a){try{var u=mA(o,a,n),l=Array.isArray(o)?Is(o):o.size();return s(u,l[a])}catch(c){throw B0(c,"mean")}}function i(o){var a,u=0;if(Vv(o,function(l){try{a=a===void 0?l:n(a,l),u++}catch(c){throw B0(c,"mean",l)}}),u===0)throw new Error("Cannot calculate the mean of an empty array");return s(a,u)}}),Hv={},oY={get exports(){return Hv},set exports(e){Hv=e}};(function(e){(function(t,n,s){function r(u){var l=this,c=a();l.next=function(){var h=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=h-(l.c=h|0)},l.c=1,l.s0=c(" "),l.s1=c(" "),l.s2=c(" "),l.s0-=c(u),l.s0<0&&(l.s0+=1),l.s1-=c(u),l.s1<0&&(l.s1+=1),l.s2-=c(u),l.s2<0&&(l.s2+=1),c=null}function i(u,l){return l.c=u.c,l.s0=u.s0,l.s1=u.s1,l.s2=u.s2,l}function o(u,l){var c=new r(u),h=l&&l.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&i(h,c),d.state=function(){return i(c,{})}),d}function a(){var u=4022871197,l=function(c){c=String(c);for(var h=0;h<c.length;h++){u+=c.charCodeAt(h);var d=.02519603282416938*u;u=d>>>0,d-=u,d*=u,u=d>>>0,d-=u,u+=d*4294967296}return(u>>>0)*23283064365386963e-26};return l}n&&n.exports?n.exports=o:s&&s.amd?s(function(){return o}):this.alea=o})(nl,e,!1)})(oY);var qv={},aY={get exports(){return qv},set exports(e){qv=e}};(function(e){(function(t,n,s){function r(a){var u=this,l="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var h=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^h^h>>>8},a===(a|0)?u.x=a:l+=a;for(var c=0;c<l.length+64;c++)u.x^=l.charCodeAt(c)|0,u.next()}function i(a,u){return u.x=a.x,u.y=a.y,u.z=a.z,u.w=a.w,u}function o(a,u){var l=new r(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,c&&(typeof c=="object"&&i(c,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:s&&s.amd?s(function(){return o}):this.xor128=o})(nl,e,!1)})(aY);var jv={},uY={get exports(){return jv},set exports(e){jv=e}};(function(e){(function(t,n,s){function r(a){var u=this,l="";u.next=function(){var h=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(h^h<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,a===(a|0)?u.x=a:l+=a;for(var c=0;c<l.length+64;c++)u.x^=l.charCodeAt(c)|0,c==l.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(a,u){return u.x=a.x,u.y=a.y,u.z=a.z,u.w=a.w,u.v=a.v,u.d=a.d,u}function o(a,u){var l=new r(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,c&&(typeof c=="object"&&i(c,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:s&&s.amd?s(function(){return o}):this.xorwow=o})(nl,e,!1)})(uY);var Kv={},lY={get exports(){return Kv},set exports(e){Kv=e}};(function(e){(function(t,n,s){function r(a){var u=this;u.next=function(){var c=u.x,h=u.i,d,p;return d=c[h],d^=d>>>7,p=d^d<<24,d=c[h+1&7],p^=d^d>>>10,d=c[h+3&7],p^=d^d>>>3,d=c[h+4&7],p^=d^d<<7,d=c[h+7&7],d=d^d<<13,p^=d^d<<9,c[h]=p,u.i=h+1&7,p};function l(c,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],c.x=p,c.i=0,d=256;d>0;--d)c.next()}l(u,a)}function i(a,u){return u.x=a.x.slice(),u.i=a.i,u}function o(a,u){a==null&&(a=+new Date);var l=new r(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,c&&(c.x&&i(c,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:s&&s.amd?s(function(){return o}):this.xorshift7=o})(nl,e,!1)})(lY);var Xv={},cY={get exports(){return Xv},set exports(e){Xv=e}};(function(e){(function(t,n,s){function r(a){var u=this;u.next=function(){var c=u.w,h=u.X,d=u.i,p,f;return u.w=c=c+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,u.i=d,f+(c^c>>>16)|0};function l(c,h){var d,p,f,m,g,x=[],b=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,b=Math.max(b,h.length)),f=0,m=-32;m<b;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=x[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(x[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=x[f+34&127],d=x[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,x[f]=p^d;c.w=g,c.X=x,c.i=f}l(u,a)}function i(a,u){return u.i=a.i,u.w=a.w,u.X=a.X.slice(),u}function o(a,u){a==null&&(a=+new Date);var l=new r(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,c&&(c.X&&i(c,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:s&&s.amd?s(function(){return o}):this.xor4096=o})(nl,e,!1)})(cY);var Yv={},hY={get exports(){return Yv},set exports(e){Yv=e}};(function(e){(function(t,n,s){function r(a){var u=this,l="";u.next=function(){var h=u.b,d=u.c,p=u.d,f=u.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,u.b=h=h<<20^h>>>12^d,u.c=d=d-p|0,u.d=p<<16^d>>>16^f,u.a=f-h|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,a===Math.floor(a)?(u.a=a/4294967296|0,u.b=a|0):l+=a;for(var c=0;c<l.length+20;c++)u.b^=l.charCodeAt(c)|0,u.next()}function i(a,u){return u.a=a.a,u.b=a.b,u.c=a.c,u.d=a.d,u}function o(a,u){var l=new r(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,c&&(typeof c=="object"&&i(c,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:s&&s.amd?s(function(){return o}):this.tychei=o})(nl,e,!1)})(hY);var Zv={},dY={get exports(){return Zv},set exports(e){Zv=e}};const pY={},fY=Object.freeze(Object.defineProperty({__proto__:null,default:pY},Symbol.toStringTag,{value:"Module"})),mY=uj(fY);(function(e){(function(t,n,s){var r=256,i=6,o=52,a="random",u=s.pow(r,i),l=s.pow(2,o),c=l*2,h=r-1,d;function p(y,v,k){var C=[];v=v==!0?{entropy:!0}:v||{};var I=x(g(v.entropy?[y,w(n)]:y??b(),3),C),$=new f(C),S=function(){for(var N=$.g(i),F=u,D=0;N<l;)N=(N+D)*r,F*=r,D=$.g(1);for(;N>=c;)N/=2,F/=2,D>>>=1;return(N+D)/F};return S.int32=function(){return $.g(4)|0},S.quick=function(){return $.g(4)/4294967296},S.double=S,x(w($.S),n),(v.pass||k||function(N,F,D,E){return E&&(E.S&&m(E,$),N.state=function(){return m($,{})}),D?(s[a]=N,F):N})(S,I,"global"in v?v.global:this==s,v.state)}function f(y){var v,k=y.length,C=this,I=0,$=C.i=C.j=0,S=C.S=[];for(k||(y=[k++]);I<r;)S[I]=I++;for(I=0;I<r;I++)S[I]=S[$=h&$+y[I%k]+(v=S[I])],S[$]=v;(C.g=function(N){for(var F,D=0,E=C.i,A=C.j,T=C.S;N--;)F=T[E=h&E+1],D=D*r+T[h&(T[E]=T[A=h&A+F])+(T[A]=F)];return C.i=E,C.j=A,D})(r)}function m(y,v){return v.i=y.i,v.j=y.j,v.S=y.S.slice(),v}function g(y,v){var k=[],C=typeof y,I;if(v&&C=="object")for(I in y)try{k.push(g(y[I],v-1))}catch{}return k.length?k:C=="string"?y:y+"\0"}function x(y,v){for(var k=y+"",C,I=0;I<k.length;)v[h&I]=h&(C^=v[h&I]*19)+k.charCodeAt(I++);return w(v)}function b(){try{var y;return d&&(y=d.randomBytes)?y=y(r):(y=new Uint8Array(r),(t.crypto||t.msCrypto).getRandomValues(y)),w(y)}catch{var v=t.navigator,k=v&&v.plugins;return[+new Date,t,k,t.screen,w(n)]}}function w(y){return String.fromCharCode.apply(0,y)}if(x(s.random(),n),e.exports){e.exports=p;try{d=mY}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:nl,[],Math)})(dY);var gY=Hv,xY=qv,bY=jv,yY=Kv,wY=Xv,vY=Yv,il=Zv;il.alea=gY,il.xor128=xY,il.xorwow=bY,il.xorshift7=yY,il.xor4096=wY,il.tychei=vY;var Jv=il,np=aj({config:Jr}),iF=dj({}),oF=gj({}),Qv=yj({}),Qr=kj({Matrix:Qv}),pe=cq({BigNumber:np,Complex:iF,DenseMatrix:Qr,Fraction:oF}),kY=Zj({typed:pe}),sp=Qj({typed:pe}),aF=Vj({BigNumber:np,typed:pe}),uF=OK({typed:pe}),ol=Aj({config:Jr,typed:pe}),IY=$j({typed:pe}),CY=Ej({typed:pe}),lF=EK({typed:pe}),$Y=Bj({typed:pe}),H0=_j({Matrix:Qv,equalScalar:ol,typed:pe}),tk=Xj({typed:pe}),SY=Hj({Fraction:oF,typed:pe}),cn=jj({DenseMatrix:Qr,Matrix:Qv,SparseMatrix:H0,typed:pe}),cF=pX({bignumber:aF,fraction:SY,number:$Y}),NY=JK({isInteger:IY,matrix:cn,typed:pe}),EY=nX({matrix:cn,config:Jr,typed:pe}),hF=kX({DenseMatrix:Qr,config:Jr,matrix:cn,typed:pe}),DY=rX({matrix:cn,typed:pe}),TY=FK({DenseMatrix:Qr,addScalar:sp,equalScalar:ol,matrix:cn,typed:pe,unaryMinus:tk}),dF=oX({matrix:cn,typed:pe}),AY=cX({BigNumber:np,config:Jr,matrix:cn,typed:pe}),FY=uX({conj:uF,transpose:dF,typed:pe}),RY=PK({DenseMatrix:Qr,SparseMatrix:H0,matrix:cn,typed:pe}),rp=mX({numeric:cF,typed:pe}),_Y=xX({DenseMatrix:Qr,divideScalar:rp,equalScalar:ol,matrix:cn,typed:pe}),pF=yX({DenseMatrix:Qr,equalScalar:ol,matrix:cn,typed:pe}),MY=VK({matrix:cn,typed:pe}),OY=AX({DenseMatrix:Qr,config:Jr,matrix:cn,typed:pe}),LY=jK({BigNumber:np,config:Jr,matrix:cn,typed:pe}),zY=$X({DenseMatrix:Qr,config:Jr,matrix:cn,typed:pe}),q0=VX({DenseMatrix:Qr,SparseMatrix:H0,addScalar:sp,equalScalar:ol,matrix:cn,typed:pe}),BY=_X({equal:pF,typed:pe}),fF=GX({addScalar:sp,conj:uF,multiplyScalar:lF,size:EY,typed:pe}),PY=GK({BigNumber:np,DenseMatrix:Qr,SparseMatrix:H0,config:Jr,matrix:cn,typed:pe}),WY=EX({DenseMatrix:Qr,config:Jr,matrix:cn,typed:pe}),ip=TK({addScalar:sp,dot:fF,equalScalar:ol,matrix:cn,multiplyScalar:lF,typed:pe}),ek=YK({bignumber:aF,matrix:cn,config:Jr,larger:WY,largerEq:OY,smaller:hF,smallerEq:zY,typed:pe}),VY=sY({add:q0,config:Jr,numeric:cF,typed:pe}),mF=KX({divideScalar:rp,isZero:CY,matrix:cn,multiply:ip,subtract:TY,typed:pe,unaryMinus:tk}),UY=LX({DenseMatrix:Qr,smaller:hF}),nk=PX({ImmutableDenseMatrix:UY}),GY=tX({Index:nk,matrix:cn,range:ek,typed:pe}),HY=zK({Index:nk,matrix:cn,range:ek,typed:pe}),qY=qX({Index:nk,typed:pe}),sk=YX({abs:kY,addScalar:sp,det:mF,divideScalar:rp,identity:PY,matrix:cn,multiply:ip,typed:pe,unaryMinus:tk}),jY=JX({Complex:iF,add:q0,ctranspose:FY,deepEqual:BY,divideScalar:rp,dot:fF,dotDivide:_Y,equal:pF,inv:sk,matrix:cn,multiply:ip,typed:pe}),KY=eY({divideScalar:rp,equalScalar:ol,inv:sk,matrix:cn,multiply:ip,typed:pe}),XY=iY({add:q0,divide:KY,typed:pe});const qt={ones:LY,zeros:AY,diag:RY,matrix:cn,index:qY,range:ek,row:GY,column:HY,flatten:MY,sum:VY,mean:XY,transpose:dF,add:q0,multiply:ip,inv:sk,pinv:jY,det:mF,reshape:NY,squeeze:DY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY=1e-7,ZY=1e-4;class gF{constructor(t,n){this.backend=t,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,n){this.dataIdsCount++,this.data.set(t,n)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class rk{refCount(t){return Ar("refCount")}incRef(t){return Ar("incRef")}timerAvailable(){return!0}time(t){return Ar("time")}read(t){return Ar("read")}readSync(t){return Ar("readSync")}readToGPU(t,n){return Ar("readToGPU")}numDataIds(){return Ar("numDataIds")}disposeData(t,n){return Ar("disposeData")}write(t,n,s){return Ar("write")}move(t,n,s,r,i){return Ar("move")}createTensorFromGPUData(t,n,s){return Ar("createTensorFromGPUData")}memory(){return Ar("memory")}floatPrecision(){return Ar("floatPrecision")}epsilon(){return this.floatPrecision()===32?YY:ZY}dispose(){return Ar("dispose")}}function Ar(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JY(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Jc(e,t,n)}function al(e,t,n){return Math.max(e,Math.min(t,n))}function ik(e){return e%2===0?e:e+1}function Jc(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function QY(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function O(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function ok(e,t,n=""){O(Le(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function xF(e){O(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function bt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Le(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Qc(e){return e%1===0}function ak(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function th(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function bF(e,t=r=>0,n,s){return new Promise((r,i)=>{let o=0;const a=()=>{if(e()){r();return}o++;const u=t(o);if(n!=null&&o>=n){i();return}s!=null?s(a,u):setTimeout(a,u)};a()})}function yF(e,t){let n=1,s=-1;for(let i=0;i<e.length;++i)if(e[i]>=0)n*=e[i];else if(e[i]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(e[i]<0)throw Error(`Shapes can not be < 0. Found ${e[i]} at dim ${i}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function ye(e,t){const n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),O(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),O(e.every(s=>Qc(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function su(e,t){const n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,i=t==null||r?null:ye(t,e).sort();let o=0;for(let a=0;a<e.length;++a){if(i!=null){if(i[o]===a&&e[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${e[a]}' is not 1`);(i[o]==null||i[o]>a)&&e[a]===1&&(n.push(e[a]),s.push(a)),i[o]<=a&&o++}e[a]!==1&&(n.push(e[a]),s.push(a))}return{newShape:n,keptDims:s}}function Cs(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function Bn(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function tZ(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function eZ(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function wF(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function j0(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function nZ(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function op(e){return typeof e=="string"||e instanceof String}function sZ(e){return typeof e=="boolean"}function uk(e){return typeof e=="number"}function ap(e){return Array.isArray(e)?ap(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":uk(e)?"float32":op(e)?"string":sZ(e)?"bool":"float32"}function lk(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ck(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function te(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function vF(e,t,n,s=!1){const r=new Array;if(t.length===1){const i=t[0]*(s?2:1);for(let o=0;o<i;o++)r[o]=n[e+o]}else{const i=t[0],o=t.slice(1),a=o.reduce((u,l)=>u*l)*(s?2:1);for(let u=0;u<i;u++)r[u]=vF(e+u*a,o,n,s)}return r}function Qi(e,t,n=!1){if(e.length===0)return t[0];const s=e.reduce((r,i)=>r*i)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return vF(0,e,t,n)}function rZ(e,t){if(Array.isArray(e))return e;if(t==="float32")return e instanceof Float32Array?e:new Float32Array(e);if(t==="int32")return e instanceof Int32Array?e:new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function hk(e,t){const n=Bs(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function Bs(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function kF(e,t){const n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return Qi(e,new Float32Array(n));if(t==="int32")return Qi(e,new Int32Array(n));if(t==="bool")return Qi(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ca(e){e.forEach(t=>{O(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function Mo(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function eh(e,t,n){if(t===0)return[];if(t===1)return[e];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function dk(e){return e&&e.then&&typeof e.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IF="tfjsflags";class iZ{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=oZ,this.populateURLFlags()}setPlatform(t,n){this.platform!=null&&(dt().getBool("IS_TEST")||dt().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=n}registerFlag(t,n,s){if(this.flagRegistry[t]={evaluationFn:n,setHook:s},this.urlFlags[t]!=null){const r=this.urlFlags[t];dt().getBool("IS_TEST")||dt().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const n=this.evaluateFlag(t);if(dk(n))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=n,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,n){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=n,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(n)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);IF in t&&t[IF].split(",").forEach(n=>{const[s,r]=n.split(":");this.urlFlags[s]=uZ(s,r)})}}function oZ(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(aZ(t,s[0],s[1]),s.join("="))),t}function aZ(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function uZ(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function dt(){return CF}let CF=null;function lZ(e){CF=e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pk;function $F(){if(pk==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");pk=e}return pk}function cZ(){const e=$F();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function fk(e,t){const n=cZ();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const K0="Abs",up="Acos",lp="Acosh",nh="Add",mk="AddN",gk="All",xk="Any",X0="ArgMax",Y0="ArgMin",cp="Asin",hp="Asinh",dp="Atan",pp="Atanh",fp="Atan2",Z0="AvgPool",bk="AvgPoolGrad",J0="AvgPool3D",yk="AvgPool3DGrad",Q0="BatchMatMul",t1="BatchToSpaceND",wk="Bincount",hZ="BroadcastTo",SF="BroadcastArgs",mp="Cast",gp="Ceil",xp="ClipByValue",vk="Complex",e1="ComplexAbs",n1="Concat",s1="Conv2D",kk="Conv2DBackpropFilter",r1="Conv2DBackpropInput",i1="Conv3D",Ik="Conv3DBackpropFilterV2",Ck="Conv3DBackpropInputV2",bp="Cos",yp="Cosh",$k="Cumprod",o1="Cumsum",Sk="CropAndResize",Nk="DenseBincount",Ek="DepthToSpace",a1="DepthwiseConv2dNative",Dk="DepthwiseConv2dNativeBackpropFilter",Tk="DepthwiseConv2dNativeBackpropInput",NF="Diag",u1="Dilation2D",Ak="Dilation2DBackpropInput",Fk="Dilation2DBackpropFilter",wp="RealDiv",EF="Einsum",vp="Elu",Rk="EluGrad",kp="Erf",l1="Equal",Ip="Exp",c1="ExpandDims",Cp="Expm1",_k="FFT",Mk="Fill",Ok="FlipLeftRight",$p="Floor",Sp="FloorDiv",h1="FusedBatchNorm",d1="GatherV2",DF="GatherNd",p1="Greater",Np="GreaterEqual",Ep="Identity",Lk="IFFT",zk="Imag",Dp="IsFinite",Tp="IsInf",Ap="IsNan",f1="LeakyRelu",m1="Less",g1="LessEqual",TF="LinSpace",Fp="Log",Rp="Log1p",x1="LogicalAnd",b1="LogicalNot",y1="LogicalOr",dZ="LogSoftmax",w1="LRN",Bk="LRNGrad",v1="Max",_p="Maximum",k1="MaxPool",Pk="MaxPoolGrad",I1="MaxPool3D",Wk="MaxPool3DGrad",AF="MaxPoolWithArgmax",C1="Mean",$1="Min",Mp="Minimum",S1="MirrorPad",Op="Mod",FF="Multinomial",Lp="Multiply",N1="Neg",E1="NotEqual",Vk="NonMaxSuppressionV3",Uk="NonMaxSuppressionV4",Gk="NonMaxSuppressionV5",D1="OnesLike",T1="OneHot",A1="Pack",F1="PadV2",zp="Pow",R1="Prelu",_1="Prod",RF="RaggedGather",_F="RaggedRange",MF="RaggedTensorToTensor",Hk="Range",qk="Real",Bp="Reciprocal",Pp="Relu",M1="Reshape",O1="ResizeNearestNeighbor",jk="ResizeNearestNeighborGrad",L1="ResizeBilinear",Kk="ResizeBilinearGrad",Wp="Relu6",z1="Reverse",Vp="Round",Up="Rsqrt",OF="ScatterNd",LF="SearchSorted",B1="Select",Gp="Selu",P1="Slice",Hp="Sin",qp="Sinh",jp="Sign",Kp="Sigmoid",Xp="Softplus",Yp="Sqrt",W1="Sum",V1="SpaceToBatchND",U1="SplitV",G1="Softmax",zF="SparseFillEmptyRows",BF="SparseReshape",PF="SparseSegmentMean",WF="SparseSegmentSum",VF="SparseToDense",Zp="SquaredDifference",Xk="Square",Yk="StridedSlice",UF="StringNGrams",GF="StringSplit",HF="StringToHashBucketFast",Jp="Sub",Qp="Tan",tf="Tanh",ef="Tile",Zk="TopK",Jk="Transform",sh="Transpose",Qk="Unique",H1="Unpack",q1="UnsortedSegmentSum",j1="ZerosLike",nf="Step",pZ="FromPixels",tI="RotateWithOffset",K1="_FusedMatMul",X1="FusedConv2D",qF="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ti(...e){dt().getBool("IS_TEST")||dt().getBool("PROD")||console.warn(...e)}function fZ(...e){dt().getBool("IS_TEST")||dt().getBool("PROD")||console.log(...e)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y1=fk("kernelRegistry",()=>new Map),eI=fk("gradRegistry",()=>new Map);function jF(e,t){const n=ZF(e,t);return Y1.get(n)}function KF(e){return eI.get(e)}function XF(e){const t=Y1.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[i,o]=r,[a]=i.split("_");a===e&&n.push(o)}return n}function YF(e){const{kernelName:t,backendName:n}=e,s=ZF(t,n);Y1.has(s)&&ti(`The kernel '${t}' for backend '${n}' is already registered`),Y1.set(s,e)}function mZ(e){const{kernelName:t}=e;eI.has(t)&&dt().getBool("DEBUG")&&ti(`Overriding the gradient for '${t}'`),eI.set(t,e)}function ZF(e,t){return`${t}_${e}`}var nI=hn,bi=null;try{bi=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function hn(e,t,n){this.low=e|0,this.high=t|0,this.unsigned=!!n}hn.prototype.__isLong__,Object.defineProperty(hn.prototype,"__isLong__",{value:!0});function Fr(e){return(e&&e.__isLong__)===!0}hn.isLong=Fr;var JF={},QF={};function ul(e,t){var n,s,r;return t?(e>>>=0,(r=0<=e&&e<256)&&(s=QF[e],s)?s:(n=dn(e,(e|0)<0?-1:0,!0),r&&(QF[e]=n),n)):(e|=0,(r=-128<=e&&e<128)&&(s=JF[e],s)?s:(n=dn(e,e<0?-1:0,!1),r&&(JF[e]=n),n))}hn.fromInt=ul;function yi(e,t){if(isNaN(e))return t?ll:wi;if(t){if(e<0)return ll;if(e>=eR)return oR}else{if(e<=-nR)return Rr;if(e+1>=nR)return iR}return e<0?yi(-e,t).neg():dn(e%rh|0,e/rh|0,t)}hn.fromNumber=yi;function dn(e,t,n){return new hn(e,t,n)}hn.fromBits=dn;var Z1=Math.pow;function sI(e,t,n){if(e.length===0)throw Error("empty string");if(e==="NaN"||e==="Infinity"||e==="+Infinity"||e==="-Infinity")return wi;if(typeof t=="number"?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return sI(e.substring(1),t,n).neg();for(var r=yi(Z1(n,8)),i=wi,o=0;o<e.length;o+=8){var a=Math.min(8,e.length-o),u=parseInt(e.substring(o,o+a),n);if(a<8){var l=yi(Z1(n,a));i=i.mul(l).add(yi(u))}else i=i.mul(r),i=i.add(yi(u))}return i.unsigned=t,i}hn.fromString=sI;function to(e,t){return typeof e=="number"?yi(e,t):typeof e=="string"?sI(e,t):dn(e.low,e.high,typeof t=="boolean"?t:e.unsigned)}hn.fromValue=to;var tR=1<<16,gZ=1<<24,rh=tR*tR,eR=rh*rh,nR=eR/2,sR=ul(gZ),wi=ul(0);hn.ZERO=wi;var ll=ul(0,!0);hn.UZERO=ll;var ih=ul(1);hn.ONE=ih;var rR=ul(1,!0);hn.UONE=rR;var rI=ul(-1);hn.NEG_ONE=rI;var iR=dn(-1,2147483647,!1);hn.MAX_VALUE=iR;var oR=dn(-1,-1,!0);hn.MAX_UNSIGNED_VALUE=oR;var Rr=dn(0,-2147483648,!1);hn.MIN_VALUE=Rr;var Mt=hn.prototype;Mt.toInt=function(){return this.unsigned?this.low>>>0:this.low},Mt.toNumber=function(){return this.unsigned?(this.high>>>0)*rh+(this.low>>>0):this.high*rh+(this.low>>>0)},Mt.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Rr)){var t=yi(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var r=yi(Z1(e,6),this.unsigned),i=this,o="";;){var a=i.div(r),u=i.sub(a.mul(r)).toInt()>>>0,l=u.toString(e);if(i=a,i.isZero())return l+o;for(;l.length<6;)l="0"+l;o=""+l+o}},Mt.getHighBits=function(){return this.high},Mt.getHighBitsUnsigned=function(){return this.high>>>0},Mt.getLowBits=function(){return this.low},Mt.getLowBitsUnsigned=function(){return this.low>>>0},Mt.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Rr)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1},Mt.isZero=function(){return this.high===0&&this.low===0},Mt.eqz=Mt.isZero,Mt.isNegative=function(){return!this.unsigned&&this.high<0},Mt.isPositive=function(){return this.unsigned||this.high>=0},Mt.isOdd=function(){return(this.low&1)===1},Mt.isEven=function(){return(this.low&1)===0},Mt.equals=function(e){return Fr(e)||(e=to(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low},Mt.eq=Mt.equals,Mt.notEquals=function(e){return!this.eq(e)},Mt.neq=Mt.notEquals,Mt.ne=Mt.notEquals,Mt.lessThan=function(e){return this.comp(e)<0},Mt.lt=Mt.lessThan,Mt.lessThanOrEqual=function(e){return this.comp(e)<=0},Mt.lte=Mt.lessThanOrEqual,Mt.le=Mt.lessThanOrEqual,Mt.greaterThan=function(e){return this.comp(e)>0},Mt.gt=Mt.greaterThan,Mt.greaterThanOrEqual=function(e){return this.comp(e)>=0},Mt.gte=Mt.greaterThanOrEqual,Mt.ge=Mt.greaterThanOrEqual,Mt.compare=function(e){if(Fr(e)||(e=to(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},Mt.comp=Mt.compare,Mt.negate=function(){return!this.unsigned&&this.eq(Rr)?Rr:this.not().add(ih)},Mt.neg=Mt.negate,Mt.add=function(e){Fr(e)||(e=to(e));var t=this.high>>>16,n=this.high&65535,s=this.low>>>16,r=this.low&65535,i=e.high>>>16,o=e.high&65535,a=e.low>>>16,u=e.low&65535,l=0,c=0,h=0,d=0;return d+=r+u,h+=d>>>16,d&=65535,h+=s+a,c+=h>>>16,h&=65535,c+=n+o,l+=c>>>16,c&=65535,l+=t+i,l&=65535,dn(h<<16|d,l<<16|c,this.unsigned)},Mt.subtract=function(e){return Fr(e)||(e=to(e)),this.add(e.neg())},Mt.sub=Mt.subtract,Mt.multiply=function(e){if(this.isZero())return wi;if(Fr(e)||(e=to(e)),bi){var t=bi.mul(this.low,this.high,e.low,e.high);return dn(t,bi.get_high(),this.unsigned)}if(e.isZero())return wi;if(this.eq(Rr))return e.isOdd()?Rr:wi;if(e.eq(Rr))return this.isOdd()?Rr:wi;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(sR)&&e.lt(sR))return yi(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=this.high&65535,r=this.low>>>16,i=this.low&65535,o=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,c=0,h=0,d=0,p=0;return p+=i*l,d+=p>>>16,p&=65535,d+=r*l,h+=d>>>16,d&=65535,d+=i*u,h+=d>>>16,d&=65535,h+=s*l,c+=h>>>16,h&=65535,h+=r*u,c+=h>>>16,h&=65535,h+=i*a,c+=h>>>16,h&=65535,c+=n*l+s*u+r*a+i*o,c&=65535,dn(d<<16|p,c<<16|h,this.unsigned)},Mt.mul=Mt.multiply,Mt.divide=function(e){if(Fr(e)||(e=to(e)),e.isZero())throw Error("division by zero");if(bi){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?bi.div_u:bi.div_s)(this.low,this.high,e.low,e.high);return dn(t,bi.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?ll:wi;var n,s,r;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return ll;if(e.gt(this.shru(1)))return rR;r=ll}else{if(this.eq(Rr)){if(e.eq(ih)||e.eq(rI))return Rr;if(e.eq(Rr))return ih;var i=this.shr(1);return n=i.div(e).shl(1),n.eq(wi)?e.isNegative()?ih:rI:(s=this.sub(e.mul(n)),r=n.add(s.div(e)),r)}else if(e.eq(Rr))return this.unsigned?ll:wi;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=wi}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),a=o<=48?1:Z1(2,o-48),u=yi(n),l=u.mul(e);l.isNegative()||l.gt(s);)n-=a,u=yi(n,this.unsigned),l=u.mul(e);u.isZero()&&(u=ih),r=r.add(u),s=s.sub(l)}return r},Mt.div=Mt.divide,Mt.modulo=function(e){if(Fr(e)||(e=to(e)),bi){var t=(this.unsigned?bi.rem_u:bi.rem_s)(this.low,this.high,e.low,e.high);return dn(t,bi.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},Mt.mod=Mt.modulo,Mt.rem=Mt.modulo,Mt.not=function(){return dn(~this.low,~this.high,this.unsigned)},Mt.and=function(e){return Fr(e)||(e=to(e)),dn(this.low&e.low,this.high&e.high,this.unsigned)},Mt.or=function(e){return Fr(e)||(e=to(e)),dn(this.low|e.low,this.high|e.high,this.unsigned)},Mt.xor=function(e){return Fr(e)||(e=to(e)),dn(this.low^e.low,this.high^e.high,this.unsigned)},Mt.shiftLeft=function(e){return Fr(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?dn(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):dn(0,this.low<<e-32,this.unsigned)},Mt.shl=Mt.shiftLeft,Mt.shiftRight=function(e){return Fr(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?dn(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):dn(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},Mt.shr=Mt.shiftRight,Mt.shiftRightUnsigned=function(e){if(Fr(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return dn(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?dn(t,0,this.unsigned):dn(t>>>e-32,0,this.unsigned)},Mt.shru=Mt.shiftRightUnsigned,Mt.shr_u=Mt.shiftRightUnsigned,Mt.toSigned=function(){return this.unsigned?dn(this.low,this.high,!1):this},Mt.toUnsigned=function(){return this.unsigned?this:dn(this.low,this.high,!0)},Mt.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},Mt.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]},Mt.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]},hn.fromBytes=function(e,t,n){return n?hn.fromBytesLE(e,t):hn.fromBytesBE(e,t)},hn.fromBytesLE=function(e,t){return new hn(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},hn.fromBytesBE=function(e,t){return new hn(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const xZ=n9({__proto__:null,default:nI},[nI]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cl=nI||xZ;function J1(e){return cl.fromString(e,!0,16)}const aR=J1("c3a5c85c97cb3127"),hl=J1("b492b66fbe98f273"),Ks=J1("9ae16a3b2f90404f");function iI(e){return e.xor(e.shru(47))}function uR(e,t,n){const s=e.slice(t,t+n);return cl.fromBytes(Array.from(s),!0,!0)}function tn(e,t){return uR(e,t,8)}function lR(e,t){return uR(e,t,4)}function ls(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function ru(e,t,n=J1("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function bZ(e,t,n,s,r,i){r=r.add(e),i=ls(i.add(r).add(s),21);const o=r;return r=r.add(t),r=r.add(n),i=i.add(ls(r,44)),[r.add(s),i.add(o)]}function Q1(e,t,n,s){return bZ(tn(e,t),tn(e,t+8),tn(e,t+16),tn(e,t+24),n,s)}function yZ(e,t=e.length){if(t>=8){const n=Ks.add(t*2),s=tn(e,0).add(Ks),r=tn(e,t-8),i=ls(r,37).mul(n).add(s),o=ls(s,25).add(r).mul(n);return ru(i,o,n)}if(t>=4){const n=Ks.add(t*2),s=lR(e,0);return ru(s.shl(3).add(t),lR(e,t-4),n)}if(t>0){const n=e[0],s=e[t>>1],r=e[t-1],i=n+(s<<8),o=t+(r<<2);return iI(Ks.mul(i).xor(aR.mul(o))).mul(Ks)}return Ks}function wZ(e,t=e.length){const n=Ks.add(t*2),s=tn(e,0).mul(hl),r=tn(e,8),i=tn(e,t-8).mul(n),o=tn(e,t-16).mul(Ks);return ru(ls(s.add(r),43).add(ls(i,30)).add(o),s.add(ls(r.add(Ks),18)).add(i),n)}function vZ(e,t=e.length){const n=Ks.add(t*2),s=tn(e,0).mul(Ks),r=tn(e,8),i=tn(e,t-8).mul(n),o=tn(e,t-16).mul(Ks),a=ls(s.add(r),43).add(ls(i,30)).add(o),u=ru(a,s.add(ls(r.add(Ks),18)).add(i),n),l=tn(e,16).mul(n),c=tn(e,24),h=a.add(tn(e,t-32)).mul(n),d=u.add(tn(e,t-24)).mul(n);return ru(ls(l.add(c),43).add(ls(h,30)).add(d),l.add(ls(c.add(s),18)).add(h),n)}function kZ(e,t=e.length){const n=cl.fromNumber(81,!0);if(t<=32)return t<=16?yZ(e,t):wZ(e,t);if(t<=64)return vZ(e,t);let s=n,r=n.mul(hl).add(113),i=iI(r.mul(Ks).add(113)).mul(Ks),o=[cl.UZERO,cl.UZERO],a=[cl.UZERO,cl.UZERO];s=s.mul(Ks).add(tn(e,0));let u=0;const l=(t-1>>6)*64,c=l+(t-1&63)-63;do s=ls(s.add(r).add(o[0]).add(tn(e,u+8)),37).mul(hl),r=ls(r.add(o[1]).add(tn(e,u+48)),42).mul(hl),s=s.xor(a[1]),r=r.add(o[0]).add(tn(e,u+40)),i=ls(i.add(a[0]),33).mul(hl),o=Q1(e,u,o[1].mul(hl),s.add(a[0])),a=Q1(e,u+32,i.add(a[1]),r.add(tn(e,u+16))),[i,s]=[s,i],u+=64;while(u!==l);const h=hl.add(i.and(255).shl(1));return u=c,a[0]=a[0].add(t-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),s=ls(s.add(r).add(o[0]).add(tn(e,u+8)),37).mul(h),r=ls(r.add(o[1]).add(tn(e,u+48)),42).mul(h),s=s.xor(a[1].mul(9)),r=r.add(o[0].mul(9).add(tn(e,u+40))),i=ls(i.add(a[0]),33).mul(h),o=Q1(e,u,o[1].mul(h),s.add(a[0])),a=Q1(e,u+32,i.add(a[1]),r.add(tn(e,u+16))),[i,s]=[s,i],ru(ru(o[0],a[0],h).add(iI(r).mul(aR)).add(i),ru(o[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iu(e,t){return t==="string"?ou(e):dl([e],t)}function IZ(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function dl(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=pl(e)),dt().getBool("DEBUG")&&tZ(e,t),IZ(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){const n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function dr(){return dt().platform.now()}function ou(e,t="utf-8"){return t=t||"utf-8",dt().platform.encode(e,t)}function au(e,t="utf-8"){return t=t||"utf-8",dt().platform.decode(e,t)}function eo(e){return dt().platform.isTypedArray(e)}function pl(e,t=[],n=!1){if(t==null&&(t=[]),typeof e=="boolean"||typeof e=="number"||typeof e=="string"||dk(e)||e==null||eo(e)&&n)t.push(e);else if(Array.isArray(e)||eo(e))for(let s=0;s<e.length;++s)pl(e[s],t,n);else{let s=-1;for(const r of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)pl(e[r],t,n)}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CZ{constructor(t,n){this.backendTimer=t,this.logger=n,n==null&&(this.logger=new SZ)}profileKernel(t,n,s){let r;const i=()=>{r=s()};let o;const a=dr();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(i);else{i();for(const u of r)u.dataSync();o=Promise.resolve({kernelMs:dr()-a})}if(dt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const l=r[u];l.data().then(c=>{$Z(c,l.dtype,t)})}return{kernelName:t,outputs:r,inputs:n,timeMs:o.then(u=>u.kernelMs),extraInfo:o.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:n,outputs:s,timeMs:r,inputs:i,extraInfo:o}=t;s.forEach(a=>{Promise.all([a.data(),r,o]).then(u=>{this.logger.logKernelProfile(n,a,u[0],u[1],i,u[2])})})}}function $Z(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){const r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class SZ{logKernelProfile(t,n,s,r,i,o){const a=typeof r=="number"?th(`${r}ms`,9):r.error,u=th(t,25),l=n.rank,c=n.size,h=th(n.shape.toString(),14);let d="";for(const p in i){const f=i[p];if(f!=null){const m=f.shape||n.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${u}	%c${a}	%c${l}D ${h}	%c${c}	%c${d}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NZ(e,t,n){const s={},r={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<e.length;u++){const l=e[u],c=l.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<t.length;f++)if(s[d.id]){l.outputs.forEach(m=>s[m.id]=!0),p=!0,r[l.id]=!0;break}if(p)break}}const i={};i[n.id]=!0;const o={};for(let u=e.length-1;u>=0;u--){const l=e[u],c=l.inputs;for(let h=0;h<l.outputs.length;h++)if(i[l.outputs[h].id]){for(const d in c)i[c[d].id]=!0,o[l.id]=!0;break}}const a=[];for(let u=0;u<e.length;u++){const l=e[u];if(r[l.id]&&o[l.id]){const c={};for(const d in l.inputs){const p=l.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},l);h.inputs=c,h.outputs=l.outputs,a.push(h)}}return a}function EZ(e,t,n,s){for(let r=t.length-1;r>=0;r--){const i=t[r],o=[];if(i.outputs.forEach(u=>{const l=e[u.id];l!=null?o.push(l):o.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(o);for(const u in i.inputs){if(!(u in a))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(a)}.`);const l=n(()=>a[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);const c=i.inputs[u];if(!Le(l.shape,c.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${c.shape}'`);if(e[c.id]==null)e[c.id]=l;else{const h=e[c.id];e[c.id]=s(h,l),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cR=20,sf=3,oI=7;function DZ(e,t,n,s){const r=te(t),i=TZ(e,t,n,r),o=t.length,a=tx(e,t,n,r,i),u=["Tensor"];return s&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${o}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(a.map(l=>"    "+l).join(`
`)),u.join(`
`)}function TZ(e,t,n,s){const r=bt(t),i=s[s.length-1],o=new Array(i).fill(0),a=t.length,u=n==="complex64"?of(e):e;if(a>1)for(let l=0;l<r/i;l++){const c=l*i;for(let h=0;h<i;h++)o[h]=Math.max(o[h],rf(u[c+h],0,n).length)}return o}function rf(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(oI))} + ${parseFloat(e[1].toFixed(oI))}j`:op(e)?s=`'${e}'`:n==="bool"?s=hR(e):s=parseFloat(e.toFixed(oI)).toString(),th(s,t)}function hR(e){return e===0?"false":"true"}function tx(e,t,n,s,r,i=!0){const o=n==="complex64"?2:1,a=t[0],u=t.length;if(u===0){if(n==="complex64"){const m=of(e);return[rf(m[0],0,n)]}return n==="bool"?[hR(e[0])]:[e[0].toString()]}if(u===1){if(a>cR){const m=sf*o;let g=Array.from(e.slice(0,m)),x=Array.from(e.slice((a-sf)*o,a*o));return n==="complex64"&&(g=of(g),x=of(x)),["["+g.map((b,w)=>rf(b,r[w],n)).join(", ")+", ..., "+x.map((b,w)=>rf(b,r[a-sf+w],n)).join(", ")+"]"]}return["["+(n==="complex64"?of(e):Array.from(e)).map((m,g)=>rf(m,r[g],n)).join(", ")+"]"]}const l=t.slice(1),c=s.slice(1),h=s[0]*o,d=[];if(a>cR){for(let m=0;m<sf;m++){const g=m*h,x=g+h;d.push(...tx(e.slice(g,x),l,n,c,r,!1))}d.push("...");for(let m=a-sf;m<a;m++){const g=m*h,x=g+h;d.push(...tx(e.slice(g,x),l,n,c,r,m===a-1))}}else for(let m=0;m<a;m++){const g=m*h,x=g+h;d.push(...tx(e.slice(g,x),l,n,c,r,m===a-1))}const p=u===2?",":"";d[0]="["+(a>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function of(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ps{constructor(t,n,s){if(this.dtype=n,this.shape=t.slice(),this.size=bt(t),s!=null){const r=s.length;O(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Bn(n,this.size),this.strides=te(t)}set(t,...n){n.length===0&&(n=[0]),O(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const s=this.locToIndex(n);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let n=0;for(const r of t){if(r<0||r>=this.shape[n]){const i=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(i)}n++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let n=t[t.length-1];for(let s=0;s<t.length-1;++s)n+=this.strides[s]*t[s];return n}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const n=new Array(this.shape.length);for(let s=0;s<n.length-1;++s)n[s]=Math.floor(t/this.strides[s]),t-=n[s]*this.strides[s];return n[n.length-1]=t,n}get rank(){return this.shape.length}toTensor(){return no().makeTensor(this.values,this.shape,this.dtype)}}let no=null,oh=null;function AZ(e){no=e}function FZ(e){oh=e}class Pn{constructor(t,n,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=n||"float32",this.size=bt(t),this.strides=te(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return oh.buffer(this.shape,this.dtype,t)}bufferSync(){return oh.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Qi(this.shape,t,this.dtype==="complex64")}arraySync(){return Qi(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=no().read(this.dataId);if(this.dtype==="string"){const n=await t;try{return n.map(s=>au(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),no().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=no().readSync(this.dataId);if(this.dtype==="string")try{return t.map(n=>au(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await no().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(no().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return oh.print(this,t)}clone(){return this.throwIfDisposed(),oh.clone(this)}toString(t=!1){const n=this.dataSync();return DZ(n,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),oh.cast(this,t)}variable(t=!0,n,s){return this.throwIfDisposed(),no().makeVariable(this,t,n,s)}}Object.defineProperty(Pn,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function mt(){return fk("Tensor",()=>Pn)}mt();class ex extends Pn{constructor(t,n,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=n,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Le(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);no().disposeTensor(this),this.dataId=t.dataId,no().incRef(this,null)}dispose(){no().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(ex,Symbol.hasInstance,{value:e=>e instanceof Pn&&e.assign!=null&&e.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var dR;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(dR||(dR={}));var aI;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(aI||(aI={}));var uI;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(uI||(uI={}));var lI;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(lI||(lI={}));var cI;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(cI||(cI={}));const RZ={float32:lI,int32:aI,bool:uI,complex64:cI};function _r(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return RZ[e][t]}function hI(e){return _r(e,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function An(e,t){if(e.dtype===t.dtype)return[e,t];const n=_r(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function pR(e){const t=[];return fR(e,t,new Set),t}function fR(e,t,n){if(e==null)return;if(e instanceof Pn){t.push(e);return}if(!_Z(e))return;const s=e;for(const r in s){const i=s[r];n.has(i)||(n.add(i),fR(i,t,n))}}function _Z(e){return Array.isArray(e)||typeof e=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dI(e){return e.kernelName!=null}class mR{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class ah{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new mR}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let n=0;n<t.length;n++){const s=t[n];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:n}=this.initializeBackend(t);if(n)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,n,s=1){return t in this.registryFactory?(ti(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:n,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:n,asyncInit:s}=this.initializeBackend(t);if(!(s?await n:n))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new CZ(this.backendInstance),!0}setupRegisteredKernels(){XF(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){XF(t).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[t])})}initializeBackend(t){const n=this.registryFactory[t];if(n==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=n.factory();if(s&&!(s instanceof rk)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,i=s.then(o=>r<this.pendingBackendInitId?!1:(this.registry[t]=o,this.pendingBackendInit=null,!0)).catch(o=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,ti(`Initialization of backend ${t} failed`),ti(o.stack||o.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return ti(`Initialization of backend ${t} failed`),ti(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,n)=>this.registryFactory[n].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let n=0;n<t.length;n++){const s=t[n],{success:r,asyncInit:i}=this.initializeBackend(s);if(i||r)return{name:s,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,n){const s=this.state.tensorInfo.get(n),r=s.backend,i=this.readSync(n),o=r.refCount(n);r.disposeData(n,!0),s.backend=t,t.move(n,i,s.shape,s.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,n){let s=null;if(n==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");n=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=n(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(t,n,s){t();try{const r=s();return n(),r}catch(r){throw n(),r}}nextTensorId(){return ah.nextTensorId++}nextVariableId(){return ah.nextVariableId++}clone(t){const n=tt.runKernel(Ep,{x:t}),s={x:t},r=o=>({x:()=>{const a="float32",u={x:o},l={dtype:a};return tt.runKernel(mp,u,l)}}),i=[];return this.addTapeNode(this.state.activeScope.name,s,[n],r,i,{}),n}runKernel(t,n,s){if(this.backendName==null&&this.backend,jF(t,this.backendName)==null)throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:n,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,n,s){const r=this.backend.numDataIds();let i=0;s.forEach(u=>{i+=u.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-n-i-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let n,s=[];const r=this.isTapeOn(),i=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let u;const l=dI(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(dI(t)){const{kernelName:f,inputs:m,attrs:g}=t;this.backendName==null&&this.backend;const x=jF(f,this.backendName);O(x!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const b=this.backend.numDataIds();u=x.kernelFunc({inputs:m,attrs:g,backend:this.backend});const w=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,w);const y=w.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(r){const v=this.getTensorsForGradient(f,m,y);s=this.saveTensorsForBackwardMode(v)}return y}}else{const{forwardFunc:f}=t,m=g=>{r&&(s=g.map(x=>this.keep(this.clone(x))))};a=()=>{const g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,m));const x=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,x),x}}const{inputs:c,attrs:h}=t,d=dI(t)?null:t.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=a():(p=this.profiler.profileKernel(l,c,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),n=p.outputs)}),r&&this.addTapeNode(l,c,n,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:n.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?n:n[0]}saveTensorsForBackwardMode(t){return t.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(t,n,s){const r=KF(t);if(r!=null){const i=r.inputsToSave||[],o=r.outputsToSave||[];let a;r.saveAllInputs?(O(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(n).map(l=>n[l])):a=i.map(l=>n[l]);const u=s.filter((l,c)=>o[c]);return a.concat(u)}return[]}makeTensor(t,n,s,r){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let i=t;s==="string"&&op(t[0])&&(i=t.map(u=>ou(u)));const o=r.write(i,n,s),a=new Pn(n,s,o,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const u=this.state.tensorInfo.get(o),l=nZ(i);this.state.numBytes+=l-u.bytes,u.bytes=l}return a}makeTensorFromDataId(t,n,s,r){s=s||"float32";const i={dataId:t,shape:n,dtype:s};return this.makeTensorFromTensorInfo(i,r)}makeTensorFromTensorInfo(t,n){const{dataId:s,shape:r,dtype:i}=t,o=new Pn(r,i,s,this.nextTensorId());return this.trackTensor(o,n),o}makeVariable(t,n=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==t.dtype&&(t=t.cast(r));const i=new ex(t,n,s,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(t,n){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*j0(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:n||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof ex||this.track(t)}incRef(t,n){this.trackTensor(t,n),this.backend.incRef(t.dataId)}removeDataId(t,n){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===n&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const n=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*j0(t.dtype);this.state.numBytes-=s}n.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,n.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const n=this.state.registeredVariables[t];this.disposeVariable(n)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const n=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,n,s,r,i,o){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:n,outputs:s,saved:i},u=KF(t);u!=null&&(r=u.gradFunc),r!=null&&(a.gradient=l=>(l=l.map((c,h)=>{if(c==null){const d=s[h],p=Bs(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),r(l.length>1?l:l[0],i,o))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(n.name=t),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(t){const n=pR(t),s=new Set(n.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const o=this.state.activeScope.track[i];!o.kept&&!s.has(o.id)&&o.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(i=>{!i.kept&&i.scopeId===r.id&&this.track(i)})}gradients(t,n,s,r=!1){if(O(n.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));O(i instanceof Pn,()=>"The result y returned by f() must be a tensor.");const o=NZ(this.state.activeTape,n,i);if(!r&&o.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[i.id]=s??MZ(i.shape),EZ(a,o,l=>this.tidy(l),OZ);const u=n.map(l=>a[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(const c of l.saved)c.dispose()}),this.state.activeTape=null),{value:i,grads:u}})}customGrad(t){return O(lk(t),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{O(n.every(a=>a instanceof Pn),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};n.forEach((a,u)=>{r[u]=a});const i=(a,u)=>(s=t(...n,u),O(s.value instanceof Pn,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),O(lk(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),o=(a,u)=>{const l=s.gradFunc(a,u),c=Array.isArray(l)?l:[l];O(c.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),O(c.every(d=>d instanceof Pn),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:i,backwardsFunc:o,inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,n){return this.state.tensorInfo.get(t).backend.readToGPU(t,n)}async time(t){const n=dr(),s=await this.backend.time(t);return s.wallMs=dr()-n,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new mR;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}ah.nextTensorId=0,ah.nextVariableId=0;function MZ(e){const t=hk(bt(e),"float32");return tt.makeTensor(t,e,"float32")}function gR(){const e=$F();if(e._tfengine==null){const t=new iZ(e);e._tfengine=new ah(t)}return lZ(e._tfengine.ENV),AZ(()=>e._tfengine),e._tfengine}const tt=gR();function OZ(e,t){const n={a:e,b:t};return tt.runKernel(nh,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LZ(){return typeof navigator<"u"&&navigator!=null}function xR(e){if(e||LZ()){if(e||(e=navigator),e.product==="ReactNative")return!0;const t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){const n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function bR(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ei=dt();ei.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ei.registerFlag("IS_BROWSER",()=>bR()),ei.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),ei.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ei.registerFlag("PROD",()=>!1),ei.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ei.getBool("DEBUG")),ei.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ei.registerFlag("IS_TEST",()=>!1),ei.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),ei.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),ei.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),ei.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nx(e,t){let n=e;if(eo(e))return t==="string"?[]:[e.length];if(typeof e=="object"){if("texture"in e){const r=e.channels||"RGBA";return[e.height,e.width*r.length]}else if("buffer"in e&&!(e.buffer instanceof ArrayBuffer))return[e.buffer.size/(t==null?4:j0(t))]}if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||eo(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&dt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&yR(e,s,[]),s}function yR(e,t,n){if(n=n||[],!Array.isArray(e)&&!eo(e)){O(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}O(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),O(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const s=t.slice(1);for(let r=0;r<e.length;++r)yR(e[r],s,n.concat(r))}function wR(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function U(e,t,n,s="numeric"){if(e instanceof Pn)return wR(s,e.dtype,t,n),e;let r=ap(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),wR(s,r,t,n),e==null||!eo(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){const a=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}const i=nx(e,r);!eo(e)&&!Array.isArray(e)&&(e=[e]);const o=r!=="string"?dl(e,r):pl(e,[],!0);return tt.makeTensor(o,i,r)}function vR(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((r,i)=>U(r,`${t}[${i}]`,n,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zZ="__op";function rt(e){const t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+zZ;const r=(...i)=>{tt.startScope(n);try{const o=s(...i);return dk(o)&&console.error("Cannot return a Promise inside of tidy."),tt.endScope(o),o}catch(o){throw tt.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BZ(e,t){const n=U(e,"real","complex"),s=U(t,"imag","complex");ok(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return tt.runKernel(vk,r)}const uh=rt({complex_:BZ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sx(e,t,n,s){if(s==null)s=ap(e);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof e=="object"&&("texture"in e||"buffer"in e&&!(e.buffer instanceof ArrayBuffer))){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return tt.backend.createTensorFromGPUData(e,t||n,s)}if(!eo(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Ca(t);const r=bt(t),i=bt(n);O(r===i,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${i}`);for(let o=0;o<n.length;++o){const a=n[o],u=o===n.length-1?a!==bt(t.slice(o)):!0;O(n[o]===t[o]||!u,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!eo(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?dl(e,s):pl(e,[],!0),tt.makeTensor(e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR(e,t,n){const s=nx(e,n);return sx(e,t,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IR=4;async function CR(e,t){const n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){const a=r[o],u=Array.isArray(e)?e[o].tensor:e[a];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${u.dtype}`);const l={name:a,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const c=new Promise(async h=>{const d=await u.bytes(),p=d.reduce((g,x)=>g+x.length,0)+IR*d.length,f=new Uint8Array(p);let m=0;for(let g=0;g<d.length;g++){const x=d[g],b=new Uint8Array(new Uint32Array([x.length]).buffer);f.set(b,m),m+=IR,f.set(x,m),m+=x.length}h(f)});s.push(c)}else s.push(u.data());t!=null&&(l.group=t),n.push(l)}const i=await Promise.all(s);return{data:PZ(i),specs:n}}function PZ(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach(i=>{if(t+=i.byteLength,n.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const s=new Uint8Array(t);let r=0;return n.forEach(i=>{s.set(new Uint8Array(i.buffer),r),r+=i.byteLength}),s.buffer}const pI=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function $R(e){return pI?Buffer.byteLength(e):new Blob([e]).size}function WZ(e){if(pI)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function VZ(e){if(pI){const s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function SR(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});const n=new Uint8Array(t);let s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function NR(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(n.initializerSignature=e.initializerSignature),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}function UZ(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(s.trainingConfig=e.trainingConfig),e.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return e.signature!=null&&(s.signature=e.signature),e.userDefinedMetadata!=null&&(s.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(s.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(s.initializerSignature=e.initializerSignature),s}async function GZ(e,t){let n,s;return e.weightsManifest!=null&&([n,s]=await t(e.weightsManifest)),UZ(e,n,s)}function rx(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:$R(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:$R(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function HZ(e){const t=[];for(const n of e)t.push(...n.weights);return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return cs.instance==null&&(cs.instance=new cs),cs.instance}static registerSaveRouter(t){cs.getInstance().saveRouters.push(t)}static registerLoadRouter(t){cs.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return cs.getHandlers(t,"save")}static getLoadHandlers(t,n){return cs.getHandlers(t,"load",n)}static getHandlers(t,n,s){const r=[];return(n==="load"?cs.getInstance().loadRouters:cs.getInstance().saveRouters).forEach(i=>{const o=i(t,s);o!==null&&r.push(o)}),r}}const qZ=e=>cs.getSaveHandlers(e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fI="tensorflowjs",mI=1,fl="models_store",uu="model_info_store";function ER(){if(!dt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function gI(e){const t=e.result;t.createObjectStore(fl,{keyPath:"modelPath"}),t.createObjectStore(uu,{keyPath:"modelPath"})}class ml{constructor(t){if(this.indexedDB=ER(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,n){return new Promise((s,r)=>{const i=this.indexedDB.open(fI,mI);i.onupgradeneeded=()=>gI(i),i.onsuccess=()=>{const o=i.result;if(n==null){const a=o.transaction(fl,"readonly"),u=a.objectStore(fl).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return o.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=l=>(o.close(),r(u.error)),a.oncomplete=()=>o.close()}else{const a=rx(n),u=o.transaction(uu,"readwrite");let l=u.objectStore(uu);const c=l.put({modelPath:this.modelPath,modelArtifactsInfo:a});let h;c.onsuccess=()=>{h=o.transaction(fl,"readwrite");const d=h.objectStore(fl).put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:a});d.onsuccess=()=>s({modelArtifactsInfo:a}),d.onerror=p=>{l=u.objectStore(uu);const f=l.delete(this.modelPath);f.onsuccess=()=>(o.close(),r(d.error)),f.onerror=m=>(o.close(),r(d.error))}},c.onerror=d=>(o.close(),r(c.error)),u.oncomplete=()=>{h==null?o.close():h.oncomplete=()=>o.close()}}},i.onerror=o=>r(i.error)})}}ml.URL_SCHEME="indexeddb://";const DR=e=>dt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ml.URL_SCHEME)?jZ(e.slice(ml.URL_SCHEME.length)):null;cs.registerSaveRouter(DR),cs.registerLoadRouter(DR);function jZ(e){return new ml(e)}function KZ(e){return e.startsWith(ml.URL_SCHEME)?e.slice(ml.URL_SCHEME.length):e}class XZ{constructor(){this.indexedDB=ER()}async listModels(){return new Promise((t,n)=>{const s=this.indexedDB.open(fI,mI);s.onupgradeneeded=()=>gI(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(uu,"readonly"),o=i.objectStore(uu).getAll();o.onsuccess=()=>{const a={};for(const u of o.result)a[u.modelPath]=u.modelArtifactsInfo;t(a)},o.onerror=a=>(r.close(),n(o.error)),i.oncomplete=()=>r.close()},s.onerror=r=>n(s.error)})}async removeModel(t){return t=KZ(t),new Promise((n,s)=>{const r=this.indexedDB.open(fI,mI);r.onupgradeneeded=()=>gI(r),r.onsuccess=()=>{const i=r.result,o=i.transaction(uu,"readwrite"),a=o.objectStore(uu),u=a.get(t);let l;u.onsuccess=()=>{if(u.result==null)return i.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const c=a.delete(t),h=()=>{l=i.transaction(fl,"readwrite");const d=l.objectStore(fl).delete(t);d.onsuccess=()=>n(u.result.modelArtifactsInfo),d.onerror=p=>s(u.error)};c.onsuccess=h,c.onerror=d=>(h(),i.close(),s(u.error))}},u.onerror=c=>(i.close(),s(u.error)),o.oncomplete=()=>{l==null?i.close():l.oncomplete=()=>i.close()}},r.onerror=i=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $a="/",lh="tensorflowjs_models",TR="info",YZ="model_topology",ZZ="weight_specs",JZ="weight_data",QZ="model_metadata";function AR(e){return{info:[lh,e,TR].join($a),topology:[lh,e,YZ].join($a),weightSpecs:[lh,e,ZZ].join($a),weightData:[lh,e,JZ].join($a),modelMetadata:[lh,e,QZ].join($a)}}function FR(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function tJ(e){const t=e.split($a);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join($a)}function eJ(e){return e.startsWith(gl.URL_SCHEME)?e.slice(gl.URL_SCHEME.length):e}class gl{constructor(t){if(!dt().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=AR(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),r=rx(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,WZ(t.weightData));const i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch{throw FR(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const a=JSON.parse(i);n.format=a.format,n.generatedBy=a.generatedBy,n.convertedBy=a.convertedBy,a.signature!=null&&(n.signature=a.signature),a.userDefinedMetadata!=null&&(n.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(n.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(n.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(n.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=VZ(o),n}}gl.URL_SCHEME="localstorage://";const RR=e=>dt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(gl.URL_SCHEME)?nJ(e.slice(gl.URL_SCHEME.length)):null;cs.registerSaveRouter(RR),cs.registerLoadRouter(RR);function nJ(e){return new gl(e)}class sJ{constructor(){O(dt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),O(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},n=lh+$a,s=$a+TR;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);if(i.startsWith(n)&&i.endsWith(s)){const o=tJ(i);t[o]=JSON.parse(this.LS.getItem(i))}}return t}async removeModel(t){t=eJ(t);const n=AR(t);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(n.info));return FR(n),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _R="://";class Oo{constructor(){this.managers={}}static getInstance(){return Oo.instance==null&&(Oo.instance=new Oo),Oo.instance}static registerManager(t,n){O(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(_R)&&(t=t.slice(0,t.indexOf(_R))),O(t.length>0,()=>"scheme must not be an empty string.");const s=Oo.getInstance();O(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=n}static getManager(t){const n=Oo.getInstance().managers[t];if(n==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(Oo.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rJ{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,n){return fetch(t,n)}now(){return performance.now()}encode(t,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,n){return new TextDecoder(n).decode(t)}setTimeoutCustom(t,n){if(typeof window>"u"||!dt().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,n);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},n),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}}if(dt().get("IS_BROWSER")){dt().setPlatform("browser",new rJ);try{Oo.registerManager(gl.URL_SCHEME,new sJ)}catch{}try{Oo.registerManager(ml.URL_SCHEME,new XZ)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iJ={importFetch:()=>require("node-fetch")};let xI;class oJ{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return dt().global.fetch!=null?dt().global.fetch(t,n):(xI==null&&(xI=iJ.importFetch()),xI(t,n))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(t)}decode(t,n){return t.length===0?"":new this.util.TextDecoder(n).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}dt().get("IS_NODE")&&!dt().get("IS_BROWSER")&&dt().setPlatform("node",new oJ);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(e,t="float32",n){return t=t||"float32",Ca(e),new Ps(e,t,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aJ(e,t){const n=U(e,"x","cast");if(!eZ(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return tt.runKernel(mp,s,r)}const jt=rt({cast_:aJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uJ(e){const t={x:U(e,"x","clone","string_or_numeric")};return tt.runKernel(Ep,t)}const xl=rt({clone_:uJ});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lJ(e,t=!1){console.log(e.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gR(),FZ({buffer:we,cast:jt,clone:xl,print:lJ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lo(){return tt}function bI(){return tt.memory()}function ct(e,t){return tt.tidy(e,t)}function Ie(e){pR(e).forEach(t=>t.dispose())}function zo(e){return tt.keep(e)}function MR(e,t,n=1){return tt.registerBackend(e,t,n)}function cJ(){return tt.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hJ(e,t){let n=U(e,"a","add"),s=U(t,"b","add");[n,s]=An(n,s);const r={a:n,b:s};return tt.runKernel(nh,r)}const Ft=rt({add_:hJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dJ(e,t){let n=U(e,"a","floorDiv"),s=U(t,"b","floorDiv");[n,s]=An(n,s);const r={a:n,b:s};return tt.runKernel(Sp,r)}const OR=rt({floorDiv_:dJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pJ(e,t){let n=U(e,"a","div"),s=U(t,"b","div");if([n,s]=An(n,s),n.dtype==="int32"&&s.dtype==="int32")return OR(n,s);const r={a:n,b:s},i={};return tt.runKernel(wp,r,i)}const ie=rt({div_:pJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fJ(e,t){let n=U(e,"a","mul"),s=U(t,"b","mul");[n,s]=An(n,s);const r={a:n,b:s};return tt.runKernel(Lp,r)}const et=rt({mul_:fJ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mJ(e){const t=U(e,"x","abs");if(t.dtype==="complex64"){const n={x:t};return tt.runKernel(e1,n)}else{const n={x:t};return tt.runKernel(K0,n)}}const Xs=rt({abs_:mJ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gJ(e){const t={x:U(e,"x","acos")};return tt.runKernel(up,t)}const xJ=rt({acos_:gJ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bJ(e){const t={x:U(e,"x","acosh")};return tt.runKernel(lp,t)}const yJ=rt({acosh_:bJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wJ(e,t=null,n=!1){const s={x:U(e,"x","all","bool")},r={axis:t,keepDims:n};return tt.runKernel(gk,s,r)}const LR=rt({all_:wJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vJ(e,t=null,n=!1){const s={x:U(e,"x","any","bool")},r={axis:t,keepDims:n};return tt.runKernel(xk,s,r)}const yI=rt({any_:vJ});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kJ(e,t=0){const n={x:U(e,"x","argMax")},s={axis:t};return tt.runKernel(X0,n,s)}const af=rt({argMax_:kJ});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IJ(e,t=0){const n={x:U(e,"x","argMin")},s={axis:t};return tt.runKernel(Y0,n,s)}const CJ=rt({argMin_:IJ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $J(e){const t={x:U(e,"x","asin")};return tt.runKernel(cp,t)}const SJ=rt({asin_:$J});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NJ(e){const t={x:U(e,"x","asinh")};return tt.runKernel(hp,t)}const EJ=rt({asinh_:NJ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DJ(e){const t={x:U(e,"x","atan")};return tt.runKernel(dp,t)}const TJ=rt({atan_:DJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AJ(e,t){let n=U(e,"a","atan2"),s=U(t,"b","atan2");[n,s]=An(n,s);const r={a:n,b:s};return tt.runKernel(fp,r)}const FJ=rt({atan2_:AJ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RJ(e){const t={x:U(e,"x","atanh")};return tt.runKernel(pp,t)}const _J=rt({atanh_:RJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uf(e,t,n,s,r="NHWC",i){const o=e[3],a=[...t,o],u=Na(r);return $s(e,a,n,i,s,null,null,u)}function vi(e,t,n,s,r,i,o="channelsLast"){const[a,u]=lf(t);let l;if(o==="channelsLast")l=[a,u,e[3],e[3]];else if(o==="channelsFirst")l=[a,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return $s(e,l,n,s,r,i,!1,o)}function Sa(e,t,n,s,r,i,o="NDHWC"){const[a,u,l]=vI(t);let c,h;if(o==="NDHWC")h="channelsLast",c=[a,u,l,e[4],e[4]];else if(o==="NCDHW")h="channelsFirst",c=[a,u,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return lu(e,c,n,s,r,!1,h,i)}function $s(e,t,n,s,r,i,o=!1,a="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if(a==="channelsLast")[u,l,c,h]=e;else if(a==="channelsFirst")[u,h,l,c]=e;else throw new Error(`Unknown dataFormat ${a}`);const[d,p,,f]=t,[m,g]=lf(n),[x,b]=lf(s),w=ch(d,x),y=ch(p,b),{padInfo:v,outHeight:k,outWidth:C}=LJ(r,l,c,m,g,w,y,i,a),I=o?f*h:f;let $;return a==="channelsFirst"?$=[u,I,k,C]:a==="channelsLast"&&($=[u,k,C,I]),{batchSize:u,dataFormat:a,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:C,outChannels:I,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:y,dilationHeight:x,dilationWidth:b,inShape:e,outShape:$,filterShape:t}}function lu(e,t,n,s,r,i=!1,o="channelsLast",a){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[u,l,c,h,d]=e;else if(o==="channelsFirst")[u,d,l,c,h]=e;else throw new Error(`Unknown dataFormat ${o}`);const[p,f,m,,g]=t,[x,b,w]=vI(n),[y,v,k]=vI(s),C=ch(p,y),I=ch(f,v),$=ch(m,k),{padInfo:S,outDepth:N,outHeight:F,outWidth:D}=zJ(r,l,c,h,x,b,w,C,I,$,a),E=i?g*d:g;let A;return o==="channelsFirst"?A=[u,E,N,F,D]:o==="channelsLast"&&(A=[u,N,F,D,E]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:F,outWidth:D,outChannels:E,padInfo:S,strideDepth:x,strideHeight:b,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:I,effectiveFilterWidth:$,dilationDepth:y,dilationHeight:v,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function MJ(e,t,n,s,r){s==null&&(s=wI(e,t,n));const i=e[0],o=e[1],a=cf((i-t+2*s)/n+1,r),u=cf((o-t+2*s)/n+1,r);return[a,u]}function OJ(e,t,n,s,r,i){r==null&&(r=wI(e,t[0],s[0]));const o=[0,0,0,n];for(let a=0;a<3;a++)e[a]+2*r>=t[a]&&(o[a]=cf((e[a]-t[a]+2*r)/s[a]+1,i));return o}function wI(e,t,n,s=1){const r=ch(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function lf(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function vI(e){return typeof e=="number"?[e,e,e]:e}function ch(e,t){return t<=1?e:e+(e-1)*(t-1)}function LJ(e,t,n,s,r,i,o,a,u){let l,c,h;if(typeof e=="number"){l={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};const d=MJ([t,n],i,s,e,a);c=d[0],h=d[1]}else if(e==="same"){c=Math.ceil(t/s),h=Math.ceil(n/r);const d=Math.max(0,(c-1)*s+i-t),p=Math.max(0,(h-1)*r+o-n),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),x=p-g;l={top:f,bottom:m,left:g,right:x,type:"SAME"}}else if(e==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/s),h=Math.ceil((n-o+1)/r);else if(typeof e=="object"){const d=u==="channelsLast"?e[1][0]:e[2][0],p=u==="channelsLast"?e[1][1]:e[2][1],f=u==="channelsLast"?e[2][0]:e[3][0],m=u==="channelsLast"?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=cf((t-i+d+p)/s+1,a),h=cf((n-o+f+m)/r+1,a)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:l,outHeight:c,outWidth:h}}function zJ(e,t,n,s,r,i,o,a,u,l,c){let h,d,p,f;if(e==="valid"&&(e=0),typeof e=="number"){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};const m=OJ([t,n,s,1],[a,u,l],1,[r,i,o],e,c);d=m[0],p=m[1],f=m[2]}else if(e==="same"){d=Math.ceil(t/r),p=Math.ceil(n/i),f=Math.ceil(s/o);const m=(d-1)*r+a-t,g=(p-1)*i+u-n,x=(f-1)*o+l-s,b=Math.floor(m/2),w=m-b,y=Math.floor(g/2),v=g-y,k=Math.floor(x/2),C=x-k;h={top:y,bottom:v,left:k,right:C,front:b,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function cf(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function bl(e){const[t,n,s]=lf(e);return t===1&&n===1&&s===1}function Ws(e,t){return bl(e)||bl(t)}function yl(e){return lf(e).every(t=>t>0)}function Na(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function pr(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")O(Qc(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{O(Qc(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BJ(e,t){const n={x:U(e,"x","reshape","string_or_numeric")},s={shape:t};return tt.runKernel(M1,n,s)}const st=rt({reshape_:BJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PJ(e,t,n,s,r){const i=U(e,"x","avgPool","float32"),o=1;O(Ws(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let a=i,u=!1;i.rank===3&&(u=!0,a=st(i,[1,i.shape[0],i.shape[1],i.shape[2]])),O(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),pr("avgPool",s,r);const l={x:a},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let h=tt.runKernel(Z0,l,c);return h=jt(h,i.dtype),u?st(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const kI=rt({avgPool_:PJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WJ(e,t,n,s,r,i="NDHWC"){const o=U(e,"x","avgPool3d","float32");let a=o,u=!1;o.rank===4&&(u=!0,a=st(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),O(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),O(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),pr("avgPool3d",s,r);const l={x:a},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:i};let h=tt.runKernel(J0,l,c);return h=jt(h,a.dtype),u?st(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const VJ=rt({avgPool3d_:WJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UJ(e,t=0){O(e.length>=1,()=>"Pass at least one tensor to concat");const n=vR(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),n.length===1)return xl(n[0]);const s=n,r={axis:t};return tt.runKernel(n1,s,r)}const fr=rt({concat_:UJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GJ(e,t,n=!1,s=!1){let r=U(e,"a","matMul"),i=U(t,"b","matMul");[r,i]=An(r,i);const o={a:r,b:i},a={transposeA:n,transposeB:s};return tt.runKernel(Q0,o,a)}const ze=rt({matMul_:GJ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HJ(e){const t={x:U(e,"x","sigmoid","float32")};return tt.runKernel(Kp,t)}const hh=rt({sigmoid_:HJ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qJ(e,t,n){const s=U(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:t,size:n};return tt.runKernel(P1,r,i)}const en=rt({slice_:qJ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jJ(e){const t={x:U(e,"x","tanh","float32")};return tt.runKernel(tf,t)}const II=rt({tanh_:jJ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KJ(e,t,n){const s=U(e,"x","batchToSpaceND"),r=t.reduce((a,u)=>a*u);O(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),O(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),O(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);const i={x:s},o={blockShape:t,crops:n};return tt.runKernel(t1,i,o)}const CI=rt({batchToSpaceND_:KJ});function XJ(e){let t;return e.rank===0||e.rank===1?t=st(e,[1,1,1,e.size]):e.rank===2?t=st(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=st(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YJ(e,t,n,s,r,i){i==null&&(i=.001);const o=U(e,"x","batchNorm"),a=U(t,"mean","batchNorm"),u=U(n,"variance","batchNorm");let l;r!=null&&(l=U(r,"scale","batchNorm"));let c;s!=null&&(c=U(s,"offset","batchNorm")),O(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:XJ(o),scale:l,offset:c,mean:a,variance:u},d={varianceEpsilon:i},p=tt.runKernel(h1,h,d);return st(p,o.shape)}const ix=rt({batchNorm_:YJ});function ZJ(e,t,n,s,r,i){const o=U(e,"x","batchNorm"),a=U(t,"mean","batchNorm"),u=U(n,"variance","batchNorm");let l;r!=null&&(l=U(r,"scale","batchNorm"));let c;return s!=null&&(c=U(s,"offset","batchNorm")),O(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),O(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),O(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&O(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&O(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),ix(o,a,u,c,l,i)}const JJ=rt({batchNorm2d_:ZJ});function QJ(e,t,n,s,r,i){const o=U(e,"x","batchNorm"),a=U(t,"mean","batchNorm"),u=U(n,"variance","batchNorm");let l;r!=null&&(l=U(r,"scale","batchNorm"));let c;return s!=null&&(c=U(s,"offset","batchNorm")),O(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),O(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),O(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&O(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&O(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),ix(o,a,u,c,l,i)}const tQ=rt({batchNorm3d_:QJ});function eQ(e,t,n,s,r,i){const o=U(e,"x","batchNorm"),a=U(t,"mean","batchNorm"),u=U(n,"variance","batchNorm");let l;r!=null&&(l=U(r,"scale","batchNorm"));let c;return s!=null&&(c=U(s,"offset","batchNorm")),O(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),O(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),O(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&O(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&O(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),ix(o,a,u,c,l,i)}const nQ=rt({batchNorm4d_:eQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sQ(e,t,n){const s=U(e,"x","bincount"),r=U(t,"weights","bincount");O(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),O(n>=0,()=>`size must be non-negative, but got ${n}.`),O(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const i={x:s,weights:r},o={size:n};return tt.runKernel(wk,i,o)}const rQ=rt({bincount_:sQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iQ(e,t){let n=U(e,"broadcastTo","x");const s=n.shape;if(Ca(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const u=n.shape.slice();for(;u.length<t.length;)u.unshift(1);n=st(n,u)}const r=n.shape,i=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])i[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(i.map((u,l)=>u>1?l:-1).filter(u=>u>=0).length===0)return xl(n);const o={x:n},a={reps:i};return tt.runKernel(ef,o,a)}const hf=rt({broadcastTo_:iQ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oQ(e){const t={x:U(e,"x","ceil","float32")};return tt.runKernel(gp,t)}const aQ=rt({ceil_:oQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ox(e,t,n){Ca(e);const s={shape:e,value:t,dtype:n};return tt.runKernel(Mk,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uQ(e,t,n){const s=U(e,"x","clipByValue");if(O(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return ox(s.shape,t,s.dtype);const r={x:s},i={clipValueMin:t,clipValueMax:n};return tt.runKernel(xp,r,i)}const ni=rt({clipByValue_:uQ});function lQ(e){return fr(e,0)}const cQ=rt({concat1d_:lQ});function hQ(e,t){return fr(e,t)}const dQ=rt({concat2d_:hQ});function pQ(e,t){return fr(e,t)}const fQ=rt({concat3d_:pQ});function mQ(e,t){return fr(e,t)}const gQ=rt({concat4d_:mQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xQ(e,t,n,s,r="NHWC",i=[1,1],o){const a=U(e,"x","conv2d","float32"),u=U(t,"filter","conv2d","float32");let l=a,c=!1;a.rank===3&&(c=!0,l=st(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),O(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),pr("conv2d",s,o);const h=r==="NHWC"?l.shape[3]:l.shape[1];O(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),O(Ws(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),O(yl(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),O(yl(n),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:l,filter:u},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o},f=tt.runKernel(s1,d,p);return c?st(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const wl=rt({conv2d_:xQ});function bQ(e,t,n,s,r="NWC",i=1,o){const a=U(e,"x","conv1d"),u=U(t,"filter","conv1d");let l=a,c=!1;a.rank===2&&(c=!0,l=st(a,[1,a.shape[0],a.shape[1]])),O(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),O(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),pr("conv1d",s,o),O(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),O(Ws(n,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`),O(yl(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),O(yl(n),()=>"Error in conv1D: Stride should be larger than 0."),O(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=st(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=st(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=wl(d,h,[1,n],s,"NHWC",[1,i],o);return c?st(p,[p.shape[2],p.shape[3]]):st(p,[p.shape[0],p.shape[2],p.shape[3]])}const zR=rt({conv1d_:bQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yQ(e,t,n,s,r,i="NHWC",o){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,u=t,l=!1;t.rank===3&&(l=!0,u=st(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,e[0],e[1],e[2]]),O(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),O(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),O(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c=i==="NHWC"?a[3]:a[1],h=i==="NHWC"?u.shape[3]:u.shape[1];O(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),O(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),pr("conv2dDerInput",r,o);const d={dy:u,filter:n},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:o,inputShape:a},f=tt.runKernel(r1,d,p);return l?st(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const $I=rt({conv2DBackpropInput_:yQ});function wQ(e,t,n,s,r,i){const o=U(e,"x","conv2dTranspose"),a=U(t,"filter","conv2dTranspose");return $I(n,o,a,s,r,"NHWC",i)}const BR=rt({conv2dTranspose_:wQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vQ(e,t,n,s,r="NDHWC",i=[1,1,1]){const o=U(e,"x","conv3d"),a=U(t,"filter","conv3d");let u=o,l=!1;o.rank===4&&(l=!0,u=st(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),O(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),O(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),O(Ws(n,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),O(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),O(yl(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),O(yl(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:u,filter:a},h={strides:n,pad:s,dataFormat:r,dilations:i},d=tt.runKernel(i1,c,h);return l?st(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const kQ=rt({conv3d_:vQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IQ(e,t,n,s,r){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,o=t,a=!1;t.rank===4&&(a=!0,o=st(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const u=i[4],l=o.shape[4];O(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),O(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),O(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),O(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),O(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c={dy:o,filter:n},h={pad:r,strides:s,inputShape:i},d=tt.runKernel(Ck,c,h);return a?st(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const PR=rt({conv3DBackpropInput_:IQ});function CQ(e,t,n,s,r){const i=U(e,"x","conv3dTranspose"),o=U(t,"filter","conv3dTranspose");return PR(n,i,o,s,r)}const $Q=rt({conv3dTranspose_:CQ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SQ(e){const t={x:U(e,"x","cos","float32")};return tt.runKernel(bp,t)}const SI=rt({cos_:SQ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NQ(e){const t={x:U(e,"x","cosh","float32")};return tt.runKernel(yp,t)}const WR=rt({cosh_:NQ});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EQ(e,t=0,n=!1,s=!1){const r={x:U(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:s};return tt.runKernel($k,r,i)}const NI=rt({cumprod_:EQ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DQ(e,t=0,n=!1,s=!1){const r={x:U(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:s};return tt.runKernel(o1,r,i)}const VR=rt({cumsum_:DQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TQ(e,t,n,s=!1){const r=U(e,"x","denseBincount"),i=U(t,"weights","denseBincount");O(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),O(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),O(n>=0,()=>`size must be non-negative, but got ${n}.`),O(i.size===r.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`);const o={x:r,weights:i},a={size:n,binaryOutput:s};return tt.runKernel(Nk,o,a)}const UR=rt({denseBincount_:TQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AQ(e,t,n="NHWC"){const s=U(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],i=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];O(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),O(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),O(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t} for depthToSpace with input shape
        ${s.shape}`),O(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);const a={x:s},u={blockSize:t,dataFormat:n};return tt.runKernel(Ek,a,u)}const FQ=rt({depthToSpace_:AQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RQ(e,t,n,s,r="NHWC",i=[1,1],o){const a=U(e,"x","depthwiseConv2d","float32"),u=U(t,"filter","depthwiseConv2d","float32");let l=a,c=!1;a.rank===3&&(c=!0,l=st(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),O(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h=r==="NHWC"?l.shape[3]:l.shape[1];O(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),pr("depthwiseConv2d",s,o);const d={x:l,filter:u},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o},f=tt.runKernel(a1,d,p);return c?st(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const EI=rt({depthwiseConv2d_:RQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Q(e,t,n,s,r=[1,1],i="NHWC"){const o=U(e,"x","dilation2d"),a=U(t,"filter","dilation2d");O(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),O(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),O(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let u=o,l=!1;o.rank===3&&(u=st(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0),O(u.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${a.shape[2]}`);const c={x:u,filter:a},h={strides:n,pad:s,dilations:r},d=tt.runKernel(u1,c,h);return l?st(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const MQ=rt({dilation2d_:_Q});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dh(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const i=n-1-r,o=e[i]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(i)}return s}function Xn(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],i=t.length-s-1,o=t[i];(r==null||r===1&&o>1)&&n.unshift(i)}return n}function fe(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let i=e[e.length-r-1];i==null&&(i=1);let o=t[t.length-r-1];if(o==null&&(o=1),i===1)n.unshift(o);else if(o===1)n.unshift(i);else if(i!==o){const a=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(a)}else n.unshift(i)}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OQ(e,t){let n=U(e,"a","equal","string_or_numeric"),s=U(t,"b","equal","string_or_numeric");[n,s]=An(n,s),fe(n.shape,s.shape);const r={a:n,b:s};return tt.runKernel(l1,r)}const Bo=rt({equal_:OQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LQ(e,t,n){const s=U(t,"a","where"),r=U(n,"b","where"),i=U(e,"condition","where","bool"),o=fe(fe(i.shape,s.shape),r.shape),a=hf(i,o),u=hf(s,o),l=hf(r,o),c={condition:a,t:u,e:l};return tt.runKernel(B1,c)}const Mr=rt({where_:LQ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zQ(e){const t={x:U(e,"x","zerosLike")};return tt.runKernel(j1,t)}const Te=rt({zerosLike_:zQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BQ(e,t){let n=U(e,"a","div"),s=U(t,"b","div");[n,s]=An(n,s);const r=ie(n,s),i=Te(r),o=Bo(s,i);return Mr(o,i,r)}const PQ=rt({divNoNan_:BQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WQ(e,t){const n=U(e,"t1","dot"),s=U(t,"t2","dot");O((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);const r=n.rank===1?n.size:n.shape[1],i=s.rank===1?s.size:s.shape[0];if(O(r===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`),n.rank===1&&s.rank===1){const o=st(n,[1,-1]),a=st(s,[-1,1]),u=ze(o,a);return st(u,[])}else if(n.rank===1&&s.rank===2){const o=st(n,[1,-1]),a=st(s,[s.shape[0],s.shape[1]]),u=ze(o,a);return st(u,[u.size])}else if(n.rank===2&&s.rank===1){const o=st(s,[-1,1]),a=ze(n,o);return st(a,[a.size])}else{const o=st(s,[s.shape[0],s.shape[1]]);return ze(n,o)}}const VQ=rt({dot_:WQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(e){const t={x:U(e,"x","elu","float32")};return tt.runKernel(vp,t)}const ax=rt({elu_:UQ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GQ(e){let t=U(e,"x","erf");O(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=jt(t,"float32"));const n={x:t};return tt.runKernel(kp,n)}const HQ=rt({erf_:GQ});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DI(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function GR(e,t,n){const s=e.length+t.length,r=[];let i=0,o=0;for(let a=0;a<s;a++)n.indexOf(a)===-1?r.push(e[i++]):r.push(t[o++]);return r}function hs(e,t){const n=[],s=e.length;for(let i=0;i<s;i++)t.indexOf(i)===-1&&n.push(e[i]);const r=t.map(i=>e[i]);return[n,r]}function Wn(e,t){const n=t.map(s=>1);return GR(e,n,t)}function Ss(e,t,n){O(DI(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Cn(e,t){if(DI(e,t))return null;const n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function cu(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function Fn(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qQ(e,t=null,n=!1){const s={x:U(e,"x","max")},r={reductionIndices:t,keepDims:n};return tt.runKernel(v1,s,r)}const so=rt({max_:qQ});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jQ(e,t=null,n=!1){const s={x:U(e,"x","min")},r={axis:t,keepDims:n};return tt.runKernel($1,s,r)}const ux=rt({min_:jQ});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KQ(e,t){let n=U(e,"base","pow"),s=U(t,"exp","pow");[n,s]=An(n,s);const r={a:n,b:s};return tt.runKernel(zp,r)}const ph=rt({pow_:KQ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(e,t){if((eo(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&eo(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sx(e,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XQ(e){const t={x:U(e,"x","sqrt","float32")};return tt.runKernel(Yp,t)}const Ys=rt({sqrt_:XQ});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YQ(e){const t=U(e,"x","square"),n={};return tt.runKernel("Square",{x:t},n)}const pn=rt({square_:YQ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZQ(e,t=null,n=!1){let s=U(e,"x","sum");s.dtype==="bool"&&(s=jt(s,"int32"));const r={x:s},i={axis:t,keepDims:n};return tt.runKernel(W1,r,i)}const re=rt({sum_:ZQ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JQ(e,t="euclidean",n=null,s=!1){e=U(e,"x","norm");const r=HR(e,t,n);let i=r.shape;if(s){const o=ye(n,e.shape);i=Wn(r.shape,o)}return st(r,i)}function HR(e,t,n=null){if(e.rank===0)return Xs(e);if(e.rank!==1&&n===null)return HR(st(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return re(Xs(e),n);if(t===1/0)return so(Xs(e),n);if(t===-1/0)return ux(Xs(e),n);if(t==="euclidean"||t===2)return Ys(re(ph(Xs(e),Be(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return so(re(Xs(e),n[0]),n[1]-1);if(t===1/0)return so(re(Xs(e),n[1]),n[0]);if(t===-1/0)return ux(re(Xs(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return Ys(re(pn(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const lx=rt({norm_:JQ});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QQ(e,t=null,n=!1){return lx(e,"euclidean",t,n)}const ttt=rt({euclideanNorm_:QQ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ett(e){const t={x:U(e,"x","exp")};return tt.runKernel(Ip,t)}const Ea=rt({exp_:ett});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ntt(e,t=0){const n=U(e,"x","expandDims","string_or_numeric");O(t<=n.rank,()=>"Axis must be <= rank of the tensor");const s={input:n},r={dim:t};return tt.runKernel(c1,s,r)}const Or=rt({expandDims_:ntt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stt(e){const t={x:U(e,"x","expm1")};return tt.runKernel(Cp,t)}const rtt=rt({expm1_:stt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function itt(e,t){const n=U(e,"x","tile","string_or_numeric");O(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const s={x:n},r={reps:t};return tt.runKernel(ef,s,r)}const ro=rt({tile_:itt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ott(e,t,n,s="float32"){t==null&&(t=e);const r=we([e,t],s),i=e<=t?e:t;for(let a=0;a<i;++a)r.set(1,a,a);const o=st(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return ro(Or(o,0),[n[0],1,1]);if(n.length===2)return ro(Or(Or(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return ro(Or(Or(Or(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const qR=rt({eye_:ott});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function att(e){const t={x:U(e,"x","floor","float32")};return tt.runKernel($p,t)}const cx=rt({floor_:att});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function utt(e,t,n=0,s=0){const r=U(e,"x","gather"),i=U(t,"indices","gather","int32"),o={x:r,indices:i},a={axis:n,batchDims:s};return tt.runKernel(d1,o,a)}const TI=rt({gather_:utt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ltt(e,t){let n=U(e,"a","greater","string_or_numeric"),s=U(t,"b","greater","string_or_numeric");[n,s]=An(n,s),fe(n.shape,s.shape);const r={a:n,b:s};return tt.runKernel(p1,r)}const si=rt({greater_:ltt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ctt(e,t){let n=U(e,"a","greaterEqual","string_or_numeric"),s=U(t,"b","greaterEqual","string_or_numeric");[n,s]=An(n,s),fe(n.shape,s.shape);const r={a:n,b:s};return tt.runKernel(Np,r)}const vl=rt({greaterEqual_:ctt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function htt(e){const t={input:U(e,"input","imag")};return tt.runKernel(zk,t)}const AI=rt({imag_:htt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dtt(e){const t={x:U(e,"x","isFinite")};return tt.runKernel(Dp,t)}const ptt=rt({isFinite_:dtt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ftt(e){const t={x:U(e,"x","isInf")};return tt.runKernel(Tp,t)}const mtt=rt({isInf_:ftt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gtt(e){const t={x:U(e,"x","isNaN")};return tt.runKernel(Ap,t)}const xtt=rt({isNaN_:gtt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function btt(e,t=.2){const n={x:U(e,"x","leakyRelu")},s={alpha:t};return tt.runKernel(f1,n,s)}const FI=rt({leakyRelu_:btt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ytt(e,t){let n=U(e,"a","less","string_or_numeric"),s=U(t,"b","less","string_or_numeric");[n,s]=An(n,s),fe(n.shape,s.shape);const r={a:n,b:s};return tt.runKernel(m1,r)}const jR=rt({less_:ytt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wtt(e,t){let n=U(e,"a","lessEqual","string_or_numeric"),s=U(t,"b","lessEqual","string_or_numeric");[n,s]=An(n,s),fe(n.shape,s.shape);const r={a:n,b:s};return tt.runKernel(g1,r)}const fh=rt({lessEqual_:wtt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vtt(e,t=5,n=1,s=1,r=.5){const i=U(e,"x","localResponseNormalization");O(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),O(Qc(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=i,a=!1;i.rank===3&&(a=!0,o=st(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:s,beta:r},c=tt.runKernel(w1,u,l);return a?st(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const ktt=rt({localResponseNormalization_:vtt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Itt(e){const t={x:U(e,"x","log","float32")};return tt.runKernel(Fp,t)}const Po=rt({log_:Itt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ctt(e){const t={x:U(e,"x","log1p")};return tt.runKernel(Rp,t)}const KR=rt({log1p_:Ctt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $tt(e,t){O(lk(e),()=>"The f passed in variableGrads(f) must be a function"),O(t==null||Array.isArray(t)&&t.every(l=>l instanceof ex),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=t!=null;if(!n){t=[];for(const l in tt.registeredVariables)t.push(tt.registeredVariables[l])}const s=n?t.filter(l=>!l.trainable):null,r=t.length;t=t.filter(l=>l.trainable),O(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const i=!0,{value:o,grads:a}=tt.gradients(e,t,null,i);O(a.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),O(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const u={};return t.forEach((l,c)=>{a[c]!=null&&(u[l.name]=a[c])}),s!=null&&s.forEach(l=>u[l.name]=null),{value:o,grads:u}}function mh(e){return tt.customGrad(e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Stt(e){const t={x:U(e,"x","neg")};return tt.runKernel(N1,t)}const Vn=rt({neg_:Stt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ntt(e){const t={x:U(e,"x","softplus")};return tt.runKernel(Xp,t)}const df=rt({softplus_:Ntt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ett(e){const t=U(e,"x","logSigmoid");return mh(n=>({value:Vn(df(Vn(n))),gradFunc:s=>et(s,hh(Vn(n)))}))(t)}const Dtt=rt({logSigmoid_:Ett});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ttt(e,t){let n=U(e,"a","sub"),s=U(t,"b","sub");[n,s]=An(n,s);const r={a:n,b:s};return tt.runKernel(Jp,r)}const ae=rt({sub_:Ttt});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Att(e,t=-1){const n=U(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return mh((s,r)=>{const i=so(s,t,!0),o=ae(s,i),a=ae(jt(o,"float32"),Po(re(Ea(o),t,!0)));return r([a]),{value:a,gradFunc:(u,l)=>{const[c]=l,h=!0,d=Ea(c);return ae(u,et(re(u,t,h),d))}}})(n)}const XR=rt({logSoftmax_:Att});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ftt(e,t=null,n=!1){const s=U(e,"x","logSumExp"),r=ye(t,s.shape),i=so(s,r,!0),o=ae(s,i),a=Ea(o),u=re(a,r),l=Po(u),c=Ft(st(i,l.shape),l);if(n){const h=Wn(c.shape,r);return st(c,h)}return c}const Rtt=rt({logSumExp_:Ftt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _tt(e,t){const n=U(e,"a","logicalAnd","bool"),s=U(t,"b","logicalAnd","bool");fe(n.shape,s.shape);const r={a:n,b:s};return tt.runKernel(x1,r)}const Da=rt({logicalAnd_:_tt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mtt(e){const t={x:U(e,"x","logicalNot","bool")};return tt.runKernel(b1,t)}const RI=rt({logicalNot_:Mtt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ott(e,t){const n=U(e,"a","logicalOr","bool"),s=U(t,"b","logicalOr","bool");fe(n.shape,s.shape);const r={a:n,b:s};return tt.runKernel(y1,r)}const YR=rt({logicalOr_:Ott});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ltt(e,t){const n=U(e,"a","logicalXor","bool"),s=U(t,"b","logicalXor","bool");return fe(n.shape,s.shape),Da(YR(e,t),RI(Da(e,t)))}const ztt=rt({logicalXor_:Ltt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Btt(e,t,n,s,r){const i=U(e,"x","maxPool"),o=1;let a=i,u=!1;i.rank===3&&(u=!0,a=st(i,[1,i.shape[0],i.shape[1],i.shape[2]])),O(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),O(Ws(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),pr("maxPool",s,r);const l={x:a},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},h=tt.runKernel(k1,l,c);return u?st(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const _I=rt({maxPool_:Btt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ptt(e,t=[1,1,1],n,s,r,i="NDHWC"){const o=U(e,"x","maxPool3d");let a=o,u=!1;o.rank===4&&(u=!0,a=st(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),O(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),O(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),pr("maxPool3d",s,r);const l={x:a},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:i},h=tt.runKernel(I1,l,c);return u?st(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Wtt=rt({maxPool3d_:Ptt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vtt(e,t){let n=U(e,"a","maximum"),s=U(t,"b","maximum");[n,s]=An(n,s),n.dtype==="bool"&&(n=jt(n,"int32"),s=jt(s,"int32")),fe(n.shape,s.shape);const r={a:n,b:s};return tt.runKernel(_p,r)}const hu=rt({maximum_:Vtt});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Utt(e,t=null,n=!1){const s={x:U(e,"x","mean")},r={axis:t,keepDims:n};return tt.runKernel(C1,s,r)}const Un=rt({mean_:Utt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ds(e,t="float32"){if(Ca(e),t==="complex64"){const s=ds(e,"float32"),r=ds(e,"float32");return uh(s,r)}const n=Bs(bt(e),t);return tt.makeTensor(n,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kl(e,t="float32"){if(Ca(e),t==="complex64"){const s=kl(e,"float32"),r=ds(e,"float32");return uh(s,r)}const n=hk(bt(e),t);return tt.makeTensor(n,e,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gtt(e,t){let n=U(e,"a","minimum"),s=U(t,"b","minimum");[n,s]=An(n,s),n.dtype==="bool"&&(n=jt(n,"int32"),s=jt(s,"int32")),fe(n.shape,s.shape);const r={a:n,b:s};return tt.runKernel(Mp,r)}const MI=rt({minimum_:Gtt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Htt(e,t,n){O(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const s=U(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");O(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r=n==="reflect"?1:0;for(let a=0;a<s.rank;a++)O(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),O(t[a][0]>=0&&t[a][0]<=s.shape[a]-r&&t[a][1]>=0&&t[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const i={paddings:t,mode:n},o={x:s};return tt.runKernel(S1,o,i)}const qtt=rt({mirrorPad_:Htt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jtt(e,t){let n=U(e,"a","mod"),s=U(t,"b","mod");[n,s]=An(n,s);const r={a:n,b:s};return tt.runKernel(Op,r)}const Ktt=rt({mod_:jtt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xtt(e,t=null,n=!1){e=U(e,"x","moments");const s=ye(t,e.shape),r=Un(e,s,n);let i=r.shape;n||(i=Wn(r.shape,s));const o=pn(ae(jt(e,"float32"),st(r,i))),a=Un(o,s,n);return{mean:r,variance:a}}const OI=rt({moments_:Xtt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ytt(e,t){let n=U(e,"a","notEqual","string_or_numeric"),s=U(t,"b","notEqual","string_or_numeric");[n,s]=An(n,s),fe(n.shape,s.shape);const r={a:n,b:s};return tt.runKernel(E1,r)}const hx=rt({notEqual_:Ytt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ztt(e,t,n=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:U(e,"indices","oneHot","int32")},o={dtype:r,depth:t,onValue:n,offValue:s};return tt.runKernel(T1,i,o)}const ZR=rt({oneHot_:Ztt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jtt(e){const t={x:U(e,"x","onesLike")};return tt.runKernel(D1,t)}const ki=rt({onesLike_:Jtt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qtt(e,t,n=0){const s=U(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},i={x:s};return tt.runKernel(F1,i,r)}const LI=rt({pad_:Qtt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tet(e,t,n){const s=U(e,"x","spaceToBatchND");O(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),O(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),O(s.shape.reduce((o,a,u)=>u>0&&u<=t.length?o&&(a+n[u-1][0]+n[u-1][1])%t[u-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const r={x:s},i={blockShape:t,paddings:n};return tt.runKernel(V1,r,i)}const zI=rt({spaceToBatchND_:tet});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eet(e,t,n,s,r,i,o){r==null&&(r=[1,1]),i==null&&(i=1),s===0&&(s="valid");const a=U(e,"x","maxPool");let u=a,l=!1;a.rank===3&&(l=!0,u=st(a,[1,a.shape[0],a.shape[1],a.shape[2]])),O(Ws(i,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`);const c=vi(u.shape,t,i,r,s),h=[c.dilationHeight,c.dilationWidth];let d;s==="same"?d=set([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=net([c.inHeight,c.inWidth],h,d),g=p?s:"valid",x=p?u:zI(u,h,f),b=(n==="avg"?()=>kI(x,t,i,g,o):()=>_I(x,t,i,g,o))(),w=p?b:CI(b,h,m);return l?st(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function net(e,t,n){const s=n.map(c=>c[0]),r=n.map(c=>c[1]),i=e.concat(s,r),o=t.map((c,h)=>(c-i[h]%c)%c),a=r.map((c,h)=>c+o[h]),u=t.map((c,h)=>[s[h],a[h]]),l=t.map((c,h)=>[0,o[h]]);return[u,l]}function set(e,t){const n=e.map((i,o)=>i+(i-1)*(t[o]-1)).map(i=>i-1),s=n.map(i=>Math.floor(i/2)),r=n.map((i,o)=>i-s[o]);return n.map((i,o)=>[s[o],r[o]])}const ret=rt({pool_:eet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iet(e,t){const n=U(e,"x","prelu"),s=U(t,"alpha","prelu"),r={x:n,alpha:s};return tt.runKernel(R1,r)}const BI=rt({prelu_:iet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oet(e,t=null,n=!1){let s=U(e,"x","prod");s.dtype==="bool"&&(s=jt(s,"int32"));const r={x:s},i={axis:t,keepDims:n};return tt.runKernel(_1,r,i)}const aet=rt({prod_:oet});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JR{constructor(t,n,s,r,i){this.mean=t,this.stdDev=n,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=i||Math.random();this.random=Jv.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,n,s=!1;for(;!s;){let r,i,o;do r=2*this.random()-1,i=2*this.random()-1,o=r*r+i*i;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*r*a,n=this.mean+this.stdDev*i*a,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class uet{constructor(t=0,n=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=n-t,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${n} <= 1 and dtype is not float`);this.random=Jv.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cet(e,t=0,n=1,s,r){if(Ca(e),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const i=new JR(t,n,s,!1,r),o=we(e,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const het=rt({randomNormal_:cet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function det(e,t=0,n=1,s="float32",r){Ca(e);const i=we(e,s),o=new uet(t,n,null,r);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const dx=rt({randomUniform_:det});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pf(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return tt.runKernel(Hk,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pet(e){const t={input:U(e,"input","real")};return tt.runKernel(qk,t)}const px=rt({real_:pet});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fet(e){const t={x:U(e,"x","reciprocal")};return tt.runKernel(Bp,t)}const met=rt({reciprocal_:fet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function get(e){const t={x:U(e,"x","relu")};return tt.runKernel(Pp,t)}const Il=rt({relu_:get});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xet(e){const t={x:U(e,"x","relu6")};return tt.runKernel(Wp,t)}const QR=rt({relu6_:xet});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bet(e,t){const n={x:U(e,"x","reverse")},s={dims:t};return tt.runKernel(z1,n,s)}const Cl=rt({reverse_:bet});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yet(e){const t={x:U(e,"x","round")};return tt.runKernel(Vp,t)}const t_=rt({round_:yet});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wet(e){const t={x:U(e,"x","rsqrt","float32")};return tt.runKernel(Up,t)}const e_=rt({rsqrt_:wet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vet(e){const t={x:U(e,"x","selu")};return tt.runKernel(Gp,t)}const n_=rt({selu_:vet});function ket(e,t,n,s,r,i=[1,1],o="NHWC"){const a=U(e,"x","separableConv2d"),u=U(t,"depthwiseFilter","separableConv2d"),l=U(n,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(a.rank===3&&(h=!0,c=st(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");O(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),O(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),O(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),O(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),O(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=u.shape[2],p=u.shape[3];O(l.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`);const f=EI(c,u,s,r,o,i),m=wl(f,l,1,"valid",o);return h?st(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const s_=rt({separableConv2d_:ket});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iet(e){const t={x:U(e,"x","sign")};return tt.runKernel(jp,t)}const Cet=rt({sign_:Iet});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $et(e){const t={x:U(e,"x","sin","float32")};return tt.runKernel(Hp,t)}const r_=rt({sin_:$et});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Net(e){const t={x:U(e,"x","sinh")};return tt.runKernel(qp,t)}const i_=rt({sinh_:Net});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eet(e,t,n){const s=U(e,"x","slice1d");return O(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),en(s,[t],[n])}const PI=rt({slice1d_:Eet});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Det(e,t,n){const s=U(e,"x","slice2d");return O(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),en(s,t,n)}const o_=rt({slice2d_:Det});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tet(e,t,n){const s=U(e,"x","slice3d");return O(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),en(s,t,n)}const WI=rt({slice3d_:Tet});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aet(e,t,n){const s=U(e,"x","slice4d");return O(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),en(s,t,n)}const fx=rt({slice4d_:Aet});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fet(e,t=-1){const n=U(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return tt.runKernel(G1,s,r)}const VI=rt({softmax_:Fet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ret(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return tt.runKernel(_k,t)}const a_=rt({fft_:Ret});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _et(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return tt.runKernel(Lk,t)}const UI=rt({ifft_:_et});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Met(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=st(e,[n,t]);s=UI(r)}else{const r=[n,2*(t-1)],i=st(px(e),[n,t]),o=st(AI(e),[n,t]),a=Cl(en(i,[0,1],[n,t-2]),1),u=et(Cl(en(o,[0,1],[n,t-2]),1),Be(-1)),l=fr([i,a],1),c=fr([o,u],1),h=st(uh(l,c),[r[0],r[1]]);s=UI(h)}if(s=px(s),e.rank===3&&e.shape[0]!==0){const r=s,i=e.shape[0];s=st(s,[i,s.shape[0]/i,s.shape[1]]),r.dispose()}return s}const Oet=rt({irfft_:Met});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Let(e,t,n=0){const s={x:U(e,"x","split")},r={numOrSizeSplits:t,axis:n};return tt.runKernel(U1,s,r)}const ri=rt({split_:Let});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zet(e,t){O(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(t!=null&&t<n){const f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=en(e,f,m),n=t}else if(t!=null&&t>n){const f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=fr([e,ds(f)],e.shape.length-1),n=t}else r=e;const i=Te(r),o=st(uh(r,i),[s,n]),a=a_(o),u=Math.floor(n/2)+1,l=px(a),c=AI(a),h=ri(l,[u,n-u],l.shape.length-1),d=ri(c,[u,n-u],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=u,st(uh(h[0],d[0]),p)}const Bet=rt({rfft_:zet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pet(e,t){let n=U(e,"a","squaredDifference"),s=U(t,"b","squaredDifference");[n,s]=An(n,s),fe(n.shape,s.shape);const r={a:n,b:s},i={};return tt.runKernel(Zp,r,i)}const Wet=rt({squaredDifference_:Pet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vet(e,t){const n=U(e,"x","squeeze","string_or_numeric");return st(n,su(n.shape,t).newShape)}const ff=rt({squeeze_:Vet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uet(e,t=0){const n=vR(e,"tensors","stack","string_or_numeric");O(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&O(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const s=n,r={axis:t};return tt.runKernel(A1,s,r)}const du=rt({stack_:Uet});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Get(e,t=0){const n={x:U(e,"x","step")},s={alpha:t};return tt.runKernel(nf,n,s)}const mf=rt({step_:Get});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Het(e,t,n,s,r=0,i=0,o=0,a=0,u=0){const l={x:U(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:s,beginMask:r,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:u};return tt.runKernel(Yk,l,c)}const qet=rt({stridedSlice_:Het});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jet(e){const t={x:U(e,"x","tan","float32")};return tt.runKernel(Qp,t)}const Ket=rt({tan_:jet});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ii(e,t){xF(e);const n=nx(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return sx(e,null,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $l(e,t,n){if(xF(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=nx(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sx(e,t,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xet(e,t=1,n=!0){const s=U(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const i={x:s},o={k:t,sorted:n},[a,u]=tt.runKernel(Zk,i,o);return{values:a,indices:u}}const Yet=rt({topk_:Xet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zet(e,t=0,n=1,s,r){if(Ca(e),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new JR(t,n,s,!0,r),o=we(e,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const u_=rt({truncatedNormal_:Zet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jet(e,t=0){const n=U(e,"x","unique","string_or_numeric");O(n.rank>0,()=>"The input tensor must be at least 1D");const s={x:n},r={axis:t},[i,o]=tt.runKernel(Qk,s,r);return{values:i,indices:o}}const Qet=rt({unique_:Jet});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tnt(e,t,n){const s=U(e,"x","unsortedSegmentSum"),r=U(t,"segmentIds","unsortedSegmentSum","int32");O(Qc(n),()=>"numSegments must be of dtype int");const i={x:s,segmentIds:r},o={numSegments:n};return tt.runKernel(q1,i,o)}const l_=rt({unsortedSegmentSum_:tnt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ent(e,t=0){const n=U(e,"x","unstack","string_or_numeric");O(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const s={value:n},r={axis:t};return tt.runKernel(H1,s,r)}const Sl=rt({unstack_:ent});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nnt(e,t=!0,n,s){return tt.makeVariable(e,t,n,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c_(e,t){const n=[];for(let i=0;i<t.length;i++)t[i]&&n.push(i);const s=we(e,"int32"),r=we([n.length,e.length],"int32");for(let i=0;i<n.length;i++){const o=s.indexToLoc(n[i]),a=i*e.length;r.values.set(o,a)}return r.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function snt(e,t,n){const s=U(e,"x","transpose");if(t==null&&(t=s.shape.map((o,a)=>a).reverse()),O(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(o=>{O(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const r={x:s},i={perm:t};return s.dtype==="complex64"?ct(()=>{let o=px(s),a=AI(s);return o=tt.runKernel(sh,{x:o},i),a=tt.runKernel(sh,{x:a},i),n&&(a=Vn(a)),uh(o,a)}):tt.runKernel(sh,r,i)}const Ee=rt({transpose_:snt});function h_(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(i+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(i+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(i+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(i+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function rnt(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}h_(n,t,e)}function gf(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,i=n.length;let o=1;for(let h=r;h<i;++h)o*=n[h];const a=r<1?1:r,u=bt(t.shape)/a,l=[...te(n.slice(0,r)),1],c=bt(n);return{sliceRank:r,numUpdates:u,sliceSize:o,strides:l,outputSize:c}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function int(e,t){if(t==null)return e.shape.slice();if(Le(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ont(e,t,n,s){const r=U(e,"x","dropout");if(O(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),O(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Pn?r.clone():r;const i=int(r,n),o=1-t,a=ie(cx(Ft(dx(i,0,1,"float32",s),o)),o);return et(r,a)}const ant=rt({dropout_:ont});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unt(e,t,n,s,r,i="NHWC",o){let a=e;e.rank===3&&(a=st(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=st(t,[1,t.shape[0],t.shape[1],t.shape[2]])),O(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),O(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),O(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const l=i==="NHWC"?a.shape[3]:a.shape[1],c=i==="NHWC"?u.shape[3]:u.shape[1];O(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),O(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),pr("conv2dDerFilter",r,o);const h={x:a,dy:u},d={strides:s,pad:r,dataFormat:i,dimRoundingMode:o,filterShape:n};return tt.runKernel(kk,h,d)}const GI=rt({conv2DBackpropFilter_:unt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HI(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return et(e,mf(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function qI(e,t){let n=t;const s=Xn(e.shape,t.shape);return s.length>0&&(n=re(n,s)),st(n,e.shape)}function jI(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Il(e);if(t==="elu")return ax(e);if(t==="relu6")return QR(e);if(t==="prelu")return BI(e,n);if(t==="leakyrelu")return FI(e,s);if(t==="sigmoid")return hh(e);throw new Error(`Unknown fused activation ${t}.`)}const KI=(e,t)=>!(e>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lnt({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",KI(tt.state.gradientDepth,u)===!1){O(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let k=wl(e,t,n,s,r,i,o);return a!=null&&(k=Ft(k,a)),jI(k,u,l,c)}const h=U(e,"x","conv2d","float32"),d=U(t,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=st(h,[1,h.shape[0],h.shape[1],h.shape[2]])),O(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),O(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),pr("fused conv2d",s,o);const m=r==="NHWC"?p.shape[3]:p.shape[1];O(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),O(Ws(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);const g=$s(p.shape,d.shape,n,i,s,o);let x;a!=null&&(x=U(a,"bias","fused conv2d"),[x]=An(x,h),r==="NHWC"?fe(g.outShape,x.shape):(O(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),O(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(l!=null){const k=l.shape;if(O(k.length<=1||k.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${k.length}.`),k.length===1)O(k[0]===1||k[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the number of output channels (${g.outChannels}).`);else if(k.length===3)try{fe(k,g.outShape)}catch{const C=`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(C)}b=U(l,"prelu weights","fused conv2d")}const w=(k,C)=>{O(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[I,$,S,N]=C,F=HI(k,S,u);O(bl(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const D=$I($.shape,F,I,n,s),E=GI($,F,I.shape,n,s),A=[D,E];if(N!=null){const T=qI(N,F);A.push(T)}return A},y={x:p,filter:d,bias:x,preluActivationWeights:b},v={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:c};return a==null?mh((k,C,I)=>{let $=tt.runKernel(X1,y,v);return I([C,k,$]),f&&($=st($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:w}})(p,d):mh((k,C,I,$)=>{let S=tt.runKernel(X1,y,v);return $([C,k,S,I]),f&&(S=st(S,[S.shape[1],S.shape[2],S.shape[3]])),{value:S,gradFunc:w}})(p,d,x)}const cnt=rt({fusedConv2d_:lnt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hnt(e,t,n,s,r,i=[1,1],o){let a=e;e.rank===3&&(a=st(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=st(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:a,dy:u},c={strides:s,pad:r,dimRoundingMode:o,dilations:i,filterShape:n};return tt.runKernel(Dk,l,c)}const dnt=rt({depthwiseConv2dNativeBackpropFilter_:hnt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pnt(e,t,n,s,r,i=[1,1],o){let a=t,u=!1;t.rank===3&&(u=!0,a=st(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:a,filter:n},c={strides:s,pad:r,dimRoundingMode:o,dilations:i,inputShape:e},h=tt.runKernel(Tk,l,c);return u?st(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const fnt=rt({depthwiseConv2dNativeBackpropInput_:pnt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mnt({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(KI(tt.state.gradientDepth,i)===!1){let S=ze(e,t,n,s);return r!=null&&(S=Ft(S,r)),jI(S,i,o,a)}let u=U(e,"a","fused matMul"),l=U(t,"b","fused matMul");[u,l]=An(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=s?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=s?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=bt(f),x=bt(m);O(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${s} must match.`);const b=fe(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),w=n?st(u,[g,c,d]):st(u,[g,d,c]),y=s?st(l,[x,p,h]):st(l,[x,h,p]);let v;r!=null&&(v=U(r,"bias","fused matMul"),[v]=An(v,u),fe(b,v.shape));let k;o!=null&&(k=U(o,"prelu weights","fused matMul"));const C=(S,N)=>{const[F,D,E,A]=N,T=HI(st(S,E.shape),E,i);let R,_;if(!n&&!s?(R=ze(T,D,!1,!0),_=ze(F,T,!0,!1)):!n&&s?(R=ze(T,D,!1,!1),_=ze(T,F,!0,!1)):n&&!s?(R=ze(D,T,!1,!0),_=ze(F,T,!1,!1)):(R=ze(D,T,!0,!0),_=ze(T,F,!0,!0)),r!=null){const M=qI(A,T);return[R,_,M]}else return[R,_]},I={a:w,b:y,bias:v,preluActivationWeights:k},$={transposeA:n,transposeB:s,activation:i,leakyreluAlpha:a};return r==null?mh((S,N,F)=>{const D=tt.runKernel(K1,I,$);return F([S,N,D]),{value:st(D,b),gradFunc:C}})(w,y):mh((S,N,F,D)=>{const E=tt.runKernel(K1,I,$);return D([S,N,E,F]),{value:st(E,b),gradFunc:C}})(w,y,v)}const d_=rt({fusedMatMul_:mnt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gnt(e,t,n,s,r="bilinear",i=0){const o=U(e,"image","cropAndResize"),a=U(t,"boxes","cropAndResize","float32"),u=U(n,"boxInd","cropAndResize","int32"),l=a.shape[0];O(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),O(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${a.shape}.`),O(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${a.shape}.`),O(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),O(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),O(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const c={image:o,boxes:a,boxInd:u},h={method:r,extrapolationValue:i,cropSize:s};return tt.runKernel(Sk,c,h)}const xnt=rt({cropAndResize_:gnt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bnt(e){const t=U(e,"image","flipLeftRight","float32");O(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return tt.runKernel(Ok,n,{})}const ynt=rt({flipLeftRight_:bnt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wnt(e){const t=U(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];O(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),O(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,ro(t,r)}const vnt=rt({grayscaleToRGB_:wnt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function knt(e,t,n=0,s=.5){const r=U(e,"image","rotateWithOffset","float32");O(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const i={image:r},o={radians:t,fillValue:n,center:s};return tt.runKernel(tI,i,o)}const Int=rt({rotateWithOffset_:knt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gh(e,t,n,s,r,i){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),i==null&&(i=0);const o=e.shape[0];return n=Math.min(n,o),O(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),O(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),O(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),O(t.rank===1,()=>"scores must be a 1D tensor"),O(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),O(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cnt(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=U(e,"boxes","nonMaxSuppression","float32"),o=U(t,"scores","nonMaxSuppression","float32"),a=gh(i,o,n,s,r);n=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return tt.runKernel(Vk,{boxes:i,scores:o},u)}const $nt=rt({nonMaxSuppression_:Cnt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Snt(e,t,n){const s=Nnt(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function Nnt(e,t,n){return Dnt(e,t,n||Ent)}function Ent(e,t){return e>t?1:e<t?-1:0}function Dnt(e,t,n){let s=0,r=e.length,i=0,o=!1;for(;s<r;){i=s+(r-s>>>1);const a=n(t,e[i]);a>0?s=i+1:(r=i,o=!a)}return o?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XI(e,t,n,s,r){return JI(e,t,n,s,r,0)}function YI(e,t,n,s,r,i){return JI(e,t,n,s,r,0,!1,i,!0)}function ZI(e,t,n,s,r,i){return JI(e,t,n,s,r,i,!0)}function JI(e,t,n,s,r,i,o=!1,a=!1,u=!1){const l=[];for(let g=0;g<t.length;g++)t[g]>r&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(p_);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&l.length>0;){const g=l.pop(),{score:x,boxIndex:b,suppressBeginIndex:w}=g;if(x<r)break;let y=!1;for(let v=h.length-1;v>=w;--v){const k=Tnt(e,b,h[v]);if(k>=s){y=!0;break}if(g.score=g.score*Ant(s,c,k),g.score<=r)break}g.suppressBeginIndex=h.length,y||(g.score===x?(h.push(b),d.push(g.score)):g.score>r&&Snt(l,g,p_))}const p=h.length,f=n-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function Tnt(e,t,n){const s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),i=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(a-i)*(u-o),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,l),g=Math.max(o,c),x=Math.min(a,h),b=Math.min(u,d),w=Math.max(x-m,0)*Math.max(b-g,0);return w/(p+f-w)}function Ant(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function p_(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Fnt(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=U(e,"boxes","nonMaxSuppressionAsync"),o=U(t,"scores","nonMaxSuppressionAsync"),a=gh(i,o,n,s,r);n=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const u=await Promise.all([i.data(),o.data()]),l=u[0],c=u[1],{selectedIndices:h}=XI(l,c,n,s,r);return i!==e&&i.dispose(),o!==t&&o.dispose(),ii(h,"int32")}const Rnt=Fnt;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _nt(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const o=U(e,"boxes","nonMaxSuppression"),a=U(t,"scores","nonMaxSuppression"),u=gh(o,a,n,s,r,i);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,i=u.softNmsSigma;const l={boxes:o,scores:a},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i},h=tt.runKernel(Gk,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}const Mnt=rt({nonMaxSuppressionWithScore_:_nt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Ont(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const o=U(e,"boxes","nonMaxSuppressionAsync"),a=U(t,"scores","nonMaxSuppressionAsync"),u=gh(o,a,n,s,r,i);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,i=u.softNmsSigma;const l=await Promise.all([o.data(),a.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=ZI(c,h,n,s,r,i);return o!==e&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:ii(d,"int32"),selectedScores:ii(p)}}const Lnt=Ont;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function znt(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const o=U(e,"boxes","nonMaxSuppression"),a=U(t,"scores","nonMaxSuppression"),u=gh(o,a,n,s,r,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,d={boxes:o,scores:a},p={maxOutputSize:l,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:i},f=tt.runKernel(Uk,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const Bnt=rt({nonMaxSuppressionPadded_:znt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Pnt(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const o=U(e,"boxes","nonMaxSuppressionAsync"),a=U(t,"scores","nonMaxSuppressionAsync"),u=gh(o,a,n,s,r,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([o.data(),a.data()]),{selectedIndices:f,validOutputs:m}=YI(d,p,l,c,h,i);return o!==e&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:ii(f,"int32"),validOutputs:Be(m,"int32")}}const Wnt=Pnt;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vnt(e,t,n=!1,s=!1){const r=U(e,"images","resizeBilinear");O(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),O(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=r,o=!1;r.rank===3&&(o=!0,i=st(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:i},u={alignCorners:n,halfPixelCenters:s,size:t},l=tt.runKernel(L1,a,u);return o?st(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const f_=rt({resizeBilinear_:Vnt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Unt(e,t,n=!1,s=!1){const r=U(e,"images","resizeNearestNeighbor");O(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),O(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),O(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=r,o=!1;r.rank===3&&(o=!0,i=st(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:i},u={alignCorners:n,halfPixelCenters:s,size:t},l=tt.runKernel(O1,a,u);return o?st(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const m_=rt({resizeNearestNeighbor_:Unt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gnt(e,t="binary",n=!1,s=.5){const r=U(e,"image","threshold"),i=.2989,o=.587,a=.114,u=r.shape[0]*r.shape[1];let l=et(ii([s]),255),c,h,d,p;if(O(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),O(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),O(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),O(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[c,h,d]=ri(r,[1,1,1],-1);const m=et(c,i),g=et(h,o),x=et(d,a);p=Ft(Ft(m,g),x)}else p=e;if(t==="otsu"){const m=rQ(jt(t_(p),"int32"),kR([]),256);l=Hnt(m,u)}const f=n?fh(p,l):si(p,l);return jt(et(f,255),"int32")}function Hnt(e,t){let n=ii([-1]),s=ii([0]),r=ii([0]),i,o,a,u,l,c;for(let h=0;h<e.size-1;h++){i=en(e,0,h+1),o=en(e,h+1),l=ie(re(i),t),c=ie(re(o),t);const d=re(et(i,pf(0,i.size)));a=ie(d,re(i));const p=ox(o.shape,i.size),f=Ft(pf(0,o.size),p),m=et(o,f);u=ie(re(m),re(o));const g=ae(a,u),x=ae(a,u),b=et(l,c);r=et(et(b,g),x);const w=si(r,s);s=Mr(w,r,s),n=Mr(w,ii([h]),n)}return n}const qnt=rt({threshold_:Gnt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jnt(e,t,n="nearest",s="constant",r=0,i){const o=U(e,"image","transform","float32"),a=U(t,"transforms","transform","float32");O(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),O(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),O(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const u={image:o,transforms:a},l={interpolation:n,fillMode:s,fillValue:r,outputShape:i};return tt.runKernel(Jk,u,l)}const Knt=rt({transform_:jnt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xnt(e,t,n){O(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),O(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const s=U(e,"a","bandPart");O(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[i,o]=s.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=i),n<0&&(n=o);const a=st(pf(0,i,1,"int32"),[-1,1]),u=pf(0,o,1,"int32"),l=ae(a,u),c=Da(fh(l,Be(+t,"int32")),vl(l,Be(-n,"int32"))),h=ds([i,o],s.dtype);return st(du(Sl(st(s,[-1,i,o])).map(d=>Mr(c,d,h))),r)}const Ynt=rt({bandPart_:Xnt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Znt(e){let t;if(Array.isArray(e)){t=!1,O(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=e[0].shape[0];for(let i=1;i<e.length;++i)O(e[i].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[i].shape[0]} vs. ${r})`)}else t=!0,e=ri(e,e.shape[0],0).map(r=>ff(r,[0]));O(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],s=e;for(let r=0;r<e.length;++r)n.push(tt.tidy(()=>{let i=s[r];if(r>0)for(let o=0;o<r;++o){const a=et(re(et(n[o],i)),n[o]);i=ae(i,a)}return ie(i,lx(i,"euclidean"))}));return t?du(n,0):n}const Jnt=rt({gramSchmidt_:Znt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qnt(e,t=!1){if(O(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return g_(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((u,l)=>u*l),s=Sl(st(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],i=[];s.forEach(u=>{const[l,c]=g_(u,t);r.push(l),i.push(c)});const o=st(du(r,0),e.shape),a=st(du(i,0),e.shape);return[o,a]}}function g_(e,t=!1){return tt.tidy(()=>{O(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],s=e.shape[1];let r=qR(n),i=xl(e);const o=$l([[1]],[1,1]);let a=xl(o);const u=n>=s?s:n;for(let l=0;l<u;++l){const c=i,h=a,d=r;[a,i,r]=tt.tidy(()=>{const p=en(i,[l,l],[n-l,1]),f=lx(p),m=en(i,[l,l],[1,1]),g=Mr(si(m,0),$l([[-1]]),$l([[1]])),x=ae(m,et(g,f)),b=ie(p,x);b.shape[0]===1?a=xl(o):a=fr([o,en(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const w=Vn(ie(ze(g,x),f)),y=en(i,[l,0],[n-l,s]),v=et(w,a),k=Ee(a);if(l===0)i=ae(y,ze(v,ze(k,y)));else{const $=ae(y,ze(v,ze(k,y)));i=fr([en(i,[0,0],[l,s]),$],0)}const C=Ee(v),I=en(r,[0,l],[n,r.shape[1]-l]);if(l===0)r=ae(I,ze(ze(I,a),C));else{const $=ae(I,ze(ze(I,a),C));r=fr([en(r,[0,0],[n,l]),$],1)}return[a,i,r]}),Ie([c,h,d])}return!t&&n>s&&(r=en(r,[0,0],[n,s]),i=en(i,[0,0],[s,s])),[r,i]})}const tst=rt({qr_:Qnt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var x_;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(x_||(x_={}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nl={flipLeftRight:ynt,grayscaleToRGB:vnt,resizeNearestNeighbor:m_,resizeBilinear:f_,rotateWithOffset:Int,cropAndResize:xnt,nonMaxSuppression:$nt,nonMaxSuppressionAsync:Rnt,nonMaxSuppressionWithScore:Mnt,nonMaxSuppressionWithScoreAsync:Lnt,nonMaxSuppressionPadded:Bnt,nonMaxSuppressionPaddedAsync:Wnt,threshold:qnt,transform:Knt},est={bandPart:Ynt,gramSchmidt:Jnt,qr:tst};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xh{getClassName(){return this.constructor.className}static fromConfig(t,n){return new t(n)}}class Ii{constructor(){this.classNameMap={}}static getMap(){return Ii.instance==null&&(Ii.instance=new Ii),Ii.instance}static register(t){Ii.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function St(e){O(e.className!=null,()=>"Class being registered does not have the static className property defined."),O(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),O(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Ii.register(e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pu extends xh{minimize(t,n=!1,s){const{value:r,grads:i}=this.computeGradients(t,s);if(s!=null){const o=s.map(a=>({name:a.name,tensor:i[a.name]}));this.applyGradients(o)}else this.applyGradients(i);return Ie(i),n?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,n){return $tt(t,n)}dispose(){this.iterations_!=null&&Ie(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Be(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(pu,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b_ extends pu{constructor(t,n,s=null){super(),this.learningRate=t,this.rho=n,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=tt.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,s)=>{const r=tt.registeredVariables[n],i=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:ct(()=>Te(r).variable(i))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:ct(()=>Te(r).variable(i))});const o=Array.isArray(t)?t[s].tensor:t[n];if(o==null)return;const a=this.accumulatedGrads[s].variable,u=this.accumulatedUpdates[s].variable;ct(()=>{const l=Ft(et(a,this.rho),et(pn(o),1-this.rho)),c=et(ie(Ys(Ft(u,this.epsilon)),Ys(Ft(a,this.epsilon))),o),h=Ft(et(u,this.rho),et(pn(c),1-this.rho));a.assign(l),u.assign(h);const d=Ft(et(c,-this.learningRate),r);r.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ie(this.accumulatedGrads.map(t=>t.variable)),Ie(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=t.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,n){return new t(n.learningRate,n.rho,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y_ extends pu{constructor(t,n=.1){super(),this.learningRate=t,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,s)=>{const r=tt.registeredVariables[n];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:ct(()=>ox(r.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(t)?t[s].tensor:t[n];if(i==null)return;const o=this.accumulatedGrads[s].variable;ct(()=>{const a=Ft(o,pn(i));o.assign(a);const u=Ft(et(ie(i,Ys(Ft(a,tt.backend.epsilon()))),-this.learningRate),r);r.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ie(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,n){return new t(n.learningRate,n.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w_ extends pu{constructor(t,n,s,r=null){super(),this.learningRate=t,this.beta1=n,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ct(()=>{this.accBeta1=Be(n).variable(),this.accBeta2=Be(s).variable()}),r==null&&(this.epsilon=tt.backend.epsilon())}static get className(){return"Adam"}applyGradients(t){const n=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);ct(()=>{const s=ae(1,this.accBeta1),r=ae(1,this.accBeta2);n.forEach((i,o)=>{const a=tt.registeredVariables[i],u=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:ct(()=>Te(a).variable(u))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${i}/v`,variable:ct(()=>Te(a).variable(u))});const l=Array.isArray(t)?t[o].tensor:t[i];if(l==null)return;const c=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=Ft(et(c,this.beta1),et(l,1-this.beta1)),p=Ft(et(h,this.beta2),et(pn(l),1-this.beta2)),f=ie(d,s),m=ie(p,r);c.assign(d),h.assign(p);const g=Ft(et(ie(f,Ft(Ys(m),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(et(this.accBeta1,this.beta1)),this.accBeta2.assign(et(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ie(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Ie(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t),ct(()=>{this.accBeta1.assign(ph(this.beta1,this.iterations_+1)),this.accBeta2.assign(ph(this.beta2,this.iterations_+1))});const n=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,n){return new t(n.learningRate,n.beta1,n.beta2,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v_ extends pu{constructor(t,n,s,r=null,i=0){super(),this.learningRate=t,this.beta1=n,this.beta2=s,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ct(()=>{this.iteration=Be(0).variable(),this.accBeta1=Be(n).variable()}),r==null&&(this.epsilon=tt.backend.epsilon())}static get className(){return"Adamax"}applyGradients(t){const n=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);ct(()=>{const s=ae(1,this.accBeta1),r=ie(-this.learningRate,Ft(et(this.iteration,this.decay),1));n.forEach((i,o)=>{const a=tt.registeredVariables[i],u=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:Te(a).variable(u)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${i}/v`,variable:Te(a).variable(u)});const l=Array.isArray(t)?t[o].tensor:t[i];if(l==null)return;const c=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=Ft(et(c,this.beta1),et(l,1-this.beta1)),p=et(h,this.beta2),f=Xs(l),m=hu(p,f);c.assign(d),h.assign(m);const g=Ft(et(ie(r,s),ie(d,Ft(m,this.epsilon))),a);a.assign(g)}),this.iteration.assign(Ft(this.iteration,1)),this.accBeta1.assign(et(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ie(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Ie(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,n){return new t(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QI extends pu{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}static get className(){return"SGD"}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,s)=>{const r=Array.isArray(t)?t[s].tensor:t[n];if(r==null)return;const i=tt.registeredVariables[n];ct(()=>{const o=Ft(et(this.c,r),i);i.assign(o)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=zo(Be(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,n){return new t(n.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k_ extends QI{constructor(t,n,s=!1){super(t),this.learningRate=t,this.momentum=n,this.useNesterov=s,this.accumulations=[],this.m=Be(this.momentum)}static get className(){return"Momentum"}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,s)=>{const r=tt.registeredVariables[n];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${n}/momentum`,variable:ct(()=>Te(r).variable(!1))});const i=this.accumulations[s].variable,o=Array.isArray(t)?t[s].tensor:t[n];o!=null&&ct(()=>{let a;const u=Ft(et(this.m,i),o);this.useNesterov?a=Ft(et(this.c,Ft(o,et(u,this.m))),r):a=Ft(et(this.c,u),r),i.assign(u),r.assign(a)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ie(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,n){return new t(n.learningRate,n.momentum,n.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I_ extends pu{constructor(t,n=.9,s=0,r=null,i=!1){if(super(),this.learningRate=t,this.decay=n,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,r==null&&(this.epsilon=tt.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,s)=>{const r=tt.registeredVariables[n],i=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:ct(()=>Te(r).variable(i))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:ct(()=>Te(r).variable(i))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:ct(()=>Te(r).variable(i))});const o=Array.isArray(t)?t[s].tensor:t[n];if(o==null)return;const a=this.accumulatedMeanSquares[s].variable,u=this.accumulatedMoments[s].variable;ct(()=>{const l=Ft(et(a,this.decay),et(pn(o),1-this.decay));if(this.centered){const c=this.accumulatedMeanGrads[s].variable,h=Ft(et(c,this.decay),et(o,1-this.decay)),d=ie(et(o,this.learningRate),Ys(ae(l,Ft(pn(h),this.epsilon)))),p=Ft(et(u,this.momentum),d);a.assign(l),c.assign(h),u.assign(p);const f=ae(r,p);r.assign(f)}else{const c=Ft(et(a,this.decay),et(pn(o),1-this.decay)),h=Ft(et(u,this.momentum),ie(et(o,this.learningRate),Ys(Ft(c,this.epsilon))));a.assign(c),u.assign(h);const d=ae(r,h);r.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ie(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ie(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Ie(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=t.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(n*2,n*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,n){return new t(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nst=[b_,y_,w_,v_,k_,I_,QI];function sst(){for(const e of nst)St(e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rst="model",ist=".json",ost=".weights.bin";function C_(e){return new Promise(t=>setTimeout(t)).then(e)}class El{constructor(t){if(!dt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(El.URL_SCHEME)&&(t=t.slice(El.URL_SCHEME.length)),(t==null||t.length===0)&&(t=rst),this.modelJsonFileName=t+ist,this.weightDataFileName=t+ost}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r=NR(t,s),i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=i,await C_(()=>o.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=n,await C_(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:rx(t)}}}}El.URL_SCHEME="downloads://";const ast=e=>dt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(El.URL_SCHEME)?ust(e.slice(El.URL_SCHEME.length)):null;cs.registerSaveRouter(ast);function ust(e="model"){return new El(e)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $_(e,t,n,s){o(e),n=n??0,s=s??1,a(n,s);let r=0;const i=u=>(u.then(l=>{const c=n+ ++r/e.length*(s-n);return t(c),l}),u);function o(u){O(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function a(u,l){O(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),O(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),O(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(e.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function lst(e,t){t==null&&(t={});const n=t.fetchFunc==null?dt().platform.fetch:t.fetchFunc,s=e.map(l=>n(l,t.requestInit,{isBinary:!0})),r=0,i=.5,o=(t.onProgress==null?await Promise.all(s):await $_(s,t.onProgress,r,i)).map(l=>l.arrayBuffer()),a=.5,u=1;return t.onProgress==null?await Promise.all(o):await $_(o,t.onProgress,a,u)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cst="application/octet-stream",hst="application/json";class tC{constructor(t,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.onProgress=n.onProgress,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(O(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=dt().platform.fetch,O(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&O(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r=NR(t,s);n.body.append("model.json",new Blob([JSON.stringify(r)],{type:hst}),"model.json"),t.weightData!=null&&n.body.append("model.weights.bin",new Blob([t.weightData],{type:cst}),"model.weights.bin");const i=await this.fetch(this.path,n);if(i.ok)return{modelArtifactsInfo:rx(t),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=n.modelTopology,r=n.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return GZ(n,i=>this.loadWeights(i))}async loadWeights(t){const n=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=dst(n),i=this.weightPathPrefix||s,o=HZ(t),a=[],u=[];for(const c of t)for(const h of c.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(h)):a.push(i+h+r);this.weightUrlConverter&&a.push(...await Promise.all(u));const l=await lst(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,SR(l)]}}tC.URL_SCHEME_REGEX=/^https?:\/\//;function dst(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function S_(e){return e.match(tC.URL_SCHEME_REGEX)!=null}const N_=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>S_(s)):n=S_(e),n)return pst(e,t)}return null};cs.registerSaveRouter(N_),cs.registerLoadRouter(N_);function pst(e,t){return new tC(e,t)}function eC(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(bt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,i=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const a=e.shape,u=r.slice();u.pop();let l=1;for(let h=i;h<n;++h)l*=a[h],u.push(a[h]);const c=[...te(e.shape).map(h=>h/l),1].slice(0,i);return[u,o,l,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nC=-2,fst=-1;function sC(e,t,n){const s=e.shape.length;O(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),O(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)O(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function mst(e){const t=[];let n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function rC(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function E_(e,t,n,s){const r=[...e];for(let i=r.length;i<s.length;i++)r.push(1);for(let i=0;i<n;i++)i===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function D_(e,t,n){return n<=e?n:n-(t-1)}function T_(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function gst(e,t,n,s,r,i,o,a,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const p=t[0],f=n+1;c=A_(o,p,f,s,e),h=F_(a,p,f,r,e),d=E_(i,p,f,e)}else for(let p=0;p<l;p++)c[p]=__(o,s,i,e,p,u),h[p]=M_(a,r,i,e,p,u),d[p]=R_(i,p,u);return{begin:c,end:h,strides:d}}function A_(e,t,n,s,r){const i=[...r],o=T_(n,t);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=0;else{const u=D_(t,n,a);let l=s[u];e&1<<u&&(l=0),i[a]=l}return i}function F_(e,t,n,s,r){const i=[...r],o=T_(n,t);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const u=D_(t,n,a);let l=s[u];e&1<<u&&(l=Number.MAX_SAFE_INTEGER),i[a]=l}for(let a=0;a<i.length;a++){const u=r[a];i[a]<0&&(i[a]+=u),i[a]=al(0,i[a],r[a])}return i}function R_(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function __(e,t,n,s,r,i){let o=t[r];const a=n[r]||1;(e&1<<r||i&1<<r||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const u=s[r];return o<0&&(o+=u),o=al(0,o,u-1),o}function M_(e,t,n,s,r,i){let o=t[r];const a=n[r]||1;(e&1<<r||i&1<<r||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const u=s[r];return o<0&&(o+=u),a>0?o=al(0,o,u):o=al(-1,o,u-1),o}function iC(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function oC(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function mx(e,t,n){let s;const r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{O(o!==-1,()=>"slice() does not support negative begin indexing.")});let i;return n==null?i=new Array(r).fill(-1):typeof n=="number"?i=[n,...new Array(r-1).fill(-1)]:n.length<r?i=n.concat(new Array(r-n.length).fill(-1)):i=n,i=i.map((o,a)=>o>=0?o:(O(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),e.shape[a]-s[a])),[s,i]}function aC(e,t,n,s,r,i,o,a,u){let l;if(s==null?(l=new Array(t.length),l.fill(1)):l=s,o!=null&&o&o-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:u};for(let b=0;b<h.dims;b++)c&&1<<b&a&&h.numAddAxisAfterEllipsis++,1<<b&o&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};xst(h,d);let p=!0,f=!0,m=!0;const g=[],x=[];for(let b=0;b<e.length;++b){if(d.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);const w=!!(d.shrinkAxisMask&1<<b),y=e[b];if(y===-1){g.push(w?1:-1);continue}const v=[d.beginMask&1<<b,d.endMask&1<<b],k=[d.strides[b]>0?0:-1,d.strides[b]>0?y:y-1];if(w&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[b]===1;const C=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(w){const N=d.begin[b]<0?y+d.begin[b]:d.begin[b];if(d.begin[b]=N,d.end[b]=d.begin[b]+1,N<0||N>=y)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=O_(d.begin[b],0,d.strides[b],y,v,k),d.end[b]=O_(d.end[b],1,d.strides[b],y,v,k);const S=d.strides[b]===1&&d.begin[b]===0&&d.end[b]===y;p=p&&S,f=f&&(b===0&&d.strides[b]===1||S)}else p=p&&d.strides[b]===1&&C,f=f&&(b===0&&d.strides[b]===1||C);let I,$=!1;if(d.beginValid&&d.endValid?(I=d.end[b]-d.begin[b],$=!0):w?(I=1,$=!0):C&&y>=0&&(d.strides[b]<0?I=-y:I=y,$=!0),$){let S;I===0||I<0!=d.strides[b]<0?S=0:S=Math.trunc(I/d.strides[b])+(I%d.strides[b]!==0?1:0),g.push(S)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const w=d.finalShapeGatherIndices[b];w>=0?x.push(g[w]):w===nC&&x.push(1)}return{finalShapeSparse:x.filter((b,w)=>d.finalShapeGatherIndices[w]!==nC),finalShape:x,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function xst(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(nC),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(fst),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function O_(e,t,n,s,r,i){if(r[t])return n>0?i[t]:i[t+1&1];{const o=e<0?s+e:e;return o<i[0]?i[0]:o>i[1]?i[1]:o}}const bst=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:sC,computeFlatOffset:oC,computeOutShape:rC,getNormalizedAxes:gst,isSliceContinous:iC,maskToAxes:mst,parseSliceParams:mx,sliceInfo:aC,startForAxis:__,startIndicesWithElidedDims:A_,stopForAxis:M_,stopIndicesWithElidedDims:F_,stridesForAxis:R_,stridesWithElidedDims:E_},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yst{static sgd(t){return new QI(t)}static momentum(t,n,s=!1){return new k_(t,n,s)}static rmsprop(t,n=.9,s=0,r=null,i=!1){return new I_(t,n,s,r,i)}static adam(t=.001,n=.9,s=.999,r=null){return new w_(t,n,s,r)}static adadelta(t=.001,n=.95,s=null){return new b_(t,n,s)}static adamax(t=.002,n=.9,s=.999,r=null,i=0){return new v_(t,n,s,r,i)}static adagrad(t,n=.1){return new y_(t,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bh=yst;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wst=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e())();function L_(){return new Promise(e=>wst(()=>e()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uC(e,t){const n=e[0].length;e.forEach((r,i)=>{O(r.length===n,()=>`Error in concat${n}D: rank of tensors[${i}] must be the same as the rank of the rest (${n})`)}),O(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const s=e[0];e.forEach((r,i)=>{for(let o=0;o<n;o++)O(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${i}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${i}.`)})}function Wo(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var io;(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(io||(io={}));function z_(e,t,n){let s=new Array;if(n==null&&t==null)return s;if(t==null)for(;s.length<e+n.length;)s.push(-1);else s=t.slice();if(n==null)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const i=n[r],o=s[s.length-n.length+r],a=s[o];if(i>=0)if(a>=0){if(a!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${i} but shape[${r+e}] = ${a}`)}else s[o]=i}return s}function B_(e){const t={FIRST_DIM_SIZE:io.FIRST_DIM_SIZE,VALUE_ROWIDS:io.VALUE_ROWIDS,ROW_LENGTHS:io.ROW_LENGTHS,ROW_SPLITS:io.ROW_SPLITS,ROW_LIMITS:io.ROW_LIMITS,ROW_STARTS:io.ROW_STARTS},n=[];for(const s of e)if(s in t)n.push(t[s]);else break;return n}function P_(e){return e.length===0?0:e[0]===io.FIRST_DIM_SIZE?e.length-1:e.length}function W_(e,t){if(e==null||t==null)return;const n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const i=e[r],o=t[r+1];if(i>=0&&o>=0&&i!==1&&i!==o)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${i} but ragged tensor input.flatValues.shape[${r-e.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lC=30;function gx(e){return e<=lC?e:ck(e,Math.floor(Math.sqrt(e)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cC(e,t,n){const s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xf(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const i=t.length;for(let o=0;o<i;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(i+1))}return r}function bf(e,t,n=!0){const s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{const r=[],i=[];for(let o=1;o<e;++o)o>=t*2+1||o%2===1?i.push(o):r.push(o);s.push(...r),s.push(0),s.push(...i)}return s}function yf(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let i=1;i<e.length;++i)i<=t.length?s?r.push(t[i-1]*e[i]):r.push(e[i]/t[i-1]):r.push(e[i]);return r}function hC(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function dC(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xx=1.7580993408473768,bx=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pC=.3275911,fC=.254829592,mC=-.284496736,gC=1.421413741,xC=-1.453152027,bC=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ta(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function V_(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function U_(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function G_(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function yC(e,t){const n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function H_(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function q_(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const i=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:n,imag:s}}function j_(e,t,n){const s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),i=Math.sin(s);return{real:r,imag:i}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wC="->",vst=/->/g,K_=",",X_="...";function vC(e,t){e=e.replace(/\s/g,"");const n=(e.length-e.replace(vst,"").length)/wC.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${wC}").`);const[s,r]=e.split(wC);O(s.indexOf(X_)===-1,()=>`The ellipsis notation ("${X_}") is not supported yet.`);const i=s.split(K_),o=i.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<r.length;++d){const p=r[d];if(!i.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let d=0;d<s.length;++d){const p=s[d];a.indexOf(p)===-1&&p!==K_&&a.push(p)}const u=new Array(i.length);for(let d=0;d<o;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let p=0;p<i[d].length;++p)u[d].push(a.indexOf(i[d][p]))}const l=a.length,c=r.length,h=[];for(let d=c;d<l;++d)h.push(d);return{allDims:a,summedDims:h,idDims:u}}function kC(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function IC(e,t,n){const s=new Array(e);for(let r=0;r<n.length;++r){const i=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=i[o]:O(s[t[r][o]]===i[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(i)}, but got dimension ${i[o]}`)}}function CC(e,t){const n=e,s=[];let r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);const i=[];for(let o=0;o<n.length;++o){const a=n[o],u=kst(t,a);for(const l of u)i.indexOf(l)===-1&&(s[o].push(l),i.push(l))}return{path:n,steps:s}}function $C(e){return e.every((t,n)=>t===n)}function kst(e,t){const n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function SC(e,t,n=0){let s=[];if(typeof t=="number")O(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce((o,a)=>(a===-1&&(o+=1),o),0);O(r<=1,()=>"There should be only one negative value in split array.");const i=t.indexOf(-1);if(i!==-1){const o=t.reduce((a,u)=>u>0?a+u:a);t[i]=e.shape[n]-o}O(e.shape[n]===t.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y_(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function Z_(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function J_(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function t3(e,t){return`size ${e} must be non-negative, not ${t}`}function e3(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function n3(e,t){const n=bt(e),s=bt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function s3(e,t){const n=bt(e),s=bt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NC(){return"segment ids must be >= 0"}function r3(){return"segment ids are not increasing"}function i3(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function o3(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a3(e,t){let n=!1,s;for(e<=lC?(s=e,n=!0):s=ck(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=ck(e,s+1);return s}function u3(e,t,n){const s=[],r=e.length;for(let i=0;i<r;i++)i!==t?s.push(e[i]):s.push(n);return s}function EC(e,t,n,s){const r=t.shape.length,i=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${i}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const o=e.shape[n],a=[];let u=1,l=1,c=1;for(let h=0;h<s;++h)a.push(e.shape[h]),u*=e.shape[h];for(let h=s;h<n;h++)a.push(e.shape[h]),l*=e.shape[h];for(let h=s;h<r;h++)a.push(t.shape[h]);for(let h=n+1;h<i;h++)a.push(e.shape[h]),c*=e.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:a}}const Ist=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:EC,computeOutShape:u3,segOpComputeOptimalWindowSize:a3},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dl(e){try{return e.map(t=>au(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function l3(e){return e.map(t=>ou(t))}const Cst=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:fC,ERF_A2:mC,ERF_A3:gC,ERF_A4:xC,ERF_A5:bC,ERF_P:pC,PARALLELIZE_THRESHOLD:lC,get RowPartitionType(){return io},SELU_SCALE:bx,SELU_SCALEALPHA:xx,applyActivation:jI,assertAndGetBroadcastShape:fe,assertAxesAreInnerMostDims:Ss,assertParamsConsistent:uC,assignToTypedArray:H_,axesAreInnerMostDims:DI,calculateShapes:gf,checkEinsumDimSizes:IC,checkPadOnDimRoundingMode:pr,combineLocations:GR,combineRaggedTensorToTensorShapes:z_,complexWithEvenIndex:U_,complexWithOddIndex:G_,computeConv2DInfo:$s,computeConv3DInfo:lu,computeDefaultPad:wI,computeDilation2DInfo:uf,computeOptimalWindowSize:gx,computeOutAndReduceShapes:hs,computeOutShape:Wo,computePool2DInfo:vi,computePool3DInfo:Sa,convertConv2DDataFormat:Na,decodeEinsumEquation:vC,eitherStridesOrDilationsAreOne:Ws,expandShapeToKeepDim:Wn,exponent:j_,exponents:q_,fromStringArrayToUint8:l3,fromUint8ToStringArray:Dl,getAxesPermutation:Cn,getBroadcastDims:dh,getComplexWithIndex:yC,getEinsumComputePath:CC,getEinsumPermutation:kC,getFusedBiasGradient:qI,getFusedDyActivation:HI,getImageCenter:cC,getInnerMostAxes:Fn,getPermuted:bf,getRaggedRank:P_,getReductionAxes:Xn,getReshaped:xf,getReshapedPermuted:yf,getRowPartitionTypesHelper:B_,getSliceBeginCoords:hC,getSliceSize:dC,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Y_,getSparseFillEmptyRowsNegativeIndexErrorMessage:Z_,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:J_,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:e3,getSparseReshapeInputOutputMismatchErrorMessage:s3,getSparseReshapeInputOutputMultipleErrorMessage:n3,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:Q_,getSparseReshapeNegativeOutputDimErrorMessage:t3,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:o3,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:NC,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:r3,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:i3,getUndoAxesPermutation:cu,isIdentityPermutation:$C,log:fZ,mergeRealAndImagArrays:Ta,prepareAndValidate:eC,prepareSplitSize:SC,segment_util:Ist,shouldFuse:KI,slice_util:bst,splitRealAndImagArrays:V_,stridesOrDilationsArePositive:yl,tupleValuesAreOne:bl,upcastType:_r,validateDefaultValueShape:W_,validateInput:rnt,validateUpdateShape:h_,warn:ti},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */sst();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c3={kernelName:K0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>et(e,mf(jt(n,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $st={kernelName:up,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const s=pn(jt(n,"float32")),r=Ys(ae(Be(1),s));return Vn(ie(e,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sst={kernelName:lp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const s=Ys(ae(pn(jt(n,"float32")),1));return ie(e,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nst={kernelName:nh,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=fe(n.shape,s.shape);return{a:()=>{let i=e;const o=Xn(n.shape,r);return o.length>0&&(i=re(i,o)),st(i,n.shape)},b:()=>{let i=e;const o=Xn(s.shape,r);return o.length>0&&(i=re(i,o)),st(i,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Est={kernelName:mk,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dst={kernelName:X0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Te(n)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tst={kernelName:Y0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Te(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ast={kernelName:cp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ie(e,Ys(ae(Be(1),pn(jt(n,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fst={kernelName:hp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const s=Ys(Ft(Be(1),pn(jt(n,"float32"))));return ie(e,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rst={kernelName:fp,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=fe(n.shape,s.shape);return{a:()=>{const i=Ft(pn(n),pn(s));let o=et(e,ie(s,i));const a=Xn(n.shape,r);return a.length>0&&(o=re(o,a)),st(o,n.shape)},b:()=>{const i=Ft(pn(n),pn(s));let o=Vn(et(e,ie(n,i)));const a=Xn(s.shape,r);return a.length>0&&(o=re(o,a)),st(o,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _st={kernelName:dp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ie(e,Ft(pn(jt(n,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mst={kernelName:pp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ie(e,ae(Be(1),pn(jt(n,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ost(e,t,n,s,r,i){const o=U(e,"dy","avgPool3dGrad"),a=U(t,"input","avgPool3dGrad");let u=o,l=a,c=!1;a.rank===4&&(c=!0,u=st(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=st(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),O(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),O(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),pr("avgPool3dGrad",r,i);const h={dy:u,input:l},d={filterSize:n,strides:s,pad:r,dimRoundingMode:i},p=tt.runKernel(yk,h,d);return c?st(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Lst=rt({avgPool3dGrad_:Ost});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zst={kernelName:J0,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:a}=n;return{x:()=>Lst(e,s,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bst(e,t,n,s,r){const i=U(e,"dy","avgPoolGrad"),o=U(t,"input","avgPoolGrad");O(o.rank===i.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`);let a=o,u=i,l=!1;o.rank===3&&(l=!0,a=st(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=st(i,[1,i.shape[0],i.shape[1],i.shape[2]])),O(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),O(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const c={dy:u,input:a},h={filterSize:n,strides:s,pad:r},d=tt.runKernel(bk,c,h);return l?st(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Pst=rt({avgPoolGrad_:Bst});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wst={kernelName:Z0,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:i,pad:o}=n;return{x:()=>Pst(e,s,r,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vst={kernelName:Q0,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:i,transposeB:o}=n;return!i&&!o?{a:()=>ze(e,r,!1,!0),b:()=>ze(s,e,!0,!1)}:!i&&o?{a:()=>ze(e,r,!1,!1),b:()=>ze(e,s,!0,!1)}:i&&!o?{a:()=>ze(r,e,!1,!0),b:()=>ze(s,e,!1,!1)}:{a:()=>ze(r,e,!0,!0),b:()=>ze(e,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ust={kernelName:t1,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>zI(e,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gst={kernelName:hZ,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,i=s.shape,o=Array.from(i);for(let u=r.length-1;u>=0;u--)if(r[u]===i[u])o[u]=1;else if(r[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const a=[];for(let u=0;u<o.length;u++)o[u]>1&&a.push(u);return{x:()=>re(e,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hst={kernelName:mp,gradFunc:e=>({x:()=>e.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qst={kernelName:gp,gradFunc:e=>({x:()=>Te(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jst={kernelName:xp,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:i}=n;return{x:()=>Mr(Da(vl(s,r),fh(s,i)),e,Te(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kst={kernelName:e1,inputsToSave:["x"],gradFunc:c3.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xst={kernelName:n1,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map(a=>a.shape),{axis:r}=n,i=ye(r,t[0].shape)[0],o=s.map(a=>a[i]);return ri(e,o,i).map(a=>()=>a)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yst={kernelName:s1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:i,strides:o,pad:a,dataFormat:u}=n;return O(bl(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>$I(s.shape,e,r,o,a,u),filter:()=>GI(s,e,r.shape,o,a,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zst={kernelName:r1,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:i,pad:o,dataFormat:a,dimRoundingMode:u}=n;return{dy:()=>wl(e,r,i,o,a,1,u),filter:()=>GI(e,s,r.shape,i,o,a,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jst(e,t,n,s,r){let i=e;e.rank===4&&(i=st(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=st(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),O(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),O(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),O(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),O(i.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`),O(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);const a={x:i,dy:o},u={strides:s,pad:r,filterShape:n};return tt.runKernel(Ik,a,u)}const Qst=rt({conv3DBackpropFilter_:Jst});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const trt={kernelName:i1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:i}=n;O(bl(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[o,a]=t;return{x:()=>PR(o.shape,e,a,r,i),filter:()=>Qst(o,e,a.shape,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ert={kernelName:bp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>et(Vn(r_(jt(n,"float32"))),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nrt={kernelName:yp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>et(i_(jt(n,"float32")),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const srt={kernelName:o1,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:i,reverse:o}=n;return{x:()=>{const a=Cn([r],s.rank);let u=VR(e,r,i,!o);return a!=null&&(u=Ee(u,a)),u}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rrt={kernelName:a1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:o}=n,a=s??[1,1];O(bl(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[u,l]=t;return O(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),O(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),O(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),O(Ws(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),pr("depthwiseConv2d",i,o),{x:()=>fnt(u.shape,e,l,r,i,a,o),filter:()=>dnt(u,e,l.shape,r,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const irt={kernelName:u1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,i={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>tt.runKernel(Ak,i,n),filter:()=>tt.runKernel(Fk,o,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ort={kernelName:vp,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>tt.runKernel(Rk,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const art={kernelName:kp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=et(Ea(Vn(pn(n))),2/Math.sqrt(Math.PI));return{x:()=>et(e,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const urt={kernelName:Ip,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>et(e,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrt={kernelName:c1,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>st(e,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const crt={kernelName:Cp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>et(e,Ea(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hrt={kernelName:$p,gradFunc:e=>({x:()=>Te(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const drt={kernelName:Sp,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=fe(n.shape,s.shape);return{a:()=>{const i=ie(e,jt(s,"float32")),o=Xn(n.shape,r);return o.length>0?st(re(i,o),n.shape):i},b:()=>{let i=et(e,jt(n,"float32"));const o=Xn(s.shape,r);o.length>0&&(i=st(re(i,o),s.shape));const a=pn(s);return Vn(ie(i,jt(a,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const prt={kernelName:h1,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,i,o,a]=t,u=a??Be(1),l=Xn(i.shape,r.shape),c=[];if(i.rank===1){for(let m=0;m<r.shape.length-1;++m)c.push(r.shape[m]);c.push(1)}const h=ae(r,i),d=et(e,u),p=e_(Ft(o,Be(s))),f=et(et(et(p,p),p),Be(-.5));return{x:()=>i.rank===1?st(et(et(e,ro(st(p,[1,1,1,i.shape[0]]),c)),u),r.shape):st(et(et(e,p),u),r.shape),mean:()=>{let m=et(et(p,Be(-1)),d);return i.rank===1&&(m=re(m,l)),st(m,i.shape)},variance:()=>{let m=et(et(f,h),d);return i.rank===1&&(m=re(m,l)),st(m,i.shape)},scale:()=>{const m=et(h,p);let g=et(e,m);return i.rank===1&&(g=re(g,l)),st(g,i.shape)},offset:()=>{let m=e;return i.rank===1&&(m=re(m,l)),st(m,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const frt={kernelName:d1,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:i}=n,o=ye(i,s.shape)[0];return{x:()=>{const a=s.shape,u=r.size,l=a.slice(0,o),c=l.length,h=a.slice(i,a.length).slice(1),d=h.length,p=h3(0,c),f=h3(c+1,c+1+d),m=d3([l,[u],h]),g=st(e,m),x=st(r,[u]),b=d3([[c],p,f]),w=Ee(g,b);let y=l_(w,x,s.shape[o]);const v=cu(b);return y=Ee(y,v),y},indices:()=>r}}};function h3(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function d3(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mrt={kernelName:Np,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Te(n),b:()=>Te(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const grt={kernelName:Ep,gradFunc:e=>({x:()=>jt(e,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xrt={kernelName:Dp,gradFunc:e=>({x:()=>Te(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const brt={kernelName:Tp,gradFunc:e=>({x:()=>Te(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yrt={kernelName:Ap,gradFunc:e=>({x:()=>Te(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wrt={kernelName:f1,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,i=si(s,0);return{x:()=>Mr(i,e,et(e,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vrt={kernelName:Rp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ie(e,Ft(n,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const krt={kernelName:Fp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ie(e,jt(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Irt={kernelName:dZ,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const i=Ea(s);return ae(e,et(re(e,r,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Crt(e,t,n,s=5,r=1,i=1,o=.5){const a={x:e,y:t,dy:n},u={depthRadius:s,bias:r,alpha:i,beta:o};return tt.runKernel(Bk,a,u)}const $rt=rt({localResponseNormalizationBackprop_:Crt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Srt={kernelName:w1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:i,bias:o,alpha:a,beta:u}=n;return{x:()=>$rt(s,r,e,i,o,a,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(e,t,n,s){return t.rank<n.rank&&(t=st(t,Wn(t.shape,s))),e.rank<n.rank&&(e=st(e,Wn(e.shape,s))),{x:()=>et(e,jt(Bo(n,t),e.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f3={kernelName:v1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,i=t[0],o=t[1],a=ye(r,i.shape),u=p3(e,o,i,a);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nrt={kernelName:_p,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>et(e,jt(vl(n,s),"float32")),b:()=>et(e,jt(jR(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ert(e,t,n,s,r,i,o){const a=U(e,"dy","maxPool3dGrad"),u=U(t,"input","maxPool3dGrad"),l=U(n,"output","maxPool3dGrad");let c=a,h=u,d=l,p=!1;u.rank===4&&(p=!0,c=st(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=st(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=st(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),O(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),O(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),O(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),pr("maxPool3dGrad",i,o);const f={dy:c,input:h,output:d},m={filterSize:s,strides:r,pad:i,dimRoundingMode:o},g=tt.runKernel(Wk,f,m);return p?st(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const Drt=rt({maxPool3dGrad_:Ert});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Trt={kernelName:I1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=n;return{x:()=>Drt(e,s,r,i,o,a,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Art(e,t,n,s,r,i,o){const a=U(e,"dy","maxPoolGrad"),u=U(t,"input","maxPoolGrad"),l=U(n,"output","maxPoolGrad");O(u.rank===a.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${a.rank})`),O(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),O(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),pr("maxPoolGrad",i,o);const c={dy:a,input:u,output:l},h={filterSize:s,strides:r,pad:i,dimRoundingMode:o};return tt.runKernel(Pk,c,h)}const Frt=rt({maxPoolGrad_:Art});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rrt={kernelName:k1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:i,strides:o,pad:a}=n;return{x:()=>Frt(e,s,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _rt={kernelName:C1,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,i=ye(r,s.shape),o=hs(s.shape,i)[1],a=bt(o);return{x:()=>{const u=s.shape.slice();i.forEach(c=>{u[c]=1});const l=st(e,u);return ie(et(l,kl(s.shape,"float32")),a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mrt={kernelName:$1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[i,o]=t,a=ye(r,i.shape),u=p3(e,o,i,a);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ort={kernelName:Mp,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>et(e,jt(fh(n,s),"float32")),b:()=>et(e,jt(si(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lrt={kernelName:S1,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,i=r.map(o=>o[0]);return{x:()=>en(e,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zrt={kernelName:Op,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=fe(n.shape,s.shape);return{a:()=>{const i=Xn(n.shape,r);return i.length>0?st(re(e,i),n.shape):e},b:()=>{const i=et(e,Vn(cx(ie(n,s)))),o=Xn(s.shape,r);return o.length>0?st(re(i,o),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Brt={kernelName:Lp,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=fe(n.shape,s.shape);return{a:()=>{const i=et(e,jt(s,"float32")),o=Xn(n.shape,r);return o.length>0?st(re(i,o),n.shape):i},b:()=>{const i=et(e,jt(n,"float32")),o=Xn(s.shape,r);return o.length>0?st(re(i,o),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Prt={kernelName:N1,gradFunc:e=>({x:()=>Vn(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wrt={kernelName:T1,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>ds(n.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vrt={kernelName:D1,gradFunc:e=>({x:()=>Te(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Urt={kernelName:A1,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return Sl(e,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m3={kernelName:F1,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,i=r.map(o=>o[0]);return{x:()=>en(e,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Grt={kernelName:zp,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,i=n,o=s,a=fe(i.shape,o.shape);return{a:()=>{const u=jt(o,"float32");let l=et(e,et(u,ph(i,ae(u,Be(1)))));const c=Xn(i.shape,a);return c.length>0&&(l=re(l,c)),st(l,i.shape)},b:()=>{const u=si(i,0),l=Mr(u,Po(i),Te(i));let c=et(e,et(r,l));const h=Xn(o.shape,a);return h.length>0&&(c=re(c,h)),st(c,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hrt={kernelName:R1,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=si(n,0);return{x:()=>Mr(r,e,et(e,s)),alpha:()=>{let i=Mr(r,Te(e),et(e,n));const o=Xn(s.shape,e.shape);return o.length>0&&(i=re(i,o)),st(i,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qrt(e,t,n){const s=e.shape.slice();s[n]=1;const r=st(t,s),i=NI(e,n,!0,!1),o=NI(e,n,!0,!0),a=et(i,o);return et(r,a)}function jrt(e,t,n){const s=e.shape.length,r=s-n.length,i=Cn(n,s);let o=e;i!=null&&(o=Ee(e,i));const a=o.shape.slice(),u=a.splice(s-n.length,n.length).reduce((h,d)=>h*d,1);a.push(u);const l=o.reshape(a);let c=qrt(l,t,r);if(c=c.reshape(o.shape),i!=null){const h=cu(i);c=Ee(c,h)}return c}const Krt={kernelName:_1,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let i=[];return r==null?i=s.shape.map((o,a)=>a):typeof r=="number"?i=[r]:i=r,{x:()=>jrt(s,e,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xrt={kernelName:wp,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=fe(n.shape,s.shape);return{a:()=>{const i=ie(e,jt(s,"float32")),o=Xn(n.shape,r);return o.length>0?st(re(i,o),n.shape):i},b:()=>{let i=et(e,jt(n,"float32"));const o=Xn(s.shape,r);o.length>0&&(i=st(re(i,o),s.shape));const a=pn(s);return Vn(ie(i,jt(a,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yrt={kernelName:Bp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ie(e,Vn(pn(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zrt={kernelName:Wp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=et(fh(n,6),mf(n));return{x:()=>et(e,jt(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jrt={kernelName:Pp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>et(e,jt(mf(n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qrt={kernelName:M1,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>st(e,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tit={kernelName:L1,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>tt.runKernel(Kk,r,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eit={kernelName:O1,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>tt.runKernel(jk,r,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nit={kernelName:z1,gradFunc:(e,t,n)=>{const{dims:s}=n,r=ye(s,e.shape);return{x:()=>Cl(e,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sit={kernelName:Vp,gradFunc:e=>({x:()=>Te(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rit={kernelName:Up,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vn(ie(e,et(ph(n,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iit={kernelName:B1,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>jt(Te(n),"float32"),t:()=>et(e,jt(n,e.dtype)),e:()=>et(e,jt(RI(n),e.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oit={kernelName:Gp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const s=si(n,Be(0)),r=Be(xx),i=Be(bx),o=et(e,i),a=et(et(e,r),Ea(jt(n,"float32")));return Mr(s,o,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ait={kernelName:Kp,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>et(e,et(n,ae(Be(1),n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uit={kernelName:jp,gradFunc:e=>({x:()=>Te(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lit={kernelName:Hp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>et(SI(jt(n,"float32")),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cit={kernelName:qp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>et(WR(jt(n,"float32")),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hit={kernelName:P1,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:i}=n,o=s.shape,[a,u]=mx(s,r,i),l=[];for(let c=0;c<e.rank;c++)l.push([a[c],o[c]-a[c]-u[c]]);return{x:()=>LI(e,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dit={kernelName:G1,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,i=!0,o=et(e,s);return{logits:()=>ae(o,et(re(o,[r],i),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pit={kernelName:Xp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>et(e,hh(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g3={kernelName:V1,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>CI(e,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x3={kernelName:U1,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>fr(e,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fit={kernelName:Yp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ie(e,et(Ys(jt(n,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mit={kernelName:Xk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>et(e,et(jt(n,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const git={kernelName:Zp,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Be(2);return{a:()=>et(e,et(r,ae(n,s))),b:()=>et(e,et(r,ae(s,n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xit={kernelName:nf,gradFunc:e=>({x:()=>Te(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bit={kernelName:Jp,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=fe(n.shape,s.shape);return{a:()=>{let i=e;const o=Xn(n.shape,r);return o.length>0&&(i=re(i,o)),st(i,n.shape)},b:()=>{let i=e;const o=Xn(s.shape,r);return o.length>0&&(i=re(i,o)),st(Vn(i),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yit={kernelName:W1,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:i}=n;ye(i,s.shape).forEach(u=>{r[u]=1});const o=st(e,r),a=et(o,kl(s.shape,"float32"));return{x:()=>a}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wit={kernelName:Qp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ie(e,pn(SI(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vit={kernelName:tf,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>et(ae(Be(1),pn(n)),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kit={kernelName:ef,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let i=Te(s);if(s.rank===1)for(let o=0;o<r[0];++o)i=Ft(i,en(e,[o*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let o=0;o<r[0];++o)for(let a=0;a<r[1];++a)i=Ft(i,en(e,[o*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let o=0;o<r[0];++o)for(let a=0;a<r[1];++a)for(let u=0;u<r[2];++u)i=Ft(i,en(e,[o*s.shape[0],a*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let o=0;o<r[0];++o)for(let a=0;a<r[1];++a)for(let u=0;u<r[2];++u)for(let l=0;l<r[3];++l)i=Ft(i,en(e,[o*s.shape[0],a*s.shape[1],u*s.shape[2],l*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iit={kernelName:sh,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,i=cu(r);return{x:()=>Ee(e,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cit={kernelName:H1,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>du(e,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $it={kernelName:q1,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sit(e,n)}}};function Sit(e,t){const n=hu(t,Te(t)),s=TI(e,n);let r=vl(t,Be(0,"int32"));const i=s.rank-r.rank;for(let a=0;a<i;++a)r=Or(r,a+1);r=Da(r,kl(s.shape,"bool"));const o=Te(s);return Mr(r,s,o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nit={kernelName:j1,gradFunc:e=>({x:()=>Te(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eit=[c3,$st,Sst,Nst,Est,Dst,Tst,Ast,Fst,Rst,_st,Mst,zst,Wst,Vst,Ust,Gst,Hst,qst,jst,Kst,Xst,Zst,Yst,trt,ert,nrt,srt,rrt,irt,Xrt,ort,art,urt,lrt,crt,drt,hrt,prt,frt,mrt,grt,xrt,brt,yrt,wrt,vrt,krt,Irt,Srt,f3,f3,Nrt,Trt,Rrt,_rt,Mrt,Ort,Lrt,zrt,Brt,Prt,Wrt,Vrt,Urt,m3,m3,Grt,Hrt,Krt,Yrt,Zrt,Jrt,Qrt,tit,eit,nit,sit,rit,iit,oit,ait,uit,lit,cit,hit,dit,pit,g3,g3,x3,x3,fit,git,mit,xit,bit,yit,wit,vit,kit,Iit,Cit,$it,Nit];for(const e of Eit)mZ(e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.abs=function(){return this.throwIfDisposed(),Xs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.acos=function(){return this.throwIfDisposed(),xJ(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.acosh=function(){return this.throwIfDisposed(),yJ(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.add=function(e){return this.throwIfDisposed(),Ft(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.all=function(e,t){return this.throwIfDisposed(),LR(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.any=function(e,t){return this.throwIfDisposed(),yI(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.argMax=function(e){return this.throwIfDisposed(),af(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.argMin=function(e){return this.throwIfDisposed(),CJ(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.asScalar=function(){return this.throwIfDisposed(),O(this.size===1,()=>"The array must have only 1 element."),st(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.asType=function(e){return this.throwIfDisposed(),jt(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.as1D=function(){return this.throwIfDisposed(),st(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.as2D=function(e,t){return this.throwIfDisposed(),st(this,[e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),st(this,[e,t,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),st(this,[e,t,n,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),st(this,[e,t,n,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.asin=function(){return this.throwIfDisposed(),SJ(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.asinh=function(){return this.throwIfDisposed(),EJ(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.atan=function(){return this.throwIfDisposed(),TJ(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.atan2=function(e){return this.throwIfDisposed(),FJ(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.atanh=function(){return this.throwIfDisposed(),_J(this)},mt().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),kI(this,e,t,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),CI(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),ix(this,e,t,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.broadcastTo=function(e){return this.throwIfDisposed(),hf(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.cast=function(e){return this.throwIfDisposed(),jt(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.ceil=function(){return this.throwIfDisposed(),aQ(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ni(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Pn&&(e=[e]),fr([this,...e],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.conv1d=function(e,t,n,s,r,i){return this.throwIfDisposed(),zR(this,e,t,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),BR(this,e,t,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.conv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),wl(this,e,t,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.cos=function(){return this.throwIfDisposed(),SI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.cosh=function(){return this.throwIfDisposed(),WR(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),NI(this,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),VR(this,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),FQ(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.depthwiseConv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),EI(this,e,t,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),MQ(this,e,t,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.divNoNan=function(e){return this.throwIfDisposed(),PQ(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.div=function(e){return this.throwIfDisposed(),ie(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.dot=function(e){return this.throwIfDisposed(),VQ(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.elu=function(){return this.throwIfDisposed(),ax(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.equal=function(e){return this.throwIfDisposed(),Bo(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.erf=function(){return this.throwIfDisposed(),HQ(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),ttt(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.exp=function(){return this.throwIfDisposed(),Ea(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.expandDims=function(e){return this.throwIfDisposed(),Or(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.expm1=function(){return this.throwIfDisposed(),rtt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.fft=function(){return this.throwIfDisposed(),a_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.flatten=function(){return this.throwIfDisposed(),st(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.floor=function(){return this.throwIfDisposed(),cx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.floorDiv=function(e){return this.throwIfDisposed(),OR(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.gather=function(e,t){return this.throwIfDisposed(),TI(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.greaterEqual=function(e){return this.throwIfDisposed(),vl(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.greater=function(e){return this.throwIfDisposed(),si(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.ifft=function(){return this.throwIfDisposed(),UI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.irfft=function(){return this.throwIfDisposed(),Oet(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.isFinite=function(){return this.throwIfDisposed(),ptt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.isInf=function(){return this.throwIfDisposed(),mtt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.isNaN=function(){return this.throwIfDisposed(),xtt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.leakyRelu=function(e){return this.throwIfDisposed(),FI(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.lessEqual=function(e){return this.throwIfDisposed(),fh(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.less=function(e){return this.throwIfDisposed(),jR(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),ktt(this,e,t,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.logSigmoid=function(){return this.throwIfDisposed(),Dtt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.logSoftmax=function(e){return this.throwIfDisposed(),XR(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Rtt(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.log=function(){return this.throwIfDisposed(),Po(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.log1p=function(){return this.throwIfDisposed(),KR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Da(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.logicalNot=function(){return this.throwIfDisposed(),RI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.logicalOr=function(e){return this.throwIfDisposed(),YR(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.logicalXor=function(e){return this.throwIfDisposed(),ztt(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),ze(this,e,t,n)},mt().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),_I(this,e,t,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.max=function(e,t){return this.throwIfDisposed(),so(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.maximum=function(e){return this.throwIfDisposed(),hu(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.mean=function(e,t){return this.throwIfDisposed(),Un(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.min=function(e,t){return this.throwIfDisposed(),ux(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.minimum=function(e){return this.throwIfDisposed(),MI(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),qtt(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.mod=function(e){return this.throwIfDisposed(),Ktt(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.mul=function(e){return this.throwIfDisposed(),et(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.neg=function(){return this.throwIfDisposed(),Vn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.norm=function(e,t,n){return this.throwIfDisposed(),lx(this,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.notEqual=function(e){return this.throwIfDisposed(),hx(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),ZR(this,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.onesLike=function(){return this.throwIfDisposed(),ki(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.pad=function(e,t){return this.throwIfDisposed(),LI(this,e,t)},mt().prototype.pool=function(e,t,n,s,r,i){return this.throwIfDisposed(),ret(this,e,t,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.pow=function(e){return this.throwIfDisposed(),ph(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.prelu=function(e){return this.throwIfDisposed(),BI(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.prod=function(e,t){return this.throwIfDisposed(),aet(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.reciprocal=function(){return this.throwIfDisposed(),met(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.relu=function(){return this.throwIfDisposed(),Il(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.relu6=function(){return this.throwIfDisposed(),QR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.reshapeAs=function(e){return this.throwIfDisposed(),st(this,e.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.reshape=function(e){return this.throwIfDisposed(),st(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),f_(this,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),m_(this,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.reverse=function(e){return this.throwIfDisposed(),Cl(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.rfft=function(){return this.throwIfDisposed(),Bet(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.round=function(){return this.throwIfDisposed(),t_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.rsqrt=function(){return this.throwIfDisposed(),e_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.selu=function(){return this.throwIfDisposed(),n_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.separableConv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),s_(this,e,t,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.sigmoid=function(){return this.throwIfDisposed(),hh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.sign=function(){return this.throwIfDisposed(),Cet(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.sin=function(){return this.throwIfDisposed(),r_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.sinh=function(){return this.throwIfDisposed(),i_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.slice=function(e,t){return this.throwIfDisposed(),en(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.softmax=function(e){return this.throwIfDisposed(),VI(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.softplus=function(){return this.throwIfDisposed(),df(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),zI(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.split=function(e,t){return this.throwIfDisposed(),ri(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.sqrt=function(){return this.throwIfDisposed(),Ys(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.square=function(){return this.throwIfDisposed(),pn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Wet(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.squeeze=function(e){return this.throwIfDisposed(),ff(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Pn?[this,e]:[this,...e];return du(n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.step=function(e){return this.throwIfDisposed(),mf(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.stridedSlice=function(e,t,n,s,r,i,o,a){return this.throwIfDisposed(),qet(this,e,t,n,s,r,i,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.sub=function(e){return this.throwIfDisposed(),ae(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.sum=function(e,t){return this.throwIfDisposed(),re(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.tan=function(){return this.throwIfDisposed(),Ket(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.tanh=function(){return this.throwIfDisposed(),II(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.tile=function(e){return this.throwIfDisposed(),ro(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.toBool=function(){return this.throwIfDisposed(),jt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.toFloat=function(){return this.throwIfDisposed(),jt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.toInt=function(){return this.throwIfDisposed(),jt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.topk=function(e,t){return this.throwIfDisposed(),Yet(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.transpose=function(e){return this.throwIfDisposed(),Ee(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.unique=function(e){return this.throwIfDisposed(),Qet(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),l_(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.unstack=function(e){return this.throwIfDisposed(),Sl(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.where=function(e,t){return this.throwIfDisposed(),Mr(e,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */mt().prototype.zerosLike=function(){return this.throwIfDisposed(),Te(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Vo extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Vo.prototype)}}class Ci extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ci.prototype)}}class Y extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Y.prototype)}}class me extends Error{constructor(t){super(t),Object.setPrototypeOf(this,me.prototype)}}class DC extends Error{constructor(t){super(t),Object.setPrototypeOf(this,DC.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class b3{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let n;return this.cache.has(t)&&(n=this.cache.get(t),this.cache.delete(t),this.cache.set(t,n)),n}put(t,n){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,n)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let n=0;n<this.maxEntries-t;n++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Tl(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{const n=new Array(t);return n.fill(e),n}}function Uo(e,t){if(!e)throw new DC(t)}function y3(e,t){let n=0;for(const s of e)s===t&&n++;return n}function mr(e){return e.length===1?e[0]:e}function fn(e){return Array.isArray(e)?e:[e]}function Aa(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Al(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}let $i={};function TC(e){if(e==null)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function AC(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>AC(t));else{const t=Object.keys(e);for(const n of t){const s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:AC(s))}}}function wf(e,t={},n={},s="object",r=!1){if(typeof e=="string"){const i=e;let o;if(i in n)o=n[i];else if(i in $i)o=$i[i];else if(o=t[i],o==null)throw new Y(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{const i=e;if(i.className==null||i.config==null)throw new Y(`${s}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const o=i.className;let a,u;if(o in n?[a,u]=n[o]:o in $i?[a,u]=$i.className:o in t&&([a,u]=t[o]),a==null)throw new Y(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){const l={};for(const p of Object.keys($i))l[p]=$i[p];for(const p of Object.keys(n))l[p]=n[p];const c=i.config;c.customObjects=l;const h=Object.assign({},$i);for(const p of Object.keys(n))$i[p]=n[p];AC(i.config);const d=u(a,i.config,n,r);return $i=Object.assign({},h),d}else{const l=Object.assign({},$i);for(const h of Object.keys(n))$i[h]=n[h];const c=new a(i.config);return $i=Object.assign({},l),c}}}function Dit(e,t){return e<t?-1:e>t?1:0}function yx(e,t){return-1*Dit(e,t)}function fu(e){if(e==null)return e;const t=[];for(const n of e)t.indexOf(n)===-1&&t.push(n);return t}function Tit(e){if(e==null)throw new Y(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Fl(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new Y(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function FC(e,t,n=0,s=1/0){return Uo(n>=0),Uo(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function ps(e,t){Array.isArray(e)?(O(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>ps(n,`element ${s+1} of ${t}`))):O(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${w3(e)}.`)}function w3(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>w3(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function Ait(e,t,n){let s=n!=null?n():dr(),r;return(...i)=>{const o=n!=null?n():dr();return o-s<t||(s=o,r=e(...i)),r}}function v3(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Fit=0;function k3(){return Fit++}const wx={};function vx(e=""){return e in wx||(wx[e]=0),wx[e]+=1,e+wx[e].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Rit=["channelsFirst","channelsLast"],_it=["nearest","bilinear"],Mit=["valid","same","causal"],Oit=["max","avg"],Lit=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const yh=new Map;function Rn(e){Fl(Rit,"DataFormat",e)}function zit(e){Fl(_it,"InterpolationFormat",e)}function oi(e){Fl(Mit,"PaddingMode",e)}function I3(e){Fl(Oit,"PoolMode",e)}const vf=[],C3="/";function Rl(e,t){vf.push(e);try{const n=t();return vf.pop(),n}catch(n){throw vf.pop(),n}}function Bit(){return vf.length===0?"":vf.join(C3)+C3}function $3(e){if(!N3(e))throw new Error("Not a valid tensor name: '"+e+"'");return Bit()+e}function S3(e){if(!N3(e))throw new Error("Not a valid tensor name: '"+e+"'");yh.has(e)||yh.set(e,0);const t=yh.get(e);if(yh.set(e,yh.get(e)+1),t>0){const n=`${e}_${t}`;return yh.set(n,1),n}else return e}const Pit=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function N3(e){return!!e.match(Pit)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Wit(e){return e===parseInt(e.toString(),10)}function mu(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function wh(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function gu(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function oo(e,t){if(t<e)throw new Y(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let RC;function Yn(){return RC==null&&(RC=cJ().epsilon()),RC}function ao(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fa(e,t){return jt(e,t)}function kf(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),st(e,n)}function Vit(e,t){return ct(()=>{if(e.shape.length!==2)throw new Y(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);const n=kf(e,1);return OC(n,[1,t,1])})}function Uit(e){const t=[mu(e.shape)];return st(e,t)}function Git(e){if(e.rank<=1)throw new Y(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],mu(e.shape,1)];return st(e,t)}function _l(e,t,n){return ct(()=>{switch(e.rank){case 1:return PI(e,t,n);case 2:return o_(e,[t,0],[n,e.shape[1]]);case 3:return WI(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return fx(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return en(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return en(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Y(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function _C(e,t,n){return ct(()=>{switch(e.rank){case 1:return PI(e,t,n);case 2:return o_(e,[0,t],[e.shape[0],n]);case 3:return WI(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return fx(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Y(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function kx(e,t,n,s){return ct(()=>{switch(e.rank){case 1:return PI(e,t,n);case 2:switch(s){case 1:return _l(e,t,n);case 2:return _C(e,t,n);default:throw new Y(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return _l(e,t,n);case 2:return WI(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return _C(e,t,n);default:throw new Y(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return _l(e,t,n);case 2:return fx(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return fx(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return _C(e,t,n);default:throw new Y(`The axis is not within the rank of the tensor ${s}`)}default:throw new Y(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function MC(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),fr(e,t)}function E3(e,t){switch(e.rank){case 1:return cQ([e,t]);case 2:return dQ([e,t],0);case 3:return fQ([e,t],0);case 4:return gQ([e,t],0);default:throw new Y(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function OC(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Y(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return ro(e,t)}function Ix(e,t=0,n=1,s,r){return het(e,t,n,s,r)}function Go(e,t,n,s){if(e.rank<2||t.rank<2)throw new me(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){const r=e.shape.slice(-1)[0],i=t.shape.slice(-2)[0];if(r!==i)throw new me(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return d_({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?LC(e.rank,s,ao()):null,activation:n});{const r=e.shape.slice(),i=r.pop();e=st(e,[-1,i]);const o=t.shape.slice(),a=o.pop(),u=o.pop(),l=[...o,a],c=Array.from({length:t.rank},(d,p)=>p===0?t.rank-2:p<=t.rank-2?p-1:p);t=st(Ee(t,c),[u,-1]);const h=[...r,...l];return st(d_({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?LC(e.rank,s,ao()):null,activation:n}),h)}}function D3(e,t,n){return ct(()=>(Array.isArray(t)?t=ii(t,"int32"):t=jt(t,"int32"),TI(e,t,n)))}function If(e){return et(e,e)}function LC(e,t,n){const s=t.shape;if(t.rank!==1&&t.rank!==e)throw new Y(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?st(t,[1,s[0],1,1,1]):st(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?st(t,[1,1,1,1,s[0]]):st(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?st(t,[1,s[0],1,1]):st(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?st(t,[1,1,1,s[0]]):st(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?st(t,[1,s[0],1]):st(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?st(t,[1,1,s[0]]):st(t,[1].concat(s))}else if(e<3)return t;throw new Y(`Unsupported input rank by biasAdd: ${t.rank}`)}function uo(e,t,n){return ct(()=>(n==null&&(n=ao()),Rn(n),Ft(e,LC(e.rank,t,n))))}function Hit(e,t=1){if(t!==1)throw new me(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ax(e)}function qit(e){return ct(()=>ie(e,Ft(Xs(e),1)))}function T3(e,t,n,s){return ct(()=>ant(e,t,n,s))}function jit(e){return ct(()=>{const t=Ft(.5,et(.2,e));return ni(t,0,1)})}function Cf(e,t,n=!1){return n?e():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Kit=["fanIn","fanOut","fanAvg"],Xit=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yit(e){Fl(Kit,"FanMode",e)}function Zit(e){Fl(Xit,"Distribution",e)}class Si extends xh{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class A3 extends Si{apply(t,n){return ds(t,n)}}A3.className="Zeros",St(A3);class zC extends Si{apply(t,n){return kl(t,n)}}zC.className="Ones",St(zC);class F3 extends Si{constructor(t){if(super(),typeof t!="object")throw new Y(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new Y(`config must have value set but got ${t}`);this.value=t.value}apply(t,n){return ct(()=>et(Be(this.value),kl(t,n)))}getConfig(){return{value:this.value}}}F3.className="Constant",St(F3);class R3 extends Si{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,n){return dx(t,this.minval,this.maxval,n,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}R3.className="RandomUniform",St(R3);class _3 extends Si{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new me(`randomNormal does not support dType ${n}.`);return Ix(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}_3.className="RandomNormal",St(_3);class M3 extends Si{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new me(`truncatedNormal does not support dType ${n}.`);return u_(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}M3.className="TruncatedNormal",St(M3);class O3 extends Si{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,n){return ct(()=>{if(t.length!==2||t[0]!==t[1])throw new Y("Identity matrix initializer can only be used for 2D square matrices.");return et(this.gain,qR(t[0]))})}getConfig(){return{gain:this.gain}}}O3.className="Identity",St(O3);function Jit(e,t="channelsLast"){let n,s;if(Rn(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){const r=mu(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){const r=mu(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{const r=mu(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}class Lr extends Si{constructor(t){if(super(),t.scale<0)throw new Y(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,Yit(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,Zit(this.distribution),this.seed=t.seed}apply(t,n){const s=Jit(t),r=s[0],i=s[1];let o=this.scale;if(this.mode==="fanIn"?o/=Math.max(1,r):this.mode==="fanOut"?o/=Math.max(1,i):o/=Math.max(1,(r+i)/2),this.distribution==="normal"){const a=Math.sqrt(o);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new me(`${this.getClassName()} does not support dType ${n}.`);return u_(t,0,a,n,this.seed)}else{const a=Math.sqrt(3*o);return dx(t,-a,a,n,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Lr.className="VarianceScaling",St(Lr);class BC extends Lr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Lr.className}}BC.className="GlorotUniform",St(BC);class PC extends Lr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Lr.className}}PC.className="GlorotNormal",St(PC);class WC extends Lr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Lr.className}}WC.className="HeNormal",St(WC);class VC extends Lr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Lr.className}}VC.className="HeUniform",St(VC);class UC extends Lr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Lr.className}}UC.className="LeCunNormal",St(UC);class GC extends Lr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Lr.className}}GC.className="LeCunUniform",St(GC);class L3 extends Si{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new me("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,n){return ct(()=>{if(t.length<2)throw new me("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const s=t[0]>t[1]?[t[1],t[0]]:t,r=Ix(s,0,1,"float32");let i=est.gramSchmidt(r);return t[0]>t[1]&&(i=Ee(i)),et(this.gain,i)})}getConfig(){return{gain:this.gain,seed:this.seed}}}L3.className="Orthogonal",St(L3);const z3={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function B3(e,t={}){return wf(e,Ii.getMap().classNameMap,t,"initializer")}function $n(e){return TC(e)}function yn(e){if(typeof e=="string"){const t=e in z3?z3[e]:e;if(t==="GlorotNormal")return new PC;if(t==="GlorotUniform")return new BC;if(t==="HeNormal")return new WC;if(t==="HeUniform")return new VC;if(t==="LeCunNormal")return new UC;if(t==="LeCunUniform")return new GC;{const n={};return n.className=t,n.config={},B3(n)}}else return e instanceof Si?e:B3(e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function HC(e){return Array.isArray(e)&&Array.isArray(e[0])}function Cx(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function ue(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new Y(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Me(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new Y(`Expected exactly 1 Shape; got ${e.length}`)}else return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $x(e){let t=0;for(const n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const P3="Variable";class Qit{constructor(t,n="float32",s=P3,r=!0,i=null){this.dtype=n??"float32",this.shape=t.shape,this.id=k3(),s=s??P3,this.originalName=$3(s),this.name=S3(this.originalName),this.trainable_=r,this.constraint=i,this.val=nnt(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),tot(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function tot(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function qC(e){return e.map(t=>t.read())}function jC(e){e.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Zn{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Ho{constructor(t,n,s,r,i,o,a){this.dtype=t,this.shape=n,this.sourceLayer=s,this.inputs=r,this.callArgs=i,this.outputTensorIndex=a,this.id=k3(),o!=null&&(this.originalName=$3(o),this.name=S3(this.originalName)),this.rank=n.length}}let eot=0;class Sx{constructor(t,n){this.callArgs=n,this.id=eot++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s!=null&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const n of this.inboundLayers)n!=null?t.push(n.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let not=0;class Ce extends xh{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=not++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=t.name;if(!n){const s=this.getClassName();n=Aa(s)+"_"+vx(s)}if(this.name=n,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let i=null;t.batchSize!=null&&(i=t.batchSize),s=[i].concat(t.inputShape)}this.batchInputShape=s;let r=t.dtype;r==null&&(r=t.inputDType),r==null&&(r="float32"),this.dtype=r}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,n){return t.name+"_ib-"+n.toString()}getNodeAtIndex(t,n){if(this.inboundNodes.length===0)throw new Ci(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=t)throw new Y(`Asked to get ${n} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return mr(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return mr(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Vo(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Vo(`Layer ${this.name} is not connected, no input to return.`);return mr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Vo(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Vo(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return mr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(n=>n.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=fn(t),this.inputSpec==null||this.inputSpec.length===0)return;const n=fn(this.inputSpec);if(t.length!==n.length)throw new Y(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let s=0;s<t.length;s++){const r=t[s],i=n[s];if(i==null)continue;const o=r.rank;if(i.ndim!=null&&o!==i.ndim)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${o}`);if(i.maxNDim!=null&&o>i.maxNDim)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${o}`);if(i.minNDim!=null&&o<i.minNDim)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${o}.`);if(i.dtype!=null&&r.dtype!==i.dtype)throw new Y(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const a=r.shape;for(const u in i.axes){const l=Number(u),c=i.axes[u],h=l>=0?a[l]:a[a.length+l];if(c!=null&&[c,null].indexOf(h)===-1)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${c} but got shape ${a}.`)}}if(i.shape!=null)for(let a=0;a<i.shape.length;++a){const u=i.shape[a],l=r.shape[a];if(u!=null&&l!=null&&u!==l)throw new Y(`Input ${s} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(t,n){return t}invokeCallHook(t,n){this._callHook!=null&&this._callHook(t,n)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,n){n=n||{},this.assertNotDisposed();const s=fn(t);let r=!0;for(const o of s)if(!(o instanceof Ho)){r=!1;break}let i=!0;for(const o of s)if(o instanceof Ho){i=!1;break}if(r===i)throw new Y("Arguments to apply() must be all SymbolicTensors or all Tensors");return Rl(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const o=[];for(const a of fn(t))o.push(a.shape);this.build(mr(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(t),i){let o=this.call(t,n);const a=fn(o),u=[];for(let l of a)s.indexOf(l)!==-1&&(l=l.clone()),u.push(l);if(o=mr(u),this.activityRegularizer!=null)throw new me("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}else{const o=sot(t),a=this.computeOutputShape(o);let u;const l=rot(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?o[0]:o),a!=null&&a.length>0&&Array.isArray(a[0])?u=a.map((c,h)=>new Ho(l,c,this,fn(t),n,this.name,h)):u=new Ho(l,a,this,fn(t),n,this.name),this.addInboundNode(t,u,null,null,o,a,n),this._refCount++,this.activityRegularizer!=null)throw new me("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&t[r]!=null&&t[r]!==s&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Vo(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const n of this.inboundNodes){const s=JSON.stringify(n.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new Vo(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ci(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return $x(this.weights)}build(t){this.built=!0}getWeights(t=!1){return qC(t?this.trainableWeights:this.weights)}setWeights(t){ct(()=>{const n=this.weights;if(n.length!==t.length)throw new Y(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${n.length} weights. Provided weights: ${t}...`);if(n.length===0)return;const s=[],r=qC(n);for(let i=0;i<r.length;++i){const o=r[i],a=n[i],u=t[i];if(!Le(o.shape,u.shape))throw new Y(`Layer weight shape ${o.shape} not compatible with provided weight shape ${u.shape}`);s.push([a,u])}jC(s)})}addWeight(t,n,s,r,i,o,a,u){if(this._addedWeightNames.indexOf(t)!==-1)throw new Y(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=u!=null?u():yn("zeros"));const l=r.apply(n,s),c=new Qit(l,s,t,o,a);return l.dispose(),i!=null&&this.addLoss(()=>i.apply(c.read())),o==null&&(o=!0),o?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=fn(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}addInboundNode(t,n,s,r,i,o,a=null){const u=fn(t);n=fn(n),s=fn(s),r=fn(r),i=Cx(i),o=Cx(o);const l=[],c=[],h=[];for(const d of u)l.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new Sx({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:h,inputTensors:u,outputTensors:n,inputMasks:s,outputMasks:r,inputShapes:i,outputShapes:o},a);for(let d=0;d<n.length;d++)n[d].sourceLayer=this,n[d].nodeIndex=this.inboundNodes.length-1,n[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function sot(e){e=fn(e);const t=[];for(const n of e)t.push(n.shape);return mr(t)}function rot(e){return"float32"}function W3(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{const s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let i=0;i<s.inboundLayers.length;i++){const o=s.inputTensors[i],a=s.inboundLayers[i],u=s.nodeIndices[i],l=W3(o,a,u);for(const c of l)r.indexOf(c)===-1&&r.push(c)}return r}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class $f extends Ce{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:vx("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new Y("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=t.batchInputShape;if(n==null){if(t.inputShape==null)throw new Y("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new Y("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=n,this.dtype=s,this.inputSpec=[{shape:n}];const r=new Ho(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Sx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(t,n){throw new Y(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}$f.className="InputLayer",St($f);function iot(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new Y("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new $f({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function oot(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return jt(t,e.dtype)}catch{throw new Y(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}class xu{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof xu)for(const n in t.id2Value)this.id2Value[n]=t.id2Value[n],n in t.id2Mask&&(this.id2Mask[n]=t.id2Mask[n]);else{if(t==null)return;for(const n of t)this.add(n.key,n.value)}}add(t,n,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=oot(t,n),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new Y(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Ho){if(this.id2Value[t.id]==null)throw new Y(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const n=this.name2Id[t];if(n==null)throw new Y(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[n]}}getMask(t){if(t instanceof Ho){if(this.id2Value[t.id]==null)throw new Y(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const n=this.name2Id[t];if(n==null)throw new Y(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&Ie(this.id2Mask)}}const Nx=new b3,Ex=new b3;function aot(e){Nx!=null&&Nx.setMaxEntries(e),Ex!=null&&Ex.setMaxEntries(e)}function Sf(e,t,n,s){const r=n==null?!1:n.training,i=Array.isArray(e),o=i?e:[e],a=o.map(f=>f.name),u=[],l=t.names();for(const f of a)l.indexOf(f)!==-1?u.push(t.getValue(f)):u.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=a.join(",")+"|"+t.names().sort().join(",");let h=Nx.get(c),d;if(h==null){const f=uot(o,t);h=f.sorted,d=f.recipientCounts,Nx.put(c,h),Ex.put(c,d)}d={},r||Object.assign(d,Ex.get(c));const p=new xu(t);for(let f=0;f<h.length;++f){if(s!=null){const $=bI().numTensors;$>s.maxNumTensors&&(s.maxNumTensors=$),$<s.minNumTensors&&(s.minNumTensors=$)}const m=h[f],g=m.sourceLayer;if(g instanceof $f)continue;const x=[],b=[],w=[];let y=!1;for(const $ of m.inputs){const S=p.getValue($),N=p.getMask($);x.push(S),b.push(N),N!=null&&(y=!0),r||(d[$.name]--,d[$.name]===0&&!t.hasKey($)&&a.indexOf($.name)===-1&&!S.isDisposed&&$.sourceLayer.stateful!==!0&&w.push(S))}y&&(n=n||{},n.mask=b[0]);const v=fn(g.apply(x,n));let k=null;g.supportsMasking&&(k=g.computeMask(x,b));const C=cot(m),I=Array.isArray(C)?C:[C];for(let $=0;$<I.length;++$){p.hasKey(I[$])||p.add(I[$],v[$],Array.isArray(k)?k[0]:k);const S=a.indexOf(I[$].name);S!==-1&&(u[S]=v[$])}r||Ie(w)}return p.disposeMasks(),i?u:u[0]}function uot(e,t){O(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){const r=V3(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of e){const{sorted:o,recipientMap:a}=V3(i,t);for(const u of o)r.has(u.name)||(n.push(u),r.add(u.name));for(const u in a)s[u]==null&&(s[u]=new Set),a[u].forEach(l=>s[u].add(l))}}return{sorted:n,recipientCounts:lot(s)}}function lot(e){const t={};for(const n in e)t[n]=e[n].size;return t}function V3(e,t){const n=new Set,s=[],r={};for(const a of t.names())n.add(a);const i=[],o=[];for(i.push(e);i.length>0;){const a=i[i.length-1];if(n.has(a.name)){i.pop();continue}const u=o[o.length-1]===i.length-1;if(a.inputs.length===0||u)i.pop(),s.push(a),n.add(a.name),u&&o.pop();else{o.push(i.length-1);for(const l of a.inputs)r[l.name]==null&&(r[l.name]=new Set),r[l.name].add(a.name),!n.has(l.name)&&i.push(l)}}return{sorted:s,recipientMap:r}}function cot(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(const r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,aot);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function KC(e,t){return ct(()=>Ys(re(et(e,e),t,!0)))}class Nf extends xh{getConfig(){return{}}}class U3 extends Nf{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return ct(()=>{const n=KC(t,this.axis),s=ni(n,0,this.maxValue);return et(t,ie(s,Ft(Yn(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}U3.className="MaxNorm",St(U3);class G3 extends Nf{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return ct(()=>ie(t,Ft(Yn(),KC(t,this.axis))))}getConfig(){return{axis:this.axis}}}G3.className="UnitNorm",St(G3);class H3 extends Nf{apply(t){return Il(t)}}H3.className="NonNeg",St(H3);class q3 extends Nf{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return ct(()=>{const n=KC(t,this.axis),s=Ft(et(this.rate,ni(n,this.minValue,this.maxValue)),et(1-this.rate,n));return et(t,ie(s,Ft(Yn(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}q3.className="MinMaxNorm",St(q3);const j3={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Jn(e){return TC(e)}function K3(e,t={}){return wf(e,Ii.getMap().classNameMap,t,"constraint")}function Qn(e){if(e==null)return null;if(typeof e=="string"){const t={className:e in j3?j3[e]:e,config:{}};return K3(t)}else return e instanceof Nf?e:K3(e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Ml(e){if(e==null)return;const t=[],n=[],s=[];for(const r in e){const i=e[r];if(typeof i!="number"){const o=i;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){const r=await Promise.all(t);for(let i=0;i<r.length;++i)e[n[i]]=r[i][0];Ie(s)}}function X3(e){if(e!=null)for(const t in e){const n=e[t];typeof n!="number"&&n.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Y3;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(Y3||(Y3={}));const hot=125;class Ef{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,n){}async onEpochEnd(t,n){}async onBatchBegin(t,n){}async onBatchEnd(t,n){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class dot{constructor(t,n=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=n}append(t){this.callbacks.push(t)}setParams(t){for(const n of this.callbacks)n.setParams(t)}setModel(t){for(const n of this.callbacks)n.setModel(t)}async onEpochBegin(t,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochBegin(t,n)}async onEpochEnd(t,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochEnd(t,n)}async onBatchBegin(t,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchBegin(t,n)}async onBatchEnd(t,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchEnd(t,n)}async onTrainBegin(t){t==null&&(t={});for(const n of this.callbacks)await n.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const n of this.callbacks)await n.onTrainEnd(t)}}class pot extends Ef{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,n){n==null&&(n={});const s=n.size==null?0:n.size;this.seen+=s;for(const r in n){const i=n[r];if(typeof i=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+i*s;else{let o;r in this.totals?o=this.totals[r]:this.totals[r]=0;const a=ct(()=>Ft(this.totals[r],et(i,s)));this.totals[r]=a,o!=null&&o.dispose()}}}async onEpochEnd(t,n){if(n!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?n[s]=this.totals[s]/this.seen:ct(()=>{const r=et(ie(1,this.seen),this.totals[s]);n[s]=r,this.totals[s].dispose(),zo(n[s])}))}}class fot extends Ef{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,n){n==null&&(n={}),this.epoch.push(t);for(const s in n)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(n[s])}async syncData(){const t=[],n=[],s=[];for(const i in this.history){const o=this.history[i];for(let a=0;a<o.length;++a)if(typeof o[a]!="number"){const u=o[a];t.push(u.data()),n.push(i),s.push(a)}}const r=await Promise.all(t);for(let i=0;i<r.length;++i)this.history[n[i]][s[i]].dispose(),this.history[n[i]][s[i]]=r[i][0]}}class mot extends Ef{constructor(t,n){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||L_,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=hot),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");uk(this.yieldEvery)&&(this.maybeWait=Ait(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,n,s){const r=[];this.yield!=null&&(await Ml(s),r.push(this.yield(t,n,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,n){this.currentEpoch=t,this.epochBegin!=null&&(await Ml(n),await this.epochBegin(t,n))}async onEpochEnd(t,n){const s=[];this.epochEnd!=null&&(await Ml(n),s.push(this.epochEnd(t,n))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,n){this.batchBegin!=null&&(await Ml(n),await this.batchBegin(t,n))}async onBatchEnd(t,n){const s=[];this.batchEnd!=null&&(await Ml(n),s.push(this.batchEnd(t,n))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):uk(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,n)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await Ml(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await Ml(t),await this.trainEnd(t))}}function Z3(e,t){return e==null&&(e={}),e instanceof Ef?[e]:Array.isArray(e)&&e[0]instanceof Ef?e:fn(e).map(n=>new mot(n,t))}class Ni{constructor(){}static registerCallbackConstructor(t,n){O(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Ni.checkForDuplicate(n),Ni.constructors[t]==null&&(Ni.constructors[t]=[]),Ni.constructors[t].push(n)}static checkForDuplicate(t){for(const n in Ni.constructors)Ni.constructors[+n].forEach(s=>{if(s===t)throw new Y("Duplicate callback constructor.")})}static clear(){Ni.constructors={}}static createCallbacks(t){const n=[];for(const s in Ni.constructors){const r=+s;t>=r&&n.push(...Ni.constructors[r])}return n.map(s=>new s)}}Ni.constructors={};function J3(e,t,n,s,r,i,o,a,u){const l=new fot,c=[new pot,...Ni.createCallbacks(t)];e!=null&&c.push(...e),c.push(l);const h=new dot(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:i,batchSize:o,verbose:t,doValidation:a,metrics:u}),{callbackList:h,history:l}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ra(e,t={},n=!1){return wf(e,Ii.getMap().classNameMap,t,"layer",n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dx(e,t){return ct(()=>{e.dtype!=="float32"&&(e=jt(e,"float32"));const n=re(If(e),t,!0),s=ox(n.shape,Yn()),r=Ys(hu(n,s));return ie(e,r)})}function Tx(e,t){return ct(()=>Un(If(ae(t,e)),-1))}function XC(e,t){return ct(()=>Un(Xs(ae(t,e)),-1))}function YC(e,t){return ct(()=>{const n=ae(e,t),s=ni(Xs(e),Yn(),Number.MAX_VALUE),r=Xs(ie(n,s));return et(100,Un(r,-1))})}function got(e,t){return ct(()=>{const n=ni(t,Yn(),Number.MAX_VALUE),s=Po(Ft(1,n)),r=ni(e,Yn(),Number.MAX_VALUE),i=Po(Ft(1,r));return Un(If(ae(s,i)),-1)})}function xot(e,t){return ct(()=>{const n=hu(0,ae(1,et(e,t)));return Un(If(n),-1)})}function bot(e,t){return ct(()=>{const n=hu(0,ae(1,et(e,t)));return Un(n,-1)})}function yot(e,t){return ct(()=>{const n=re(et(e,t),-1),s=so(et(ae(1,e),t),-1);return hu(0,Ft(1,ae(s,n)))})}function wot(e,t){return ct(()=>{const n=Math.log(2),s=ae(t,e),r=ae(Ft(s,df(et(-2,s))),n);return Un(r,-1)})}function Df(e,t,n=!1){return ct(()=>{if(n)t=VI(t);else{const s=re(t,t.shape.length-1,!0);t=ie(t,s)}return t=ni(t,Yn(),1-Yn()),Vn(re(et(jt(e,"float32"),Po(t)),t.shape.length-1))})}function Ax(e,t,n=!1){return ct(()=>{const s=jt(cx(Uit(e)),"int32");t=ni(t,Yn(),1-Yn());const r=t.shape,i=st(ZR(s,r[r.length-1]),r);return Df(i,t,n)})}function vot(e,t){if(!Le(e.shape,t.shape))throw new Y(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return ct(()=>{const n=Il(t),s=Vn(Xs(t));return Ft(ae(n,et(t,e)),KR(Ea(s)))})}function Fx(e,t){return ct(()=>{let n;return n=ni(t,Yn(),1-Yn()),n=Po(ie(n,ae(1,n))),Un(vot(e,n),-1)})}function kot(e,t){return ct(()=>{const n=ni(e,Yn(),1),s=ni(t,Yn(),1);return re(et(e,Po(ie(n,s))),-1)})}function Iot(e,t){return ct(()=>{const n=Po(Ft(Yn(),t));return Un(ae(t,et(e,n)),-1)})}function Q3(e,t){return ct(()=>{const n=Dx(e,-1),s=Dx(t,-1),r=et(n,s);return Vn(re(r,-1))})}const Rx={meanSquaredError:Tx,meanAbsoluteError:XC,meanAbsolutePercentageError:YC,meanSquaredLogarithmicError:got,squaredHinge:xot,hinge:bot,categoricalHinge:yot,logcosh:wot,categoricalCrossentropy:Df,sparseCategoricalCrossentropy:Ax,binaryCrossentropy:Fx,kullbackLeiblerDivergence:kot,poisson:Iot,cosineProximity:Q3};function ZC(e){if(typeof e=="string"){if(e in Rx)return Rx[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Y(t)}else return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tM(e,t){return ct(()=>{const n=et(.5,ki(t)),s=Fa(si(t,n),e.dtype);return Un(Bo(e,s),-1)})}function eM(e,t){return ct(()=>Fa(Bo(af(e,-1),af(t,-1)),"float32"))}function Cot(e,t){return ct(()=>jt(re(Da(Bo(e,1),Bo(t,1))),"float32"))}function $ot(e,t){return ct(()=>jt(re(Da(Bo(e,0),Bo(t,1))),"float32"))}function Sot(e,t){return ct(()=>{const n=Cot(e,t),s=$ot(e,t),r=Ft(n,s);return jt(Mr(si(r,0),ie(n,r),0),"float32")})}function Not(e,t){return Fx(e,t)}function Eot(e,t){return e.rank===t.rank&&(e=ff(e,[e.rank-1])),t=af(t,-1),t.dtype!==e.dtype&&(t=jt(t,e.dtype)),jt(Bo(e,t),"float32")}const Dot=Tx,Tot=Tx,Aot=XC,Fot=XC,Rot=YC,_ot=YC,nM=Df,Mot=Q3,sM=Ax,_x={binaryAccuracy:tM,categoricalAccuracy:eM,precision:Sot,categoricalCrossentropy:nM,sparseCategoricalCrossentropy:sM,mse:Dot,MSE:Tot,mae:Aot,MAE:Fot,mape:Rot,MAPE:_ot,cosine:Mot};function Oot(e){if(typeof e=="string"&&e in _x)return _x[e];if(typeof e!="string"&&e!=null)return e;throw new Y(`Unknown metric ${e}`)}function Mx(e){if(Uo(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(const n of Object.keys(Rx))if(Rx[n]===e){t=n;break}if(t!==void 0)return t;for(const n of Object.keys(_x))if(_x[n]===e){t=n;break}return t!==void 0?t:e.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lot(e){const t={Adagrad:()=>bh.adagrad(.01),Adadelta:()=>bh.adadelta(1,.95,Yn()),Adam:()=>bh.adam(.001,.9,.999,Yn()),Adamax:()=>bh.adamax(.002,.9,.999,Yn(),0),RMSProp:()=>bh.rmsprop(.001,.9,0,Yn()),SGD:()=>bh.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Y(`Unknown Optimizer ${e}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const rM=1*1024*1024;function iM(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!JC(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const s=JSON.stringify(e);s.length>rM&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${rM}.`)}}function JC(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t)if(typeof n!="string"||!JC(e[n]))return!1;return!0}else if(Array.isArray(e)){for(const t of e)if(!JC(t))return!1;return!0}else return!1;else{const t=typeof e;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zot(e,t,n,s=console.log){const r=Pot(e),i=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(t*c)));let o;if(!r){i.push("Receives inputs"),o=[];for(const c in e.nodesByDepth)o.push(...e.nodesByDepth[c])}s("_".repeat(t)),Ox(i,n,s),s("=".repeat(t));const a=e.layers;for(let c=0;c<a.length;++c)r?Wot(a[c],n,s):Vot(a[c],n,o,s),s((c===a.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=Bot(e),l=$x(e.nonTrainableWeights);s(`Total params: ${u+l}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${l}`),s("_".repeat(t))}function Bot(e){let t;return e.collectedTrainableWeights!=null?t=$x(e.collectedTrainableWeights):t=$x(e.trainableWeights),t}function Pot(e){let t=!0;const n=[],s=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of e.layers){let i=!1;for(const o of r.inboundNodes)if(s.indexOf(o)!==-1)if(i){t=!1;break}else i=!0;if(!t)break}return t}function Ox(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function Wot(e,t,n){let s,r;try{r=e.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(e.outputShape)}catch{s="multiple"}const i=e.name,o=e.getClassName(),a=[`${i} (${o})`,r,s,e.countParams().toString()];Ox(a,t,n)}function Vot(e,t,n,s){let r,i;try{i=e.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{i="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}const o=[];for(const h of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];o.push(`${p}[${f}][${m}]`)}const a=e.name,u=e.getClassName(),l=o.length===0?"":o[0],c=[`${a} (${u})`,i,r,e.countParams().toString(),l];Ox(c,t,s);for(let h=1;h<o.length;++h)Ox(["","","","",o[h]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function oM(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function QC(e,t){if(e===null)return null;if(typeof e=="string")return Al(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const i=e[r];oM(t,r,i)?n.push(i):n.push(QC(i,t))}return n}else{const n={};for(const s of Object.keys(e)){const r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{const i=Al(s);n[i]=QC(r,i)}}return n}}function t2(e,t){if(e==null)return null;if(typeof e=="string")return Aa(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const i=e[r];oM(t,r,i)?n.push(i):n.push(t2(i,t))}return n}else{const n={};for(const s of Object.keys(e)){const r=e[s],i=Aa(s);(s==="name"||s==="className")&&typeof r=="string"?n[i]=r:n[i]=t2(r,s)}return n}}/** @license See the LICENSE file. */const aM="4.2.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class lo extends Ce{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=vx(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],fu(this.inputs).length!==this.inputs.length)throw new Y(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);fu(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const w=b.sourceLayer,y=b.nodeIndex,v=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(v)}for(const b of this.inputs){const w=b.sourceLayer,y=b.nodeIndex,v=b.tensorIndex;Uo(y===0,"input layer has >1 nodes"),Uo(v===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const w=this.inputLayers[b];if(!(w instanceof $f))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const n={},s={},r={},i={},o={},a=[],u=(b,w,y,v,k,C)=>{(v==null||k==null||C==null)&&(v=b.sourceLayer,k=b.nodeIndex,C=b.tensorIndex);const I=v.inboundNodes[k];if(y.indexOf(I)!==-1)throw new Ci(`The tensor ${b.name} at layer "${v.name}" is part of a cycle.`);if(w.indexOf(I)!==-1)return;this.containerNodes.add(lo.nodeKey(v,k)),v.id in o||(o[v.id]=Object.keys(o).length),y.indexOf(I)===-1&&y.push(I);const $=I.inboundLayers.length;for(let S=0;S<$;S++){const N=I.inputTensors[S],F=I.inboundLayers[S],D=I.nodeIndices[S],E=I.tensorIndices[S];u(N,w,y,F,D,E)}for(w.push(I);y.indexOf(I)>=0;)y.splice(y.indexOf(I),1);a.push(I)},l=[],c=[];for(const b of this.outputs)u(b,l,c);const h=a.slice().reverse();for(const b of h){s[b.id]=b,b.id in n||(n[b.id]=0);let w=n[b.id];const y=r[b.outboundLayer.id]==null?0:r[b.outboundLayer.id];w=Math.max(w,y),r[b.outboundLayer.id]=w,i[b.outboundLayer.id]=b.outboundLayer,n[b.id]=w;for(let v=0;v<b.inboundLayers.length;v++){const k=b.inboundLayers[v],C=b.nodeIndices[v],I=k.inboundNodes[C],$=n[I.id]==null?0:n[I.id];n[I.id]=Math.max(w+1,$),s[I.id]=I}}const d={};for(const b in n){const w=n[b];w in d||(d[w]=[]),d[w].push(s[b])}const p={};for(const b in r){const w=r[b];w in p||(p[w]=[]),p[w].push(i[b])}let f=Object.keys(p).map(b=>parseInt(b,10)).sort(yx);this.layers=[];for(const b of f){const w=p[b];w.sort((y,v)=>{const k=o[y.id],C=o[v.id];return k<C?-1:k>C?1:0});for(const y of w)y instanceof lo&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=p,f=Object.keys(d).map(b=>parseInt(b,10)).sort(yx);const m=this.inputs.slice(),g=[];for(const b of f)for(const w of d[b]){const y=w.outboundLayer;if(y!=null){for(const v of w.inputTensors)if(m.indexOf(v)===-1)throw new Ci(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${y.name}". The following previous layers were accessed without issue: ${g}`);for(const v of w.outputTensors)m.push(v);g.push(y.name)}}this.nodesByDepth=d;const x=this.layers.map(b=>b.name);for(const b of x){const w=x.filter(y=>y===b).length;if(w!==1)throw new Ci(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Sx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const n of this.layers)t.numDisposedVariables+=n.dispose().numDisposedVariables;for(const n of this.internalContainerRefs)t.numDisposedVariables+=n.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(n=>{n._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new Y("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const n of this.layers)t=t.concat(n.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const n of this.layers)t.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.layers)n.push(...s.trainableWeights);return n.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,n=!0){const s={};let r=0;for(const o of this.layers)for(const a of o.weights){if(s[a.originalName]!=null)throw new Y(`Duplicate weight name: ${a.originalName}`);s[a.originalName]=a,r++}const i=[];for(const o in t){let a=o;if(s[o]==null){const u=o.split("/");a=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[a]!=null)i.push([s[a],t[o]]);else if(n)throw new Y(`Provided weight data has no target variable: ${o}`);delete s[a]}if(n){const o=[];for(const a in s)o.push(a);if(o.length>0)throw new Y(`${o.length} of ${r} weights are not set: ${o}`)}jC(i)}updatedConfig(){const t=this.getConfig(),n={};return n.className=this.getClassName(),n.config=t,n.kerasVersion=`tfjs-layers ${aM}`,n.backend="TensorFlow.js",n}toJSON(t,n=!0){const s=t2(this.updatedConfig());return n?JSON.stringify(s):s}call(t,n){return ct(()=>{t=fn(t);const s=new xu;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],t[r]);return Sf(this.outputs,s,n)})}computeMask(t,n){return ct(()=>{t=fn(t);let s;return n==null?s=Tl(null,t.length):s=fn(n),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const n=Cx(t);if(n.length!==this.inputLayers.length)throw new Y(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<n.length;a++){const u=this.inputLayers[a],l=n[a],c=u.name+"_0_0";s[c]=l}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(yx);if(r.length>1)for(const a of r){const u=this.nodesByDepth[a];for(const l of u){const c=l.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;const h=[];for(let m=0;m<l.inboundLayers.length;m++){const g=l.inboundLayers[m],x=l.nodeIndices[m],b=l.tensorIndices[m],w=`${g.name}_${x}_${b}`,y=s[w];h.push(y)}const d=c.computeOutputShape(mr(h)),p=Cx(d),f=c.inboundNodes.indexOf(l);for(let m=0;m<p.length;m++){const g=`${c.name}_${f}_${m}`;s[g]=p[m]}}}const i=[],o=[];for(let a=0;a<this.outputLayers.length;a++){const u=this.outputLayers[a],l=this.outputLayersNodeIndices[a],c=this.outputLayersTensorIndices[a],h=`${u.name}_${l}_${c}`;o.push(h)}for(let a=0;a<o.length;a++){const u=o[a];Uo(u in s),i.push(s[u])}return mr(i)}runInternalGraph(t,n){n==null&&(n=Tl(null,t.length));const s={};for(let u=0;u<this.inputs.length;++u){const l=this.inputs[u],c=t[u],h=n[u];s[l.id]=[c,h]}const r=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(yx);for(const u of r){const l=this.nodesByDepth[u];for(const c of l){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},g,x,b,w;if(c.callArgs!=null&&(m=c.callArgs),f.length===1){const[y,v]=f[0];m.mask==null&&(m.mask=v),b=fn(h.call(y,m)),w=fn(h.computeMask(y,v)),g=[y],x=[v]}else g=f.map(y=>y[0]),x=f.map(y=>y[1]),m.mask==null&&(m.mask=x),b=fn(h.call(g,m)),w=fn(h.computeMask(g,x));if(h.activityRegularizer)throw new me("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<p.length;++y){const v=p[y],k=b[y],C=w[y];s[v.id]=[k,C]}}}}const i=[],o=[],a=[];for(const u of this.outputs){Uo(u.id in s,`Could not compute output ${u.name} : ${u.id}`);const[l,c]=s[u.id];a.push(l.shape),i.push(l),o.push(c)}return[i,o,a]}buildNodeConversionMap(t){const n={};let s;for(const r of this.layers){s=r instanceof lo?1:0;for(let i=0;i<r.inboundNodes.length;i++){const o=lo.nodeKey(r,i);this.containerNodes.has(o)&&(n[o]=s,s+=1)}}return n}getLayer(t,n){if(n!=null){if(this.layers.length<=n)throw new Y(`Was asked to retrieve layer at index ${n}, but model only has ${this.layers.length} layer(s).`);return this.layers[n]}else if(t==null)throw new Y("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===t)return s;throw new Y(`No such layer: ${t}`)}calculateLosses(){return ct(()=>{const t=[];for(const n of this.layers)for(let s=0;s<n.inboundNodes.length;++s){const r=lo.nodeKey(n,s);this.containerNodes.has(r)&&t.push(...n.calculateLosses())}return t})}getConfig(){const t={name:this.name},n=this.buildNodeConversionMap(this.layers),s=[];for(const o of this.layers){const a=o.getClassName(),u=o.getConfig(),l=[];for(let h=0;h<o.inboundNodes.length;h++){const d=o.inboundNodes[h],p=lo.nodeKey(o,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const x=d.inboundLayers[g],b=d.nodeIndices[g],w=d.tensorIndices[g],y=lo.nodeKey(x,b);let v=n[y];v==null&&(v=0),m.push([x.name,v,w,f])}l.push(m)}}}const c={};c.name=o.name,c.className=a,c.config=u,c.inboundNodes=l,s.push(c)}t.layers=s;const r=[];for(let o=0;o<this.inputLayers.length;o++){const a=this.inputLayers[o],u=this.inputLayersNodeIndices[o],l=lo.nodeKey(a,u);if(!this.containerNodes.has(l))continue;let c=n[l];c==null&&(c=0);const h=this.inputLayersTensorIndices[o];r.push([a.name,c,h])}t.inputLayers=r;const i=[];for(let o=0;o<this.outputLayers.length;o++){const a=this.outputLayers[o],u=this.outputLayersNodeIndices[o],l=lo.nodeKey(a,u);if(!this.containerNodes.has(l))continue;let c=n[l];c==null&&(c=0);const h=this.outputLayersTensorIndices[o];i.push([a.name,c,h])}return t.outputLayers=i,t}static fromConfig(t,n,s={},r=!1){const i={},o={};function a(g,x){g.name in o?o[g.name].push(x):o[g.name]=[x]}function u(g,x){const b=[];let w;for(const y of x){const v=y[0],k=y[1],C=y[2];if(w=y[3]==null?{}:y[3],!(v in i)){a(g,x);return}const I=i[v];if(I.inboundNodes.length<=k){a(g,x);return}const $=I.inboundNodes[k];b.push($.outputTensors[C])}b.length>0&&g.apply(mr(b),w)}function l(g){const x=g.name,b=Ra(g,n.customObjects!=null?n.customObjects:{});b.setFastWeightInitDuringBuild(r),i[x]=b,g.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new Y(`Corrupted configuration, expected array for nodeData: ${w}`);a(b,w)})}const c=n.name,h=n.layers;for(const g of h)l(g);for(;!Tit(o);)for(const g of h){const x=i[g.name];if(x.name in o){const b=o[x.name];delete o[x.name];for(const w of b)u(x,w)}}const d=[],p=[],f=n.inputLayers;for(const g of f){const x=g[0],b=g[1],w=g[2];Uo(x in i);const y=i[x].inboundNodes[b].outputTensors;d.push(y[w])}const m=n.outputLayers;for(const g of m){const x=g[0],b=g[1],w=g[2];Uo(x in i);const y=i[x].inboundNodes[b].outputTensors;p.push(y[w])}return new t({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new Y("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){ct(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Uot(e,t,n){const s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){const r=[];return t.forEach(i=>{i in e?r.push(e[i]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function uM(e,t){return Uot(e,t,"classWeight")}async function lM(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){const r=ct(()=>{if(e.shape.length===1)return xl(e);if(e.shape.length===2){if(e.shape[1]>1)return af(e,1);if(e.shape[1]===1)return st(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await r.data());Ie(r);const o=[];return i.forEach(a=>{if(n[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);o.push(n[a])}),ii(o,"float32")}else return null}function Got(e,t){return et(e,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Hot=32;function cM(e,t){let n,s;const r=t;n=r.xs,s=r.ys,O(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const i=hM("input",e.inputNames,n),o=hM("output",e.outputNames,s),a=i[0].shape[0];O(i.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),O(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let u=0;u<i.length;u++)O(i[u].shape[0]===a,()=>`Batch size mismatch: input ${e.inputNames[u]} has ${i[u].shape[0]}; expected  ${a} based on input ${e.inputNames[0]}.`);for(let u=0;u<o.length;u++)O(o[u].shape[0]===a,()=>`Batch size mismatch: output ${e.outputNames[u]} has ${o[u].shape[0]}; expected  ${a} based on input ${e.inputNames[0]}.`);return{xs:i,ys:o}}function hM(e,t,n){if(n instanceof Pn)return[n];if(Array.isArray(n))return O(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const s=[];for(const r of t){if(n[r]==null)throw new Y(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function qot(e){if(e.length===3)throw new me("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function jot(e,t,n){const s=n.batchesPerEpoch!=null;if(O(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),O(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),O(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),O(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),O(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=n.validationData!=null;let i,o;if(r)if(dM(n.validationData))O(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const g=qot(n.validationData);i=g.xs,o=g.ys}const a=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;r?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();const c=Z3(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:d,history:p}=J3(c,h,n.epochs,null,null,Kot(t,n),null,r,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const g={};await d.onEpochBegin(f);let x=0,b=0;for(s||(m=await t.iterator());!s||x<n.batchesPerEpoch;){const w=await m.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:y,ys:v}=cM(e,w.value),k={};k.batch=b,k.size=y[0].shape[0],await d.onBatchBegin(b,k);const C=[];if(n.classWeight!=null){const S=uM(n.classWeight,e.outputNames);for(let N=0;N<S.length;++N)C.push(await lM(v[N],null,S[N]))}const I=y.concat(v).concat(C),$=a(I);Ie(I);for(let S=0;S<u.length;++S){const N=u[S],F=$[S];k[N]=F,zo(F)}await d.onBatchEnd(b,k),X3(k),b++,x++}if(s?x>=n.batchesPerEpoch:w.done){if(r){let y;dM(n.validationData)?y=fn(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):y=fn(e.evaluate(i,o,{batchSize:n.validationBatchSize==null?Hot:n.validationBatchSize,verbose:0}));for(let v=0;v<e.metricsNames.length;++v)g[`val_${e.metricsNames[v]}`]=y[v]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Kot(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function dM(e){return typeof e.iterator=="function"}function Xot(e){return typeof e.next=="function"}async function Yot(e,t,n){n=n||{};const s=n.batches!=null,r=e.testFunction;let i=[];if(n.verbose>0)throw new me("Verbose mode is not implemented yet.");O(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const o=Xot(t)?t:await t.iterator();let a=0,u=0;for(;!s||u<n.batches;){const l=await o.next();if(i=ct(()=>{if(l.value){const{xs:c,ys:h}=cM(e,l.value),d=c.concat(h),p=ct(()=>r(d));if(Ie(d),u===0)for(let m=0;m<p.length;++m)i.push(Be(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],x=i[m];i[m]=ct(()=>Ft(i[m],et(f,g))),u>0&&Ie(x)}Ie(p),a+=f,++u}return i}),l.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<i.length;++l){const c=i[l];i[l]=ie(i[l],a),Ie(c)}return mr(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function e2(e){O(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Tf(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>_l(s,t,n-t)):_l(e,t,n-t)}function n2(e,t){return ct(()=>e==null?null:Array.isArray(e)?e.map(n=>n2(n,t)):D3(e,t.dtype==="int32"?t:jt(t,"int32")))}function s2(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function pM(e){const t=[];e instanceof Pn&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(s.rank===1)t.push(kf(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function co(e,t){if(e==null)return;const n=[];if(t instanceof Pn)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(const r in t){const i=t[r];n.push(i.id)}const s=[];if(e instanceof Pn)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(const r in e){const i=e[r];n.indexOf(i.id)===-1&&s.push(i)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zot(e){return e instanceof Pn}function r2(e){return Array.isArray(e)}function fM(e){return!Zot(e)&&!r2(e)}function mM(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(r2(e)&&e.length>0)o=!0;else if(fM(e)){for(const a in e)if(e.hasOwnProperty(a)){o=!0;break}}else o=!0;if(o)throw new Y(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let i;if(fM(e)){e=e,i=[];for(const o of t){if(e[o]==null)throw new Y(`No data provided for "${o}". Need data for each key in: ${t}`);i.push(e[o])}}else if(r2(e)){if(e=e,e.length!==t.length)throw new Y(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(e=e,t.length>1)throw new Y(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=pM(i),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;const a=i[o];if(a.shape.length!==n[o].length)throw new Y(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${a.shape}`);for(let u=0;u<n[o].length;++u){if(u===0&&!s)continue;const l=a.shape[u],c=n[o][u];if(c!=null&&c>=0&&l!==c)throw new Y(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function Jot(e,t,n){const s=fu(e.map(i=>i.shape[0]));s.sort();const r=fu(t.map(i=>i.shape[0]));if(r.sort(),s.length>1)throw new Y(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(i=>i.shape))}`);if(r.length>1)throw new Y(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(i=>i.shape))}`);if(s.length>0&&r.length>0&&!Le(s,r))throw new Y(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function Qot(e,t,n){const s=[Tx,Fx,Df];for(let r=0;r<e.length;++r){const i=e[r],o=t[r],a=n[r];if(o!=null){if(o===Df&&i.shape[i.shape.length-1]===1)throw new Y(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){const u=i.shape.slice(1),l=a.slice(1);for(let c=0;c<u.length;++c){const h=u[c],d=l[c];if(d!=null&&h!==d)throw new Y(`A target Tensor with shape ${i.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function gM(e,t,n,s=!0,r=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new Y(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new Y(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;const a=i[o];if(a.shape.length!==n[o].length)throw new Y(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let u=0;u<n[o].length;++u){if(u===0&&!s)continue;const l=a.shape[u],c=n[o][u];if(c!=null&&c!==l)throw new Y(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function tat(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{const s=[];for(const r of t){let i=n.hasOwnProperty(r)?n[r]:[];Array.isArray(i)||(i=[i]),s.push(i)}return s}}const eat="layers-model";class vh extends lo{constructor(t){super(t),this.isTraining=!1}summary(t,n,s=console.log){if(!this.built)throw new Y("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");zot(this,t,n,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=Lot(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof pu))throw new Y("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const o in t.loss)if(this.outputNames.indexOf(o)===-1)throw new Y(`Unknown entry in loss dictionary: "${o}". Only expected the following keys: ${this.outputNames}`);for(const o of this.outputNames)t.loss[o]==null&&console.warn(`Output "${o}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${o} during training`),n.push(ZC(t.loss[o]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new Y(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);n=t.loss.map(o=>ZC(o))}else{const o=ZC(t.loss);this.outputs.forEach(a=>{n.push(o)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const a=this.internalOutputShapes[o],u=this.outputNames[o];this.feedOutputNames.push(u),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[o])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Rl("loss",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const a=this.lossFunctions[o];this.outputs.length>1&&(this.metricsTensors.push([a,o]),this.metricsNames.push(this.outputNames[o]+"_loss"))}});const r=tat(t.metrics,this.outputNames),i=(o,a,u)=>{this.outputNames.length>1&&(a=this.outputNames[o]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([u,o])};Rl("metric",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const a=r[o];(u=>{const l="";let c,h,d;for(const p of u){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){const m=this.internalOutputShapes[o];m[m.length-1]===1||this.lossFunctions[o]===Fx?["accuracy","acc"].indexOf(p)!==-1?h=tM:["crossentropy","ce"].indexOf(p)!==-1&&(h=Not):this.lossFunctions[o]===Ax?["accuracy","acc"].indexOf(p)!==-1?h=Eot:["crossentropy","ce"].indexOf(p)!==-1&&(h=sM):["accuracy","acc"].indexOf(p)!==-1?h=eM:["crossentropy","ce"].indexOf(p)!==-1&&(h=nM);let g;["accuracy","acc"].indexOf(p)!==-1?g="acc":["crossentropy","ce"].indexOf(p)!==-1&&(g="ce"),d=h,c=l+g}else d=Oot(p),c=l+Mx(p);let f;Rl(c,()=>{f=d}),i(o,c,f)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,n,s={}){const r=s.batchSize==null?32:s.batchSize;e2(r);const i=!0,o=this.standardizeUserDataXY(t,n,i,r);try{const a=o[0].concat(o[1]);this.makeTestFunction();const u=this.testFunction,l=this.testLoop(u,a,r,s.verbose,s.steps);return mr(l)}finally{co(o[0],t),co(o[1],n)}}async evaluateDataset(t,n){return this.makeTestFunction(),Yot(this,t,n)}checkNumSamples(t,n,s,r="steps"){let i;if(s!=null){if(i=null,n!=null)throw new Y(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(t!=null)Array.isArray(t)?i=t[0].shape[0]:i=t.shape[0];else throw new Y(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return i}execute(t,n){if(Array.isArray(n)&&n.length===0)throw new Y("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(n),r=s?n:[n],i=this.retrieveSymbolicTensors(r),o=new xu;if(t instanceof Pn&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new Y(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)o.add(this.inputs[u],t[u])}else for(const u of this.inputs){const l=t[u.name];if(l==null)throw new Y(`No value is provided for the model's input ${u.name}`);o.add(u,l)}const a=Sf(i,o);return s?a:a[0]}retrieveSymbolicTensors(t){const n=Tl(null,t.length);let s=t.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],o=i.map(a=>a.name);for(let a=0;a<t.length;++a){const u=o.indexOf(t[a]);if(u!==-1&&(n[a]=i[u],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw n.forEach((i,o)=>{i==null&&r.push(t[o])}),new Y(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return n}predictLoop(t,n=32,s=!1){return ct(()=>{const r=this.checkNumSamples(t);if(s)throw new me("Verbose predictLoop() is not implemented yet.");const i=s2(r,n),o=this.outputs.map(a=>[]);for(let a=0;a<i.length;++a)ct(()=>{const u=i[a][0],l=i[a][1],c=Tf(t,u,l),h=[];if(Array.isArray(c))for(let p=0;p<c.length;++p)h.push({key:this.inputs[p],value:c[p]});else h.push({key:this.inputs[0],value:c});const d=new xu(h);return Sf(this.outputs,d)}).forEach((u,l)=>o[l].push(u));return mr(o.map(a=>fr(a,0)))})}predict(t,n={}){const s=pM(t);gM(s,this.inputNames,this.feedInputShapes,!1);try{const r=n.batchSize==null?32:n.batchSize;return e2(r),this.predictLoop(s,r)}finally{co(s,t)}}predictOnBatch(t){gM(t,this.inputNames,this.feedInputShapes,!0);const n=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,n)}standardizeUserDataXY(t,n,s=!0,r){if(this.optimizer_==null)throw new Ci("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let o=0;o<this.feedOutputShapes.length;++o){const a=this.feedOutputShapes[o];this.feedLossFns[o]===Ax?i.push(a.slice(0,a.length-1).concat([1])):i.push(a)}if(t=mM(t,this.feedInputNames,this.feedInputShapes,!1,"input"),n=mM(n,this.feedOutputNames,i,!1,"target"),Jot(t,n),Qot(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&t[0].shape[0]%r!==0)throw new Y(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,n]}async standardizeUserData(t,n,s,r,i=!0,o){const[a,u]=this.standardizeUserDataXY(t,n,i,o);if(s!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){const c=uM(r,this.outputNames);l=[];for(let h=0;h<c.length;++h)l.push(await lM(u[h],null,c[h]))}return[a,u,l]}testLoop(t,n,s,r=0,i){return ct(()=>{const o=this.checkNumSamples(n,s,i,"steps"),a=[];if(r>0)throw new me("Verbose mode is not implemented yet.");if(i!=null)throw new me("steps mode in testLoop() is not implemented yet");{const u=s2(o,s),l=ii(oo(0,o));for(let c=0;c<u.length;++c){const h=u[c][0],d=u[c][1],p=_l(l,h,d-h),f=n2(n,p),m=t(f);if(c===0)for(let g=0;g<m.length;++g)a.push(Be(0));for(let g=0;g<m.length;++g){const x=m[g];a[g]=Ft(a[g],et(d-h,x))}}for(let c=0;c<a.length;++c)a[c]=ie(a[c],o)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,n=[];for(let s=0;s<t.length;++s){const r=t[s];let i=r;if(y3(t,r)>1){const o=y3(t.slice(0,s),r);i+=`_${o}`}n.push(i)}return n}makeTrainFunction(){return t=>{const n=[],s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),o=[],a=()=>{const c=[];for(let f=0;f<this.inputs.length;++f)c.push({key:this.inputs[f],value:s[f]});const h=new xu(c),d=Sf(this.outputs,h,{training:!0});let p;for(let f=0;f<this.lossFunctions.length;++f){const m=this.lossFunctions[f];let g=m(r[f],d[f]);i[f]!=null&&(g=Got(g,i[f]));const x=Un(g);n.push(x),f===0?p=g:p=Ft(p,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=n[f];else{const g=this.metricsTensors[f][0],x=this.metricsTensors[f][1];m=Un(g(r[x],d[x]))}zo(m),o.push(m)}return p=Un(p),this.calculateLosses().forEach(f=>{p=Ft(p,f)}),p},u=this.collectedTrainableWeights.map(c=>c.read()),l=!0;return[this.optimizer_.minimize(a,l,u)].concat(o)}}makeTestFunction(){this.testFunction=t=>ct(()=>{const n=[];let s;const r=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let l=0;l<this.inputs.length;++l)o.push({key:this.inputs[l],value:r[l]});const a=new xu(o),u=Sf(this.outputs,a);for(let l=0;l<this.lossFunctions.length;++l){const c=this.lossFunctions[l],h=Un(c(i[l],u[l]));l===0?s=h:s=Ft(s,h),n.push(s)}for(let l=0;l<this.metricsTensors.length;++l){const c=this.metricsTensors[l][0],h=this.metricsTensors[l][1],d=Un(c(i[h],u[h]));n.push(d)}return n})}async fit(t,n,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,i,o,a,u,l,c,h,d;try{const p=s.batchSize==null?32:s.batchSize;e2(p);const f=!1,m=await this.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,p);r=m[0],i=m[1],d=m[2];let g=!1,x;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)u=s.validationData[0],l=s.validationData[1];else throw s.validationData.length===3?new me("validationData including sample weights is not supported yet."):new Y(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const I=!0,$=await this.standardizeUserData(u,l,null,null,I,p);c=$[0],h=$[1],x=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const I=Math.floor(r[0].shape[0]*(1-s.validationSplit)),$=r[0].shape[0];c=Tf(r,I,$),o=r,r=Tf(r,0,I),h=Tf(i,I,$),a=i,i=Tf(i,0,I),x=c.concat(h)}else s.validationSteps!=null&&(g=!0);const b=r.concat(i).concat(d);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let v,k;g?(this.makeTestFunction(),v=this.testFunction,k=y.slice().concat(y.map(I=>"val_"+I))):(v=null,x=[],k=y.slice());const C=Z3(s.callbacks,s.yieldEvery);return await this.fitLoop(w,b,y,p,s.epochs,s.verbose,C,v,x,s.shuffle,k,s.initialEpoch,null,null)}finally{this.isTraining=!1,co(r,t),co(i,n),co(o,t),co(a,n),co(c,u),co(h,l),d!=null&&Ie(d)}}async fitLoop(t,n,s,r,i,o,a,u,l,c,h,d,p,f){r==null&&(r=32),i==null&&(i=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(u!=null&&l!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new Y("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(n,r,p,"steps_per_epoch");let x;g!=null&&(x=oo(0,g)),o==null&&(o=1);const{callbackList:b,history:w}=J3(a,o,i,d,g,p,r,m,h);b.setModel(this),this.history=w,await b.onTrainBegin(),this.stopTraining_=!1;for(let y=d;y<i;++y){await b.onEpochBegin(y);const v={};if(p!=null)throw new me("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new me("batch shuffling is not implemneted yet");c&&JY(x);const k=ii(x),C=s2(g,r);for(let I=0;I<C.length;++I){const $={};if(await b.onBatchBegin(I,$),ct(()=>{const S=C[I][0],N=C[I][1],F=_l(k,S,N-S);$.batch=I,$.size=N-S;const D=n2(n,F),E=t(D);for(let A=0;A<s.length;++A){const T=s[A],R=E[A];$[T]=R,zo(R)}if(I===C.length-1&&m){const A=this.testLoop(u,l,r);for(let T=0;T<s.length;++T){const R=s[T],_=A[T];zo(_),v["val_"+R]=_}}}),await b.onBatchEnd(I,$),X3($),this.stopTraining_)break}k.dispose()}if(await b.onEpochEnd(y,v),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,n){return jot(this,t,n)}async trainOnBatch(t,n){const s=await this.standardizeUserData(t,n),r=s[0],i=s[1],o=this.makeTrainFunction()(r.concat(i)),a=[];for(const u of o){const l=await u.data();a.push(l[0])}return Ie(o),co(s[0],t),co(s[1],n),mr(a)}getNamedWeights(t){const n=[],s=t!=null&&t.trainableOnly,r=s?this.trainableWeights:this.weights,i=this.getWeights(s);for(let o=0;o<r.length;++o)s&&!r[o].trainable||n.push({name:r[o].originalName,tensor:i[o]});return n}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const n=bI().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=n-bI().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Aa(this.loss);else if(Array.isArray(this.loss)){for(const n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(n=>Aa(n))}else{const n=Object.keys(this.loss);t={};const s=this.loss;for(const r of n)if(typeof s[r]=="string")t[r]=Aa(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Aa(Mx(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Aa(Mx(t)));{const t={};for(const n in this.metrics)t[n]=Aa(Mx(this.metrics[n]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const n=QC(t.optimizer_config),s=Ra(n);let r;if(typeof t.loss=="string")r=Al(t.loss);else if(Array.isArray(t.loss))r=t.loss.map(o=>Al(o));else if(t.loss!=null){r={};for(const o in t.loss)r[o]=Al(t.loss[o])}let i;if(Array.isArray(t.metrics))i=t.metrics.map(o=>Al(o));else if(t.metrics!=null){i={};for(const o in t.metrics)i[o]=Al(t.metrics[o])}this.compile({loss:r,metrics:i,optimizer:s})}async save(t,n){if(typeof t=="string"){const a=qZ(t);if(a.length===0)throw new Y(`Cannot find any save handlers for URL '${t}'`);if(a.length>1)throw new Y(`Found more than one (${a.length}) save handlers for URL '${t}'`);t=a[0]}if(t.save==null)throw new Y("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await CR(this.getNamedWeights(n)),r=!1,i=null,o={modelTopology:this.toJSON(i,r),format:eat,generatedBy:`TensorFlow.js tfjs-layers v${aM}`,convertedBy:null};if(n!=null&&n.includeOptimizer&&this.optimizer!=null){o.trainingConfig=this.getTrainingConfig();const a="optimizer",{data:u,specs:l}=await CR(await this.optimizer.getWeights(),a);s.specs.push(...l),s.data=SR([s.data,u])}return this.userDefinedMetadata!=null&&(iM(this.userDefinedMetadata,this.name,!0),o.userDefinedMetadata=this.userDefinedMetadata),o.weightData=s.data,o.weightSpecs=s.specs,t.save(o)}setUserDefinedMetadata(t){iM(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}vh.className="Model",St(vh);class xM extends vh{}xM.className="Functional",St(xM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Af extends vh{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:vx("sequential_"),t.layers!=null)for(const n of t.layers)this.add(n)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new Y(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const n=t instanceof Af||t instanceof vh;let s;if(n){if(s=t,s.outputs.length!==1)throw new Y("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new Y("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new Y("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=iot({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(r)}if(n)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new Y(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new Y("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=W3(this.outputs[0])}this.inboundNodes=[],new Sx({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Tl(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=t.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,n){return this.model==null&&this.build(),this.model.call(t,n)}build(t){if(Me(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new vh({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,n,s=console.log){this.built||this.build(),super.summary(t,n,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,n,s={}){if(!this.built)throw new Ci("The model needs to be compiled before being used.");return this.model.evaluate(t,n,s)}async evaluateDataset(t,n){if(!this.built)throw new Ci("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,n)}predict(t,n={}){return this.model==null&&this.build(),this.model.predict(t,n)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,n,s={}){if(!this.built)throw new Ci("The model needs to be compiled before being used.");return this.model.fit(t,n,s)}async fitDataset(t,n){if(!this.built)throw new Ci("The model needs to be compiled before being used.");return this.model.fitDataset(t,n)}async trainOnBatch(t,n){return this.model.trainOnBatch(t,n)}static fromConfig(t,n,s={},r=!1){let i,o={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new Y("Legacy serialization format not supported yet.");i=n}else O(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=n.layers,delete n.layers,o=n;const a=new t(o);if(!(a instanceof Af))throw new me(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const u of i){const l=Ra(u,void 0,r);r&&l.setFastWeightInitDuringBuild(!0),a.add(l)}return a}set stopTraining(t){if(this.model==null)throw new Y("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new Y("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const n of this.layers){const s={};s.className=n.getClassName(),s.config=n.getConfig(),t.push(s)}return{name:this.name,layers:t}}}Af.className="Sequential",St(Af);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let gr=class extends xh{getConfig(){return{}}};class bM extends gr{apply(t,n=1){return Hit(t,n)}}bM.className="elu",St(bM);class yM extends gr{apply(t){return n_(t)}}yM.className="selu",St(yM);class wM extends gr{apply(t){return Il(t)}}wM.className="relu",St(wM);class vM extends gr{apply(t){return ct(()=>MI(6,Il(t)))}}vM.className="relu6",St(vM);class kM extends gr{apply(t){return t}}kM.className="linear",St(kM);class IM extends gr{apply(t){return hh(t)}}IM.className="sigmoid",St(IM);class CM extends gr{apply(t){return jit(t)}}CM.className="hardSigmoid",St(CM);class $M extends gr{apply(t){return df(t)}}$M.className="softplus",St($M);class SM extends gr{apply(t){return qit(t)}}SM.className="softsign",St(SM);class NM extends gr{apply(t){return II(t)}}NM.className="tanh",St(NM);let i2=class extends gr{apply(e,t=-1){return VI(e,t)}};i2.className="softmax",St(i2);class EM extends gr{apply(t,n=-1){return XR(t,n)}}EM.className="logSoftmax",St(EM);class DM extends gr{apply(t,n=1){return ct(()=>et(hh(et(t,n)),t))}}DM.className="swish",St(DM);class TM extends gr{apply(t){return ct(()=>et(t,II(df(t))))}}TM.className="mish",St(TM);function bu(e){return e.getClassName()}function o2(e,t={}){return wf(e,Ii.getMap().classNameMap,t,"activation")}function yu(e){if(e==null){const t={};return t.className="linear",t.config={},o2(t)}if(typeof e=="string"){const t={};return t.className=e,t.config={},o2(t)}else return e instanceof gr?e:o2(e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nat(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}class AM extends xh{}class FM extends AM{constructor(t){super(),nat(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return ct(()=>{let n=ds([1]);return this.hasL1&&(n=Ft(n,re(et(this.l1,Xs(t))))),this.hasL2&&(n=Ft(n,re(et(this.l2,If(t))))),st(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,n){return new t({l1:n.l1,l2:n.l2})}}FM.className="L1L2",St(FM);const RM={l1l2:"L1L2"};function Xe(e){return TC(e)}function _M(e,t={}){return wf(e,Ii.getMap().classNameMap,t,"regularizer")}function wn(e){if(e==null)return null;if(typeof e=="string"){const t={className:e in RM?RM[e]:e,config:{}};return _M(t)}else return e instanceof AM?e:_M(e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class MM extends Ce{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,n){t=ue(t);let s=Il(t);return this.maxValue!=null&&(s=ni(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},n=super.getConfig();return Object.assign(t,n),t}}MM.className="ReLU",St(MM);class OM extends Ce{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){const s=ue(t);return FI(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}}OM.className="LeakyReLU",St(OM);class LM extends Ce{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=yn(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=wn(t.alphaRegularizer),this.alphaConstraint=Qn(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new Y(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Me(t);const n=t.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)n[r-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<t.length;++r)s[r]=t[r];this.inputSpec=[new Zn({ndim:t.length,axes:s})],this.built=!0}call(t,n){return t=ue(t),BI(t,this.alpha.read())}getConfig(){const t={alphaInitializer:$n(this.alphaInitializer),alphaRegularizer:Xe(this.alphaRegularizer),alphaConstraint:Jn(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(t,n),t}}LM.className="PReLU",St(LM);let zM=class extends Ce{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new me(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ue(e);return ax(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};zM.className="ELU",St(zM);class BM extends Ce{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,n){const s=ue(t);return et(s,jt(si(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},n=super.getConfig();return Object.assign(t,n),t}}BM.className="ThresholdedReLU",St(BM);class PM extends Ce{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new i2().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,n){const s=ue(t);return this.softmax(s,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}}PM.className="Softmax",St(PM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kh(e,t,n){if(typeof e=="number")return Tl(e,t);if(e.length!==t)throw new Y(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const r=e[s];if(!Wit(r))throw new Y(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function ho(e,t,n,s,r=1){if(e==null)return e;const i=t+(t-1)*(r-1);let o;return n==="same"?o=e:o=e-i+1,Math.floor((o+s-1)/s)}function qo(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+gu([n-t,0]);else if(s==="same")e=e*t;else throw new Y(`Unsupport padding mode: ${s}.`);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function a2(e,t){return ct(()=>(Rn(t),t==="channelsFirst"?Ee(e,[0,2,3,1]):e))}function WM(e,t){return ct(()=>(Rn(t),t==="channelsFirst"?Ee(e,[0,2,3,4,1]):e))}function sat(e,t,n,s=1,r="valid",i,o=1){return ct(()=>{if(i==null&&(i=ao()),Rn(i),e.shape.length!==3)throw new Y(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new Y(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new Y(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(i==="channelsFirst"&&(e=Ee(e,[0,2,1])),r==="causal")throw new me("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=zR(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(a=uo(a,n)),a})}function VM(e,t,n,s=[1,1],r="valid",i,o,a=null){return ct(()=>{if(i==null&&(i=ao()),Rn(i),e.rank!==3&&e.rank!==4)throw new Y(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new Y(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=a2(e,i);if(r==="causal")throw new me("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=cnt({x:u,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:a}),i==="channelsFirst"&&(u=Ee(u,[0,3,1,2])),u})}function rat(e,t,n,s=[1,1,1],r="valid",i,o){return ct(()=>{if(i==null&&(i=ao()),Rn(i),e.rank!==4&&e.rank!==5)throw new Y(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new Y(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let a=WM(e,i);if(r==="causal")throw new me("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=kQ(a,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(a=uo(a,n)),i==="channelsFirst"&&(a=Ee(a,[0,4,1,2,3])),a})}class Lx extends Ce{constructor(t,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Lx.verifyArgs(n),this.rank=t,ps(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new me(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=kh(n.kernelSize,t,"kernelSize"),this.strides=kh(n.strides==null?1:n.strides,t,"strides"),this.padding=n.padding==null?"valid":n.padding,oi(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,Rn(this.dataFormat),this.activation=yu(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=yn(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Qn(n.biasConstraint),this.biasRegularizer=wn(n.biasRegularizer),this.activityRegularizer=wn(n.activityRegularizer),this.dilationRate=kh(n.dilationRate==null?1:n.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new Y(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new Y(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new Y(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Uo("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!FC(t.kernelSize,"number",1,3))throw new Y(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:bu(this.activation),useBias:this.useBias,biasInitializer:$n(this.biasInitializer),biasRegularizer:Xe(this.biasRegularizer),activityRegularizer:Xe(this.activityRegularizer),biasConstraint:Jn(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}}class Ih extends Lx{constructor(t,n){super(t,n),this.kernel=null,Ih.verifyArgs(n),this.filters=n.filters,ps(this.filters,"filters"),this.kernelInitializer=yn(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Qn(n.kernelConstraint),this.kernelRegularizer=wn(n.kernelRegularizer)}build(t){t=Me(t);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new Y(`The channel dimension of the input should be defined. Found ${t[n]}`);const s=t[n],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:s}}],this.built=!0}call(t,n){return ct(()=>{t=ue(t);let s;const r=this.bias==null?null:this.bias.read(),i=v3(this.activation.getClassName());if(i!=null&&this.rank===2)s=VM(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)s=sat(t,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=VM(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=rat(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new me("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=Me(t);const n=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let i=0;i<s.length;++i){const o=ho(s[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);n.push(o)}let r=[t[0]];return this.dataFormat==="channelsLast"?(r=r.concat(n),r.push(this.filters)):(r.push(this.filters),r=r.concat(n)),r}getConfig(){const t={filters:this.filters,kernelInitializer:$n(this.kernelInitializer),kernelRegularizer:Xe(this.kernelRegularizer),kernelConstraint:Jn(this.kernelConstraint)},n=super.getConfig();return Object.assign(t,n),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new Y(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Ff extends Ih{constructor(t){super(2,t),Ff.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!FC(t.kernelSize,"number",1,2))throw new Y(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Ff.className="Conv2D",St(Ff);class Rf extends Ih{constructor(t){super(3,t),Rf.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new Y(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Rf.className="Conv3D",St(Rf);class UM extends Ff{constructor(t){if(super(t),this.inputSpec=[new Zn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new Y(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Me(t),t.length!==4)throw new Y("Input should have rank 4; Received input shape: "+JSON.stringify(t));const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new Y("The channel dimension of the inputs should be defined. Found `None`.");const s=t[n],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Zn({ndim:4,axes:{[n]:s}})],this.built=!0}call(t,n){return ct(()=>{let s=ue(t);if(s.shape.length!==4)throw new Y(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let o,a;this.dataFormat==="channelsFirst"?(o=2,a=3):(o=1,a=2);const u=r[o],l=r[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=qo(u,d,c,this.padding),m=qo(l,p,h,this.padding),g=[i,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Ee(s,[0,2,3,1]));let x=BR(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Ee(x,[0,3,1,2])),this.bias!=null&&(x=uo(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(t){t=Me(t);const n=t.slice();let s,r,i;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3):(s=3,r=1,i=2);const o=this.kernelSize[0],a=this.kernelSize[1],u=this.strides[0],l=this.strides[1];return n[s]=this.filters,n[r]=qo(n[r],u,o,this.padding),n[i]=qo(n[i],l,a,this.padding),n}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}UM.className="Conv2DTranspose",St(UM);class GM extends Rf{constructor(t){if(super(t),this.inputSpec=[new Zn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new Y(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Me(t),t.length!==5)throw new Y("Input should have rank 5; Received input shape: "+JSON.stringify(t));const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new Y("The channel dimension of the inputs should be defined. Found `None`.");const s=t[n],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Zn({ndim:5,axes:{[n]:s}})],this.built=!0}call(t,n){return ct(()=>{let s=ue(t);if(s.shape.length!==5)throw new Y(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let o,a,u;this.dataFormat==="channelsFirst"?(u=2,o=3,a=4):(u=1,o=2,a=3);const l=r[u],c=r[o],h=r[a],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],x=this.strides[2],b=qo(l,m,d,this.padding),w=qo(c,g,p,this.padding),y=qo(h,x,f,this.padding),v=[i,b,w,y,this.filters];this.dataFormat!=="channelsLast"&&(s=Ee(s,[0,2,3,4,1]));let k=$Q(s,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=Ee(k,[0,4,1,2,3])),this.bias!==null&&(k=uo(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(t){t=Me(t);const n=t.slice();let s,r,i,o;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3,o=4):(s=4,r=1,i=2,o=3);const a=this.kernelSize[0],u=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[0],h=this.strides[1],d=this.strides[2];return n[s]=this.filters,n[r]=qo(n[r],c,a,this.padding),n[i]=qo(n[i],h,u,this.padding),n[o]=qo(n[o],d,l,this.padding),n}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}GM.className="Conv3DTranspose",St(GM);class HM extends Ih{constructor(t,n){if(super(t,n),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new Y("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new Y("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new Y(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=yn(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=wn(n.depthwiseRegularizer),this.depthwiseConstraint=Qn(n.depthwiseConstraint),this.pointwiseInitializer=yn(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=wn(n.pointwiseRegularizer),this.pointwiseConstraint=Qn(n.pointwiseConstraint)}build(t){if(t=Me(t),t.length<this.rank+2)throw new Y(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null||t[n]<0)throw new Y(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[n])}`);const s=t[n],r=this.kernelSize.concat([s,this.depthMultiplier]),i=[];for(let a=0;a<this.rank;++a)i.push(1);i.push(s*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new Zn({ndim:this.rank+2,axes:{[n]:s}})],this.built=!0}call(t,n){return ct(()=>{t=ue(t);let s;if(this.rank===1)throw new me("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Ee(t,[0,2,3,1])),s=s_(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=uo(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Ee(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=$n(this.depthwiseInitializer),t.pointwiseInitializer=$n(this.pointwiseInitializer),t.depthwiseRegularizer=Xe(this.depthwiseRegularizer),t.pointwiseRegularizer=Xe(this.pointwiseRegularizer),t.depthwiseConstraint=Jn(this.depthwiseConstraint),t.pointwiseConstraint=Jn(this.pointwiseConstraint),t}}HM.className="SeparableConv";class qM extends HM{constructor(t){super(2,t)}}qM.className="SeparableConv2D",St(qM);class zx extends Ih{constructor(t){super(1,t),zx.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!FC(t.kernelSize,"number",1,1))throw new Y(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}zx.className="Conv1D",St(zx);class jM extends Ce{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,n){return ct(()=>{if(t=ue(t),this.dataFormat==="channelsLast"){const s=kx(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return kx(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=kx(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return kx(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}jM.className="Cropping2D",St(jM);class KM extends Ce{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Rn(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,zit(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const n=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],n,s]}else{const n=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],n,s,t[3]]}}call(t,n){return ct(()=>{let s=ue(t);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Ee(s,[0,2,3,1]);const i=this.size[0]*r[2],o=this.size[1]*r[3],a=this.interpolation==="nearest"?Nl.resizeNearestNeighbor(s,[i,o]):Nl.resizeBilinear(s,[i,o]);return Ee(a,[0,3,1,2])}else{const i=this.size[0]*r[1],o=this.size[1]*r[2];return this.interpolation==="nearest"?Nl.resizeNearestNeighbor(s,[i,o]):Nl.resizeBilinear(s,[i,o])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(t,n),t}}KM.className="UpSampling2D",St(KM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iat(e,t,n=[1,1],s="valid",r,i){return ct(()=>{r==null&&(r=ao()),Rn(r);let o=a2(e,r);if(e.rank!==4)throw new Y(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new Y(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=EI(o,t,n,s==="same"?"same":"valid","NHWC",i),r==="channelsFirst"&&(o=Ee(o,[0,3,1,2])),o})}class XM extends Lx{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=yn(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Qn(t.depthwiseConstraint),this.depthwiseRegularizer=wn(t.depthwiseRegularizer)}build(t){if(t=Me(t),t.length<4)throw new Y(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const n=this.dataFormat==="channelsFirst"?1:3;if(t[n]==null||t[n]<0)throw new Y(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[n]}).`);const s=t[n],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return ct(()=>{t=ue(t);let s=iat(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=uo(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=Me(t);const n=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,i=ho(n,this.kernelSize[0],this.padding,this.strides[0]),o=ho(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],r,i,o]:[t[0],i,o,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=$n(this.depthwiseInitializer),t.depthwiseRegularizer=Xe(this.depthwiseRegularizer),t.depthwiseConstraint=Jn(this.depthwiseRegularizer),t}}XM.className="DepthwiseConv2D",St(XM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function YM(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new Y("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(i){return i==null||Array.isArray(i)?i:[i]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function ZM(e,t,n,s=!1,r,i,o=!1,a=!1){return ct(()=>{const u=t.shape.length;if(u<3)throw new Y(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(oo(2,u));if(t=Ee(t,l),i!=null)throw new me("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=jt(jt(r,"bool"),"float32"),r.rank===u-1&&(r=Or(r,-1)),r=Ee(r,l)),s&&(t=Cl(t,0),r!=null&&(r=Cl(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=Sl(t);let m;r!=null&&(m=Sl(r));for(let x=0;x<p;++x){const b=f[x],w=ct(()=>e(b,d));if(r==null)h=w[0],d=w[1];else{const y=ct(()=>{const v=m[x],k=ae(ki(v),v),C=Ft(et(w[0],v),et(d[0],k)),I=d.map(($,S)=>Ft(et(w[1][S],v),et($,k)));return{output:C,newStates:I}});h=y.output,d=y.newStates}a&&c.push(h)}let g;return a&&(g=du(c,1)),[h,g,d]})}class wu extends Ce{constructor(t){super(t);let n;if(t.cell==null)throw new Y("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?n=new c2({cells:t.cell}):n=t.cell,n.stateSize==null)throw new Y("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new Zn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return oo(0,t).map(n=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){HC(t)&&(t=t[0]),t=t;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);const s=n[0];let r;if(this.returnSequences?r=[t[0],t[1],s]:r=[t[0],s],this.returnState){const i=[];for(const o of n)i.push([t[0],o]);return[r].concat(i)}else return r}computeMask(t,n){return ct(()=>{Array.isArray(n)&&(n=n[0]);const s=this.returnSequences?n:null;if(this.returnState){const r=this.states.map(i=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let s=0;s<t;++s)n.push(null);return n}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new me("Constants support is not implemented in RNN yet.");HC(t)&&(t=t[0]),t=t;const n=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new Zn({shape:[n,null,...s]});const r=[t[0]].concat(t.slice(2));this.cell.build(r);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!Le(this.stateSpec.map(o=>o.shape[o.shape.length-1]),i))throw new Y(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(o=>new Zn({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(t,n=!1){ct(()=>{if(!this.stateful)throw new Vo("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new Y("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>ds([s,r])):this.states_=[ds([s,this.cell.stateSize])];else if(t==null)Ie(this.states_),this.keptStates!=null&&(Ie(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>ds([s,r])):this.states_[0]=ds([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Y(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);n===!0?this.keptStates.push(this.states_.slice()):Ie(this.states_);for(let r=0;r<this.states_.length;++r){const i=t[r],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,o];if(!Le(i.shape,a))throw new Y(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${i.shape}`);this.states_[r]=i}}this.states_=this.states_.map(r=>zo(r.clone()))})}apply(t,n){let s=n==null?null:n.initialState,r=n==null?null:n.constants;n==null&&(n={});const i=YM(t,s,r,this.numConstants);t=i.inputs,s=i.initialState,r=i.constants;let o=[],a=[];if(s!=null){n.initialState=s,o=o.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new Zn({shape:u.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(n.constants=r,o=o.concat(r),this.numConstants=r.length),o[0]instanceof Ho){const u=[t].concat(o),l=this.inputSpec.concat(a),c=this.inputSpec;this.inputSpec=l;const h=super.apply(u,n);return this.inputSpec=c,h}else return super.apply(t,n)}call(t,n){return ct(()=>{const s=n==null?null:n.mask,r=n==null?null:n.training;let i=n==null?null:n.initialState;t=ue(t),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==o)throw new Y(`RNN Layer has ${o} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},u=ZM((p,f)=>{const m=this.cell.call([p].concat(f),a);return[m[0],m.slice(1)]},t,i,this.goBackwards,s,null,this.unroll,this.returnSequences),l=u[0],c=u[1],h=u[2];this.stateful&&this.resetStates(h,r);const d=this.returnSequences?c:l;return this.returnState?[d].concat(h):d})}getInitialState(t){return ct(()=>{let n=ds(t.shape);return n=re(n,[1,2]),n=kf(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?OC(n,[1,s]):n):this.cell.stateSize>1?[OC(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===wu.className&&(n.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),n)}static fromConfig(t,n,s={}){const r=n.cell,i=Ra(r,s);return new t(Object.assign(n,{cell:i}))}}wu.className="RNN",St(wu);class Bx extends Ce{}class u2 extends Bx{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,ps(this.units,"units"),this.activation=yu(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=yn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=yn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=yn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wn(t.kernelRegularizer),this.recurrentRegularizer=wn(t.recurrentRegularizer),this.biasRegularizer=wn(t.biasRegularizer),this.kernelConstraint=Qn(t.kernelConstraint),this.recurrentConstraint=Qn(t.recurrentConstraint),this.biasConstraint=Qn(t.biasConstraint),this.dropout=wh([1,gu([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=wh([1,gu([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Me(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return ct(()=>{if(t=t,t.length!==2)throw new Y(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const r=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=vu({ones:()=>ki(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=vu({ones:()=>ki(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let i;const o=this.dropoutMask,a=this.recurrentDropoutMask;o!=null?i=Go(et(t,o),this.kernel.read()):i=Go(t,this.kernel.read()),this.bias!=null&&(i=uo(i,this.bias.read())),a!=null&&(s=et(s,a));let u=Ft(i,Go(s,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t=super.getConfig(),n={units:this.units,activation:bu(this.activation),useBias:this.useBias,kernelInitializer:$n(this.kernelInitializer),recurrentInitializer:$n(this.recurrentInitializer),biasInitializer:$n(this.biasInitializer),kernelRegularizer:Xe(this.kernelRegularizer),recurrentRegularizer:Xe(this.recurrentRegularizer),biasRegularizer:Xe(this.biasRegularizer),activityRegularizer:Xe(this.activityRegularizer),kernelConstraint:Jn(this.kernelConstraint),recurrentConstraint:Jn(this.recurrentConstraint),biasConstraint:Jn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),n)}}u2.className="SimpleRNNCell",St(u2);class JM extends wu{constructor(t){t.cell=new u2(t),super(t)}call(t,n){return ct(()=>{this.cell.dropoutMask!=null&&(Ie(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ie(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}static fromConfig(t,n){return new t(n)}}JM.className="SimpleRNN",St(JM);class l2 extends Bx{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new Y("GRUCell does not support reset_after parameter set to true.");this.units=t.units,ps(this.units,"units"),this.activation=yu(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=yu(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=yn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=yn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=yn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=wn(t.kernelRegularizer),this.recurrentRegularizer=wn(t.recurrentRegularizer),this.biasRegularizer=wn(t.biasRegularizer),this.kernelConstraint=Qn(t.kernelConstraint),this.recurrentConstraint=Qn(t.recurrentConstraint),this.biasConstraint=Qn(t.biasConstraint),this.dropout=wh([1,gu([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=wh([1,gu([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Me(t);const n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return ct(()=>{if(t=t,t.length!==2)throw new Y(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=n.training==null?!1:n.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=vu({ones:()=>ki(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=vu({ones:()=>ki(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let a,u,l;0<this.dropout&&this.dropout<1&&(t=et(t,i[0]));let c=Go(t,this.kernel.read());this.useBias&&(c=uo(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=et(r,o[0]));const h=this.recurrentKernel.read(),[d,p]=ri(h,[2*this.units,this.units],h.rank-1),f=Go(r,d),[m,g,x]=ri(c,3,c.rank-1),[b,w]=ri(f,2,f.rank-1);a=this.recurrentActivation.apply(Ft(m,b)),u=this.recurrentActivation.apply(Ft(g,w));const y=Go(et(u,r),p);l=this.activation.apply(Ft(x,y));const v=Ft(et(a,r),et(Ft(1,Vn(a)),l));return[v,v]})}getConfig(){const t=super.getConfig(),n={units:this.units,activation:bu(this.activation),recurrentActivation:bu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:$n(this.kernelInitializer),recurrentInitializer:$n(this.recurrentInitializer),biasInitializer:$n(this.biasInitializer),kernelRegularizer:Xe(this.kernelRegularizer),recurrentRegularizer:Xe(this.recurrentRegularizer),biasRegularizer:Xe(this.biasRegularizer),activityRegularizer:Xe(this.activityRegularizer),kernelConstraint:Jn(this.kernelConstraint),recurrentConstraint:Jn(this.recurrentConstraint),biasConstraint:Jn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),n)}}l2.className="GRUCell",St(l2);class QM extends wu{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new l2(t),super(t)}call(t,n){return ct(()=>{this.cell.dropoutMask!=null&&(Ie(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ie(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}}QM.className="GRU",St(QM);class Px extends Bx{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,ps(this.units,"units"),this.activation=yu(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=yu(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=yn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=yn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=yn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=wn(t.kernelRegularizer),this.recurrentRegularizer=wn(t.recurrentRegularizer),this.biasRegularizer=wn(t.biasRegularizer),this.kernelConstraint=Qn(t.kernelConstraint),this.recurrentConstraint=Qn(t.recurrentConstraint),this.biasConstraint=Qn(t.biasConstraint),this.dropout=wh([1,gu([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=wh([1,gu([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var n;t=Me(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,o=this.units;r=new(n=class extends Si{apply(a,u){const l=i.apply([o]),c=new zC().apply([o]),h=i.apply([o*2]);return E3(E3(l,c),h)}},n.className="CustomInit",n)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,n){return ct(()=>{const s=n.training==null?!1:n.training;if(t=t,t.length!==3)throw new Y(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const i=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=vu({ones:()=>ki(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=vu({ones:()=>ki(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let u,l,c,h;0<this.dropout&&this.dropout<1&&(t=et(t,o[0]));let d=Go(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=et(r,a[0])),d=Ft(d,Go(r,this.recurrentKernel.read())),this.useBias&&(d=uo(d,this.bias.read()));const[p,f,m,g]=ri(d,4,d.rank-1);u=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(f),c=Ft(et(l,i),et(u,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const x=et(h,this.activation.apply(c));return[x,x,c]})}getConfig(){const t=super.getConfig(),n={units:this.units,activation:bu(this.activation),recurrentActivation:bu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:$n(this.kernelInitializer),recurrentInitializer:$n(this.recurrentInitializer),biasInitializer:$n(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Xe(this.kernelRegularizer),recurrentRegularizer:Xe(this.recurrentRegularizer),biasRegularizer:Xe(this.biasRegularizer),activityRegularizer:Xe(this.activityRegularizer),kernelConstraint:Jn(this.kernelConstraint),recurrentConstraint:Jn(this.recurrentConstraint),biasConstraint:Jn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),n)}}Px.className="LSTMCell",St(Px);class tO extends wu{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Px(t),super(t)}call(t,n){return ct(()=>{this.cell.dropoutMask!=null&&(Ie(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ie(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}}tO.className="LSTM",St(tO);class c2 extends Bx{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const n of this.cells.slice().reverse())Array.isArray(n.stateSize)?t.push(...n.stateSize):t.push(n.stateSize);return t}call(t,n){return ct(()=>{t=t;let s=t.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const i=[];let o;for(let a=0;a<this.cells.length;++a){const u=this.cells[a];s=r[a],a===0?o=[t[0]].concat(s):o=[o[0]].concat(s),o=u.call(o,n),i.push(o.slice(1))}s=[];for(const a of i.slice().reverse())s.push(...a);return[o[0]].concat(s)})}build(t){HC(t)&&(t=t[0]),t=t;let n;this.cells.forEach((s,r)=>{Rl(`RNNCell_${r}`,()=>{s.build(t),Array.isArray(s.stateSize)?n=s.stateSize[0]:n=s.stateSize,t=[t[0],n]})}),this.built=!0}getConfig(){const t=super.getConfig(),n=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(n)};return Object.assign(Object.assign({},t),s)}static fromConfig(t,n,s={}){const r=[];for(const i of n.cells)r.push(Ra(i,s));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const n of this.cells)t.push(...n.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const n of this.cells)t.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.cells)n.push(...s.trainableWeights);return n.concat(t)}return t}getWeights(){const t=[];for(const n of this.cells)t.push(...n.weights);return qC(t)}setWeights(t){const n=[];for(const s of this.cells){const r=s.weights.length,i=t.splice(r);for(let o=0;o<s.weights.length;++o)n.push([s.weights[o],i[o]])}jC(n)}}c2.className="StackedRNNCells",St(c2);function vu(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:i}=e,o=()=>i!=null?i(t(),n):T3(t(),n),a=()=>Cf(o,t,s);return!r||r<=1?zo(a().clone()):Array(r).fill(void 0).map(a).map(u=>zo(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var oat=globalThis&&globalThis.__rest||function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]]);return n};class eO extends wu{constructor(t){if(t.unroll)throw new me("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new me("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Zn({ndim:5})]}call(t,n){return ct(()=>{if(this.cell.dropoutMask!=null&&(Ie(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ie(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new Y("ConvRNN2D cell does not support constants");const s=n==null?null:n.mask,r=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}computeOutputShape(t){let n=this.computeSingleOutputShape(t);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([t[0],...n.slice(-3)])]),n}getInitialState(t){return ct(()=>{const{stateSize:n}=this.cell,s=t.shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)],o=ds(i);return Array.isArray(n)?Array(n.length).fill(o):[o]})}resetStates(t,n=!1){ct(()=>{if(!this.stateful)throw new Vo("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)];if(s[0]==null)throw new Y("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ds(i)):this.states_=[ds(i)];else if(t==null)Ie(this.states_),this.keptStates!=null&&(Ie(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ds(i)):this.states_[0]=ds(i);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new Y(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);n?this.keptStates.push(this.states_.slice()):Ie(this.states_);for(let o=0;o<this.states_.length;++o){const a=t[o],u=i;if(!Le(a.shape,u))throw new Y(`State ${o} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${a.shape}`);this.states_[o]=a}}this.states_=this.states_.map(o=>zo(o.clone()))})}computeSingleOutputShape(t){const{dataFormat:n,filters:s,kernelSize:r,padding:i,strides:o,dilationRate:a}=this.cell,u=n==="channelsFirst",l=t[u?3:2],c=t[u?4:3],h=ho(l,r[0],i,o[0],a[0]),d=ho(c,r[1],i,o[1],a[1]);return[...t.slice(0,2),...u?[s,h,d]:[h,d,s]]}}eO.className="ConvRNN2D";class h2 extends Px{constructor(t){const{filters:n,kernelSize:s,strides:r,padding:i,dataFormat:o,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:n})),this.filters=n,ps(this.filters,"filters"),this.kernelSize=kh(s,2,"kernelSize"),this.kernelSize.forEach(u=>ps(u,"kernelSize")),this.strides=kh(r||1,2,"strides"),this.strides.forEach(u=>ps(u,"strides")),this.padding=i||"valid",oi(this.padding),this.dataFormat=o||"channelsLast",Rn(this.dataFormat),this.dilationRate=kh(a||1,2,"dilationRate"),this.dilationRate.forEach(u=>ps(u,"dilationRate"))}build(t){var n;t=Me(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new Y(`The channel dimension of the input should be defined. Found ${t[s]}`);const r=t[s],i=4,o=this.kernelSize.concat([r,this.filters*i]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const l=this.biasInitializer,c=this.filters;u=new(n=class extends Si{apply(h,d){const p=l.apply([c]),f=kl([c]),m=l.apply([c*2]);return MC([p,f,m])}},n.className="CustomInit",n)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,n){return ct(()=>{if(t.length!==3)throw new Y(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=n.training||!1,r=t[0],i=t[1],o=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=vu({ones:()=>ki(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,l=(z,B,V)=>!B||!B[V]?z:et(B[V],z);let c=l(r,u,0),h=l(r,u,1),d=l(r,u,2),p=l(r,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=vu({ones:()=>ki(i),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=l(i,f,0),g=l(i,f,1),x=l(i,f,2),b=l(i,f,3);const w=3,[y,v,k,C]=ri(this.kernel.read(),a,w),[I,$,S,N]=this.useBias?ri(this.bias.read(),a):[null,null,null,null];c=this.inputConv(c,y,I,this.padding),h=this.inputConv(h,v,$,this.padding),d=this.inputConv(d,k,S,this.padding),p=this.inputConv(p,C,N,this.padding);const[F,D,E,A]=ri(this.recurrentKernel.read(),a,w);m=this.recurrentConv(m,F),g=this.recurrentConv(g,D),x=this.recurrentConv(x,E),b=this.recurrentConv(b,A);const T=this.recurrentActivation.apply(Ft(c,m)),R=this.recurrentActivation.apply(Ft(h,g)),_=Ft(et(R,o),et(T,this.activation.apply(Ft(d,x)))),M=et(this.recurrentActivation.apply(Ft(p,b)),this.activation.apply(_));return[M,M,_]})}getConfig(){const t=super.getConfig(),n=oat(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(t,n,s,r){const i=wl(t,n,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?uo(i,s,this.dataFormat):i}recurrentConv(t,n){return wl(t,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}h2.className="ConvLSTM2DCell",St(h2);class nO extends eO{constructor(t){const n=new h2(t);super(Object.assign(Object.assign({},t),{cell:n}))}static fromConfig(t,n){return new t(n)}}nO.className="ConvLSTM2D",St(nO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class d2 extends Ce{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const n=t.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?n[r]:this.noiseShape[r]);return s}call(t,n){return ct(()=>{this.invokeCallHook(t,n);const s=ue(t);if(0<this.rate&&this.rate<1){const r=n.training==null?!1:n.training,i=this.getNoiseShape(s);return Cf(()=>T3(s,this.rate,i,this.seed),()=>s,r)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(t,n),t}dispose(){return super.dispose()}}d2.className="Dropout",St(d2);class sO extends d2{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const n=t.shape;return[n[0],1,n[2]]}}sO.className="SpatialDropout1D",St(sO);class rO extends Ce{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let n=null;t.batchSize!=null&&(n=t.batchSize),this.batchInputShape=[n,t.inputDim]}this.units=t.units,ps(this.units,"units"),this.activation=yu(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=yn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=yn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Qn(t.kernelConstraint),this.biasConstraint=Qn(t.biasConstraint),this.kernelRegularizer=wn(t.kernelRegularizer),this.biasRegularizer=wn(t.biasRegularizer),this.activityRegularizer=wn(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Me(t);const n=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(t){t=Me(t);const n=t.slice();return n[n.length-1]=this.units,n}call(t,n){return ct(()=>{this.invokeCallHook(t,n);const s=ue(t),r=v3(this.activation.getClassName());let i;return r!=null?i=Go(s,this.kernel.read(),r,this.bias?this.bias.read():null):(i=Go(s,this.kernel.read()),this.bias!=null&&(i=uo(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const t={units:this.units,activation:bu(this.activation),useBias:this.useBias,kernelInitializer:$n(this.kernelInitializer),biasInitializer:$n(this.biasInitializer),kernelRegularizer:Xe(this.kernelRegularizer),biasRegularizer:Xe(this.biasRegularizer),activityRegularizer:Xe(this.activityRegularizer),kernelConstraint:Jn(this.kernelConstraint),biasConstraint:Jn(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}}rO.className="Dense",St(rO);class iO extends Ce{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Me(t);for(const n of t.slice(1))if(n==null)throw new Y(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],mu(t,1)]}call(t,n){return ct(()=>{this.invokeCallHook(t,n);let s=ue(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let i=2;i<s.rank;++i)r.push(i);r.push(1),s=Ee(s,r)}return Git(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const n=super.getConfig();return Object.assign(t,n),t}}iO.className="Flatten",St(iO);class oO extends Ce{constructor(t){super(t),this.supportsMasking=!0,this.activation=yu(t.activation)}call(t,n){return ct(()=>{this.invokeCallHook(t,n);const s=ue(t);return this.activation.apply(s)})}getConfig(){const t={activation:bu(this.activation)},n=super.getConfig();return Object.assign(t,n),t}}oO.className="Activation",St(oO);class aO extends Ce{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,n){return ct(()=>(t=ue(t),Vit(t,this.n)))}getConfig(){const t={n:this.n},n=super.getConfig();return Object.assign(t,n),t}}aO.className="RepeatVector",St(aO);class uO extends Ce{constructor(t){super(t),this.targetShape=t.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,n){const s="Total size of new array must be unchanged.",r=n.slice();let i=1,o=null;for(let u=0;u<r.length;++u){const l=r[u];if(this.isUnknown(l))if(o===null)o=u;else throw new Y("Can only specifiy one unknown dimension.");else i*=l}const a=mu(t);if(o!==null){if(i===0||a%i!==0)throw new Y(s);r[o]=a/i}else if(a!==i)throw new Y(s);return r}computeOutputShape(t){let n=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){n=!0;break}return n?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,n){return ct(()=>{this.invokeCallHook(t,n);const s=ue(t),r=s.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return st(s,i)})}getConfig(){const t={targetShape:this.targetShape},n=super.getConfig();return Object.assign(t,n),t}}uO.className="Reshape",St(uO);class lO extends Ce{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const n=oo(1,t.dims.length+1);if(!Le(t.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Zn({ndim:this.dims.length+1})]}computeOutputShape(t){t=Me(t);const n=t.slice();return this.dims.forEach((s,r)=>{n[r+1]=t[s]}),n}call(t,n){return Ee(ue(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},n=super.getConfig();return Object.assign(t,n),t}}lO.className="Permute",St(lO);class cO extends Ce{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,t),n}computeMask(t,n){const s=ue(t),r=-1;return yI(hx(s,this.maskValue),r)}call(t,n){return ct(()=>{this.invokeCallHook(t,n);const s=ue(t),r=-1,i=!0,o=yI(hx(s,this.maskValue),r,i);return et(s,jt(o,s.dtype))})}}cO.className="Masking",St(cO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class hO extends Ce{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let n=null;t.batchSize!=null&&(n=t.batchSize),t.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(fn(t.inputLength))}this.inputDim=t.inputDim,ps(this.inputDim,"inputDim"),this.outputDim=t.outputDim,ps(this.outputDim,"outputDim"),this.embeddingsInitializer=yn(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=wn(t.embeddingsRegularizer),this.activityRegularizer=wn(t.activityRegularizer),this.embeddingsConstraint=Qn(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,n){return ct(()=>this.maskZero?(t=ue(t),hx(t,Te(t))):null)}computeOutputShape(t){if(t=Me(t),this.inputLength==null)return[...t,this.outputDim];const n=fn(this.inputLength);if(n.length!==t.length-1)throw new Y(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let r=0;r<n.length;++r){const i=n[r],o=t[r+1];if(i!=null&&o!=null&&i!==o)throw new Y(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);i==null&&(n[s]=o),s++}}return[t[0],...n,this.outputDim]}call(t,n){return ct(()=>{this.invokeCallHook(t,n);let s=ue(t);s.dtype!=="int32"&&(s=Fa(s,"int32"));const r=D3(this.embeddings.read(),st(s,[s.size]));return st(r,Me(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:$n(this.embeddingsInitializer),embeddingsRegularizer:Xe(this.embeddingsRegularizer),activityRegularizer:Xe(this.activityRegularizer),embeddingsConstraint:Jn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(t,n),t}}hO.className="Embedding",St(hO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ol extends Ce{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new me}computeElementwiseOpOutputShape(t,n){if(t==null||n==null)return null;if(t.length<n.length)return this.computeElementwiseOpOutputShape(n,t);if(n.length===0)return t;const s=t.slice(0,t.length-n.length);for(let r=0;r<n.length;++r){const i=t[t.length-n.length+r],o=n[r];if(i==null||o==null||i<0||o<0)s.push(null);else if(i===1)s.push(o);else if(o===1)s.push(i);else{if(i!==o)throw new Y("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(n));s.push(i)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Me(t)]),t=t,t.length<2)throw new Y(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let n=[];for(const i of t)i!=null&&i[0]!==null&&n.push(i[0]);if(n=fu(n),n.length>1)throw new Y(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let i=1;i<t.length;++i){const o=t[i]==null?null:t[i].slice(1);s=this.computeElementwiseOpOutputShape(s,o)}const r=t.map(i=>i.length);t.indexOf(null)===-1&&fu(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,n){return ct(()=>{if(t=t,this.reshapeRequired){const s=[],r=t.map(i=>i.rank);if(r.indexOf(null)===-1){const i=gu(r);for(let o of t){const a=o.rank;for(let u=0;u<i-a;++u)o=kf(o,1);s.push(o)}return this.mergeFunction(s)}else{let i=!1;for(const u of t){const l=u.rank;if(l==null){const c=u.shape,h=c[0],d=c.slice(1).concat([h]);let p=st(u,[h].concat(mu(c.slice(1))));p=Ee(p,[1,0]),p=st(p,d),s.push(p),i=!0}else if(l>1){const c=oo(1,l).concat([0]);s.push(Ee(u,c)),i=!0}else s.push(u)}let o=this.mergeFunction(s);const a=o.rank;if(i){if(a==null){const u=o.shape,l=u.length,c=u[l-1],h=[c].concat(u.slice(0,u.length-1));o=st(Ee(st(o,[-1,c]),[1,0]),h)}else if(a>1){const u=[a-1].concat(oo(0,a-1));o=Ee(o,u)}}return o}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let n;t[0]==null?n=null:n=t[0].slice(1);for(let r=1;r<t.length;++r){const i=t[r]==null?null:t[r].slice(1);n=this.computeElementwiseOpOutputShape(n,i)}let s=[];for(const r of t)r!=null&&r[0]!==null&&s.push(r[0]);return s=fu(s),s.length===1?n=s.concat(n):n=[null].concat(n),n}computeMask(t,n){return ct(()=>{if(n==null)return null;if(!Array.isArray(n))throw new Y("`mask` should be an Array");if(!Array.isArray(t))throw new Y("`inputs` should be an Array");if(n.length!==t.length)throw new Y(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${n.length})`);if(n.every(r=>r==null))return null;n=n.map(r=>r==null?r:Or(r,0));let s=n[0];for(let r=1;r<n.length-1;++r)s=Da(s,n[r]);return s})}}class dO extends Ol{constructor(t){super(t)}mergeFunction(t){return ct(()=>{let n=t[0].clone();for(let s=1;s<t.length;++s)n=Ft(n,t[s]);return n})}}dO.className="Add",St(dO);class pO extends Ol{constructor(t){super(t)}mergeFunction(t){return ct(()=>{let n=t[0].clone();for(let s=1;s<t.length;++s)n=et(n,t[s]);return n})}}pO.className="Multiply",St(pO);class fO extends Ol{constructor(t){super(t)}mergeFunction(t){return ct(()=>{let n=t[0].clone();for(let s=1;s<t.length;++s)n=Ft(n,t[s]);return et(1/t.length,n)})}}fO.className="Average",St(fO);class mO extends Ol{constructor(t){super(t)}mergeFunction(t){return ct(()=>{let n=t[0];for(let s=1;s<t.length;++s)n=hu(n,t[s]);return n})}}mO.className="Maximum",St(mO);class gO extends Ol{constructor(t){super(t)}mergeFunction(t){return ct(()=>{let n=t[0];for(let s=1;s<t.length;++s)n=MI(n,t[s]);return n})}}gO.className="Minimum",St(gO);class xO extends Ol{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new Y("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let n=!0;for(const r of t)if(r!=null){n=!1;break}if(n)return;const s=[];for(let r=0;r<t.length;++r){const i=t[r].slice();i.splice(this.axis,1);let o=!1;for(const a of s)if(Le(a,i)){o=!0;break}o||s.push(i)}if(s.length>1)throw new Y("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return ct(()=>MC(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new Y("A `Concatenate` layer should be called on a list of inputs.");const n=t,s=n[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const i of n.slice(1)){if(s[r]==null||i[r]==null){s[r]=null;break}s[r]+=i[r]}return s}computeMask(t,n){if(n==null)return null;if(!Array.isArray(n))throw new Y("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new Y("`inputs` should be an array for Concatenate");if(n.length!==t.length)throw new Y(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${t.length})`);return ct(()=>{let s=!0;if(n.forEach(o=>{if(o!=null){s=!1;return}}),s)return null;const r=[];for(let o=0;o<t.length;++o)n[o]==null?r.push(jt(ki(t[o]),"bool")):n[o].rank<t[o].rank?r.push(Or(n[o],-1)):r.push(n[o]);const i=fr(r,this.axis);return LR(i,-1,!1)})}getConfig(){const t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}}xO.className="Concatenate",St(xO);function _f(e,t){for(;e<0;)e+=t;return e}function aat(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new me("batchDot is not implemented for tensors of 4D or higher rank yet");if(O(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),O(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new me("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);const i=n;return ct(()=>{let o;if(s>r){o=s-r;const u=[];for(let l=0;l<o;++l)u.push(1);t=st(t,t.shape.concat(u))}else if(r>s){o=r-s;const u=[];for(let l=0;l<o;++l)u.push(1);e=st(e,e.shape.concat(u))}else o=0;let a;if(e.shape.length===2&&t.shape.length===2)i[0]===i[1]?a=re(et(e,t),i[0]):a=re(et(Ee(e,[1,0]),t),i[1]);else{const u=i[0]!==e.shape.length-1,l=i[1]===t.shape.length-1;a=ze(e,t,u,l)}if(o>0){let u;s>r?u=s+r-3:u=s-1;const l=[];for(let c=u;c<u+o;++c)l.push(c);a=ff(a,l)}return a.shape.length===1&&(a=Or(a,1)),a})}class bO extends Ol{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){O(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=t[0],s=t[1];if(n.length>3||s.length>3)throw new me("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(n,s);if(n[r[0]]!==s[r[1]])throw new Y(`Dimension incompatibility: ${n[r[0]]} !== ${s[r[1]]}`)}mergeFunction(t){if(t.length!==2)throw new Y(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let n=t[0],s=t[1],r;return Array.isArray(this.axes)?r=this.axes.map((i,o)=>_f(i,t[o].shape.length)):r=[_f(this.axes,n.shape.length),_f(this.axes,s.shape.length)],this.normalize&&(n=Dx(n,r[0]),s=Dx(s,r[1])),aat(n,s,r)}interpretAxes(t,n){let s;return Array.isArray(this.axes)?s=this.axes:s=[_f(this.axes,t.length),_f(this.axes,n.length)],s}computeOutputShape(t){O(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=t[0].slice(),s=t[1].slice();if(n.length>3||s.length>3)throw new me("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(n,s);n.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const i=n.concat(s);return i.length===1&&i.push(1),i}computeMask(t,n){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(t,n),t}}bO.className="Dot",St(bO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class yO extends Ce{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,t),n}call(t,n){return ct(()=>{this.invokeCallHook(t,n);const s=ue(t);return Cf(()=>Ft(Ix(s.shape,0,this.stddev),s),()=>s,n.training||!1)})}}yO.className="GaussianNoise",St(yO);class wO extends Ce{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return ct(()=>{this.invokeCallHook(t,n);const s=ue(t);return this.rate>0&&this.rate<1?Cf(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return et(s,Ix(s.shape,1,r))},()=>s,n.training||!1):s})}}wO.className="GaussianDropout",St(wO);class vO extends Ce{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||ue(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return ct(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return Cf(()=>{const r=ue(t),i=1.6732632423543772,o=1.0507009873554805,a=-i*o;let u=vl(dx(s),this.rate);u=Fa(u,"float32");const l=((1-this.rate)*(1+this.rate*a**2))**-.5,c=-l*a*this.rate,h=Ft(et(r,u),et(Ft(u,-1),a));return Ft(et(h,l),c)},()=>ue(t),n.training||!1)}return t})}}vO.className="AlphaDropout",St(vO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mf(e,t,n,s,r,i=.001){let o;if(e.rank===2)o=JJ(e,t,n,s,r,i);else if(e.rank===3)o=tQ(e,t,n,s,r,i);else if(e.rank===4)o=nQ(e,t,n,s,r,i);else throw new me(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function uat(e,t,n,s,r=.001){return ct(()=>{const i=OI(e,s),o=i.mean,a=i.variance;return[Mf(e,o,a,n,t,r),o,a]})}function lat(e,t,n,s,r=.001){return ct(()=>{const i=OI(e,s),o=i.mean,a=i.variance,u=[];for(const p of oo(0,e.rank))s.indexOf(p)!==-1?u.push(1):u.push(e.shape[p]);const l=st(o,u),c=st(a,u),h=t==null?null:st(t,u),d=n==null?null:st(n,u);return[Mf(e,l,c,d,h,r),o,a]})}function cat(e,t,n,s,r=.001){return Le(s.slice().sort(),oo(0,e.rank-1))?uat(e,t,n,s,r):lat(e,t,n,s,r)}class kO extends Ce{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=yn(t.betaInitializer||"zeros"),this.gammaInitializer=yn(t.gammaInitializer||"ones"),this.movingMeanInitializer=yn(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=yn(t.movingVarianceInitializer||"ones"),this.betaConstraint=Qn(t.betaConstraint),this.gammaConstraint=Qn(t.gammaConstraint),this.betaRegularizer=wn(t.betaRegularizer),this.gammaRegularizer=wn(t.gammaRegularizer)}build(t){t=Me(t);const n=this.axis>=0?this.axis:this.axis+t.length,s=t[n];if(s==null)throw new Y(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Zn({ndim:t.length,axes:{[n]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,n){return ct(()=>{const s=n.training==null?!1:n.training,r=ue(t),i=r.shape,o=i.length,a=oo(0,o),u=this.axis>=0?this.axis:this.axis+o;a.splice(u,1);const l=Tl(1,o);l[u]=i[u];const c=a.slice();c.sort();const h=!Le(c,oo(0,o).slice(0,o-1)),d=()=>{if(h){const x=st(this.movingMean.read(),l),b=st(this.movingVariance.read(),l),w=this.center?st(this.beta.read(),l):null,y=this.scale?st(this.gamma.read(),l):null;return Mf(r,x,b,w,y,this.epsilon)}else return Mf(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=cat(r,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(x,b,w)=>{ct(()=>{const y=1-w,v=x.read(),k=et(ae(v,b),y);x.write(ae(v,k))})};return g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum),p})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:$n(this.betaInitializer),gammaInitializer:$n(this.gammaInitializer),movingMeanInitializer:$n(this.movingMeanInitializer),movingVarianceInitializer:$n(this.movingVarianceInitializer),betaRegularizer:Xe(this.betaRegularizer),gammaRegularizer:Xe(this.gammaRegularizer),betaConstraint:Jn(this.betaConstraint),gammaConstraint:Jn(this.gammaConstraint)},n=super.getConfig();return Object.assign(t,n),t}}kO.className="BatchNormalization",St(kO);class IO extends Ce{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=yn(t.betaInitializer||"zeros"),this.gammaInitializer=yn(t.gammaInitializer||"ones"),this.betaRegularizer=wn(t.betaRegularizer),this.gammaRegularizer=wn(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Me(t);const n=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=n);for(const i of this.axis)if(i<0||i>=n)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==fu(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>t[i]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,n){const s=ue(t),r=s.shape,i=r.length;return ct(()=>{let{mean:o,variance:a}=OI(s,this.axis,!0);const u=Tl(1,i);for(const f of this.axis)u[f]=r[f];const l=f=>f!=null&&f.shape.length!==i?st(f,u):f;let c=this.scale?l(this.gamma.read()):null,h=this.center?l(this.beta.read()):null;const d=[],p=[];for(let f=0;f<i;++f)this.axis.indexOf(f)!==-1?(d.push(r[f]),p.push(1)):(d.push(1),p.push(r[f]));return o=ro(o,d),a=ro(a,d),c!=null&&(c=ro(c,p)),h!=null&&(h=ro(h,p)),Mf(s,o,a,h,c,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:$n(this.betaInitializer),gammaInitializer:$n(this.gammaInitializer),betaRegularizer:Xe(this.betaRegularizer),gammaRegularizer:Xe(this.gammaRegularizer)},n=super.getConfig();return Object.assign(t,n),t}}IO.className="LayerNormalization",St(IO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hat(e,t,n){return ct(()=>{if(e.rank!==4)throw new Y(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new Y("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=ao()),n!=="channelsLast"&&n!=="channelsFirst")throw new Y(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],LI(e,s)})}class CO extends Ce{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?ao():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new Y(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let n,s;if(typeof t.padding[0]=="number")n=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new Y(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(n=t.padding[0],t.padding[1].length!==2)throw new Y(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[n,s]}this.inputSpec=[new Zn({ndim:4})]}computeOutputShape(t){t=Me(t);let n,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?n=t[2]+this.padding[0][0]+this.padding[0][1]:n=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],n,s]):(t[1]!=null&&t[1]>=0?n=t[1]+this.padding[0][0]+this.padding[0][1]:n=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],n,s,t[3]])}call(t,n){return ct(()=>hat(ue(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}CO.className="ZeroPadding2D",St(CO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Wx(e,t,n,s,r,i){return ct(()=>{Rn(r),I3(i),oi(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=ao()),i==null&&(i="max"),e=a2(e,r);let o;const a=s==="same"?"same":"valid";return i==="max"?o=_I(e,t,n,a):o=kI(e,t,n,a),r==="channelsFirst"&&(o=Ee(o,[0,3,1,2])),o})}function $O(e,t,n,s,r,i){return ct(()=>{Rn(r),I3(i),oi(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=ao()),i==null&&(i="max"),e=WM(e,r);let o;const a=s==="same"?"same":"valid";return i==="max"?o=Wtt(e,t,n,a):o=VJ(e,t,n,a),r==="channelsFirst"&&(o=Ee(o,[0,4,1,2,3])),o})}class SO extends Ce{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new Y(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(ps(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new Y(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);ps(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,oi(this.padding),this.inputSpec=[new Zn({ndim:3})]}computeOutputShape(t){t=Me(t);const n=ho(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],n,t[2]]}call(t,n){return ct(()=>{this.invokeCallHook(t,n),t=kf(ue(t),2);const s=this.poolingFunction(ue(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ff(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(t,n),t}}class NO extends SO{constructor(t){super(t)}poolingFunction(t,n,s,r,i){return Rn(i),oi(r),Wx(t,n,s,r,i,"max")}}NO.className="MaxPooling1D",St(NO);class EO extends SO{constructor(t){super(t)}poolingFunction(t,n,s,r,i){return Rn(i),oi(r),Wx(t,n,s,r,i,"avg")}}EO.className="AveragePooling1D",St(EO);class DO extends Ce{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new Y(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];ps(this.poolSize,"poolSize"),ps(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Rn(this.dataFormat),oi(this.padding),this.inputSpec=[new Zn({ndim:4})]}computeOutputShape(t){t=Me(t);let n=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return n=ho(n,this.poolSize[0],this.padding,this.strides[0]),s=ho(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],n,s]:[t[0],n,s,t[3]]}call(t,n){return ct(()=>(this.invokeCallHook(t,n),this.poolingFunction(ue(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}class TO extends DO{constructor(t){super(t)}poolingFunction(t,n,s,r,i){return Rn(i),oi(r),Wx(t,n,s,r,i,"max")}}TO.className="MaxPooling2D",St(TO);class AO extends DO{constructor(t){super(t)}poolingFunction(t,n,s,r,i){return Rn(i),oi(r),Wx(t,n,s,r,i,"avg")}}AO.className="AveragePooling2D",St(AO);class FO extends Ce{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new Y(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];ps(this.poolSize,"poolSize"),ps(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Rn(this.dataFormat),oi(this.padding),this.inputSpec=[new Zn({ndim:5})]}computeOutputShape(t){t=Me(t);let n=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[4]:t[3];return n=ho(n,this.poolSize[0],this.padding,this.strides[0]),s=ho(s,this.poolSize[1],this.padding,this.strides[1]),r=ho(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],n,s,r]:[t[0],n,s,r,t[4]]}call(t,n){return ct(()=>(this.invokeCallHook(t,n),this.poolingFunction(ue(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}class RO extends FO{constructor(t){super(t)}poolingFunction(t,n,s,r,i){return Rn(i),oi(r),$O(t,n,s,r,i,"max")}}RO.className="MaxPooling3D",St(RO);class _O extends FO{constructor(t){super(t)}poolingFunction(t,n,s,r,i){return Rn(i),oi(r),$O(t,n,s,r,i,"avg")}}_O.className="AveragePooling3D",St(_O);class MO extends Ce{constructor(t){super(t),this.inputSpec=[new Zn({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,n){throw new me}}class OO extends MO{constructor(t){super(t||{})}call(t,n){return ct(()=>{const s=ue(t);return Un(s,1)})}}OO.className="GlobalAveragePooling1D",St(OO);class LO extends MO{constructor(t){super(t||{})}call(t,n){return ct(()=>{const s=ue(t);return so(s,1)})}}LO.className="GlobalMaxPooling1D",St(LO);class zO extends Ce{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Rn(this.dataFormat),this.inputSpec=[new Zn({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,n){throw new me}getConfig(){const t={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}class BO extends zO{call(t,n){return ct(()=>{const s=ue(t);return this.dataFormat==="channelsLast"?Un(s,[1,2]):Un(s,[2,3])})}}BO.className="GlobalAveragePooling2D",St(BO);class PO extends zO{call(t,n){return ct(()=>{const s=ue(t);return this.dataFormat==="channelsLast"?so(s,[1,2]):so(s,[2,3])})}}PO.className="GlobalMaxPooling2D",St(PO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class WO extends Ce{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(t,n),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,n,s={}){const r=n.layer,i=Ra(r,s);delete n.layer;const o={layer:i};return Object.assign(o,n),new t(o)}}class VO extends WO{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Me(t),t.length<3)throw new Y(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const n=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Me(t);const n=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(n),r=t[1];return[s[0],r].concat(s.slice(1))}call(t,n){return ct(()=>(t=ue(t),ZM((s,r)=>[ue(this.layer.call(s,n)),[]],t,[],!1,null,null,!1,!0)[1]))}}VO.className="TimeDistributed",St(VO);function dat(e){Fl(Lit,"BidirectionalMergeMode",e)}const pat="concat";class UO extends WO{constructor(t){super(t);const n=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=n,this.forwardLayer=Ra(s),n.goBackwards=n.goBackwards!==!0;const r={};if(r.className=t.layer.getClassName(),r.config=n,this.backwardLayer=Ra(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?pat:t.mergeMode,dat(this.mergeMode),t.weights)throw new me("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const n=t.length,s=Math.floor(n/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let n=this.forwardLayer.computeOutputShape(t);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let s,r,i;return this.returnState&&(i=n.slice(1)),s=n[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(i).concat(i.slice()):[s].concat(i).concat(i.slice()):mr(r)}apply(t,n){let s=n==null?null:n.initialState,r=n==null?null:n.constants;n==null&&(n={});const i=YM(t,s,r,this.numConstants);if(t=i.inputs,s=i.initialState,r=i.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&r==null)return super.apply(t,n);const o=[],a=[];if(s!=null){const l=s.length;if(l%2>0)throw new Y("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=s,o.push(...s);const c=s.map(h=>new Zn({shape:h.shape}));this.forwardLayer.stateSpec=c.slice(0,l/2),this.backwardLayer.stateSpec=c.slice(l/2),a.push(...c)}if(r!=null)throw new me("Support for constants in Bidirectional layers is not implemented yet.");const u=o[0]instanceof Ho;for(const l of o)if(l instanceof Ho!==u)throw new Y("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const l=[t].concat(o),c=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=c;const d=super.apply(l,n);return this.inputSpec=h,d}else return super.apply(t,n)}call(t,n){return ct(()=>{const s=n.initialState;let r,i;if(s==null)r=this.forwardLayer.call(t,n),i=this.backwardLayer.call(t,n);else{const u=s.slice(0,s.length/2),l=s.slice(s.length/2);r=this.forwardLayer.call(t,Object.assign(n,{initialState:u})),i=this.backwardLayer.call(t,Object.assign(n,{initialState:l}))}let o;this.returnState&&(Array.isArray(r)&&(o=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=Cl(i,1));let a;return this.mergeMode==="concat"?a=MC([r,i]):this.mergeMode==="sum"?a=Ft(r,i):this.mergeMode==="ave"?a=et(.5,Ft(r,i)):this.mergeMode==="mul"?a=et(r,i):this.mergeMode==null&&(a=[r,i]),this.returnState?this.mergeMode==null?a.concat(o):[a].concat(o):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Rl(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Rl(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,n){Array.isArray(n)&&(n=n[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[n,n]:s=n:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,n){const s=Ra(n.layer);if(delete n.layer,n.numConstants!=null)throw new me("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=n;return r.layer=s,new t(r)}}UO.className="Bidirectional",St(UO);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class GO extends Ce{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(t,n),t}call(t,n){return ct(()=>(t=ue(t),t.dtype!=="float32"&&(t=Fa(t,"float32")),Ft(et(t,this.scale),this.offset)))}}GO.className="Rescaling",St(GO);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:fat,cropAndResize:mat}=Nl;class HO extends Ce{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,n,s,r,i,o,a,u){return ct(()=>{let l,c=!1;const h=n/o,d=s/a,p=(r+n)/o,f=(i+s)/a,m=[h,d,p,f],g=[];t.rank===3?(c=!0,l=du([t])):l=t;for(let y=0;y<l.shape[0];y++)g.push(m);const x=kR(g,[g.length,4]),b=pf(0,g.length,1,"int32"),w=mat(l,x,b,[r,i],"nearest");return Fa(c?ue(Sl(w)):w,u)})}upsize(t,n,s,r){return ct(()=>{const i=fat(t,[n,s]);return Fa(i,r)})}call(t,n){return ct(()=>{const s=ue(t),r=s.dtype,i=s.shape,o=i[i.length-3],a=i[i.length-2];let u=0;o!==this.height&&(u=Math.floor((o-this.height)/2));let l=0;return a!==this.width&&(l=Math.floor((a-this.width)/2),l===0&&(l=1)),u>=0&&l>=0?this.centerCrop(s,u,l,this.height,this.width,o,a,r):this.upsize(t,this.height,this.width,r)})}getConfig(){const t={height:this.height,width:this.width},n=super.getConfig();return Object.assign(t,n),t}computeOutputShape(t){t=Me(t);const n=t.length-3,s=t.length-2;return t[n]=this.height,t[s]=this.width,t}}HO.className="CenterCrop",St(HO);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gat(e,t,n,s){let r=ue(e);if(r.dtype!=="int32"&&(r=Fa(r,"int32")),t==="int")return r;const i=r.shape;if(r.rank===0&&(r=Or(r,-1)),t==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=Or(r,-1)),r.rank>2)throw new Y(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${r.rank}.`);const o=["multiHot","oneHot"].includes(t),a=r;let u;if(typeof s<"u"&&t==="count"?u=UR(a,s,n,o):u=UR(a,[],n,o),t!=="tfIdf")return u;if(s)return et(u,s);throw new Y("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class qO extends Ce{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},n=super.getConfig();return Object.assign(t,n),t}computeOutputShape(t){return t=Me(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,n){return ct(()=>{t=ue(t),t.dtype!=="int32"&&(t=Fa(t,"int32"));let s;if(typeof n.countWeights<"u"){if(this.outputMode!=="count")throw new Y(`countWeights is not used when outputMode !== count.
              Received countWeights=${n.countWeights}`);s=ue(n.countWeights)}const r=so(t),i=ux(t),o=si(this.numTokens,r).bufferSync().get(0),a=vl(i,0).bufferSync().get(0);if(!(o&&a))throw new Y(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return gat(t,this.outputMode,this.numTokens,s)})}}qO.className="CategoryEncoding",St(qO);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const xat=["bilinear","nearest"],jO=new Set(xat);class KO extends Ce{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(jO.has(t.interpolation))this.interpolation=t.interpolation;else throw new Y(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){t=Me(t);const n=t[2];return[this.height,this.width,n]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},n=super.getConfig();return Object.assign(t,n),t}call(t,n){return ct(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Nl.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Nl.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...jO]} are supported`)})}}KO.className="Resizing",St(KO);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var XO;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(XO||(XO={}));var YO;(function(e){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(YO||(YO={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var ZO;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(ZO||(ZO={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kt(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&O(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bat=c_;class Vx extends rk{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new gF(this,Lo())}nextDataId(){return Vx.nextDataId++}write(t,n,s){this.firstUse&&(this.firstUse=!1,dt().get("IS_NODE")&&ti(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:s,refCount:1}),r}makeTensorInfo(t,n,s){let r;if(n==="string"&&s!=null&&s.length>0&&op(s[0])){const i=s.map(o=>ou(o));r=this.write(i,t,n)}else r=this.write(s,t,n);return{dataId:r,shape:t,dtype:n}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const n=this.data.get(t);n.refCount++}decRef(t){if(this.data.has(t)){const n=this.data.get(t);n.refCount--}}move(t,n,s,r,i){this.data.set(t,{values:n,dtype:r,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:n,complexTensorInfos:s}=this.data.get(t);if(n==="complex64"){const r=this.readSync(s.real.dataId),i=this.readSync(s.imag.dataId);return Ta(r,i)}return rZ(this.data.get(t).values,n)}bufferSync(t){const n=this.readSync(t.dataId);if(t.dtype==="string")try{const s=n.map(r=>au(r));return we(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return we(t.shape,t.dtype,n)}makeOutput(t,n,s){return Lo().makeTensorFromTensorInfo(this.makeTensorInfo(n,s,t),this)}disposeData(t,n=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!n&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const n=dr();return t(),{kernelMs:dr()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Kt([t],"where");const n=this.readSync(t.dataId);return bat(t.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Vx.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JO(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const yat=e=>{const{x:t}=e.inputs,n=e.backend;Kt(t,"abs");let s=new Float32Array(bt(t.shape));const r=n.data.get(t.dataId).values;return s=JO(r),n.makeOutput(s,t.shape,t.dtype)},wat={kernelName:K0,backendName:"cpu",kernelFunc:yat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(e){return(t,n,s,r,i)=>{const o=fe(t,n),a=o.length,u=te(o),l=bt(o),c=Cs(i,l),h=t.length,d=n.length,p=te(t),f=te(n),m=dh(t,o),g=dh(n,o);if(m.length+g.length===0)for(let x=0;x<c.length;++x)c[x]=e(s[x%s.length],r[x%r.length]);else for(let x=0;x<c.length;++x){const b=eh(x,a,u),w=b.slice(-h);m.forEach(C=>w[C]=0);const y=Mo(w,h,p),v=b.slice(-d);g.forEach(C=>v[C]=0);const k=Mo(v,d,f);c[x]=e(s[y],r[k])}return[c,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zr(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,a=n.makeTensorInfo(s.shape,"complex64"),u=n.data.get(a.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",i),imag:n.makeTensorInfo(r.shape,"float32",o)},a}const vat={kernelName:vk,backendName:"cpu",kernelFunc:zr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ux(e,t,n="float32"){if(n==="complex64"){const r=Ux(e,t,"float32"),i=Ux(e,t,"float32");return zr({inputs:{real:r,imag:i},backend:e})}const s=Bs(bt(t),n);return e.makeTensorInfo(t,n,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jo(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const kat={kernelName:Ep,backendName:"cpu",kernelFunc:jo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ll(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const Iat={kernelName:qk,backendName:"cpu",kernelFunc:Ll};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QO(e,t,n,s){if(s==="int32"){const r=Int32Array.from(e);return[t,"int32",r]}if(s==="bool"){const r=dl([0],n),[i,o]=Gn((a,u)=>a!==u?1:0)(t,[],e,r,"bool");return[o,"bool",i]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function ku(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return jo({inputs:{x:r},backend:n});const c=Ux(n,r.shape,r.dtype),h=ku({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),d=zr({inputs:{real:h,imag:c},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){const c=Ll({inputs:{input:r},backend:n}),h=ku({inputs:{x:c},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(c),h}if(!wF(r.dtype,i)){const c=jo({inputs:{x:r},backend:n});return{dataId:c.dataId,shape:c.shape,dtype:i}}const o=n.data.get(r.dataId).values,[a,u,l]=QO(o,r.shape,r.dtype,i);return n.makeTensorInfo(a,u,l)}const Cat={kernelName:mp,backendName:"cpu",kernelFunc:ku};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fs(e,t,n,s){return n==null?({inputs:r,backend:i})=>{const{a:o,b:a}=r,u=i;Kt([o,a],e);const l=u.data.get(o.dataId).values,c=u.data.get(a.dataId).values,h=o.dtype==="string"?Dl(l):l,d=o.dtype==="string"?Dl(c):c,p=s||o.dtype,[f,m]=t(o.shape,a.shape,h,d,p);return u.makeTensorInfo(m,p,f)}:({inputs:r,backend:i})=>{const{a:o,b:a}=r,u=i;if(o.dtype==="complex64"||a.dtype==="complex64"){const l=ku({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),c=u.data.get(l.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,p=u.data.get(h.dataId).values,f=u.data.get(d.dataId).values,m=ku({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),x=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,w=u.data.get(x.dataId).values,y=u.data.get(b.dataId).values,[v,k,C]=n(o.shape,a.shape,p,f,w,y),I=u.makeTensorInfo(C,"float32",v),$=u.makeTensorInfo(C,"float32",k),S=zr({inputs:{real:I,imag:$},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(I),u.disposeIntermediateTensorInfo($),S}else{const l=u.data.get(o.dataId).values,c=u.data.get(a.dataId).values,h=s||o.dtype,[d,p]=t(o.shape,a.shape,l,c,h);return u.makeTensorInfo(p,h,d)}}}function p2(e){return(t,n,s,r,i,o)=>{const a=fe(t,n),u=bt(a),l=a.length,c=te(a),h=Cs("float32",u),d=Cs("float32",u),p=dh(t,a),f=dh(n,a),m=Ta(s,r),g=Ta(i,o),x=t.length,b=te(t),w=n.length,y=te(n);if(p.length+f.length===0)for(let v=0;v<h.length;v++){const k=v%m.length,C=v%g.length,I=e(m[k*2],m[k*2+1],g[C*2],g[C*2+1]);h[v]=I.real,d[v]=I.imag}else for(let v=0;v<h.length;v++){const k=eh(v,l,c),C=k.slice(-x);p.forEach(F=>C[F]=0);const I=Mo(C,x,b),$=k.slice(-w);f.forEach(F=>$[F]=0);const S=Mo($,w,y),N=e(m[I*2],m[I*2+1],g[S*2],g[S*2+1]);h[v]=N.real,d[v]=N.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tL=Gn((e,t)=>e+t),$at=p2((e,t,n,s)=>({real:e+n,imag:t+s})),Ch=fs(nh,tL,$at),Sat={kernelName:nh,backendName:"cpu",kernelFunc:Ch};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f2(e,t,n,s,r){const i=bt(s),o=Bs(r,n);for(let a=0;a<e.length;a++){const u=e[a];if(u<0)throw new Error("Input x must be non-negative!");u>=r||(i>0?o[u]+=t[a]:o[u]+=1)}return o}function eL(e,t,n,s=!1){const r=e.shape[0],i=e.shape[1],o=we([r,n],t.dtype);for(let a=0;a<r;a++)for(let u=0;u<i;u++){const l=e.get(a,u);if(l<0)throw new Error("Input x must be non-negative!");l>=n||(s?o.set(1,a,l):t.size>0?o.set(o.get(a,l)+t.get(a,u),a,l):o.set(o.get(a,l)+1,a,l))}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iu(e){return(t,n,s)=>{const r=Cs(n,t.length);for(let i=0;i<t.length;++i)r[i]=e(t[i],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function He(e,t,n){return({inputs:s,attrs:r,backend:i})=>{const{x:o}=s;if(Kt(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=i,u=a.data.get(o.dataId).values,l=bt(o.shape),c=n||o.dtype,h=Bn(c,l);for(let d=0;d<l;++d)h[d]=t(u[d],r);return a.makeTensorInfo(o.shape,c,h)}}function $h(e,t,n){return({inputs:s,attrs:r,backend:i})=>{const{x:o}=s;if(Kt(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=i,u=a.data.get(o.dataId).values,l=n||o.dtype,c=t(u,l,r);return a.makeTensorInfo(o.shape,l,c)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nL=Iu(e=>Math.ceil(e)),Nat=$h(gp,nL),Eat={kernelName:gp,backendName:"cpu",kernelFunc:Nat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sL(e,t,n,s){const r=Bn(n,bt(t));if(s&&n!=="string"){let i=0;e.forEach(o=>{const a=bt(o.shape);r.set(o.vals,i),i+=a})}else{let i=0;e.forEach(o=>{const a=n==="string"?Dl(o.vals):o.vals;let u=0;for(let l=0;l<o.shape[0];++l){const c=l*t[1]+i;for(let h=0;h<o.shape[1];++h)r[c+h]=a[u++]}i+=o.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rL=Gn((e,t)=>e===t?1:0),iL=fs(l1,rL,null,"bool"),Dat={kernelName:l1,backendName:"cpu",kernelFunc:iL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oL=Iu(e=>Math.exp(e)),aL=$h(Ip,oL,"float32"),Tat={kernelName:Ip,backendName:"cpu",kernelFunc:aL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uL=Iu(e=>Math.expm1(e)),Aat=$h(Cp,uL),Fat={kernelName:Cp,backendName:"cpu",kernelFunc:Aat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lL=Iu(e=>Math.floor(e)),Rat=$h($p,lL),_at={kernelName:$p,backendName:"cpu",kernelFunc:Rat};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(e,t,n,s,r,i,o,a,u){const l=we([s,i],n);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<r;p++){const f=e[c*r+p];d+=f*o[p],h.push(f)}if(d<0||d>=u/i)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<i;p++)l.values[c*i+p]=t.get(...t.indexToLoc(d*i+p))}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hL(e,t,n){const s=we(n,e.dtype);for(let r=0;r<s.size;++r){const i=s.indexToLoc(r).slice(),o=i[0],a=i[2],u=t.locToIndex([o,a]);i[2]=t.values[u];const l=e.locToIndex(i);0<=l&&l<e.values.length&&(s.values[r]=e.values[l])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dL=Gn((e,t)=>e>t?1:0),Mat=fs(p1,dL,null,"bool"),Oat={kernelName:p1,backendName:"cpu",kernelFunc:Mat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pL=Gn((e,t)=>e>=t?1:0),Lat=fs(Np,pL,null,"bool"),zat={kernelName:Np,backendName:"cpu",kernelFunc:Lat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fL=Gn((e,t)=>e<t?1:0),Bat=fs(m1,fL,null,"bool"),Pat={kernelName:m1,backendName:"cpu",kernelFunc:Bat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mL=Gn((e,t)=>e<=t?1:0),Wat=fs(g1,mL,null,"bool"),Vat={kernelName:g1,backendName:"cpu",kernelFunc:Wat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gL(e,t,n){const s=(t-e)/(n-1),r=Bs(n,"float32");r[0]=e;for(let i=1;i<r.length;i++)r[i]=r[i-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xL=Iu(e=>Math.log(e)),Uat=$h(Fp,xL),Gat={kernelName:Fp,backendName:"cpu",kernelFunc:Uat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(e,t,n,s){const r=Cs(s,bt(n));for(let i=0;i<r.length;++i){const o=i*t;let a=e[o];for(let u=0;u<t;++u){const l=e[o+u];(Number.isNaN(l)||l>a)&&(a=l)}r[i]=a}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yL=Gn((e,t)=>Math.max(e,t)),Hat=fs(_p,yL),qat={kernelName:_p,backendName:"cpu",kernelFunc:Hat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wL=Gn((e,t)=>Math.min(e,t)),jat=fs(Mp,wL),Kat={kernelName:Mp,backendName:"cpu",kernelFunc:jat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m2=Gn((e,t)=>e*t),Xat=p2((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),Gx=fs(Lp,m2,Xat),Yat={kernelName:Lp,backendName:"cpu",kernelFunc:Gx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(e,t,n){const s=iu(-1,n);return m2([],t,s,e,n)}function Zat(e){const{inputs:t,backend:n}=e,{x:s}=t;Kt(s,"neg");const r=n.data.get(s.dataId).values,[i,o]=vL(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}const Jat={kernelName:N1,backendName:"cpu",kernelFunc:Zat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kL=Gn((e,t)=>e!==t?1:0),Qat=fs(E1,kL,null,"bool"),tut={kernelName:E1,backendName:"cpu",kernelFunc:Qat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g2(e,t,n,s,r){const i=t.length,o=bt(t),a=te(t),u=te(r),l=Cs(n,bt(r));for(let c=0;c<o;++c){const h=eh(c,i,a),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=Mo(d,i,u);l[p]=e[c]}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xr(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:i}=n;Kt(r,"transpose");const o=r.shape.length,a=new Array(o);for(let c=0;c<a.length;c++)a[c]=r.shape[i[c]];const u=s.data.get(r.dataId).values,l=g2(u,r.shape,r.dtype,i,a);return{dataId:s.write(l,a,r.dtype),shape:a,dtype:r.dtype}}const eut={kernelName:sh,backendName:"cpu",kernelFunc:xr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IL(e,t,n,s){const[r,i]=hs(e,s),o=_r(t,"int32"),a=Bs(bt(r),o),u=bt(i);for(let l=0;l<a.length;++l){const c=l*u;let h=1;for(let d=0;d<u;++d)h*=n[c+d];a[l]=h}return{outVals:a,outShape:r,outDtype:o}}function nut(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s;Kt(r,"prod");const a=r.shape.length,u=ye(i,r.shape),l=Cn(u,a);let c=u,h=r;const d=[];l!=null&&(h=xr({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(h),c=Fn(c.length,a));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=IL(h.shape,h.dtype,p,c);let x=m;return o&&(x=Wn(m,u)),d.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(x,g,f)}const sut={kernelName:_1,backendName:"cpu",kernelFunc:nut};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rut(e,t,n){e.forEach((s,r)=>{if(s<0||s>=n){const i=eh(r,t.length,te(t)).join(",");throw new Error(`indices[${i}] = ${s} is not in [0, ${n})`)}})}function iut(e,t){for(let n=0;n<e.length;++n){const s=e[n],r=n===e.length-1?t:e[n+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let i=1;i<s.length;++i)if(s[i-1]>s[i])throw new Error("Ragged splits must be sorted in ascending order")}}function out(e,t,n,s){const r=[];let i=0;const o=t.length-1+n.length,a=new Array(o).fill(null).map(()=>[0]);iut(n,s);let u=1;for(let l=0;l<t.length-1;++l){u*=t[l];const c=t[l+1];for(let h=1;h<u+1;++h)a[l].push(h*c)}for(let l=0;l<e.length;++l){let c=e[l],h=e[l]+1;for(let d=0;d<n.length;++d){const p=n[d],f=d+t.length-1;if(f>=0){const m=a[f],g=m[m.length-1]-p[c];for(let x=c;x<h;++x)a[f].push(p[x+1]+g)}c=p[c],h=p[h]}h!==c&&(r.push([c,h]),i+=h-c)}return{outSplits:a,valueSlices:r,numValues:i}}function aut(e){const t=[];for(let n=0;n<e.length;++n){const s=e[n].length,r=Bn("int32",s);t.push(r),e[n].forEach((i,o)=>r[o]=i)}return t}function CL(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function uut(e,t,n,s,r,i){const o=CL(t,2)[1],a=CL(i,2)[1];let u=0;for(const l of n)for(let c=l[0];c<l[1];++c){for(let h=0;h<s;++h)r[u*a+h]=e[c*o+h];++u}}function lut(e,t,n,s,r){const i=t.slice();i[0]=r;const o=Bn(n,bt(i)),a=e.length,u=a===0?0:a/t[0];return uut(e,t,s,u,o,i),[o,i]}function $L(e,t,n,s,r,i,o,a){if(e.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const u=t[0][0]-1;if(rut(i,o,u),s.length===0)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:c,valueSlices:h,numValues:d}=out(i,o,e,l),p=aut(c),f=lut(n,s,r,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SL=2147483647;function NL(e,t,n,s,r,i,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=t.length===0,u=r.length===0,l=o.length===0,c=[];a||c.push(t[0]),u||c.push(r[0]),l||c.push(o[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=Bn("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const x=a?e[0]:e[g],b=u?s[0]:s[g],w=l?i[0]:i[g];if(w===0)throw new Error("Requires delta != 0");let y;if(w>0&&b<x||w<0&&b>x)y=0;else if(y=Math.ceil(Math.abs((b-x)/w)),y>SL)throw new Error(`Requires ((limit - start) / delta) <= ${SL}`);d[g+1]=d[g]+y}const p=d[h],f=Bn(n,p);let m=0;for(let g=0;g<h;++g){const x=d[g+1]-d[g];let b=a?e[0]:e[g];const w=l?i[0]:i[g];for(let y=0;y<x;++y)f[m++]=b,b+=w}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ei=io;class Hx{constructor(t,n,s,r,i,o,a,u,l,c){this.shape=t,this.shapeShape=n,this.values=s,this.valuesShape=r,this.valuesDType=i,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=B_(c),this.raggedRank=P_(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Ei.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Ei.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const n=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Ei.VALUE_ROWIDS:return Hx.getMaxWidthValueRowID(n);case Ei.ROW_SPLITS:return Hx.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${Ei[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const n=t.length;if(n===0||n===1)return 0;let s=0;for(let r=0;r<n-1;++r){const i=t[r+1]-t[r];i>s&&(s=i)}return s}static getMaxWidthValueRowID(t){const n=t.length;if(n===0)return 0;let s=0,r=t[0],i=0;for(let o=1;o<n;++o){const a=t[o];a!==r&&(r=a,i=Math.max(o-s,i),s=o)}return Math.max(n-s,i)}tensorShapeFromTensor(t,n,s=!0){if(n.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return DL(t,s)}calculateOutputSize(t){const n=this.valuesShape,s=this.defaultValueShape;W_(s,n);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=z_(this.raggedRank,r,n);i[0]<0&&(i[0]=t);for(let o=1;o<=this.raggedRank;++o)i[o]<0&&(i[o]=this.getMaxWidth(o));return i}calculateFirstParentOutputIndex(t,n,s){const r=Math.min(t,s),i=[];let o=0;for(let a=0;a<r;++a,o+=n)i.push(o);for(let a=r;a<t;++a)i.push(-1);return O(i.length===t,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(t,n,s,r){const i=t.length,o=[];for(let a=0;a<i-1;++a){const u=t[a+1]-t[a];let l=Math.min(r,u),c=n[a];c===-1&&(l=0);for(let h=0;h<l;++h)o.push(c),c+=s;for(let h=0;h<u-l;++h)o.push(-1)}if(i>0&&o.length!==t[i-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(t,n,s,r){const i=t.length,o=[];if(i===0)return[];let a=0,u=t[0];if(u>=n.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${n.length}`);let l=n[u];o.push(l);for(let c=1;c<i;++c){const h=t[c];if(h===u)l>=0&&(++a,a<r?l+=s:l=-1);else{if(a=0,u=h,h>=n.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${n.length}`);l=n[h]}o.push(l)}if(o.length!==t.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(t,n,s,r){const i=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case Ei.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,n,s,r);case Ei.ROW_SPLITS:if(i.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(i,n,s,r);default:throw new Error(`Unsupported partition type: ${Ei[o]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const n=this.rowPartitionTypes[0];switch(n){case Ei.FIRST_DIM_SIZE:return t[0];case Ei.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ei.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ei[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let o=s.length-2;o>=0;--o)s[o]=s[o+1]*n[o+1];const r=DL(n,!1),i=Bn(this.valuesDType,bt(r));if(s[0]*n[0]>0){let o=this.calculateFirstParentOutputIndex(t,s[0],n[0]);for(let a=1;a<=this.raggedRank;++a)o=this.calculateOutputIndex(a-1,o,s[a],n[a]);this.setOutput(this.raggedRank,o,i,r)}return[r,i]}setOutput(t,n,s,r){if(s.length===0)return;const i=this.values,o=s;let a=r.slice();a=a.slice(t+1);const u=bt(a),l=n.length;let c=this.defaultValue;if(c.length!==u&&c.length!==1){const f=this.defaultValueShape;ct(()=>{const m=st(c,f);c=hf(m,a).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=l;++f){let m=f<l?n[f]:-1;if(m===p){++p;continue}if(d<p){const g=i.subarray(h*u),x=o.subarray(d*u),b=(p-d)*u;EL(x,g,b)}if(f>=l){const g=s.length;m=Math.floor(g/u)}if(m>p)if(this.defaultValue.length===1)o.subarray(p*u,m*u).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=o.slice(p*u);EL(g,c,u),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function EL(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function DL(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function TL(e,t,n,s,r,i,o,a,u,l){return new Hx(e,t,n,s,r,i,o,a,u,l).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(e,t,n,s){const r=e===t,i=e<t&&n<0,o=t<e&&n>1;if(r||i||o)return Bs(0,s);const a=Math.abs(Math.ceil((t-e)/n)),u=Bs(a,s);t<e&&n===1&&(n=-1),u[0]=e;for(let l=1;l<u.length;l++)u[l]=u[l-1]+n;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FL=Iu(e=>1/Math.sqrt(e)),cut=$h(Up,FL),hut={kernelName:Up,backendName:"cpu",kernelFunc:cut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sh(e,t,n,s,r,i,o,a,u,l){const c=[s/r,r],h=e.values,d=t.values;if(s===0)return we(n,t.dtype);const p=we(c,t.dtype);typeof u=="string"||typeof u=="number"?p.values.fill(u):typeof u=="boolean"&&p.values.fill(+u);for(let f=0;f<i;f++){const m=[];let g=0;for(let x=0;x<o;x++){const b=h[f*o+x];m.push(b),g+=b*a[x]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let x=0;x<r;x++)l?p.values[g*r+x]+=d[f*r+x]:p.values[g*r+x]=t.rank===0?d[0]:d[f*r+x]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dut=Iu(e=>1/(1+Math.exp(-e))),RL=He(Kp,e=>1/(1+Math.exp(-e))),put={kernelName:Kp,backendName:"cpu",kernelFunc:RL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(e,t,n,s,r){const i=iC(s,t,n),o=bt(n),a=te(s);if(i){const h=oC(t,a);return r==="string"?e.slice(h,h+o):e.subarray(h,h+o)}const u=r==="string"?Dl(e):e,l=we(s,r,u),c=we(n,r);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,m)=>f+t[m]);c.set(l.get(...p),...d)}return r==="string"?l3(c.values):c.values}function zl(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,size:o}=s;Kt(r,"slice");const[a,u]=mx(r,i,o);sC(r,a,u);const l=n.data.get(r.dataId).values,c=_L(l,a,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,c)}const fut={kernelName:P1,backendName:"cpu",kernelFunc:zl};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(e,t,n,s,r,i,o){const a=t[0],u=i[0],l=new Array(u),c=new Array(a),h=t[1];if(u===0){if(a!==0)throw new Error(Y_(a));const g=Bn(n,0),x=Bn(r,0);return[g,[0,h],x,l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let g=0;g<a;++g){const x=e[g*h];if(x<0)throw new Error(Z_(g,x));if(x>=u)throw new Error(J_(g,x,u));++f[x],d=d&&x>=p,p=x}let m=!0;for(let g=0;g<u;++g){const x=f[g]===0;l[g]=x,m=m&&!x,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const g=e,x=s;for(let b=0;b<a;++b)c[b]=b;return[g,[a,h],x,l,c]}else{const g=f[u-1],x=Bn(n,g*h),b=Bn(r,g),w=new Array(u).fill(0);for(let y=0;y<a;++y){const v=e[y*h],k=w[v],C=(v===0?0:f[v-1])+k;w[v]++;for(let I=0;I<h;++I)x[C*h+I]=e[y*h+I];b[C]=s[y],c[y]=C}for(let y=0;y<u;++y)if(w[y]===0){const v=y===0?0:f[y-1];x[v*h+0]=y;for(let k=1;k<h;++k)x[v*h+k]=0;b[v]=o}return[x,[g,h],b,l,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(e,t,n,s,r){const i=bt(s),o=t[0],a=r.length,u=[];let l=1,c=-1;for(let m=0;m<a;++m){const g=r[m];if(g===-1){if(c!==-1)throw new Error(Q_(c,m));c=m,u.push(1)}else{if(g<0)throw new Error(t3(m,g));l*=g,u.push(g)}}if(c!==-1){if(l<=0)throw new Error(e3());const m=Math.trunc(i/l);if(l*m!==i)throw new Error(n3(s,u));u[c]=m}if(bt(u)!==i)throw new Error(s3(s,u));const h=s.length,d=[];if(h>0){d[h-1]=1;for(let m=h-2;m>=0;--m)d[m]=d[m+1]*s[m+1]}const p=[];if(a>0){p[a-1]=1;for(let m=a-2;m>=0;--m)p[m]=p[m+1]*u[m+1]}const f=Bn(n,o*a);for(let m=0;m<o;++m){let g=0;for(let x=0;x<h;++x)g+=e[m*h+x]*d[x];for(let x=0;x<a;++x)f[m*a+x]=Math.trunc(g/p[x]),g%=p[x]}return[f,[o,a],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x2(e,t,n,s,r,i=!1,o=0){const a=s.length,u=[t[0],e.length/t[0]],l=u[1],c=a>0?r[a-1]+1:0;if(c<0)throw new Error(NC());const h=t.slice();h[0]=c;const d=h.reduce((b,w)=>b*w,1),p=Bn(n,d);if(a===0)return c>0&&p.fill(o),[p,h];if(c<=0)throw new Error(NC());let f=0,m=1,g=0,x=r[f];for(;;){let b=0;if(m<a){if(b=r[m],x===b){++m;continue}if(x>=b)throw new Error(r3())}if(x<0||x>=c)throw new Error(i3(x,c));x>g&&p.fill(o,g*l,x*l);for(let w=f;w<m;++w){const y=s[w];if(y<0||y>=u[0])throw new Error(o3(w,s[w],u[0]));for(let v=0;v<l;v++)p[x*l+v]+=e[y*l+v]}if(i)for(let w=0;w<l;w++)p[x*l+w]/=m-f;if(f=m,++m,g=x+1,x=b,m>a)break}return g<c&&p.fill(o,g*l,c*l),[p,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mut=Iu(e=>Math.sqrt(e)),gut=He(Yp,e=>Math.sqrt(e)),xut={kernelName:Yp,backendName:"cpu",kernelFunc:gut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LL=Gn((e,t)=>{const n=e-t;return n*n}),but=fs(Zp,LL),yut={kernelName:Zp,backendName:"cpu",kernelFunc:but};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zL(e,t,n,s){const r=we(e,t.dtype);for(let i=0;i<r.size;i++){const o=r.indexToLoc(i),a=new Array(o.length);for(let u=0;u<a.length;u++)a[u]=o[u]*n[u]+s[u];r.set(t.get(...a),...o)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wut{constructor(t,n,s,r,i,o){this.separator=ou(t),this.nGramWidths=n,this.leftPad=ou(s),this.rightPad=ou(r),this.padWidth=i,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,n){const s=this.getPadWidth(n);return Math.max(0,t+2*s-n+1)}createNGrams(t,n,s,r,i,o){for(let a=0;a<i;++a){const u=this.getPadWidth(o),l=Math.max(0,u-a),c=Math.max(0,u-(i-(a+1))),h=o-(l+c),d=n+(l>0?0:a-u);let p=0;p+=l*this.leftPad.length;for(let b=0;b<h;++b)p+=t[d+b].length;p+=c*this.rightPad.length;const f=l+c+h-1;p+=f*this.separator.length,s[r+a]=new Uint8Array(p);const m=s[r+a];let g=0;const x=b=>b.forEach(w=>m[g++]=w);for(let b=0;b<l;++b)x(this.leftPad),x(this.separator);for(let b=0;b<h-1;++b)x(t[d+b]),x(this.separator);if(h>0){x(t[d+h-1]);for(let b=0;b<c;++b)x(this.separator),x(this.rightPad)}else{for(let b=0;b<c-1;++b)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,n){const s=t.length,r=n.length;if(r>0){let u=n[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<r;++l){let c=n[l]>=u;if(c=c&&n[l]<=s,!c)throw new Error(`Invalid split value ${n[l]}, must be in [${u}, ${s}]`);u=n[l]}if(u!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${u}`)}const i=r-1,o=Bn("int32",r);if(s===0||r===0){const u=new Array(s);for(let l=0;l<=i;++l)o[l]=0;return[u,o]}o[0]=0;for(let u=1;u<=i;++u){const l=n[u]-n[u-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(l,h)}),this.preserveShort&&l>0&&c===0&&(c=1),o[u]=o[u-1]+c}const a=new Array(o[i]);for(let u=0;u<i;++u){const l=n[u];let c=o[u];if(this.nGramWidths.forEach(h=>{const d=n[u+1]-n[u],p=this.getNumNGrams(d,h);this.createNGrams(t,l,a,c,p,h),c+=p}),this.preserveShort&&c===o[u]){const h=n[u+1]-n[u];if(h===0)continue;const d=h+2*this.padWidth,p=1;this.createNGrams(t,l,a,c,p,d)}}return[a,o]}}function BL(e,t,n,s,r,i,o,a){return new wut(n,s,r,i,o,a).compute(e,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vut(e,t,n,s){if(!e.length)return;if(t.length===0){for(let i=0;i<e.length;++i)s.push(e.subarray(i,i+1));return}if(t.length===1){const i=t[0];let o=e.indexOf(i);for(;o!==-1;){const a=e.subarray(0,o);(!n||a.length!==0)&&s.push(a),e=e.subarray(o+1),o=e.indexOf(i)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let i=0;i<e.length+1;i++)if(i===e.length||t.indexOf(e[i])!==-1){const o=e.subarray(r,i);(!n||o.length!==0)&&s.push(o),r=i+1}}function PL(e,t,n){const s=e.length,r=[];let i=0,o=0;const a=new Array(s);for(let d=0;d<s;++d){const p=r.length;vut(e[d],t,n,r);const f=r.length-p;a[d]=f,i+=f,o=Math.max(o,f)}const u=Bn("int32",i*2),l=new Array(i),c=[s,o];let h=0;for(let d=0;d<s;++d)for(let p=0;p<a[d];++p)u[h*2]=d,u[h*2+1]=p,l[h]=r[h],++h;return[u,l,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(e,t){const n=Bn("int32",e.length);for(let s=0;s<e.length;++s)n[s]=kZ(e[s]).modulo(t).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VL=Gn((e,t)=>e-t),kut=p2((e,t,n,s)=>({real:e-n,imag:t-s})),b2=fs(Jp,VL,kut),Iut={kernelName:Jp,backendName:"cpu",kernelFunc:b2};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const s=we(n,e.dtype);for(let r=0;r<s.values.length;++r){const i=s.indexToLoc(r),o=new Array(e.rank);for(let u=0;u<o.length;u++)o[u]=i[u]%e.shape[u];const a=e.locToIndex(o);s.values[r]=e.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Of=(e,t)=>{const n=t.value-e.value;return n===0?e.index-t.index:n};function GL(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const a=s-n+1,u=t-n+1,l=Math.log(a),c=.5*Math.exp(2*l/3),h=.5*Math.sqrt(l*c*(a-c)/a)*Math.sign(u-a/2),d=Math.max(n,Math.floor(t-u*c/a+h)),p=Math.min(s,Math.floor(t+(a-u)*c/a+h));GL(e,t,d,p)}const r=e[t];let i=n,o=s;for(Jc(e,n,t),Of(e[s],r)>0&&Jc(e,n,s);i<o;){for(Jc(e,i,o),i++,o--;Of(e[i],r)<0;)i=i+1;for(;Of(e[o],r)>0;)o=o-1}Of(e[n],r)===0?Jc(e,n,o):(o=o+1,Jc(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function HL(e,t,n,s,r){const i=t[t.length-1],[o,a]=[e.length/i,i],u=Cs(n,o*s),l=Cs("int32",o*s);for(let h=0;h<o;h++){const d=h*a,p=e.subarray(d,d+a);let f=new Array(p.length);p.forEach((b,w)=>f[w]={value:b,index:w}),s<f.length&&(GL(f,s),f=f.slice(0,s)),r&&f.sort(Of);const m=h*s,g=u.subarray(m,m+s),x=l.subarray(m,m+s);for(let b=0;b<s;b++)g[b]=f[b].value,x[b]=f[b].index}const c=t.slice();return c[c.length-1]=s,[we(c,n,u),we(c,"int32",l)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(e,t,n,s){const r=ye(t,n)[0],i=[1,n[0],1];for(let f=0;f<r;f++)i[0]*=n[f];i[1]=n[r];for(let f=r+1;f<n.length;f++)i[2]*=n[f];const o={},a=new Int32Array(n[r]),u=new Ps(i,s,e),l=[],c=i[0]===1&&i[2]===1;for(let f=0;f<n[r];f++){let m;if(c)m=e[f].toString();else{const g=[];for(let x=0;x<i[0];x++)for(let b=0;b<i[2];b++)g.push(u.get(x,f,b));m=g.join(",")}if(o[m]!==void 0)a[f]=o[m];else{const g=Object.keys(o).length;o[m]=g,a[f]=g,l.push(f)}}const h=i.slice();h[1]=Object.keys(o).length;const d=new Ps(h,s);l.forEach((f,m)=>{for(let g=0;g<i[0];g++)for(let x=0;x<i[2];x++)d.set(u.get(g,f,x),g,m,x)});const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cut=Object.freeze(Object.defineProperty({__proto__:null,addImpl:tL,bincountImpl:f2,bincountReduceImpl:eL,castImpl:QO,ceilImpl:nL,concatImpl:sL,equalImpl:rL,expImpl:oL,expm1Impl:uL,floorImpl:lL,gatherNdImpl:cL,gatherV2Impl:hL,greaterEqualImpl:pL,greaterImpl:dL,lessEqualImpl:mL,lessImpl:fL,linSpaceImpl:gL,logImpl:xL,maxImpl:bL,maximumImpl:yL,minimumImpl:wL,multiplyImpl:m2,negImpl:vL,notEqualImpl:kL,prodImpl:IL,raggedGatherImpl:$L,raggedRangeImpl:NL,raggedTensorToTensorImpl:TL,rangeImpl:AL,rsqrtImpl:FL,scatterImpl:Sh,sigmoidImpl:dut,simpleAbsImpl:JO,sliceImpl:_L,sparseFillEmptyRowsImpl:ML,sparseReshapeImpl:OL,sparseSegmentReductionImpl:x2,sqrtImpl:mut,squaredDifferenceImpl:LL,stridedSliceImpl:zL,stringNGramsImpl:BL,stringSplitImpl:PL,stringToHashBucketFastImpl:WL,subImpl:VL,tileImpl:UL,topKImpl:HL,transposeImpl:g2,uniqueImpl:qL},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */MR("cpu",()=>new Vx,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jL=He(vp,e=>e>=0?e:Math.exp(e)-1),$ut={kernelName:vp,backendName:"cpu",kernelFunc:jL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KL(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:i}=s;Kt([r],"leakyRelu");const o=bt(r.shape),a=n.data.get(r.dataId).values,u=Cs("float32",o);for(let l=0;l<a.length;l++)u[l]=a[l]<0?i*a[l]:a[l];return n.makeTensorInfo(r.shape,"float32",u)}const Sut={kernelName:f1,backendName:"cpu",kernelFunc:KL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nut=Gn((e,t)=>e<0?t*e:e);function XL(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Kt([s,r],"prelu");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[a,u]=Nut(s.shape,r.shape,i,o,"float32");return n.makeTensorInfo(u,"float32",a)}const Eut={kernelName:R1,backendName:"cpu",kernelFunc:XL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YL=He(Pp,e=>Math.max(0,e)),Dut={kernelName:Pp,backendName:"cpu",kernelFunc:YL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZL=He(Wp,e=>Math.min(Math.max(0,e),6)),Tut={kernelName:Wp,backendName:"cpu",kernelFunc:ZL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qx(e,t,n,s,r){if(n==="linear")return jo({inputs:{x:t},backend:e});if(n==="relu")return YL({inputs:{x:t},backend:e});if(n==="elu")return jL({inputs:{x:t},backend:e});if(n==="relu6")return ZL({inputs:{x:t},backend:e});if(n==="prelu")return XL({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return KL({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return RL({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nn(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:i}=s,o=bt(r.shape),a=yF(i,o),u=bt(a);O(o===u,()=>`The new shape (${a}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(l.complexTensorInfos!=null){const c=l.complexTensorInfos.real,h=l.complexTensorInfos.imag;c.shape=a,h.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const Aut={kernelName:M1,backendName:"cpu",kernelFunc:nn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JL(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i}=t,{transposeA:o,transposeB:a}=s;Kt([r,i],"matMul");const u=r.shape.length,l=i.shape.length,c=o?r.shape[u-2]:r.shape[u-1],h=a?i.shape[l-1]:i.shape[l-2],d=o?r.shape[u-1]:r.shape[u-2],p=a?i.shape[l-2]:i.shape[l-1],f=r.shape.slice(0,-2),m=i.shape.slice(0,-2),g=bt(f),x=bt(m),b=fe(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,p]);O(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${o} and transposeB=${a} must match.`);const w=o?[g,c,d]:[g,d,c],y=a?[x,p,h]:[x,h,p],v=nn({inputs:{x:r},backend:n,attrs:{shape:w}}),k=nn({inputs:{x:i},backend:n,attrs:{shape:y}}),C=o?v.shape[1]:v.shape[2],I=o?v.shape[2]:v.shape[1],$=a?k.shape[1]:k.shape[2],S=Math.max(g,x),N=n.data.get(v.dataId).values,F=n.data.get(k.dataId).values,D=te(v.shape),E=te(k.shape),[A,T,R]=o?[D[0],1,D[1]]:[D[0],D[1],1],[_,M,z]=a?[1,E[1],E[0]]:[E[1],1,E[0]],B=I*$,V=we([S,I,$],v.dtype),G=V.values,j=n.blockSize;for(let H=0;H<S;H++){const at=H%g,it=H%x;for(let ft=0;ft<I;ft+=j){const X=Math.min(ft+j,I);for(let ut=0;ut<$;ut+=j){const wt=Math.min(ut+j,$);for(let ot=0;ot<C;ot+=j){const Et=Math.min(ot+j,C);for(let Tt=ft;Tt<X;Tt++)for(let Rt=ut;Rt<wt;Rt++){let _t=0;for(let kt=ot;kt<Et;kt++){const Lt=N[at*A+Tt*T+kt*R],Ue=F[kt*_+Rt*M+it*z];_t+=Lt*Ue}G[H*B+(Tt*$+Rt)]+=_t}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(b,V.dtype,V.values)}const Fut={kernelName:Q0,backendName:"cpu",kernelFunc:JL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rut(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i,bias:o,preluActivationWeights:a}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=JL({inputs:{a:r,b:i},attrs:{transposeA:u,transposeB:l},backend:n}),o&&(p=Ch({inputs:{a:d,b:o},backend:n}),m.push(d),d=p),c&&(f=qx(n,d,c,a,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}const _ut={kernelName:K1,backendName:"cpu",kernelFunc:Rut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mut=He(up,e=>Math.acos(e)),Out={kernelName:up,backendName:"cpu",kernelFunc:Mut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lut=He(lp,e=>Math.acosh(e)),zut={kernelName:lp,backendName:"cpu",kernelFunc:Lut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function But(e){const{inputs:t,backend:n}=e,s=t;Kt(t,"addN");const r=s.map(a=>n.data.get(a.dataId).values),i=we(s[0].shape,s[0].dtype),o=i.values;for(let a=0;a<s.length;a++){const u=r[a];for(let l=0;l<o.length;l++)o[l]+=u[l]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}const Put={kernelName:mk,backendName:"cpu",kernelFunc:But};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wut(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s;Kt(r,"all");const a=ye(i,r.shape);let u=a;const l=Cn(u,r.shape.length);let c=r;l!=null&&(c=xr({inputs:{x:r},backend:n,attrs:{perm:l}}),u=Fn(u.length,r.shape.length)),Ss("all",u,c.shape.length);const[h,d]=hs(c.shape,u),p=bt(d),f=Bs(bt(h),c.dtype),m=n.data.get(c.dataId).values;for(let x=0;x<f.length;++x){const b=x*p;let w=m[b];for(let y=0;y<p;++y){const v=m[b+y];w=w&&v}f[x]=w}l!=null&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const x=Wn(h,a),b=nn({inputs:{x:g},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(g),b}return g}const Vut={kernelName:gk,backendName:"cpu",kernelFunc:Wut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uut(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s;Kt(r,"any");const a=ye(i,r.shape);let u=a;const l=Cn(u,r.shape.length);let c=r;l!=null&&(c=xr({inputs:{x:r},backend:n,attrs:{perm:l}}),u=Fn(u.length,r.shape.length)),Ss("any",u,c.shape.length);const[h,d]=hs(c.shape,u),p=bt(d),f=Bs(bt(h),c.dtype),m=n.data.get(c.dataId).values;for(let x=0;x<f.length;++x){const b=x*p;let w=m[b];for(let y=0;y<p;++y){const v=m[b+y];w=w||v}f[x]=w}l!=null&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const x=Wn(h,a),b=nn({inputs:{x:g},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(g),b}return g}const Gut={kernelName:xk,backendName:"cpu",kernelFunc:Uut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hut(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;Kt(r,"argMax");let o=ye(i,r.shape);const a=Cn(o,r.shape.length);let u=r;const l=[];a!=null&&(u=xr({inputs:{x:r},backend:n,attrs:{perm:a}}),l.push(u),o=Fn(o.length,u.shape.length)),o=[o[0]],Ss("argMax",o,u.shape.length);const[c,h]=hs(u.shape,o),d=bt(c),p=Bs(d,"int32"),f=bt(h),m=n.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let b=m[x],w=0;for(let y=0;y<f;++y){const v=m[x+y];v>b&&(b=v,w=y)}p[g]=w}return l.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",p)}const qut={kernelName:X0,backendName:"cpu",kernelFunc:Hut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jut(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;Kt(r,"argMin");let o=ye(i,r.shape);const a=Cn(o,r.shape.length);let u=r;const l=[];a!=null&&(u=xr({inputs:{x:r},backend:n,attrs:{perm:a}}),l.push(u),o=Fn(o.length,u.shape.length)),o=[o[0]],Ss("argMin",o,u.shape.length);const[c,h]=hs(u.shape,o),d=bt(c),p=Bs(d,"int32"),f=bt(h),m=n.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let b=m[x],w=0;for(let y=0;y<f;++y){const v=m[x+y];v<b&&(b=v,w=y)}p[g]=w}return l.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",p)}const Kut={kernelName:Y0,backendName:"cpu",kernelFunc:jut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xut=He(cp,e=>Math.asin(e)),Yut={kernelName:cp,backendName:"cpu",kernelFunc:Xut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zut=He(hp,e=>Math.asinh(e)),Jut={kernelName:hp,backendName:"cpu",kernelFunc:Zut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qut=He(dp,e=>Math.atan(e)),tlt={kernelName:dp,backendName:"cpu",kernelFunc:Qut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const elt=Gn((e,t)=>Math.atan2(e,t)),nlt=fs(fp,elt),slt={kernelName:fp,backendName:"cpu",kernelFunc:nlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rlt=He(pp,e=>Math.atanh(e)),ilt={kernelName:pp,backendName:"cpu",kernelFunc:rlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y2(e,t,n,s,r,i){const o=r.strideHeight,a=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=we(r.outShape,n),g=m.values,x=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],w=r.outShape[3];for(let y=0;y<r.batchSize;++y){const v=y*x,k=y*s[0];for(let C=0;C<r.inChannels;++C)for(let I=0;I<r.outHeight;++I){const $=I*o-d,S=Math.max(0,$),N=Math.min(r.inHeight,c+$),F=v+I*b;for(let D=0;D<r.outWidth;++D){const E=D*a-p,A=Math.max(0,E),T=Math.min(r.inWidth,h+E);let R=f,_=0,M=0;for(let B=S;B<N;B+=u){const V=k+B*s[1];for(let G=A;G<T;G+=l){const j=V+G*s[2],H=e[j+C];i==="max"&&H>R?R=H:i==="avg"&&(_+=H,M++)}if(isNaN(R))break}const z=F+D*w+C;g[z]=i==="avg"?_/M:R}}}return m}function QL(e,t,n,s,r=!1,i=!1){const o=we(s.outShape,"int32"),a=s.strideHeight,u=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=we(t,n,e);for(let g=0;g<s.batchSize;++g)for(let x=0;x<s.inChannels;++x)for(let b=0;b<s.outHeight;++b){const w=b*a-p;let y=w;for(;y<0;)y+=l;const v=Math.min(s.inHeight,h+w);for(let k=0;k<s.outWidth;++k){const C=k*u-f;let I=C;for(;I<0;)I+=c;const $=Math.min(s.inWidth,d+C);let S=Number.NEGATIVE_INFINITY,N=-1;for(let F=y;F<v;F+=l){const D=F-w;for(let E=I;E<$;E+=c){const A=E-C,T=m.get(g,F,E,x);T>S&&(S=T,r?N=i?((g*s.inHeight+F)*s.inWidth+E)*s.inChannels+x:(F*s.inWidth+E)*s.inChannels+x:N=D*d+A)}}o.set(N,g,b,k,x)}}return o}function t4(e,t,n,s,r,i){const o=r.strideDepth,a=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,x=r.padInfo.left,b=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=we(r.outShape,n),y=w.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let $=0;$<r.batchSize;++$){const S=$*v,N=$*s[0];for(let F=0;F<r.inChannels;++F)for(let D=0;D<r.outDepth;++D){const E=D*o-m;let A=E;for(;A<0;)A+=l;const T=Math.min(r.inDepth,d+E),R=S+D*k;for(let _=0;_<r.outHeight;++_){const M=_*a-g;let z=M;for(;z<0;)z+=c;const B=Math.min(r.inHeight,p+M),V=R+_*C;for(let G=0;G<r.outWidth;++G){const j=G*u-x;let H=j;for(;H<0;)H+=h;const at=Math.min(r.inWidth,f+j),it=V+G*I;let ft=b,X=0,ut=0;for(let ot=A;ot<T;ot+=l){const Et=N+ot*s[1];for(let Tt=z;Tt<B;Tt+=c){const Rt=Et+Tt*s[2];for(let _t=H;_t<at;_t+=h){const kt=Rt+_t*s[3],Lt=e[kt+F];if(i==="max"&&Lt>ft?ft=Lt:i==="avg"&&(X+=Lt,ut++),isNaN(ft))break}if(isNaN(ft))break}if(isNaN(ft))break}const wt=it+F;y[wt]=i==="avg"?X/Math.max(ut,1):ft}}}}return w}function olt(e,t){const n=we(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let x=0;x<t.outDepth;++x){const b=x*s-d;let w=b;for(;w<0;)w+=o;const y=Math.min(t.inDepth,l+b);for(let v=0;v<t.outHeight;++v){const k=v*r-p;let C=k;for(;C<0;)C+=a;const I=Math.min(t.inHeight,c+k);for(let $=0;$<t.outWidth;++$){const S=$*i-f;let N=S;for(;N<0;)N+=u;const F=Math.min(t.inWidth,h+S);let D=Number.NEGATIVE_INFINITY,E=-1;for(let A=w;A<y;A+=o){const T=A-b;for(let R=C;R<I;R+=a){const _=R-k;for(let M=N;M<F;M+=u){const z=M-S,B=e.get(m,A,R,M,g);B>=D&&(D=B,E=T*c*h+_*c+z)}}}n.set(E,m,x,v,$,g)}}}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function alt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Kt(r,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=s,l=1;O(Ws(o,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=vi(r.shape,i,o,l,a,u);let h;if(c.filterWidth===1&&c.filterHeight===1&&Le(c.inShape,c.outShape))h=jo({inputs:{x:r},backend:n});else{const d=n.data.get(r.dataId).values,p=te(r.shape),f=y2(d,r.shape,r.dtype,p,c,"avg");h=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const ult={kernelName:Z0,backendName:"cpu",kernelFunc:alt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function llt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=s;Kt(r,"avgPool3d");const c=Sa(r.shape,i,o,1,a,u,l),h=n.data.get(r.dataId).values,d=t4(h,r.shape,r.dtype,te(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}const clt={kernelName:J0,backendName:"cpu",kernelFunc:llt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hlt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,{filterSize:o,strides:a,pad:u,dimRoundingMode:l}=s;Kt([r,i],"avgPool3DGrad");const c=Sa(i.shape,o,a,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,x=c.dilationDepth,b=c.dilationHeight,w=c.dilationWidth,y=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,C=y-1-c.padInfo.front,I=k-1-c.padInfo.left,$=v-1-c.padInfo.top,S=we(i.shape,"float32"),N=1/(f*m*g),F=n.bufferSync(r);for(let D=0;D<c.batchSize;++D)for(let E=0;E<c.inChannels;++E)for(let A=0;A<c.inDepth;++A)for(let T=0;T<c.inHeight;++T)for(let R=0;R<c.inWidth;++R){const _=A-C,M=T-$,z=R-I;let B=0;for(let V=0;V<y;V+=x){const G=(_+V)/h;if(!(G<0||G>=c.outDepth||Math.floor(G)!==G))for(let j=0;j<v;j+=b){const H=(M+j)/d;if(!(H<0||H>=c.outHeight||Math.floor(H)!==H))for(let at=0;at<k;at+=w){const it=(z+at)/p;if(it<0||it>=c.outWidth||Math.floor(it)!==it)continue;const ft=F.get(D,G,H,it,E);B+=ft}}}S.set(B*N,D,A,T,R,E)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const dlt={kernelName:yk,backendName:"cpu",kernelFunc:hlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function plt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,o=i;Kt([r,i],"avgPoolGrad");const{filterSize:a,strides:u,pad:l}=s,c=vi(o.shape,a,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,x=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,y=x-1-c.padInfo.top,v=we(o.shape,"float32"),k=1/(p*f),C=n.data.get(r.dataId).values,I=we(r.shape,"float32",C);for(let $=0;$<c.batchSize;++$)for(let S=0;S<c.inChannels;++S)for(let N=0;N<c.inHeight;++N)for(let F=0;F<c.inWidth;++F){const D=N-y,E=F-w;let A=0;for(let T=0;T<x;T+=m){const R=(D+T)/h;if(!(R<0||R>=c.outHeight||Math.floor(R)!==R))for(let _=0;_<b;_+=g){const M=(E+_)/d;if(M<0||M>=c.outWidth||Math.floor(M)!==M)continue;const z=I.get($,R,M,S);A+=z}}v.set(A*k,$,N,F,S)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const flt={kernelName:bk,backendName:"cpu",kernelFunc:plt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mlt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:i,offset:o,mean:a,variance:u}=t;O(a.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Kt([r,a,u,i,o],"batchNorm");let{varianceEpsilon:l}=s;l==null&&(l=.001);const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,d=n.data.get(u.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,x=p.length,b=d.length,w=h.length;let y=0,v=0,k=0,C=0;for(let I=0;I<c.length;++I)m[I]=f[y++]+(c[I]-h[v++])*p[k++]/Math.sqrt(d[C++]+l),y>=g&&(y=0),v>=w&&(v=0),k>=x&&(k=0),C>=b&&(C=0);return n.makeTensorInfo(r.shape,r.dtype,m)}const glt={kernelName:h1,backendName:"cpu",kernelFunc:mlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xlt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,crops:o}=s;Kt([r],"batchToSpaceND");const a=i.reduce((x,b)=>x*b),u=xf(r.shape,i,a),l=bf(u.length,i.length),c=yf(r.shape,i,a),h=hC(o,i.length),d=dC(c,o,i.length),p=nn({inputs:{x:r},backend:n,attrs:{shape:u}}),f=xr({inputs:{x:p},backend:n,attrs:{perm:l}}),m=nn({inputs:{x:f},backend:n,attrs:{shape:c}}),g=zl({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const blt={kernelName:t1,backendName:"cpu",kernelFunc:xlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ylt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:o}=s,a=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,l=f2(a,u,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,l)}const wlt={kernelName:wk,backendName:"cpu",kernelFunc:ylt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vlt(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,a=fe(Array.from(i),Array.from(o));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const klt={kernelName:SF,backendName:"cpu",kernelFunc:vlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ilt=He(xp,(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),Clt={kernelName:xp,backendName:"cpu",kernelFunc:Ilt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $lt=e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(bt(t.shape)),r=n.data.get(t.dataId),i=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,a=n.data.get(i.dataId).values,u=n.data.get(o.dataId).values;for(let l=0;l<a.length;l++){const c=a[l],h=u[l];s[l]=Math.hypot(c,h)}return n.makeOutput(s,t.shape,"float32")},Slt={kernelName:e1,backendName:"cpu",kernelFunc:$lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nh(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const Nlt={kernelName:zk,backendName:"cpu",kernelFunc:Nh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eh(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,i=ye(r,t[0].shape)[0],o=t.map(m=>m.shape);uC(o,i);let a=Wo(t.map(m=>m.shape),i);if(bt(a)===0)return n.makeTensorInfo(a,t[0].dtype,[]);const u=t.filter(m=>bt(m.shape)>0);if(u.length===1)return jo({inputs:{x:u[0]},backend:n});if(u[0].dtype==="complex64"){const m=u.map(y=>Ll({inputs:{input:y},backend:n})),g=u.map(y=>Nh({inputs:{input:y},backend:n})),x=Eh({inputs:m,backend:n,attrs:{axis:i}}),b=Eh({inputs:g,backend:n,attrs:{axis:i}}),w=zr({inputs:{real:x,imag:b},backend:n});return m.forEach(y=>n.disposeIntermediateTensorInfo(y)),g.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),w}const l=u.map(m=>{const g=[-1,bt(m.shape.slice(i))];return nn({inputs:{x:m},backend:n,attrs:{shape:g}})}),c=l.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));a=Wo(l.map(m=>m.shape),1);const h=l[0].shape[0]===1,d=sL(c,a,t[0].dtype,h),p=Wo(u.map(m=>m.shape),i),f=n.makeTensorInfo(p,t[0].dtype,d);return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const Elt={kernelName:n1,backendName:"cpu",kernelFunc:Eh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=s;Kt([r,i],"conv2d");const h=Na(u),d=$s(r.shape,i.shape,o,l,a,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,b=d.padInfo.top,w=d.dataFormat==="channelsLast",y=new Ps(d.outShape,r.dtype),v=te(r.shape),k=te(i.shape),C=v[0],I=w?v[1]:v[2],$=w?v[2]:1,S=w?1:v[1],N=y.strides[0],F=w?y.strides[1]:y.strides[2],D=w?y.strides[2]:1,E=w?1:y.strides[1],A=n.data.get(r.dataId).values,T=n.data.get(i.dataId).values,R=y.values;for(let _=0;_<d.batchSize;++_){const M=_*C,z=_*N;for(let B=0;B<d.outHeight;++B){const V=z+B*F,G=B*d.strideHeight-b;for(let j=0;j<p;++j){const H=G+j*m;if(H<0||H>=d.inHeight)continue;const at=j*k[0],it=M+H*I;for(let ft=0;ft<d.outWidth;++ft){const X=V+ft*D,ut=ft*d.strideWidth-x;for(let wt=0;wt<f;++wt){const ot=ut+wt*g;if(ot<0||ot>=d.inWidth)continue;const Et=at+wt*k[1],Tt=it+ot*$;let Rt=Et;for(let _t=0;_t<d.inChannels;++_t){const kt=A[Tt+_t*S];for(let Lt=0;Lt<d.outChannels;++Lt)R[X+Lt*E]+=kt*T[Rt+Lt];Rt+=d.outChannels}}}}}}return n.makeTensorInfo(y.shape,y.dtype,R)}const Dlt={kernelName:s1,backendName:"cpu",kernelFunc:e4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tlt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:o,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=s;Kt([r,i],"conv2dBackpropFilter");const h=Na(u),d=$s(r.shape,c,o,1,a,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,x=d.dataFormat==="channelsLast",b=new Ps(d.filterShape,"float32"),w=d.padInfo.left,y=d.padInfo.top,v=n.data.get(r.dataId).values,k=n.data.get(i.dataId).values,C=new Ps(r.shape,r.dtype,v),I=new Ps(i.shape,i.dtype,k);for(let $=0;$<m;++$){const S=Math.max(0,Math.ceil((y-$)/p)),N=Math.min(d.outHeight,(d.inHeight+y-$)/p);for(let F=0;F<g;++F){const D=Math.max(0,Math.ceil((w-F)/f)),E=Math.min(d.outWidth,(d.inWidth+w-F)/f);for(let A=0;A<d.inChannels;++A)for(let T=0;T<d.outChannels;++T){let R=0;for(let _=0;_<d.batchSize;++_)for(let M=S;M<N;++M){const z=$+M*p-y;for(let B=D;B<E;++B){const V=F+B*f-w;x?R+=C.get(_,z,V,A)*I.get(_,M,B,T):R+=C.get(_,A,z,V)*I.get(_,T,M,B)}}b.set(R,$,F,A,T)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const Alt={kernelName:kk,backendName:"cpu",kernelFunc:Tlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Flt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{inputShape:o,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=s;Kt([r,i],"conv2dBackpropInput");const h=te(i.shape),d=te(r.shape);let p=Na(l);const f=$s(o,i.shape,a,1,u,c,!1,p),m=new Ps(f.inShape,"float32"),g=m.values,x=n.data.get(r.dataId).values,b=n.data.get(i.dataId).values,[w,y,v]=h,{batchSize:k,filterHeight:C,filterWidth:I,inChannels:$,inHeight:S,inWidth:N,outChannels:F,outHeight:D,outWidth:E,strideHeight:A,strideWidth:T}=f;p=f.dataFormat;const R=C-1-f.padInfo.top,_=I-1-f.padInfo.left,M=p==="channelsLast",z=m.strides[0],B=M?m.strides[1]:m.strides[2],V=M?m.strides[2]:1,G=M?1:m.strides[1],j=d[0],H=M?d[1]:d[2],at=M?d[2]:1,it=M?1:d[1];for(let ft=0;ft<k;++ft)for(let X=0;X<$;++X)for(let ut=0;ut<S;++ut){const wt=ut-R,ot=Math.max(0,Math.ceil(wt/A)),Et=Math.min(D,(C+wt)/A);for(let Tt=0;Tt<N;++Tt){const Rt=Tt-_,_t=Math.max(0,Math.ceil(Rt/T)),kt=Math.min(E,(I+Rt)/T);let Lt=0;for(let he=ot;he<Et;++he){const os=he*A-wt;for(let je=_t;je<kt;++je){const W=je*T-Rt,Q=j*ft+H*he+at*je,lt=w*(C-1-os)+y*(I-1-W)+v*X;for(let yt=0;yt<F;++yt){const It=x[Q+it*yt],$t=b[lt+yt];Lt+=It*$t}}}const Ue=z*ft+B*ut+V*Tt+G*X;g[Ue]=Lt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const Rlt={kernelName:r1,backendName:"cpu",kernelFunc:Flt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _lt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dilations:u}=s;Kt([r,i],"conv3d");const l=lu(r.shape,i.shape,o,u,a),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,x=g.front,b=g.left,w=g.top,y=new Ps(l.outShape,r.dtype),v=n.data.get(r.dataId).values,k=n.data.get(i.dataId).values,C=y.values,I=te(r.shape),$=te(i.shape);for(let S=0;S<l.batchSize;++S){const N=S*I[0],F=S*y.strides[0];for(let D=0;D<l.outDepth;++D){const E=F+D*y.strides[1],A=D*l.strideDepth-x;for(let T=0;T<c;++T){const R=A+T*p;if(R<0||R>=l.inDepth)continue;const _=T*$[0],M=N+R*I[1];for(let z=0;z<l.outHeight;++z){const B=E+z*y.strides[2],V=z*l.strideHeight-w;for(let G=0;G<h;++G){const j=V+G*f;if(j<0||j>=l.inHeight)continue;const H=_+G*$[1],at=M+j*I[2];for(let it=0;it<l.outWidth;++it){const ft=B+it*l.outChannels,X=it*l.strideWidth-b;for(let ut=0;ut<d;++ut){const wt=X+ut*m;if(wt<0||wt>=l.inWidth)continue;const ot=H+ut*$[2],Et=at+wt*l.inChannels;let Tt=ot;for(let Rt=0;Rt<l.inChannels;++Rt){const _t=v[Et+Rt];for(let kt=0;kt<l.outChannels;++kt)C[ft+kt]+=_t*k[Tt+kt];Tt+=l.outChannels}}}}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const Mlt={kernelName:i1,backendName:"cpu",kernelFunc:_lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Olt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:o,pad:a,filterShape:u}=s;Kt([r,i],"conv3dBackpropFilterV2");const l=te(r.shape),c=te(i.shape),h=lu(r.shape,u,o,1,a),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,b=new Ps(h.filterShape,"float32"),w=b.values,[y,v,k,C]=b.strides,I=n.data.get(i.dataId).values,[$,S,N,F]=c,D=n.data.get(r.dataId).values,[E,A,T,R]=l,_=h.padInfo.front,M=h.padInfo.left,z=h.padInfo.top;for(let B=0;B<m;++B){const V=Math.max(0,Math.ceil((_-B)/d)),G=Math.min(h.outDepth,(h.inDepth+_-B)/d),j=B*y;for(let H=0;H<g;++H){const at=Math.max(0,Math.ceil((z-H)/p)),it=Math.min(h.outHeight,(h.inHeight+z-H)/p),ft=H*v+j;for(let X=0;X<x;++X){const ut=Math.max(0,Math.ceil((M-X)/f)),wt=Math.min(h.outWidth,(h.inWidth+M-X)/f),ot=X*k+ft;for(let Et=0;Et<h.inChannels;++Et){const Tt=Et*C+ot;for(let Rt=0;Rt<h.outChannels;++Rt){let _t=0;for(let kt=0;kt<h.batchSize;++kt){const Lt=kt*E,Ue=kt*$;for(let he=V;he<G;++he){const os=(B+he*d-_)*A+Lt,je=he*S+Ue;for(let W=at;W<it;++W){const Q=(H+W*p-z)*T+os,lt=W*N+je;for(let yt=ut;yt<wt;++yt){const It=(X+yt*f-M)*R+Q,$t=yt*F+lt;_t+=D[It+Et]*I[$t+Rt]}}}}w[Tt+Rt]=_t}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const Llt={kernelName:Ik,backendName:"cpu",kernelFunc:Olt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zlt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{pad:o,strides:a,inputShape:u}=s;Kt([r],"conv3dBackpropInputV2");const l=te(r.shape),c=te(i.shape),h=lu(u,i.shape,a,1,o),d=new Ps(h.inShape,"float32"),p=d.values,[f,m,g,x]=d.strides,b=n.data.get(r.dataId).values,[w,y,v,k]=l,C=n.data.get(i.dataId).values,[I,$,S,N]=c,{batchSize:F,filterDepth:D,filterHeight:E,filterWidth:A,inChannels:T,inDepth:R,inHeight:_,inWidth:M,outChannels:z,outDepth:B,outHeight:V,outWidth:G,strideDepth:j,strideHeight:H,strideWidth:at}=h,it=D-1-h.padInfo.front,ft=E-1-h.padInfo.top,X=A-1-h.padInfo.left;for(let ut=0;ut<F;++ut)for(let wt=0;wt<T;++wt)for(let ot=0;ot<R;++ot){const Et=ot-it,Tt=Math.max(0,Math.ceil(Et/j)),Rt=Math.min(B,(D+Et)/j);for(let _t=0;_t<_;++_t){const kt=_t-ft,Lt=Math.max(0,Math.ceil(kt/H)),Ue=Math.min(V,(E+kt)/H);for(let he=0;he<M;++he){const os=he-X,je=Math.max(0,Math.ceil(os/at)),W=Math.min(G,(A+os)/at);let Q=0;for(let lt=Tt;lt<Rt;++lt){const yt=lt*j-Et;for(let It=Lt;It<Ue;++It){const $t=It*H-kt;for(let At=je;At<W;++At){const vt=At*at-os,Vt=w*ut+y*lt+v*It+k*At,Ne=I*(D-1-yt)+$*(E-1-$t)+S*(A-1-vt)+N*wt;for(let Se=0;Se<z;++Se){const zt=b[Vt+Se],vs=C[Ne+Se];Q+=zt*vs}}}}p[f*ut+m*ot+g*_t+x*he+wt]=Q}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}const Blt={kernelName:Ck,backendName:"cpu",kernelFunc:zlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Plt=He(bp,e=>Math.cos(e)),Wlt={kernelName:bp,backendName:"cpu",kernelFunc:Plt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vlt=He(yp,e=>Math.cosh(e)),Ult={kernelName:yp,backendName:"cpu",kernelFunc:Vlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Glt(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:i,boxInd:o}=t,{cropSize:a,method:u,extrapolationValue:l}=s,[c,h,d,p]=r.shape,f=i.shape[0],[m,g]=a,x=we([f,m,g,p],"float32"),b=n.data.get(i.dataId).values,w=n.data.get(o.dataId).values,y=n.data.get(r.dataId).values,v=te(r.shape),k=te(x.shape);for(let C=0;C<f;C++){const I=C*4,$=b[I],S=b[I+1],N=b[I+2],F=b[I+3],D=w[C];if(D>=c)continue;const E=m>1?(N-$)*(h-1)/(m-1):0,A=g>1?(F-S)*(d-1)/(g-1):0;for(let T=0;T<m;T++){const R=m>1?$*(h-1)+T*E:.5*($+N)*(h-1);if(R<0||R>h-1){for(let _=0;_<g;_++)for(let M=0;M<p;M++){const z=M+_*k[2]+T*k[1]+C*k[0];x.values[z]=l}continue}if(u==="bilinear"){const _=Math.floor(R),M=Math.ceil(R),z=R-_;for(let B=0;B<g;B++){const V=g>1?S*(d-1)+B*A:.5*(S+F)*(d-1);if(V<0||V>d-1){for(let at=0;at<p;at++){const it=at+B*k[2]+T*k[1]+C*k[0];x.values[it]=l}continue}const G=Math.floor(V),j=Math.ceil(V),H=V-G;for(let at=0;at<p;at++){let it=at+G*v[2]+_*v[1]+D*v[0];const ft=y[it];it=at+j*v[2]+_*v[1]+D*v[0];const X=y[it];it=at+G*v[2]+M*v[1]+D*v[0];const ut=y[it];it=at+j*v[2]+M*v[1]+D*v[0];const wt=y[it],ot=ft+(X-ft)*H,Et=ut+(wt-ut)*H;it=at+B*k[2]+T*k[1]+C*k[0],x.values[it]=ot+(Et-ot)*z}}}else for(let _=0;_<g;++_){const M=g>1?S*(d-1)+_*A:.5*(S+F)*(d-1);if(M<0||M>d-1){for(let V=0;V<p;V++){const G=V+_*k[2]+T*k[1]+C*k[0];x.values[G]=l}continue}const z=Math.round(M),B=Math.round(R);for(let V=0;V<p;V++){const G=V+z*v[2]+B*v[1]+D*v[0],j=V+_*k[2]+T*k[1]+C*k[0];x.values[j]=y[G]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const Hlt={kernelName:Sk,backendName:"cpu",kernelFunc:Glt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qlt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:o,reverse:a}=s;Kt(r,"cumprod");const u=Cn([i],r.shape.length);let l=r;u!=null&&(l=xr({inputs:{x:r},backend:n,attrs:{perm:u}}));const c=Fn(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=_r(l.dtype,"int32"),d=hk(bt(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=a?(x,b)=>x+f-b-1:(x,b)=>x+b;for(let x=0;x<p.length;x+=f)for(let b=0;b<f;b++){const w=m(x,b);if(b===0)d[w]=o?1:p[w];else{const y=m(x,b-1);d[w]=o?p[y]*d[y]:p[w]*d[y]}}const g=n.makeTensorInfo(l.shape,h,d);if(u!=null){const x=cu(u),b=xr({inputs:{x:g},backend:n,attrs:{perm:x}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),b}return g}const jlt={kernelName:$k,backendName:"cpu",kernelFunc:qlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Klt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:o,reverse:a}=s;Kt(r,"cumsum");const u=Cn([i],r.shape.length);let l=r;u!=null&&(l=xr({inputs:{x:r},backend:n,attrs:{perm:u}}));const c=Fn(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=_r(l.dtype,"int32"),d=Bs(bt(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=a?(x,b)=>x+f-b-1:(x,b)=>x+b;for(let x=0;x<p.length;x+=f)for(let b=0;b<f;b++){const w=m(x,b);if(b===0)d[w]=o?0:p[w];else{const y=m(x,b-1);d[w]=o?p[y]+d[y]:p[w]+d[y]}}const g=n.makeTensorInfo(l.shape,h,d);if(u!=null){const x=cu(u),b=xr({inputs:{x:g},backend:n,attrs:{perm:x}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),b}return g}const Xlt={kernelName:o1,backendName:"cpu",kernelFunc:Klt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ylt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:o,binaryOutput:a}=s;if(r.shape.length===1){const u=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,c=f2(u,l,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,c)}else if(r.shape.length===2){const u=n.bufferSync(r),l=n.bufferSync(i),c=eL(u,l,o,a);return n.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const Zlt={kernelName:Nk,backendName:"cpu",kernelFunc:Ylt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jlt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:i,dataFormat:o}=s;O(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=r.shape[0],u=r.shape[1],l=r.shape[2],c=r.shape[3],h=u*i,d=l*i,p=c/(i*i),f=n.data.get(r.dataId).values,m=new Float32Array(a*h*d*p);let g=0;for(let x=0;x<a;++x)for(let b=0;b<h;++b){const w=Math.floor(b/i),y=b%i;for(let v=0;v<d;++v){const k=Math.floor(v/i),C=v%i,I=(y*i+C)*p;for(let $=0;$<p;++$){const S=$+I+c*(k+l*(w+u*x));m[g++]=f[S]}}}return n.makeTensorInfo([a,h,d,p],r.dtype,m)}const Qlt={kernelName:Ek,backendName:"cpu",kernelFunc:Jlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dilations:u,dimRoundingMode:l}=s;Kt([r,i],"depthwiseConv2DNative");const c=te(r.shape),h=te(i.shape);let d=u;d==null&&(d=[1,1]),O(Ws(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const p=$s(r.shape,i.shape,o,d,a,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:b}=p,w=b.left,y=b.top,v=p.outChannels/p.inChannels,k=new Ps(p.outShape,r.dtype),C=n.data.get(r.dataId).values,I=n.data.get(i.dataId).values,$=k.values;for(let S=0;S<p.batchSize;++S){const N=S*c[0],F=S*k.strides[0];for(let D=0;D<p.outHeight;++D){const E=F+D*k.strides[1],A=D*p.strideHeight-y;for(let T=0;T<f;++T){const R=A+T*g;if(R<0||R>=p.inHeight)continue;const _=T*h[0],M=N+R*c[1];for(let z=0;z<p.outWidth;++z){const B=E+z*k.strides[2],V=z*p.strideWidth-w;for(let G=0;G<m;++G){const j=V+G*x;if(j<0||j>=p.inWidth)continue;const H=_+G*h[1],at=M+j*p.inChannels;let it=B,ft=H;for(let X=0;X<p.inChannels;++X){const ut=C[at+X];for(let wt=0;wt<v;++wt)$[it+wt]+=ut*I[ft+wt];it+=v,ft+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const tct={kernelName:a1,backendName:"cpu",kernelFunc:n4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ect(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:o,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=s;Kt([r,i],"depthwiseConv2dNativeBackpropFilter");const h=$s(r.shape,c,o,a,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Ps(h.filterShape,"float32"),x=h.padInfo.left,b=h.padInfo.top,w=h.outChannels/h.inChannels,y=n.data.get(r.dataId).values,v=new Ps(r.shape,r.dtype,y),k=n.data.get(i.dataId).values,C=new Ps(i.shape,i.dtype,k);for(let I=0;I<f;++I){const $=Math.max(0,Math.ceil((b-I)/d)),S=Math.min(h.outHeight,(h.inHeight+b-I)/d);for(let N=0;N<m;++N){const F=Math.max(0,Math.ceil((x-N)/p)),D=Math.min(h.outWidth,(h.inWidth+x-N)/p);for(let E=0;E<h.outChannels;++E){const A=Math.trunc(E/w),T=E%w;let R=0;for(let _=0;_<h.batchSize;++_)for(let M=$;M<S;++M){const z=I+M*d-b;for(let B=F;B<D;++B){const V=N+B*p-x;R+=v.get(_,z,V,A)*C.get(_,M,B,E)}}g.set(R,I,N,A,T)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const nct={kernelName:Dk,backendName:"cpu",kernelFunc:ect};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sct(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{strides:o,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=s;Kt([r,i],"depthwiseConv2DNativeBackpropInput");const h=te(r.shape),d=te(i.shape),p=$s(c,i.shape,o,a,u,l,!0),f=new Ps(p.inShape,"float32"),m=f.values,[g,x,b]=f.strides,w=n.data.get(r.dataId).values,[y,v,k]=h,C=n.data.get(i.dataId).values,[I,$,S]=d,{batchSize:N,filterHeight:F,filterWidth:D,inChannels:E,inHeight:A,inWidth:T,outChannels:R,outHeight:_,outWidth:M,strideHeight:z,strideWidth:B}=p,V=F-1-p.padInfo.top,G=D-1-p.padInfo.left,j=R/E;for(let H=0;H<N;++H)for(let at=0;at<E;++at)for(let it=0;it<A;++it){const ft=it-V,X=Math.max(0,Math.ceil(ft/z)),ut=Math.min(_,(F+ft)/z);for(let wt=0;wt<T;++wt){const ot=wt-G,Et=Math.max(0,Math.ceil(ot/B)),Tt=Math.min(M,(D+ot)/B);let Rt=0;for(let _t=X;_t<ut;++_t){const kt=_t*z-ft;for(let Lt=Et;Lt<Tt;++Lt){const Ue=Lt*B-ot,he=y*H+v*_t+k*Lt,os=I*(F-1-kt)+$*(D-1-Ue)+S*at;for(let je=0;je<j;++je){const W=at*j+je,Q=w[he+W],lt=C[os+je];Rt+=Q*lt}}}m[g*H+x*it+b*wt+at]=Rt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const rct={kernelName:Tk,backendName:"cpu",kernelFunc:sct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ict(e){const{inputs:t,backend:n}=e,{x:s}=t,r=bt(s.shape),i=n.data.get(s.dataId).values,o=we([r,r],s.dtype),a=o.values;for(let l=0;l<i.length;l++)a[l*r+l]=i[l];const u=[...s.shape,...s.shape];return n.makeTensorInfo(u,o.dtype,o.values)}const oct={kernelName:NF,backendName:"cpu",kernelFunc:ict};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const act={kernelName:u1,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:i,pad:o,dilations:a}=n,u=t,l=u.data.get(s.dataId).values,c=s.shape.length,h=u.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:b,padInfo:w,strideHeight:y,strideWidth:v,filterHeight:k,filterWidth:C,dilationHeight:I,dilationWidth:$,outShape:S}=uf(s.shape,r.shape,i,o,"NHWC",a),N=bt(S),F=S.length,D=Bn(s.dtype,N);for(let E=0;E<p;++E)for(let A=0;A<x;++A){const T=A*y-w.top;for(let R=0;R<b;++R){const _=R*v-w.left;for(let M=0;M<g;++M){let z=Number.MIN_SAFE_INTEGER;for(let V=0;V<k;++V){const G=T+V*I;if(G>=0&&G<f)for(let j=0;j<C;++j){const H=_+j*$;if(H>=0&&H<m){const at=Mo([E,G,H,M],c,te(s.shape)),it=Mo([V,j,M],d,te(r.shape)),ft=l[at]+h[it];ft>z&&(z=ft)}}}const B=Mo([E,A,R,M],F,te(S));D[B]=z}}}return{dataId:u.write(dl(D,s.dtype),S,s.dtype),shape:S,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uct={kernelName:Fk,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:i}=e,{strides:o,pad:a,dilations:u}=n,l=t,c=Qi(s.shape,l.data.get(s.dataId).values),h=Qi(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:y,filterHeight:v,filterWidth:k,dilationHeight:C,dilationWidth:I,outShape:$}=uf(s.shape,r.shape,o,a,"NHWC",u);O(i.rank===$.length,()=>`Error in ${Fk}, dy must have the same rank as output ${$.length}, but got ${i.rank}`);const S=Qi($,l.data.get(i.dataId).values),N=kF(r.shape,r.dtype);for(let F=0;F<d;++F)for(let D=0;D<g;++D){const E=D*w-b.top;for(let A=0;A<x;++A){const T=A*y-b.left;for(let R=0;R<m;++R){let _=Number.MIN_SAFE_INTEGER,M=0,z=0;for(let B=0;B<v;++B){const V=E+B*C;if(V>=0&&V<p)for(let G=0;G<k;++G){const j=T+G*I;if(j>=0&&j<f){const H=c[F][V][j][R]+h[B][G][R];H>_&&(_=H,M=B,z=G)}}}N[M][z][R]+=S[F][D][A][R]}}}return{dataId:l.write(dl(N,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lct={kernelName:Ak,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:i}=e,{strides:o,pad:a,dilations:u}=n,l=t,c=Qi(s.shape,l.data.get(s.dataId).values),h=Qi(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:y,filterHeight:v,filterWidth:k,dilationHeight:C,dilationWidth:I,outShape:$}=uf(s.shape,r.shape,o,a,"NHWC",u);O(i.rank===$.length,()=>`Error in ${Ak}, dy must have the same rank as output ${$.length}, but got ${i.rank}`);const S=Qi($,l.data.get(i.dataId).values),N=kF(s.shape,s.dtype);for(let F=0;F<d;++F)for(let D=0;D<g;++D){const E=D*w-b.top;for(let A=0;A<x;++A){const T=A*y-b.left;for(let R=0;R<m;++R){let _=Number.MIN_SAFE_INTEGER,M=E<0?0:E,z=T<0?0:T;for(let B=0;B<v;++B){const V=E+B*C;if(V>=0&&V<p)for(let G=0;G<k;++G){const j=T+G*I;if(j>=0&&j<f){const H=c[F][V][j][R]+h[B][G][R];H>_&&(_=H,M=V,z=j)}}}N[F][M][z][R]+=S[F][D][A][R]}}}return{dataId:l.write(dl(N,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lf(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s;Kt(r,"sum");let a;r.dtype==="bool"?a=ku({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):a=jo({inputs:{x:r},backend:n});const u=a.shape.length,l=ye(i,a.shape),c=Cn(l,u);let h=l,d=a;c!=null&&(d=xr({inputs:{x:a},backend:n,attrs:{perm:c}}),h=Fn(h.length,u)),Ss("sum",h,d.shape.length);const[p,f]=hs(d.shape,h),m=_r(d.dtype,"int32");let g=Ux(n,p,m);const x=bt(f),b=n.data.get(g.dataId).values,w=n.data.get(d.dataId).values;for(let y=0;y<b.length;++y){const v=y*x;let k=0;for(let C=0;C<x;++C)k+=w[v+C];b[y]=k}if(o){const y=Wn(g.shape,l),v=g;g=nn({inputs:{x:g},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(v)}return n.disposeIntermediateTensorInfo(a),c!=null&&n.disposeIntermediateTensorInfo(d),g}const cct={kernelName:W1,backendName:"cpu",kernelFunc:Lf};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hct(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,i=t,{allDims:o,summedDims:a,idDims:u}=vC(r,i.length);IC(o.length,u,i);const{path:l,steps:c}=CC(a,u),h=c.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:x,expandDims:b}=kC(p,u[g]);let w;$C(x)?w=i[g]:(w=xr({inputs:{x:i[g]},backend:n,attrs:{perm:x}}),f.push(w));const y=w.shape.slice();for(let v=0;v<b.length;++v)y.splice(b[v],0,1);Le(w.shape,y)||(w=nn({inputs:{x:w},backend:n,attrs:{shape:y}}),f.push(w)),d===null?d=w:(d=Gx({inputs:{a:w,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=Lf({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const dct={kernelName:EF,backendName:"cpu",kernelFunc:hct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pct(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;Kt([s,r],"eluGrad");const i=new Float32Array(bt(r.shape)),o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values;for(let u=0;u<o.length;++u){const l=o[u];l>=1?i[u]=a[u]:i[u]=a[u]*(l+1)}return n.makeTensorInfo(r.shape,"float32",i)}const fct={kernelName:Rk,backendName:"cpu",kernelFunc:pct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mct=pC,gct=fC,xct=mC,bct=gC,yct=xC,wct=bC,vct=He(kp,e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+mct*n);return t*(1-((((wct*s+yct)*s+bct)*s+xct)*s+gct)*s*Math.exp(-n*n))}),kct={kernelName:kp,backendName:"cpu",kernelFunc:vct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jx(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:i}=s,o=r.shape.length,a=r.shape.slice();let u=i;return i<0&&(O(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+i+1),a.splice(u,0,1),nn({inputs:{x:r},backend:n,attrs:{shape:a}})}const Ict={kernelName:c1,backendName:"cpu",kernelFunc:jx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cct=Gn((e,t)=>e/t),w2=fs(wp,Cct),v2={kernelName:wp,backendName:"cpu",kernelFunc:w2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(e,t,n){const s=e.shape,r=s[0],i=s[1],o=n.data.get(e.dataId),a=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,l=[r,i],c=bt(l),h=Cs("float32",c),d=Cs("float32",c);for(let g=0;g<r;g++){const x=zl({inputs:{x:a},backend:n,attrs:{begin:[g,0],size:[1,i]}}),b=zl({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,i]}}),w=zr({inputs:{real:x,imag:b},backend:n}),{real:y,imag:v}=$ct(w,t,n),k=Ta(y,v);for(let C=0;C<i;C++){const I=yC(k,C);h[g*i+C]=I.real,d[g*i+C]=I.imag}n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(w)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=zr({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function $ct(e,t,n){const s=bt(e.shape),r=n.data.get(e.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(Sct(s)){const a=k2(i,o,s,t,n),u=[e.shape[0],e.shape[1]];if(t){const l=n.makeTensorInfo(u,"float32",a.real),c=n.makeTensorInfo(u,"float32",a.imag),h=n.makeTensorInfo([],"float32",iu(s,"float32")),d=jo({inputs:{x:h},backend:n}),p=v2.kernelFunc({inputs:{a:l,b:h},backend:n}),f=v2.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(p.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return a}else{const a=Ta(i,o),u=Nct(a,s,t);return V_(u)}}function Sct(e){return(e&e-1)===0}function k2(e,t,n,s,r){if(n===1)return{real:e,imag:t};const i=Ta(e,t),o=n/2,a=U_(i),u=a.real,l=a.imag,c=[u.length],h=r.makeTensorInfo(c,"float32",u),d=r.makeTensorInfo(c,"float32",l),p=zr({inputs:{real:h,imag:d},backend:r}),f=G_(i),m=f.real,g=f.imag,x=[m.length],b=r.makeTensorInfo(x,"float32",m),w=r.makeTensorInfo(x,"float32",g),y=zr({inputs:{real:b,imag:w},backend:r}),v=k2(u,l,o,s,r),k=v.real,C=v.imag,I=[k.length],$=r.makeTensorInfo(I,"float32",k),S=r.makeTensorInfo(I,"float32",C),N=zr({inputs:{real:$,imag:S},backend:r}),F=k2(m,g,o,s,r),D=F.real,E=F.imag,A=[D.length],T=r.makeTensorInfo(A,"float32",D),R=r.makeTensorInfo(A,"float32",E),_=zr({inputs:{real:T,imag:R},backend:r}),M=q_(n,s),z=[M.real.length],B=r.makeTensorInfo(z,"float32",M.real),V=r.makeTensorInfo(z,"float32",M.imag),G=zr({inputs:{real:B,imag:V},backend:r}),j=Gx({inputs:{a:G,b:_},backend:r}),H=Ch({inputs:{a:N,b:j},backend:r}),at=b2({inputs:{a:N,b:j},backend:r}),it=Ll({inputs:{input:H},backend:r}),ft=Ll({inputs:{input:at},backend:r}),X=Nh({inputs:{input:H},backend:r}),ut=Nh({inputs:{input:at},backend:r}),wt=Eh({inputs:[it,ft],backend:r,attrs:{axis:0}}),ot=Eh({inputs:[X,ut],backend:r,attrs:{axis:0}}),Et=r.data.get(wt.dataId).values,Tt=r.data.get(ot.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(at),r.disposeIntermediateTensorInfo(it),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(ft),r.disposeIntermediateTensorInfo(ut),r.disposeIntermediateTensorInfo(wt),r.disposeIntermediateTensorInfo(ot),{real:Et,imag:Tt}}function Nct(e,t,n){const s=new Float32Array(t*2);for(let r=0;r<t;r++){let i=0,o=0;for(let a=0;a<t;a++){const u=j_(r*a,t,n),l=yC(e,a);i+=l.real*u.real-l.imag*u.imag,o+=l.real*u.imag+l.imag*u.real}n&&(i/=t,o/=t),H_(s,i,o,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ect(e){const{inputs:t,backend:n}=e,{input:s}=t,r=bt(s.shape),i=s.shape[s.shape.length-1],o=r/i,a=nn({inputs:{x:s},backend:n,attrs:{shape:[o,i]}}),u=s4(a,!1,n),l=nn({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}const Dct={kernelName:_k,backendName:"cpu",kernelFunc:Ect};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I2(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:i}=n,o=i||ap(r),a=Bn(o,bt(s));return Act(a,r),t.makeTensorInfo(s,o,a)}const Tct={kernelName:Mk,backendName:"cpu",kernelFunc:I2};function Act(e,t,n){e.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fct={kernelName:Ok,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,i=Cs(s.dtype,bt(s.shape)),[o,a,u,l]=s.shape,c=r.data.get(s.dataId).values;for(let h=0;h<o;h++){const d=h*u*a*l;for(let p=0;p<a;p++){const f=p*(u*l);for(let m=0;m<u;m++){const g=m*l;for(let x=0;x<l;x++){const b=Math.round(u-m-1),w=d+f+g+x;let y=c[w];if(b>=0&&b<u){const v=b*l,k=d+f+v+x;y=c[k]}i[w]=y}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rct=Gn((e,t)=>Math.floor(e/t)),_ct=fs(Sp,Rct,null,"int32"),Mct={kernelName:Sp,backendName:"cpu",kernelFunc:_ct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oct(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:o,preluActivationWeights:a}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=e4({inputs:{x:r,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(o){const g=m;if(c==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){const x=nn({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Ch({inputs:{a:m,b:x},backend:n}),n.disposeIntermediateTensorInfo(x)}else m=Ch({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(c==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const x=nn({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=qx(n,m,p,x,f),n.disposeIntermediateTensorInfo(x)}else m=qx(n,m,p,a,f);n.disposeIntermediateTensorInfo(g)}return m}const Lct={kernelName:X1,backendName:"cpu",kernelFunc:Oct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zct(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:o,preluActivationWeights:a}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=n4({inputs:{x:r,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(o){const g=m;m=Ch({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=qx(n,m,p,a,f),n.disposeIntermediateTensorInfo(g)}return m}const Bct={kernelName:qF,backendName:"cpu",kernelFunc:zct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pct(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,i=bt(s.shape),o=r.shape,a=o[o.length-1],[u,l,c,h]=eC(s,r);if(l===0)return n.makeTensorInfo(u,s.dtype,[]);const d=n.data.get(r.dataId).values,p=n.bufferSync(s),f=cL(d,p,s.dtype,l,a,c,h,s.shape,i);return n.makeTensorInfo(u,s.dtype,f.values)}const Wct={kernelName:DF,backendName:"cpu",kernelFunc:Pct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vct(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:i}=t,{axis:o,batchDims:a}=s;Kt([r,i],"gatherV2");const u=ye(o,r.shape)[0],l=n.data.get(i.dataId).values,c=r.shape[u];for(let y=0;y<l.length;++y){const v=l[y];O(v<=c-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${c-1}]`)}let h=a;a==null&&(h=0);const d=bt(i.shape),p=EC(r,i,u,h),f=nn({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=nn({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=n.bufferSync(m),b=n.bufferSync(f),w=hL(b,x,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,w.dtype,w.values)}const Uct={kernelName:d1,backendName:"cpu",kernelFunc:Vct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gct(e){const{inputs:t,backend:n}=e,{input:s}=t,r=bt(s.shape),i=s.shape[s.shape.length-1],o=r/i,a=nn({inputs:{x:s},backend:n,attrs:{shape:[o,i]}}),u=s4(a,!0,n),l=nn({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}const Hct={kernelName:Lk,backendName:"cpu",kernelFunc:Gct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qct=He(Dp,e=>Number.isFinite(e)?1:0,"bool"),jct={kernelName:Dp,backendName:"cpu",kernelFunc:qct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kct=He(Tp,e=>Math.abs(e)===1/0?1:0,"bool"),Xct={kernelName:Tp,backendName:"cpu",kernelFunc:Kct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yct=He(Ap,e=>Number.isNaN(e)?1:0,"bool"),Zct={kernelName:Ap,backendName:"cpu",kernelFunc:Yct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jct(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:i}=n,o=gL(s,r,i);return t.makeTensorInfo([o.length],"float32",o)}const Qct={kernelName:TF,backendName:"cpu",kernelFunc:Jct};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tht=He(Rp,e=>Math.log1p(e)),eht={kernelName:Rp,backendName:"cpu",kernelFunc:tht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nht=Gn((e,t)=>e&&t),sht=fs(x1,nht,null,"bool"),rht={kernelName:x1,backendName:"cpu",kernelFunc:sht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iht=He(b1,e=>e?0:1,"bool"),oht={kernelName:b1,backendName:"cpu",kernelFunc:iht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aht=Gn((e,t)=>e||t),uht=fs(y1,aht,null,"bool"),lht={kernelName:y1,backendName:"cpu",kernelFunc:uht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cht(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:i,bias:o,alpha:a,beta:u}=s;Kt(r,"LRN");const l=r.shape[3],c=l-1,h=n.data.get(r.dataId).values,d=bt(r.shape),p=new Float32Array(d);function f(m){const g=m%l;let x=m-g+Math.max(0,g-i);const b=m-g+Math.min(g+i,c);let w=0;for(;x<=b;x++){const y=h[x];w+=y*y}return w}for(let m=0;m<d;m++){const g=f(m),x=h[m]*Math.pow(o+a*g,-u);p[m]=x}return n.makeTensorInfo(r.shape,r.dtype,p)}const hht={kernelName:w1,backendName:"cpu",kernelFunc:cht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dht(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:i,dy:o}=t,{depthRadius:a,bias:u,alpha:l,beta:c}=s;Kt(o,"LRNGrad");const h=bt(o.shape),d=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(h),x=h;for(let b=0;b<x;b++){const w=b%d,y=b-w+Math.max(0,w-a),v=b-w+Math.min(d,w+a+1);let k=0;for(let C=y;C<v;C++)k+=Math.pow(f[C],2);k=l*k+u;for(let C=y;C<v;C++){let I=-2*l*c*f[C]*m[b]/k;b===C&&(I+=Math.pow(k,-c)),I*=p[b],g[C]+=I}}return n.makeTensorInfo(o.shape,r.dtype,g)}const pht={kernelName:Bk,backendName:"cpu",kernelFunc:dht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:i,keepDims:o}=s,a=n;let u=r.shape;const l=u.length,c=ye(i,u);let h=c;const d=Cn(h,l);let p=a.data.get(r.dataId).values;if(d!=null){const y=new Array(l);for(let v=0;v<y.length;v++)y[v]=u[d[v]];p=g2(p,u,r.dtype,d,y),h=Fn(h.length,l),u=y}Kt(r,"max"),Ss("max",h,l);const[f,m]=hs(u,h),g=bt(m),x=bL(p,g,f,r.dtype),b=a.write(x,f,r.dtype);let w=f;return o&&(w=Wn(f,c)),{dataId:b,shape:w,dtype:r.dtype}}const fht={kernelName:v1,backendName:"cpu",kernelFunc:r4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mht(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Kt(r,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=s,l=1;O(Ws(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=vi(r.shape,i,o,l,a,u);let h;if(c.filterWidth===1&&c.filterHeight===1&&Le(c.inShape,c.outShape))h=jo({inputs:{x:r},backend:n});else{const d=n.data.get(r.dataId).values,p=te(r.shape),f=y2(d,r.shape,r.dtype,p,c,"max");h=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const ght={kernelName:k1,backendName:"cpu",kernelFunc:mht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xht(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=s;Kt(r,"maxPool3d");const c=Sa(r.shape,i,o,1,a,u,l),h=n.data.get(r.dataId).values,d=t4(h,r.shape,r.dtype,te(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}const bht={kernelName:I1,backendName:"cpu",kernelFunc:xht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yht(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,{filterSize:o,strides:a,pad:u,dimRoundingMode:l}=s;Kt([r,i],"maxPool3DGrad");const c=Sa(i.shape,o,a,1,u,l),h=n.bufferSync(i),d=olt(h,c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,x=c.dilationHeight,b=c.dilationWidth,w=c.effectiveFilterDepth,y=c.effectiveFilterHeight,v=c.effectiveFilterWidth,k=w-1-c.padInfo.front,C=v-1-c.padInfo.left,I=y-1-c.padInfo.top,$=we(i.shape,"float32"),S=n.bufferSync(r);for(let N=0;N<c.batchSize;++N)for(let F=0;F<c.inChannels;++F)for(let D=0;D<c.inDepth;++D)for(let E=0;E<c.inHeight;++E)for(let A=0;A<c.inWidth;++A){const T=D-k,R=E-I,_=A-C;let M=0;for(let z=0;z<w;z+=g){const B=(T+z)/p;if(!(B<0||B>=c.outDepth||Math.floor(B)!==B))for(let V=0;V<y;V+=x){const G=(R+V)/f;if(!(G<0||G>=c.outHeight||Math.floor(G)!==G))for(let j=0;j<v;j+=b){const H=(_+j)/m;if(H<0||H>=c.outWidth||Math.floor(H)!==H)continue;const at=w*y*v-1-d.get(N,B,G,H,F),it=z*y*v+V*v+j,ft=at===it?1:0;if(ft===0)continue;const X=S.get(N,B,G,H,F);M+=X*ft}}}$.set(M,N,D,E,A,F)}return n.makeTensorInfo($.shape,$.dtype,$.values)}const wht={kernelName:Wk,backendName:"cpu",kernelFunc:yht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vht(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i,output:o}=t,a=i;Kt([i,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,d=vi(a.shape,u,l,1,c,h),p=n.data.get(a.dataId).values,f=we(d.outShape,a.dtype,QL(p,a.shape,a.dtype,d).values),m=d.strideHeight,g=d.strideWidth,x=d.dilationHeight,b=d.dilationWidth,w=d.effectiveFilterHeight,y=d.effectiveFilterWidth,v=y-1-d.padInfo.left,k=w-1-d.padInfo.top,C=we(a.shape,"float32"),I=n.data.get(r.dataId).values,$=we(r.shape,"float32",I);for(let S=0;S<d.batchSize;++S)for(let N=0;N<d.inChannels;++N)for(let F=0;F<d.inHeight;++F)for(let D=0;D<d.inWidth;++D){const E=F-k,A=D-v;let T=0;for(let R=0;R<w;R+=x){const _=(E+R)/m;if(!(_<0||_>=d.outHeight||Math.floor(_)!==_))for(let M=0;M<y;M+=b){const z=(A+M)/g;if(z<0||z>=d.outWidth||Math.floor(z)!==z)continue;const B=w*y-1-f.get(S,_,z,N),V=R*y+M,G=B===V?1:0;if(G===0)continue;const j=$.get(S,_,z,N);T+=j*G}}C.set(T,S,F,D,N)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const kht={kernelName:Pk,backendName:"cpu",kernelFunc:vht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iht(e,t,n,s,r){const i=te(t),o=y2(e,t,n,i,r,"max"),a=QL(e,t,n,r,!0,s);return[o.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cht={kernelName:AF,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:i,pad:o,includeBatchInIndex:a}=t,u=n;Kt(s,"MaxPoolWithArgmax");const l=u.data.get(s.dataId).values,c=vi(s.shape,r,i,[1,1],o),[h,d]=Iht(l,s.shape,s.dtype,a,c),p=u.write(h,c.outShape,s.dtype),f=u.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ht(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s,a=ye(i,r.shape),u=hs(r.shape,a)[1],l=bt(u),c=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(h);const d=ku({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});c.push(d);const p=w2({inputs:{a:d,b:h},backend:n});c.push(p);const f=Lf({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:o}});return c.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const Sht={kernelName:C1,backendName:"cpu",kernelFunc:$ht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nht(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s;Kt(r,"min");const a=ye(i,r.shape);let u=a;const l=Cn(u,r.shape.length);let c=r;l!=null&&(c=xr({inputs:{x:r},backend:n,attrs:{perm:l}}),u=Fn(u.length,r.shape.length)),Ss("min",u,c.shape.length);const[h,d]=hs(c.shape,u),p=bt(d),f=Bs(bt(h),c.dtype),m=n.data.get(c.dataId).values;for(let x=0;x<f.length;++x){const b=x*p;let w=m[b];for(let y=0;y<p;++y){const v=m[b+y];(Number.isNaN(v)||v<w)&&(w=v)}f[x]=w}l!=null&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const x=Wn(h,a),b=nn({inputs:{x:g},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(g),b}return g}const Eht={kernelName:$1,backendName:"cpu",kernelFunc:Nht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dht(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,mode:o}=s;Kt(r,"mirrorPad");const a=i.map((b,w)=>b[0]+r.shape[w]+b[1]),u=i.map(b=>b[0]),l=i.map((b,w)=>b[0]+r.shape[w]),c=o==="reflect"?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=te(r.shape),f=bt(a),m=a.length,g=te(a),x=Cs(r.dtype,f);for(let b=0;b<f;b++){let w=eh(b,m,g);for(let v=0;v<m;v++)w[v]<u[v]?w[v]=u[v]*2-w[v]-c:w[v]>=l[v]&&(w[v]=(l[v]-1)*2-w[v]+c);w=w.map((v,k)=>v-u[k]);const y=Mo(w,d,p);x[b]=h[y]}return{dataId:n.write(x,a,r.dtype),shape:a,dtype:r.dtype}}const Tht={kernelName:S1,backendName:"cpu",kernelFunc:Dht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aht=Gn((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),Fht=fs(Op,Aht),Rht={kernelName:Op,backendName:"cpu",kernelFunc:Fht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:i}=s,o=r.shape.length;let a=i;if(a===-1&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const u=ye([a],r.shape),l=r4({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Wn(l.shape,u),h=nn({inputs:{x:l},backend:n,attrs:{shape:c}}),d=b2({inputs:{a:r,b:h},backend:n}),p=aL({inputs:{x:d},backend:n}),f=Lf({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=nn({inputs:{x:f},backend:n,attrs:{shape:c}}),g=w2({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const _ht={kernelName:G1,backendName:"cpu",kernelFunc:i4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mht(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:i,seed:o,normalized:a}=s;Kt(r,"multinomial");const u=a?r:i4({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,i],p=Bs(bt(d),"int32");for(let f=0;f<l;++f){const m=f*c,g=new Float32Array(c-1);g[0]=h[m];for(let w=1;w<g.length;++w)g[w]=g[w-1]+h[m+w];const x=Jv.alea(o.toString()),b=f*i;for(let w=0;w<i;++w){const y=x();p[b+w]=g.length;for(let v=0;v<g.length;v++)if(y<g[v]){p[b+w]=v;break}}}return a||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}const Oht={kernelName:FF,backendName:"cpu",kernelFunc:Mht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lht=XI;function zht(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=s;Kt(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=Lht(l,c,o,a,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Bht={kernelName:Vk,backendName:"cpu",kernelFunc:zht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pht=YI;function Wht(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=s;Kt(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=Pht(c,h,o,a,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const Vht={kernelName:Uk,backendName:"cpu",kernelFunc:Wht};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uht=ZI;function Ght(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=s;Kt(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=o,p=a,f=u,m=l,{selectedIndices:g,selectedScores:x}=Uht(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const Hht={kernelName:Gk,backendName:"cpu",kernelFunc:Ght};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qht(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:i,depth:o,onValue:a,offValue:u}=s;Kt(r,"oneHot");const l=bt(r.shape),c=new Float32Array(l*o);c.fill(u);const h=n.data.get(r.dataId).values;for(let d=0;d<l;++d)h[d]>=0&&h[d]<o&&(c[d*o+h[d]]=a);return n.makeTensorInfo([...r.shape,o],i,c)}const jht={kernelName:T1,backendName:"cpu",kernelFunc:qht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kx(e){const{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Ll({inputs:{input:s},backend:n}),i=Kx({inputs:{x:r},backend:n}),o=Nh({inputs:{input:s},backend:n}),a=Kx({inputs:{x:o},backend:n}),u=zr({inputs:{real:i,imag:a},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),u}else return I2({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const Kht={kernelName:j1,backendName:"cpu",kernelFunc:Kx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(e){const{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Ll({inputs:{input:s},backend:n}),i=o4({inputs:{x:r},backend:n}),o=Nh({inputs:{input:s},backend:n}),a=Kx({inputs:{x:o},backend:n}),u=zr({inputs:{real:i,imag:a},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),u}else return I2({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const Xht={kernelName:D1,backendName:"cpu",kernelFunc:o4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return jx({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const i=t[0].shape,o=t[0].dtype;t.forEach(c=>{ok(i,c.shape,"All tensors passed to stack must have matching shapes"),O(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=t.map(c=>{const h=jx({inputs:{input:c},backend:n,attrs:{dim:r}});return a.push(h),h}),l=Eh({inputs:u,backend:n,attrs:{axis:r}});return a.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}const Yht={kernelName:A1,backendName:"cpu",kernelFunc:a4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zht(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,constantValue:o}=s;Kt(r,"pad");const a=i.map((x,b)=>x[0]+r.shape[b]+x[1]),u=i.map(x=>x[0]),l=n.data.get(r.dataId).values,c=bt(r.shape),h=r.shape.length,d=te(r.shape),p=bt(a),f=a.length,m=te(a),g=Cs(r.dtype,p);o!==0&&g.fill(o);for(let x=0;x<c;x++){const b=eh(x,h,d).map((y,v)=>y+u[v]),w=Mo(b,f,m);g[w]=l[x]}return{dataId:n.write(g,a,r.dtype),shape:a,dtype:r.dtype}}const u4={kernelName:F1,backendName:"cpu",kernelFunc:Zht};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jht=Gn((e,t)=>Math.pow(e,t)),Qht=fs(zp,Jht),tdt={kernelName:zp,backendName:"cpu",kernelFunc:Qht};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function edt(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:o}=t,a=r.map(g=>n.data.get(g.dataId).values),u=r.map(g=>g.shape),l=n.data.get(i.dataId).values,c=n.data.get(o.dataId).values,[h,d,p]=$L(a,u,l,i.shape,i.dtype,c,o.shape),f=h.map(g=>n.makeTensorInfo([g.length],"int32",g)),m=n.makeTensorInfo(p,i.dtype,d);return f.concat([m])}const ndt={kernelName:RF,backendName:"cpu",kernelFunc:edt};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sdt(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:i}=t,o=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,[l,c]=NL(o,s.shape,s.dtype,a,r.shape,u,i.shape),h=n.makeTensorInfo([l.length],"int32",l),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const rdt={kernelName:_F,backendName:"cpu",kernelFunc:sdt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function idt(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:i,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:u}=s,l=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,d=a.map(g=>n.data.get(g.dataId).values),p=a.map(g=>g.shape),[f,m]=TL(l,r.shape,c,i.shape,i.dtype,h,o.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,m)}const odt={kernelName:MF,backendName:"cpu",kernelFunc:idt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function adt(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:i,step:o}=n,a=AL(s,r,o,i);return t.makeTensorInfo([a.length],i,a)}const udt={kernelName:Hk,backendName:"cpu",kernelFunc:adt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ldt=He(Bp,e=>1/e),cdt={kernelName:Bp,backendName:"cpu",kernelFunc:ldt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hdt(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:o,size:a}=s;Kt(r,"resizeBilinear");const u=te(r.shape),[l,c]=a,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(bt([h,l,c,f])),x=[i&&l>1?d-1:d,i&&c>1?p-1:p],b=[i&&l>1?l-1:l,i&&c>1?c-1:c];let w=0;const y=x[0]/b[0],v=x[1]/b[1];for(let k=0;k<h;k++)for(let C=0;C<l;C++){let I;o?I=y*(C+.5)-.5:I=y*C;const $=Math.max(0,Math.floor(I)),S=I-$,N=Math.min(d-1,Math.ceil(I)),F=k*u[0]+$*u[1],D=k*u[0]+N*u[1];for(let E=0;E<c;E++){let A;o?A=v*(E+.5)-.5:A=v*E;const T=Math.max(0,Math.floor(A)),R=A-T,_=Math.min(p-1,Math.ceil(A)),M=F+T*u[2],z=D+T*u[2],B=F+_*u[2],V=D+_*u[2];for(let G=0;G<f;G++){const j=m[M+G],H=m[z+G],at=m[B+G],it=m[V+G],ft=j+(at-j)*R,X=H+(it-H)*R,ut=ft+(X-ft)*S;g[w++]=ut}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}const ddt={kernelName:L1,backendName:"cpu",kernelFunc:hdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pdt(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:o}=s;Kt([i,r],"resizeBilinearGrad");const a=te(r.shape),[u,l,c,h]=r.shape,[,d,p]=i.shape,f=new Float32Array(u*l*c*h),m=[o&&d>1?l-1:l,o&&p>1?c-1:c],g=[o&&d>1?d-1:d,o&&p>1?p-1:p],x=m[0]/g[0],b=m[1]/g[1],w=n.data.get(i.dataId).values;let y=0;for(let v=0;v<u;v++){const k=v*a[0];for(let C=0;C<d;C++){const I=C*x,$=Math.floor(I),S=Math.min(Math.ceil(I),l-1),N=k+$*a[1],F=k+S*a[1],D=I-$,E=1-D;for(let A=0;A<p;A++){const T=A*b,R=Math.floor(T),_=Math.min(Math.ceil(T),c-1),M=T-R,z=1-M,B=N+R*a[2],V=N+_*a[2],G=F+R*a[2],j=F+_*a[2],H=E*z,at=E*M,it=D*z,ft=D*M;for(let X=0;X<h;X++){const ut=w[y++];f[B+X]+=ut*H,f[V+X]+=ut*at,f[G+X]+=ut*it,f[j+X]+=ut*ft}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}const fdt={kernelName:Kk,backendName:"cpu",kernelFunc:pdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mdt(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:o,size:a}=s;Kt(r,"resizeNearestNeighbor");const u=te(r.shape),[l,c]=a,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*l*c*f),x=[i&&l>1?d-1:d,i&&c>1?p-1:p],b=[i&&l>1?l-1:l,i&&c>1?c-1:c],w=x[0]/b[0],y=x[1]/b[1];let v=0;for(let k=0;k<h;k++){const C=k*u[0];for(let I=0;I<l;I++){const $=o?w*(I+.5):w*I;let S=Math.min(d-1,i?Math.round($):Math.floor($));o&&(S=Math.max(0,S));const N=C+S*u[1];for(let F=0;F<c;F++){const D=o?y*(F+.5):y*F;let E=Math.min(p-1,i?Math.round(D):Math.floor(D));o&&(E=Math.max(0,E));const A=N+E*u[2];for(let T=0;T<f;T++){const R=m[A+T];g[v++]=R}}}}return n.makeTensorInfo([h,l,c,f],r.dtype,g)}const gdt={kernelName:O1,backendName:"cpu",kernelFunc:mdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xdt(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:o}=s;Kt([i,r],"resizeNearestNeighborGrad");const a=te(r.shape),u=te(i.shape),[l,c,h,d]=r.shape,[,p,f]=i.shape,m=new Float32Array(l*c*h*d),g=n.data.get(i.dataId).values,x=[o&&p>1?c-1:c,o&&f>1?h-1:h],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],w=x[0]/b[0],y=x[1]/b[1],v=1/w,k=1/y,C=Math.ceil(v)*2+2,I=Math.ceil(k)*2+2;for(let $=0;$<l;$++){const S=$*a[0];for(let N=0;N<c;N++){const F=S+N*a[1],D=Math.floor(N*v),E=Math.floor(D-C/2);for(let A=0;A<h;A++){const T=F+A*a[2],R=Math.floor(A*k),_=Math.floor(R-I/2);for(let M=0;M<d;M++){let z=0;for(let B=0;B<C;B++){const V=B+E;if(V<0||V>=p)continue;const G=S+V*u[1],j=V*w,H=Math.min(c-1,o?Math.round(j):Math.floor(j));if(N===H)for(let at=0;at<I;at++){const it=at+_;if(it<0||it>=f)continue;const ft=G+it*u[2],X=it*y,ut=Math.min(h-1,o?Math.round(X):Math.floor(X));A===ut&&(z+=g[ft+M])}}m[T+M]=z}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}const bdt={kernelName:jk,backendName:"cpu",kernelFunc:xdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ydt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:i}=s;Kt(r,"reverse");const o=r.shape.length,a=ye(i,r.shape);if(o===0)return jo({inputs:{x:r},backend:n});const u=new Ps(r.shape,r.dtype),l=n.bufferSync(r);for(let c=0;c<u.size;c++){const h=u.indexToLoc(c),d=h.slice();a.forEach(p=>d[p]=r.shape[p]-1-d[p]),u.set(l.get(...d),...h)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}const wdt={kernelName:z1,backendName:"cpu",kernelFunc:ydt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vdt={kernelName:tI,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:i,center:o}=t,a=n,u=Cs(s.dtype,bt(s.shape)),[l,c,h,d]=s.shape,[p,f]=cC(o,c,h),m=255,g=Math.sin(r),x=Math.cos(r),b=a.data.get(s.dataId).values;for(let w=0;w<l;w++){const y=w*h*c*d;for(let v=0;v<c;v++){const k=v*(h*d);for(let C=0;C<h;C++){const I=C*d;for(let $=0;$<d;$++){const S=[l,v,C,$],N=S[2],F=S[1];let D=(N-p)*x-(F-f)*g,E=(N-p)*g+(F-f)*x;D=Math.round(D+p),E=Math.round(E+f);let A=i;if(typeof i!="number"&&($===3?A=m:A=i[$]),D>=0&&D<h&&E>=0&&E<c){const R=E*(h*d),_=D*d,M=y+R+_+$;A=b[M]}const T=y+k+I+$;u[T]=A}}}}return{dataId:a.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kdt=He(Vp,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),Idt={kernelName:Vp,backendName:"cpu",kernelFunc:kdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cdt(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:i}=t,{shape:o}=s,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=gf(i,r,o),d=!0,p=n.bufferSync(r),f=n.bufferSync(i),m=Sh(p,f,o,h,l,u,a,c,0,d);return n.makeTensorInfo(o,m.dtype,m.values)}const $dt={kernelName:OF,backendName:"cpu",kernelFunc:Cdt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sdt(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function Ndt(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}function Edt(e,t,n,s,r,i){const o=Bn("int32",n*r);for(let a=0;a<n;++a){const u=e.slice(a*s,(a+1)*s),l=a*r;for(let c=0;c<r;++c)o[l+c]=i==="left"?Sdt(u,t[c+l]):Ndt(u,t[c+l])}return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ddt(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:i}=t,{side:o}=s,a=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,l=Edt(a,u,r.shape[0],r.shape[1],i.shape[1],o);return n.makeTensorInfo(i.shape,"int32",l)}const Tdt={kernelName:LF,backendName:"cpu",kernelFunc:Ddt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Adt(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:i}=t;Kt([s,r,i],"select");const o=s.shape.length,a=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,c=_r(r.dtype,i.dtype),h=Bs(bt(r.shape),c);let d=0;const p=o===0||o>1||r.shape.length===1?1:bt(r.shape.slice(1));for(let f=0;f<a.length;f++)for(let m=0;m<p;m++)a[f]===1?h[d++]=u[f]:h[d++]=l[f];return n.makeTensorInfo(r.shape,c,h)}const Fdt={kernelName:B1,backendName:"cpu",kernelFunc:Adt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rdt=xx,_dt=bx,Mdt=He(Gp,e=>e>=0?_dt*e:Rdt*(Math.exp(e)-1)),Odt={kernelName:Gp,backendName:"cpu",kernelFunc:Mdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ldt=He(jp,e=>e<0?-1:e>0?1:0),zdt={kernelName:jp,backendName:"cpu",kernelFunc:Ldt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bdt=He(Hp,e=>Math.sin(e)),Pdt={kernelName:Hp,backendName:"cpu",kernelFunc:Bdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wdt=He(qp,e=>Math.sinh(e)),Vdt={kernelName:qp,backendName:"cpu",kernelFunc:Wdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Udt=11920928955078125e-23,l4=Math.log(Udt)+2,Gdt=He(Xp,e=>{const t=e>-l4,n=e<l4,s=Math.exp(e);let r;return n?r=s:t?r=e:r=Math.log(1+s),r}),Hdt={kernelName:Xp,backendName:"cpu",kernelFunc:Gdt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qdt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,paddings:o}=s;Kt([r],"spaceToBatchND");const a=bt(i),u=[[0,0]];u.push(...o);for(let g=1+i.length;g<r.shape.length;++g)u.push([0,0]);const l=u4.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=xf(l.shape,i,a,!1),h=bf(c.length,i.length,!1),d=yf(l.shape,i,a,!1),p=nn({inputs:{x:l},backend:n,attrs:{shape:c}}),f=xr({inputs:{x:p},backend:n,attrs:{perm:h}}),m=nn({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const jdt={kernelName:V1,backendName:"cpu",kernelFunc:qdt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kdt(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:i,defaultValue:o}=t;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,c=n.data.get(o.dataId).values[0],[h,d,p,f,m]=ML(a,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const Xdt={kernelName:zF,backendName:"cpu",kernelFunc:Kdt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ydt(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:i}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(n.data.get(r.dataId).values),a=n.data.get(s.dataId).values,u=Array.from(n.data.get(i.dataId).values),[l,c,h]=OL(a,s.shape,s.dtype,o,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const Zdt={kernelName:BF,backendName:"cpu",kernelFunc:Ydt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jdt(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,[l,c]=x2(o,s.shape,s.dtype,a,u,!0);return n.makeTensorInfo(c,s.dtype,l)}const Qdt={kernelName:PF,backendName:"cpu",kernelFunc:Jdt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tpt(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,[l,c]=x2(o,s.shape,s.dtype,a,u);return n.makeTensorInfo(c,s.dtype,l)}const ept={kernelName:WF,backendName:"cpu",kernelFunc:tpt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function npt(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:i,defaultValue:o}=t,{outputShape:a}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=gf(i,r,a),p=!1,f=n.bufferSync(r);let m;switch(i.dtype){case"bool":{const g=n.bufferSync(i),x=Boolean(n.data.get(o.dataId).values[0]);m=Sh(f,g,a,d,c,l,u,h,x,p);break}case"float32":{const g=n.bufferSync(i),x=n.data.get(o.dataId).values[0];m=Sh(f,g,a,d,c,l,u,h,x,p);break}case"int32":{const g=n.bufferSync(i),x=n.data.get(o.dataId).values[0];m=Sh(f,g,a,d,c,l,u,h,x,p);break}case"string":{const g=n.bufferSync(i),x=au(n.data.get(o.dataId).values[0]);m=Sh(f,g,a,d,c,l,u,h,x,p);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(a,m.dtype,m.values)}const spt={kernelName:VF,backendName:"cpu",kernelFunc:npt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rpt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:i,axis:o}=s,a=ye(o,r.shape)[0],u=SC(r,i,a),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map(h=>{const d=[...c];d[a]=h;const p=zl({inputs:{x:r},backend:n,attrs:{begin:l,size:d}});return l[a]+=h,p})}const ipt={kernelName:U1,backendName:"cpu",kernelFunc:rpt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const opt={kernelName:Xk,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;Kt(n,"square");const r=s.data.get(n.dataId).values,i=new Float32Array(r.length);for(let o=0;o<r.length;++o){const a=r[o];i[o]=a*a}return{dataId:s.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const apt=He(nf,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),upt={kernelName:nf,backendName:"cpu",kernelFunc:apt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lpt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,end:o,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;Kt(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:y}=aC(r.shape,i,o,a,u,l,c,h,d);let v;if(m)v=nn({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||x){O(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const k=rC(b,w,y),C=zl({inputs:{x:r},backend:n,attrs:{begin:b,size:k}});v=nn({inputs:{x:C},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(C)}else{const k=n.bufferSync(r),C=zL(p,k,y,b);v=n.makeTensorInfo(f,C.dtype,C.values)}return v}const cpt={kernelName:Yk,backendName:"cpu",kernelFunc:lpt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hpt(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:i,leftPad:o,rightPad:a,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=BL(d,p,r,i,o,a,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const dpt={kernelName:UF,backendName:"cpu",kernelFunc:hpt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ppt(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:i,delimiter:o}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=n.data.get(i.dataId).values,u=n.data.get(o.dataId).values[0],[l,c,h]=PL(a,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const fpt={kernelName:GF,backendName:"cpu",kernelFunc:ppt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mpt(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.data.get(i.dataId).values,a=WL(o,r);return n.makeTensorInfo(i.shape,"int32",a)}const gpt={kernelName:HF,backendName:"cpu",kernelFunc:mpt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xpt=He(Qp,e=>Math.tan(e)),bpt={kernelName:Qp,backendName:"cpu",kernelFunc:xpt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ypt=He(tf,e=>Math.tanh(e)),wpt={kernelName:tf,backendName:"cpu",kernelFunc:ypt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vpt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:i}=s;Kt(r,"tile");const o=UL(n.bufferSync(r),i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const kpt={kernelName:ef,backendName:"cpu",kernelFunc:vpt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ipt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:i,sorted:o}=s;Kt(r,"topk");const a=n.data.get(r.dataId).values,[u,l]=HL(a,r.shape,r.dtype,i,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}const Cpt={kernelName:Zk,backendName:"cpu",kernelFunc:Ipt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $pt(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:i}=t,{interpolation:o,fillMode:a,fillValue:u,outputShape:l}=n,[c,h,d,p]=r.shape,[f,m]=l??[h,d],g=[c,f,m,p],x=te(r.shape),b=x[0],w=x[1],y=x[2],v=te(g),k=v[0],C=v[1],I=v[2],$=Cs(r.dtype,bt(g));$.fill(u);const S=s.data.get(r.dataId).values,N=s.data.get(i.dataId).values;for(let F=0;F<c;++F){const D=i.shape[0]===1?N:N.subarray(F*8,F*8+8);for(let E=0;E<f;++E)for(let A=0;A<m;++A)for(let T=0;T<p;++T){let R;const _=D[6]*A+D[7]*E+1;if(_===0)continue;const M=(D[0]*A+D[1]*E+D[2])/_,z=(D[3]*A+D[4]*E+D[5])/_,B=c4(M,d,a),V=c4(z,h,a);switch(o){case"nearest":R=Apt(S,h,d,b,w,y,F,V,B,T,u);break;case"bilinear":R=Fpt(S,h,d,b,w,y,F,V,B,T,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const G=F*k+E*C+A*I+T;$[G]=R}return s.makeTensorInfo(g,r.dtype,$)}return{dataId:s.write($,g,r.dtype),shape:r.shape,dtype:r.dtype}}const Spt={kernelName:Jk,backendName:"cpu",kernelFunc:$pt};function c4(e,t,n){switch(n){case"reflect":return Npt(e,t);case"wrap":return Ept(e,t);case"nearest":return Tpt(e,t);case"constant":default:return Dpt(e)}}function Npt(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{const s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return al(0,n,t-1)}function Ept(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{const s=t-1;n-=t*Math.trunc(n/s)}return al(0,n,t-1)}function Dpt(e,t){return e}function Tpt(e,t){return al(0,e,t-1)}function zf(e,t,n,s,r,i,o,a,u,l,c){const h=o*s+a*r+u*i+l;return 0<=a&&a<t&&0<=u&&u<n?e[h]:c}function Apt(e,t,n,s,r,i,o,a,u,l,c){const h=Math.round(a),d=Math.round(u);return zf(e,t,n,s,r,i,o,h,d,l,c)}function Fpt(e,t,n,s,r,i,o,a,u,l,c){const h=Math.floor(a),d=Math.floor(u),p=h+1,f=d+1,m=(f-u)*zf(e,t,n,s,r,i,o,h,d,l,c)+(u-d)*zf(e,t,n,s,r,i,o,h,f,l,c),g=(f-u)*zf(e,t,n,s,r,i,o,p,d,l,c)+(u-d)*zf(e,t,n,s,r,i,o,p,f,l,c);return(p-a)*m+(a-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rpt(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:i}=t;Kt(i,"unique");const o=s.data.get(i.dataId).values,{outputValues:a,outputShape:u,indices:l}=qL(o,r,i.shape,i.dtype);return[s.makeTensorInfo(u,i.dtype,a),s.makeTensorInfo([l.length],"int32",l)]}const _pt={kernelName:Qk,backendName:"cpu",kernelFunc:Rpt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mpt(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:i}=s;i<0&&(i+=r.shape.length);const o=r.shape.length,a=r.shape[i],u=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==i&&(u[l++]=r.shape[p]);const c=new Array(o).fill(0),h=r.shape.slice();h[i]=1;const d=new Array(a);for(let p=0;p<d.length;p++){c[i]=p;const f=zl({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[p]=nn({inputs:{x:f},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(f)}return d}const Opt={kernelName:H1,backendName:"cpu",kernelFunc:Mpt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lpt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:i}=t,{numSegments:o}=s;Kt(r,"unsortedSegmentSum");const a=r.shape.length,u=i.shape.length,l=[],c=[],h=a-u;let d=i;for(let f=0;f<h;++f){const m=jx({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<o;++f){const m=iu(f,"int32"),g=n.makeTensorInfo([],"int32",m),x=iL({inputs:{a:g,b:d},backend:n}),b=ku({inputs:{x},backend:n,attrs:{dtype:"float32"}}),w=Gx({inputs:{a:b,b:r},backend:n}),y=Lf({inputs:{x:w},backend:n,attrs:{axis:0,keepDims:!1}});l.push(y),c.push(g),c.push(x),c.push(b),c.push(w),c.push(y)}const p=a4({inputs:l,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const zpt={kernelName:q1,backendName:"cpu",kernelFunc:Lpt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bpt=[_ut,wat,Out,zut,Sat,Put,Vut,Gut,qut,Kut,Yut,Jut,tlt,slt,ilt,ult,clt,dlt,flt,Fut,glt,blt,wlt,klt,Cat,Eat,Clt,vat,Slt,Elt,Dlt,Alt,Rlt,Mlt,Llt,Blt,Wlt,Ult,Hlt,jlt,Xlt,Zlt,Qlt,tct,nct,rct,oct,act,uct,lct,dct,$ut,fct,Dat,kct,Tat,Ict,Fat,Dct,Tct,Fct,_at,Mct,Lct,Bct,Wct,Uct,Oat,zat,kat,Hct,Nlt,jct,Xct,Zct,Sut,Pat,Vat,Qct,Gat,eht,rht,oht,lht,hht,pht,fht,qat,ght,bht,wht,kht,Cht,Sht,Eht,Kat,Tht,Rht,Oht,Yat,Jat,Bht,Vht,Hht,tut,jht,Xht,Yht,u4,tdt,Eut,sut,ndt,rdt,odt,udt,Iat,v2,cdt,Dut,Tut,Aut,ddt,fdt,gdt,bdt,wdt,vdt,Idt,hut,$dt,Tdt,Fdt,Odt,put,zdt,Pdt,Vdt,fut,_ht,Hdt,jdt,Xdt,Zdt,Qdt,ept,spt,ipt,xut,opt,yut,upt,cpt,dpt,fpt,gpt,Iut,cct,bpt,wpt,kpt,Cpt,Spt,eut,_pt,Opt,zpt,Kht];for(const e of Bpt)YF(e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bl={},Xx={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Ppt(e,t){Bl[e]=t}function po(e,t){if(!(e in Bl)||t!=null){const s=Vpt(e,t);if(s!==null)Bl[e]=s;else return console.log("Could not get context for WebGL version",e),null}const n=Bl[e];return n==null||n.isContextLost()?(delete Bl[e],po(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Bl[e])}function Wpt(e){if(typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Vpt(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=t??Wpt(e);return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Bl[e]},!1),dt().getBool("SOFTWARE_WEBGL_ENABLED")&&(Xx.failIfMajorPerformanceCaveat=!1),e===1?n.getContext("webgl",Xx)||n.getContext("experimental-webgl",Xx):n.getContext("webgl2",Xx)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Bf;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(Bf||(Bf={}));var ai;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(ai||(ai={}));var Ns;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Ns||(Ns={}));function Pf(e,t){return[t,e]}function Upt(e,t){return e*t}function Yx(e){const t=bt(e),n=Math.ceil(t/4);return ak(n)}function Dh(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Gpt(e,t){const[n,s]=Dh(e,t);return n*s*4}function C2(e,t){const n=e;let s,r,i,o,a,u,l,c,h,d;return dt().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,i=n.RGBA16F,o=n.RGBA32F,a=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(s=e.RGBA,r=e.RGBA,i=e.RGBA,o=n.RGBA,a=e.RGBA,l=4,c=4,h=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(e,t){const n=t();return dt().getBool("DEBUG")&&Hpt(e),n}function Hpt(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+Xpt(e,t))}const qpt=596e-10,jpt=65504;function Kpt(e){return!!(dt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||qpt<Math.abs(e)&&Math.abs(e)<jpt)}function Xpt(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Zx(e,t){return _a(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function Ypt(e,t){const n=_a(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ut(e,()=>e.shaderSource(n,t)),Ut(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function Zpt(e,t){const n=_a(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ut(e,()=>e.shaderSource(n,t)),Ut(e,()=>e.compileShader(n)),dt().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw h4(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Jpt=/ERROR: [0-9]+:([0-9]+):/g;function h4(e,t){const n=Jpt.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}const s=+n[1],r=e.split(`
`),i=r.length.toString().length+2,o=r.map((h,d)=>th((d+1).toString(),i)+h);let a=0;for(let h=0;h<o.length;h++)a=Math.max(o[h].length,a);const u=o.slice(0,s-1),l=o.slice(s-1,s),c=o.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${th(l[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function Qpt(e){return _a(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function tft(e,t){if(Ut(e,()=>e.linkProgram(t)),!dt().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function $2(e,t){if(Ut(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function eft(e,t){const n=_a(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Ut(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Ut(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function nft(e,t){const n=_a(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Ut(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),Ut(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function sft(e){return _a(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function rft(e,t){const n=dt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){const s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function ift(e){return _a(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function d4(e,t,n,s,r,i,o){const a=e.getAttribLocation(t,n);return a===-1?!1:(Ut(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),Ut(e,()=>e.vertexAttribPointer(a,r,e.FLOAT,!1,i,o)),Ut(e,()=>e.enableVertexAttribArray(a)),!0)}function oft(e,t,n){hft(e,n),Ut(e,()=>e.activeTexture(e.TEXTURE0+n)),Ut(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function aft(e,t,n){return _a(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function uft(e,t,n){return e.getUniformLocation(t,n)}function lft(e,t,n,s){Ut(e,()=>oft(e,t,s)),Ut(e,()=>e.uniform1i(n,s))}function S2(e,t,n){Ut(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),Ut(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function p4(e,t){Ut(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),Ut(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Jx(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+cft(e,t))}function cft(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function _a(e,t,n){const s=Ut(e,()=>t());if(s==null)throw new Error(n);return s}function hft(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){const r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Th(e,t=2){return bt(e.slice(0,e.length-t))}function Ah(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Qx(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Th(e),...Ah(e)]),t}function dft(e,t=!1){let n=dt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=dt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&dt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n=n*2,s=s*2,e=e.map((a,u)=>u>=e.length-2?ik(e[u]):e[u]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=su(e).newShape);let r=bt(e),i=null;e.length<=1&&r<=n?i=[1,r]:e.length===2&&e[0]<=n&&e[1]<=n?i=e:e.length===3&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:e.length===3&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const o=i!=null&&Math.max(...i)>s&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(i==null||o)if(t){const a=Th(e);let u=2,l=2;e.length&&([u,l]=Ah(e)),r=a*(u/2)*(l/2),i=ak(r).map(c=>c*2)}else i=ak(r);return i}function tb(e){return e%2===0}function eb(e,t){if(e=e.slice(-2),t=t.slice(-2),Le(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||tb(n)&&tb(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&tb(e[0])&&tb(t[0])}let N2,E2;function pft(e){if(N2==null){const t=po(e);N2=t.getParameter(t.MAX_TEXTURE_SIZE)}return N2}function fft(e){if(E2==null){const t=po(e);E2=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,E2)}function mft(e){if(e===0)return 0;let t;const n=po(e);return Di(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Di(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Di(e,t){return e.getExtension(t)!=null}function f4(e){try{if(po(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function gft(e){if(e===0)return!1;const t=po(e);if(e===1){if(!Di(t,"OES_texture_float"))return!1}else if(!Di(t,"EXT_color_buffer_float"))return!1;return D2(t)}function xft(e){if(e===0)return!1;const t=po(e);if(e===1){if(!Di(t,"OES_texture_float")||!Di(t,"WEBGL_color_buffer_float"))return!1}else{if(Di(t,"EXT_color_buffer_float"))return D2(t);const n="EXT_color_buffer_half_float";if(Di(t,n)){const s=t.getExtension(n);return bft(t,s)}return!1}return D2(t)}function D2(e){const t=C2(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);const s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(i),o}function bft(e,t){const n=C2(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);const r=1,i=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,i,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),a}function yft(e){return e!==2?!1:po(e).fenceSync!=null}function Wf(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&O(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jt=dt();Jt.registerFlag("HAS_WEBGL",()=>Jt.getNumber("WEBGL_VERSION")>0),Jt.registerFlag("WEBGL_VERSION",()=>f4(2)?2:f4(1)?1:0),Jt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Jt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Jt.get("WEBGL_VERSION")===2),Jt.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Jt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Jt.registerFlag("WEBGL_PACK",()=>Jt.getBool("HAS_WEBGL")),Jt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Jt.getBool("WEBGL_PACK")),Jt.registerFlag("WEBGL_PACK_CLIP",()=>Jt.getBool("WEBGL_PACK")),Jt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Jt.getBool("WEBGL_PACK")),Jt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Jt.getBool("WEBGL_PACK")),Jt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Jt.getBool("WEBGL_PACK")),Jt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Jt.getBool("WEBGL_PACK")),Jt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Jt.getBool("WEBGL_PACK")),Jt.registerFlag("WEBGL_PACK_REDUCE",()=>Jt.getBool("WEBGL_PACK")),Jt.registerFlag("WEBGL_LAZILY_UNPACK",()=>Jt.getBool("WEBGL_PACK")),Jt.registerFlag("WEBGL_CONV_IM2COL",()=>Jt.getBool("WEBGL_PACK")),Jt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>pft(Jt.getNumber("WEBGL_VERSION"))),Jt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>fft(Jt.getNumber("WEBGL_VERSION"))),Jt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=Jt.getNumber("WEBGL_VERSION");return e===0?0:mft(e)}),Jt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Jt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!xR()),Jt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>gft(Jt.getNumber("WEBGL_VERSION"))),Jt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Jt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Jt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Jt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>xft(Jt.getNumber("WEBGL_VERSION"))),Jt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>yft(Jt.getNumber("WEBGL_VERSION"))),Jt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Jt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Jt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),Jt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>xR()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),Jt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),Jt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),Jt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),Jt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),Jt.registerFlag("WEBGL_EXP_CONV",()=>!1),Jt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Jt.getBool("IS_TEST")),Jt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),Jt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),Jt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),Jt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zs(){let e,t,n,s,r,i,o,a,u,l;return dt().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",i="outputColor",o="out vec4 outputColor;",a=dt().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",i="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:i,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:u,defineRound:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pl(e,t,n="index"){const s=te(t);return s.map((r,i)=>{const o=`int ${e[i]} = ${n} / ${r}`,a=i===s.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${r}`:`index -= ${e[i]} * ${r}`;return`${o}; ${a};`}).join("")}function nb(e,t,n="index"){const s=te(t);return s.map((r,i)=>{const o=`int ${e[i]} = ${n} / outShapeStrides[${i}]`,a=i===s.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * outShapeStrides[${i}]`:`index -= ${e[i]} * outShapeStrides[${i}]`;return`${o}; ${a};`}).join("")}function wft(e,t){const n=e.length,s=e.map(i=>`${t}[${i}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let i=n-3;i>=0;--i)r[i]=`(${r[i+1]} * ${s[i+1]})`;return r}function vft(e,t,n="index"){const s=e.map((i,o)=>o),r=wft(s,t);return r.map((i,o)=>{const a=`int ${e[o]} = ${n} / ${r[o]}`,u=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${a}; ${u};`}).join("")}function T2(e){const t=te(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function A2(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const m4=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:g4}=Cst;function kft(e,t,n){const s=[];if(e.forEach(d=>{const p=bt(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?s.push(`uniform float ${d.name}${p>1?`[${p}]`:""};`):(s.push(`uniform sampler2D ${d.name};`),s.push(`uniform int offset${d.name};`)),n.enableShapeUniforms){const{uniformShape:f}=F2(n.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(f.length){case 1:s.push(`uniform int ${d.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${d.name}Shape;`);break}s.push(`uniform ivec2 ${d.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(d=>{s.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});const r=s.join(`
`),i=e.map(d=>Ift(d,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,a=Zs(),u=Sft(a);let l,c,h=Dft(a);return t.isPacked?(l=Cft(t.logicalShape,o,n.enableShapeUniforms),c=Eft(a)):(l=$ft(t.logicalShape,o,n.enableShapeUniforms),c=Nft(a)),n.packedInputs&&(h+=Rft),[h,u,c,r,l,i,n.userCode].join(`
`)}function Fh(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return Hft(e,t);case 1:return jft(e,t);case 2:return Xft(e,t);case 3:return Zft(e,t);case 4:return Qft(e,t);case 5:return tmt(e);case 6:return emt(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function x4(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return Gft(e);case 1:return qft(e,t);case 2:return Kft(e,t);case 3:return Yft(e,t);default:return Jft(e,t)}}function Ift(e,t,n=!1,s){let r="";n?r+=x4(e,s):r+=Fh(e,s);const i=e.shapeInfo.logicalShape,o=t.logicalShape;return i.length<=o.length&&(n?r+=nmt(e,t):r+=smt(e,t)),r}function Cft(e,t,n){switch(e.length){case 0:return b4();case 1:return _ft(e,t,n);case 2:return Vft(e,t,n);case 3:return Oft(e,t,n);default:return zft(e,t,n)}}function $ft(e,t,n){switch(e.length){case 0:return b4();case 1:return Mft(e,t,n);case 2:return Uft(e,t,n);case 3:return Lft(e,t,n);case 4:return Bft(e,t,n);case 5:return Pft(e,t);case 6:return Wft(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function Sft(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function Nft(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function Eft(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function Dft(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Tft}
    ${Aft}
    ${Fft}
  `}const Tft=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Aft=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Fft=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Rft=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function b4(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function _ft(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function Mft(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function Oft(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),i=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function Lft(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${nb(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;const s=Pl(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function zft(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),i=r*Math.ceil(e[e.length-2]/2);let o=i,a="",u="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],a=`
      int b${l} = index / ${o};
      index -= b${l} * ${o};
    `+a,u=`b${l}, `+u;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${u});
    }
  `}function Bft(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${nb(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Pl(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function Pft(e,t){const n=Pl(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Wft(e,t){const n=Pl(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Vft(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Le(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function Uft(e,t,n){return Le(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Wl(e){return`offset${e}`}function Gft(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Zs();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function Hft(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,i]=e.shapeInfo.texShape;if(r===1&&i===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const o=Wl(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;const[a,u]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${u}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function qft(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,i=Zs();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${n}, uv);
    }
  `;const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${i.texture2D}(${n}, uv);
    }
  `}function jft(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Rh(e)}
      }
    `;const r=e.shapeInfo.texShape,i=r[0],o=r[1];if(o===1&&i===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const a=Wl(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);
        return sampleTexture(${n}, uv);
      }
    `:i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${a});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${i}, ${o}, index + ${a});
      return sampleTexture(${n}, uv);
    }
  `}function Kft(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,o=i[0],a=i[1],u=Zs();if(i!=null&&Le(n,i))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function Xft(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape;if(i!=null&&Le(n,i)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=i[0],p=i[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:o,keptDims:a}=su(n),u=o;if(u.length<n.length){const d=_h(e,u),p=["row","col"];return`
      ${Fh(d,t)}
      float ${r}(int row, int col) {
        return ${r}(${Mh(p,a)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Rh(e)}
      }
    `;const l=i[0],c=i[1],h=Wl(s);return c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${s}, uv);
    }
  `:l===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function Yft(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(n[0]===1){const d=n.slice(1),p=[1,2],f=_h(e,d),m=["b","row","col"];return`
        ${x4(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Mh(m,p)});
        }
      `}const a=Zs();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const u=o[0],l=o[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${h}, ${c}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function Zft(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[1]*n[2],o=n[2],{newShape:a,keptDims:u}=su(n),l=a;if(l.length<n.length){const m=_h(e,l),g=["row","col","depth"];return`
        ${Fh(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Mh(g,u)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${o}, 1)));
        ${Rh(e)}
      }
    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===o&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Wl(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function Jft(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=Zs();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;const i=e.shapeInfo.logicalShape,o=i.length,a=e.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=u[0],c=u[1],h=Math.ceil(i[o-1]/2);let d=h*Math.ceil(i[o-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<o-1;m++)p=`int b${m}, `+p,d*=i[o-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});
      return ${r.texture2D}(${n}, uv);
    }
  `}function Qft(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[3],o=n[2]*i,a=n[1]*o,{newShape:u,keptDims:l}=su(n);if(u.length<n.length){const b=_h(e,u),w=["row","col","depth","depth2"];return`
      ${Fh(b,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Mh(w,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${i}, 1)));
        ${Rh(e)}
      }
    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===i&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const x=Wl(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${x});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});
      return sampleTexture(${s}, uv);
    }
  `}function tmt(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],i=t[3]*r,o=t[2]*i,a=t[1]*o,{newShape:u,keptDims:l}=su(t);if(u.length<t.length){const m=_h(e,u),g=["row","col","depth","depth2","depth3"];return`
      ${Fh(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Mh(g,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${i}, ${r})) +
          depth3;
        ${Rh(e)}
      }
    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const f=Wl(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${i} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function emt(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:i}=su(t);if(r.length<t.length){const g=_h(e,r),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Fh(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Mh(x,i)});
      }
    `}const o=t[5],a=t[4]*o,u=t[3]*a,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${l}, ${u}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${Rh(e)}
      }
    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;const m=Wl(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${l} + depth * ${u} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Rh(e){const t=e.name,n=bt(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function nmt(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,a=g4(e.shapeInfo.logicalShape,t.logicalShape),u=sn(o),l=o-i;let c;const h=["x","y","z","w","u","v"];i===0?c="":o<2&&a.length>=1?c="coords = 0;":c=a.map(g=>`coords.${h[g+l]} = 0;`).join(`
`);let d="";o<2&&i>0?d="coords":d=e.shapeInfo.logicalShape.map((g,x)=>`coords.${h[x+l]}`).join(", ");let p="return outputValue;";const f=bt(e.shapeInfo.logicalShape)===1,m=bt(t.logicalShape)===1;if(i===1&&!f&&!m)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(f&&!m)o===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const g=i-2,x=i-1;a.indexOf(g)>-1&&a.indexOf(x)>-1?p="return vec4(outputValue.x);":a.indexOf(g)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(x)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${u} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function smt(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,a=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&a===u&&e.shapeInfo.flatOffset==null&&Le(o,i))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const l=sn(u),c=g4(e.shapeInfo.logicalShape,t.logicalShape),h=u-a;let d;const p=["x","y","z","w","u","v"];a===0?d="":u<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return u<2&&a>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${r}() {
      ${l} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function sn(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function F2(e,t,n){const{newShape:s,keptDims:r}=su(t),i=t.length,o=e&&i===3&&t[0]===1,a=o?t.slice(1):s,u=!e&&i>1&&!Le(t,n)&&s.length<i||o;return{useSqueezeShape:u,uniformShape:u?a:t,keptDims:r}}function _h(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Mh(e,t){return t.map(n=>e[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rmt(e,t,n,s){const r=n.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),i=r.map(c=>c.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=kft(r,o,t),u=Zpt(e.gl,a),l=e.createProgram(u);return dt().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:i,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:i,outShapeInfo:o},y4(e,t,l))}function y4(e,t,n){const s={},r={},i={},o=[];let a,u,l,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),dt().getNumber("WEBGL_VERSION")===1&&(c=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let p=0;p<t.variableNames.length;p++){const f=t.variableNames[p];s[f]=e.getUniformLocation(n,f,d),s[`offset${f}`]=e.getUniformLocation(n,`offset${f}`,d),t.enableShapeUniforms&&(r[`${f}Shape`]=e.getUniformLocation(n,`${f}Shape`,d),i[`${f}TexShape`]=e.getUniformLocation(n,`${f}TexShape`,d))}return t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",d),l=e.getUniformLocation(n,"outShapeStrides",d),u=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((p,f)=>{o[f]=e.getUniformLocation(n,p.name,d)}),{uniformLocations:s,customUniformLocations:o,infLoc:c,nanLoc:h,inShapesLocations:r,inTexShapesLocations:i,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}}function w4(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{const r=n.logicalShape,i=t[s],o=i.shape;if(!Le(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&i.isUniform)return;const a=n.texShape,u=i.isUniform?null:i.texData.texShape;if(!Le(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)})}function imt(e,t,n,s,r){t.program.enableShapeUniforms||(w4(t.inShapeInfos,n),w4([t.outShapeInfo],[s]));const i=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):e.setOutputMatrixTexture(i.texture,o[0],o[1]),e.setProgram(t.webGLProgram),dt().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((u,l)=>{const c=t.program.variableNames[l],h=t.uniformLocations[c],d=t.uniformLocations[`offset${c}`],p=t.inShapesLocations[`${c}Shape`],f=t.inTexShapesLocations[`${c}TexShape`];if(p){const{uniformShape:m}=F2(t.program.packedInputs,u.shape,u.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(p,new Int32Array(m));break;case 2:e.gl.uniform2iv(p,new Int32Array(m));break;case 3:e.gl.uniform3iv(p,new Int32Array(m));break;case 4:e.gl.uniform4iv(p,new Int32Array(m));break}}if(f&&e.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),h!=null){if(u.isUniform){if(bt(u.shape)<2)e.gl.uniform1f(h,u.uniformValues[0]);else{let m=u.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(h,m)}return}u.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,u.texData.slice.flatOffset),e.setInputMatrixTexture(u.texData.texture.texture,h,l)}});const a=t.outShapeLocation;if(a)switch(s.shape.length){case 1:e.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(a,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const u=te(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((u,l)=>{const c=t.customUniformLocations[l],h=r[l];if(u.type==="float")e.gl.uniform1fv(c,h);else if(u.type==="vec2")e.gl.uniform2fv(c,h);else if(u.type==="vec3")e.gl.uniform3fv(c,h);else if(u.type==="vec4")e.gl.uniform4fv(c,h);else if(u.type==="int")e.gl.uniform1iv(c,h);else if(u.type==="ivec2")e.gl.uniform2iv(c,h);else if(u.type==="ivec3")e.gl.uniform3iv(c,h);else if(u.type==="ivec4")e.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}),e.executeProgram()}function omt(e,t,n){let s="";t.concat(n).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){const u=o.texData.texShape,{useSqueezeShape:l,uniformShape:c,keptDims:h}=F2(e.packedInputs,o.shape,u);let d="",p="",f="";if(c.length===1&&e.packedInputs){const v=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];d=`${v[0]>1}_${v[1]>1}`}else if(c.length===2&&!e.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!e.packedInputs){const v=te(c);f=`${v[0]===u[1]}_${v[v.length-1]===u[1]}`}const m=o.shape.length,g=c.length===2&&Le(o.shape,u),x=bt(o.shape)===1,b=dh(o.shape,n.shape),w=!e.packedInputs&&m===n.shape.length&&Le(u,n.texData.texShape),y=e.packedInputs||c.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${m}_${w}_${l?h:""}_${c.length}_${x}_${b}_${g}_${d}_${p}_${f}_${y}_${a}`}else{const u=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${u}_${a}`}});const r=e.userCode;let i=e.constructor.name;return i+="_"+s+"_"+r+`${dt().getNumber("WEBGL_VERSION")}`,i}function Js(e){return dt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class amt{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Bf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Zs();this.outputShape=t,this.enableShapeUniforms=Js(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?nb(["r","c","d"],t):Pl(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class umt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Bf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Zs();this.outputShape=t,this.enableShapeUniforms=Js(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?nb(["r","c","d"],t):Pl(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lmt{constructor(t){this.variableNames=["A"],this.outTexUsage=ai.DOWNLOAD;const n=Zs();this.outputShape=t,this.userCode=`
      ${m4}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cmt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ai.DOWNLOAD;const n=Zs();this.outputShape=t,this.userCode=`
      ${m4}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hmt={R:0,G:1,B:2,A:3};let v4=class{constructor(t,n=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Zs();this.outputShape=t,this.enableShapeUniforms=Js(this.outputShape.length);let i="result";n&&(i="floor(result * 255. + 0.5)");let o="";for(let a=0;a<s.length;a++){const u=s[a];o+=`
          if(offset == ${a}) {
            result = values[${hmt[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?A2():T2(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${o}
        }
        ${r.output} = vec4(${i}, 0., 0., 0.);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dmt{constructor(t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Zs();this.outputShape=t,this.enableShapeUniforms=Js(this.outputShape.length);let r="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const u=o*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?A2():T2(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${i};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pmt(e){const t=Zs(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Ypt(e,n)}function fmt(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return eft(e,t)}function mmt(e){const t=new Uint16Array([0,1,2,2,1,3]);return nft(e,t)}function Vf(e,t,n,s,r,i){rft(t,n);const o=sft(e),a=e.TEXTURE_2D;return Ut(e,()=>e.bindTexture(a,o)),Ut(e,()=>e.texParameteri(a,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),Ut(e,()=>e.texParameteri(a,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),Ut(e,()=>e.texParameteri(a,e.TEXTURE_MIN_FILTER,e.NEAREST)),Ut(e,()=>e.texParameteri(a,e.TEXTURE_MAG_FILTER,e.NEAREST)),dt().getNumber("WEBGL_VERSION")===1?Ut(e,()=>e.texImage2D(a,0,s,t,n,0,r,i,null)):Ut(e,()=>e.texStorage2D(a,1,s,t,n)),Ut(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:o,texShape:[n,t]}}function k4(e){return e.internalFormatFloat}function gmt(e,t,n,s){const[r,i]=Pf(t,n);return Vf(e,r,i,k4(s),s.textureFormatFloat,e.FLOAT)}function I4(e){return e.internalFormatHalfFloat}function xmt(e,t,n,s){const[r,i]=Pf(t,n);return Vf(e,r,i,I4(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function C4(e){return e.downloadTextureFormat}function bmt(e,t,n,s){const[r,i]=Pf(t,n);return Vf(e,r,i,C4(s),e.RGBA,e.UNSIGNED_BYTE)}function $4(e){return e.internalFormatPackedFloat}function ymt(e,t,n,s){const[r,i]=Dh(t,n);return Vf(e,r,i,$4(s),e.RGBA,e.FLOAT)}function S4(e){return e.internalFormatPackedHalfFloat}function wmt(e,t,n,s){const[r,i]=Dh(t,n);return Vf(e,r,i,S4(s),e.RGBA,s.textureTypeHalfFloat)}function vmt(e,t,n){return Ut(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),d4(e,t,"clipSpacePos",n,3,20,0)&&d4(e,t,"uv",n,2,20,12)}function kmt(e,t,n,s,r,i){Ut(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,a,u;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),a=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*s*4),a=e.FLOAT,u=i.internalFormatPackedFloat),o.set(r),dt().getNumber("WEBGL_VERSION")===2?Ut(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,a,o)):Ut(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,s,0,e.RGBA,a,o)),Ut(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Imt(e,t,n){Ut(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?dt().getNumber("WEBGL_VERSION")===2?Ut(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):Ut(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):dt().getNumber("WEBGL_VERSION")===2?Ut(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):Ut(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),Ut(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function Cmt(e,t,n,s){const r=e.createBuffer();Ut(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));const i=4*4*t*n;return Ut(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),Ut(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),Ut(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function $mt(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function Smt(e,t,n,s){const[r,i]=Pf(t,n),o=4,a=new Uint8Array(Upt(t*n,o));return Ut(e,()=>e.readPixels(0,0,r,i,s.downloadTextureFormat,e.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function Nmt(e,t,n,s,r,i,o,a){const u=e,l=new Float32Array(Gpt(i,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function Emt(e,t,n){const s=new Float32Array(t*n*4);return Ut(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R2{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const n=dt().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,Ppt(n,t)):this.gl=po(n),t=this.gl,dt().getNumber("WEBGL_VERSION")===2){const i=t;this.createVertexArray=()=>Ut(i,()=>i.createVertexArray()),this.bindVertexArray=o=>Ut(i,()=>i.bindVertexArray(o)),this.deleteVertexArray=o=>Ut(i,()=>i.deleteVertexArray(o)),this.getVertexArray=()=>Ut(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(t!=null){const i=t.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Ut(t,()=>i.createVertexArrayOES()),this.bindVertexArray=o=>Ut(t,()=>i.bindVertexArrayOES(o)),this.deleteVertexArray=o=>Ut(t,()=>i.deleteVertexArrayOES(o)),this.getVertexArray=()=>Ut(t,()=>t.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),dt().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=Zx(this.gl,i),Di(this.gl,o))this.textureHalfFloatExtension=Zx(this.gl,o);else if(dt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Di(this.gl,r))this.colorBufferHalfFloatExtension=Zx(this.gl,r);else if(dt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Di(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Di(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=fmt(this.gl),this.indexBuffer=mmt(this.gl),this.framebuffer=ift(this.gl),this.textureConfig=C2(this.gl,this.textureHalfFloatExtension)}get debug(){return dt().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Ut(t,()=>t.finish()),Ut(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Ut(t,()=>t.deleteFramebuffer(this.framebuffer)),Ut(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Ut(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Ut(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,n){return this.throwIfDisposed(),gmt(this.gl,t,n,this.textureConfig)}createFloat16MatrixTexture(t,n){return this.throwIfDisposed(),xmt(this.gl,t,n,this.textureConfig)}createUnsignedBytesMatrixTexture(t,n){return this.throwIfDisposed(),bmt(this.gl,t,n,this.textureConfig)}uploadPixelDataToTexture(t,n){this.throwIfDisposed(),Imt(this.gl,t,n)}uploadDenseMatrixToTexture(t,n,s,r){this.throwIfDisposed(),kmt(this.gl,t,n,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,n){return this.throwIfDisposed(),wmt(this.gl,t,n,this.textureConfig)}createPackedMatrixTexture(t,n){return this.throwIfDisposed(),ymt(this.gl,t,n,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(p4(this.gl,this.framebuffer),this.outputTexture=null),Ut(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,n,s){return this.downloadMatrixDriver(t,()=>Smt(this.gl,n,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,n,s,r,i,o){return Nmt(this.gl,t,n,s,r,i,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,n){return $mt(this.gl,t,n)}createBufferFromTexture(t,n,s){this.bindTextureToFrameBuffer(t);const r=Cmt(this.gl,n,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let n,s;if(dt().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const o=r.clientWaitSync(i,0,0);return o===r.ALREADY_SIGNALED||o===r.CONDITION_SATISFIED},n=i}else dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(n,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:n,isFencePassed:s}}downloadMatrixFromPackedTexture(t,n,s){return this.downloadMatrixDriver(t,()=>Emt(this.gl,n,s))}createProgram(t){this.throwIfDisposed();const n=this.gl;this.vertexShader==null&&(this.vertexShader=pmt(n));const s=Qpt(n);Ut(n,()=>n.attachShader(s,this.vertexShader)),Ut(n,()=>n.attachShader(s,t)),tft(n,s);let r;return r=Object.assign(s,{vao:this.createVertexArray()}),this.bindVertexArray(r.vao),Ut(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(vmt(n,r,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&$2(n,r),this.setProgram(r),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(Ut(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&$2(this.gl,this.program)),Ut(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,n,s=!0){return this.throwIfDisposed(),s?aft(this.gl,t,n):uft(this.gl,t,n)}getAttributeLocation(t,n){return this.throwIfDisposed(),Ut(this.gl,()=>this.gl.getAttribLocation(t,n))}getUniformLocationNoThrow(t,n){return this.throwIfDisposed(),this.gl.getUniformLocation(t,n)}setInputMatrixTexture(t,n,s){this.throwIfDisposed(),this.throwIfNoProgram(),lft(this.gl,t,n,s)}setOutputMatrixTexture(t,n,s){this.setOutputMatrixTextureDriver(t,s,n)}setOutputPackedMatrixTexture(t,n,s){this.throwIfDisposed();const[r,i]=Dh(n,s);this.setOutputMatrixTextureDriver(t,r,i)}setOutputMatrixWriteRegion(t,n,s,r){this.setOutputMatrixWriteRegionDriver(s,t,r,n)}setOutputPackedMatrixWriteRegion(t,n,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&$2(this.gl,this.program),Jx(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const n=this.getVertexArray();console.assert(n===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Ut(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ut(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Zx(this.gl,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,i),i}const t=this.getQueryTimerExtensionWebGL1(),n=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,n),n}endQuery(){if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,s=this.getQueryTimerExtensionWebGL2();n.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await bF(()=>this.disposed||this.isQueryAvailable(t,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,n){if(n===0)return null;if(n===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,n){if(n===0)return!0;if(n===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(t){return new Promise(n=>{this.addItemToPoll(()=>t.isFencePassed(),()=>n())})}pollItems(){const t=Dmt(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=t;++n){const{resolveFn:s}=this.itemsToPoll[n];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,n){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:n}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in dt().platform&&(s=dt().platform.setTimeoutCustom.bind(dt().platform)),bF(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),S2(this.gl,t,this.framebuffer),this.debug&&Jx(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(S2(this.gl,this.outputTexture,this.framebuffer),this.debug&&Jx(this.gl)):p4(this.gl,this.framebuffer)}downloadMatrixDriver(t,n){this.bindTextureToFrameBuffer(t);const s=n();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,n,s){this.throwIfDisposed();const r=this.gl;S2(r,t,this.framebuffer),this.debug&&Jx(r),this.outputTexture=t,Ut(r,()=>r.viewport(0,0,n,s)),Ut(r,()=>r.scissor(0,0,n,s))}setOutputMatrixWriteRegionDriver(t,n,s,r){this.throwIfDisposed(),Ut(this.gl,()=>this.gl.scissor(t,n,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function Dmt(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Tmt,bincountImpl:N4,bincountReduceImpl:Amt,castImpl:Fmt,ceilImpl:Rmt,concatImpl:_mt,equalImpl:Mmt,expImpl:Omt,expm1Impl:Lmt,floorImpl:zmt,gatherNdImpl:Bmt,gatherV2Impl:Pmt,greaterImpl:Wmt,greaterEqualImpl:Vmt,lessImpl:Umt,lessEqualImpl:Gmt,linSpaceImpl:Hmt,logImpl:qmt,maxImpl:jmt,maximumImpl:Kmt,minimumImpl:Xmt,multiplyImpl:Ymt,negImpl:Zmt,notEqualImpl:Jmt,prodImpl:Qmt,raggedGatherImpl:tgt,raggedRangeImpl:egt,raggedTensorToTensorImpl:ngt,rangeImpl:sgt,rsqrtImpl:rgt,scatterImpl:igt,sigmoidImpl:ogt,simpleAbsImpl:E4,sliceImpl:agt,sparseFillEmptyRowsImpl:ugt,sparseReshapeImpl:lgt,sparseSegmentReductionImpl:D4,sqrtImpl:cgt,stridedSliceImpl:hgt,stringNGramsImpl:dgt,stringSplitImpl:pgt,stringToHashBucketFastImpl:fgt,subImpl:mgt,tileImpl:ggt,topKImpl:xgt,transposeImpl:_2,uniqueImpl:bgt}=Cut;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function Qs(e,t){return t===1?[e]:T4(e,t)}function ygt(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wgt{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Js(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const n=Qs("rc",this.rank),s=sn(this.rank),r=this.getOutOfBoundsCondition(n),i=this.getSetup(n),o=this.getOutput(n);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(t){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let i=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)i=`${t[t.length-1-o]},`+i;n.push(i)}return n}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let s=this.rank-2;s<this.rank;s++)n+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(n+="||");return n}getSetup(t){if(this.rank===1)return"";const n=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${n[0]};
      int c = ${n[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(t){const n=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),
            cEdge ? 0. : getA(${n[1]}),
            rEdge ? 0. : getA(${n[2]}),
            rEdge || cEdge ? 0. : getA(${n[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A4{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Js(this.outputShape.length);let s="";for(let r=0;r<4;r++){let i="thisRC = rc;";r%2===1&&(i+="thisRC.z += 1;"),r>1&&(i+="thisRC.y += 1;"),s+=`
        ${i}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${vgt(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?A2():T2(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function vgt(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?vft(["r","c","d"],"inputShape"):Pl(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kgt{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,n,s){const r=R4(n,s),i=_4(t,r,s);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const o=F4(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const u=this.freeTextures[i].shift();return this.usedTextures[i].push(u),u}let a;return r===Ns.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Ns.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Ns.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Ns.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Ns.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(t,n,s,r){if(this.freeTextures==null)return;const i=R4(s,r),o=_4(n,i,r);o in this.freeTextures||(this.freeTextures[o]=[]);const a=F4(n,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=dt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[o],c=l.indexOf(t);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Igt(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function F4(e,t,n,s,r){const i=Cgt(t,s);let o;if(r){const[u,l]=Dh(e[0],e[1]);o=u*l}else{const[u,l]=Pf(e[0],e[1]);o=u*l}const a=Igt(n,i);return o*a}function Cgt(e,t){switch(e){case Ns.PACKED_2X2_FLOAT32:return $4(t);case Ns.PACKED_2X2_FLOAT16:return S4(t);case Ns.UNPACKED_FLOAT32:return k4(t);case Ns.UNPACKED_FLOAT16:return I4(t);case Ns.PACKED_4X1_UNSIGNED_BYTE:return C4(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function $gt(e){return dt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Ns.PACKED_2X2_FLOAT32:Ns.UNPACKED_FLOAT32:e?Ns.PACKED_2X2_FLOAT16:Ns.UNPACKED_FLOAT16}function R4(e,t){if(e===ai.UPLOAD)return Ns.PACKED_2X2_FLOAT32;if(e===ai.RENDER||e==null)return $gt(t);if(e===ai.DOWNLOAD||e===ai.PIXELS)return Ns.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function _4(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ko{constructor(t,n){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Js(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Ti="if (isnan(x)) return x;",Sgt="return x;",M4="return abs(x);",Ngt="return (x >= 0.0) ? x : (exp(x) - 1.0);",Egt=Ti+`
  return (x < 0.0) ? 0.0 : x;
`,Dgt=Ti+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Cu="return x;",Tgt="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Agt="return x;",Fgt=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Rgt=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_gt=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Mgt="return 1.0 / (1.0 + exp(-1.0 * x));";class $u{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Js(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ogt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Js(this.outputShape.length);const n=t.length,s=Qs("rc",n),r=sn(n),i=ygt(n,s),o=s.slice(-2),a=n<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lgt=c_,zgt=1e-7,Bgt=1e-4,M2={};function Pgt(e){return e in M2||(M2[e]={}),M2[e]}const Wgt=dt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Vgt=600;function Ugt(){return dt().global.screen==null?1024:dt().global.screen.height*dt().global.screen.width*window.devicePixelRatio*Vgt/1024/1024}class sb extends rk{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!dt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(t!=null){if(t instanceof R2)n=t;else{const s=po(dt().getNumber("WEBGL_VERSION"),t);n=new R2(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=po(dt().getNumber("WEBGL_VERSION"));n=new R2(s),this.binaryCache=Pgt(dt().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new kgt(this.gpgpu),this.numMBBeforeWarning=Ugt(),this.texData=new gF(this,Lo())}nextDataId(){return sb.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,n,s,r,i,o){const a=this.makeTensorInfo(n,s),u=this.texData.get(a.dataId);u.isPacked=!1,u.texture={texture:t,texShape:[r,i]},u.texShape=[r,i];const l=Qx(n),c=new v4(l,!1,o),h=this.runWebGLProgram(c,[a],s,[[r,i]]);return h.shape=n,u.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(t,n,s){if((dt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||dt().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:n,dtype:s,values:t,usage:ai.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const n=this.texData.get(t);n.refCount++}decRef(t){if(this.texData.has(t)){const n=this.texData.get(t);n.refCount--}}move(t,n,s,r,i){if(dt().getBool("DEBUG")&&this.checkNumericalProblems(n),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:r,values:n,usage:ai.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const n=this.texData.get(t),{values:s,dtype:r,complexTensorInfos:i,slice:o,shape:a,isPacked:u}=n;if(o!=null){let d;u?d=new $u(a,Cu):d=new Ko(a,Cu);const p=this.runWebGLProgram(d,[{dataId:t,shape:a,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(t);if(r==="string")return s;const l=this.activeTimers!=null;let c;l&&(c=dr());let h;if(r==="complex64"){const d=this.readSync(i.real.dataId),p=this.readSync(i.imag.dataId);h=Ta(d,p)}else h=this.getValuesFromTexture(t);return l&&(this.downloadWaitMs+=dr()-c),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const f=this.pendingRead.get(t);return new Promise(m=>f.push(m))}const n=this.texData.get(t),{values:s,shape:r,slice:i,dtype:o,complexTensorInfos:a,isPacked:u}=n;if(i!=null){let f;u?f=new $u(r,Cu):f=new Ko(r,Cu);const m=this.runWebGLProgram(f,[{dataId:t,shape:r,dtype:o}],o),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(t);if(dt().getBool("DEBUG")&&!dt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&dt().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(o!=="complex64"&&dt().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);const f=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(f.texture.texture,...Yx(r))}this.pendingRead.set(t,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(o==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=f[0],g=f[1];h=Ta(m,g)}else if(l==null)h=this.getValuesFromTexture(t);else{const f=bt(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(l,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){const f=this.gpgpu.gl;Ut(f,()=>f.deleteBuffer(l))}const d=this.convertAndCacheOnCPU(t,h),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(f=>f(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Lo().removeDataId(t,this),this.pendingDeletes--),d}readToGPU(t,n={}){const s=this.texData.get(t),{values:r,shape:i,slice:o,dtype:a,isPacked:u,texture:l}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let p;u?p=new $u(i,Cu):p=new Ko(i,Cu);const f=this.runWebGLProgram(p,[{dataId:t,shape:i,dtype:a}],a),m=this.readToGPU(f,n);return this.disposeIntermediateTensorInfo(f),m}if(l==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(t,n.customTexShape),h=Lo().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(t){const n=this.readSync(t.dataId);if(t.dtype==="string")try{const s=n.map(r=>au(r));return we(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return we(t.shape,t.dtype,n)}checkNumericalProblems(t){if(t!=null)for(let n=0;n<t.length;n++){const s=t[n];if(!Kpt(s))throw dt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:n,dtype:s,isPacked:r}=this.texData.get(t),i=bt(n);if(dt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(t),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Yx(n)).subarray(0,i);return this.disposeIntermediateTensorInfo(d),f}const o=dt().getBool("WEBGL_PACK")&&r===!0,a=o?Qx(n):n,u=o?new cmt(a):new lmt(a),l=this.runWebGLProgram(u,[{shape:a,dtype:s,dataId:t}],"float32"),c=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const n=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,t();const i=pl(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),o=pl(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=n,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(i);a.kernelMs=QY(u),a.getExtraProfileInfo=()=>u.map((l,c)=>({name:o[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:dr(),endMs:null}}endTimer(t){return dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=dr(),t)}async getQueryTime(t){if(dt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const n=t;return n.endMs-n.startMs}disposeData(t,n=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(n?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!n&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,n),this.disposeData(s.imag.dataId,n)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:n,dtype:s,texShape:r,usage:i,isPacked:o,slice:a}=this.texData.get(t),u=a&&a.origDataId||t,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),n!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(n,r,i,o)));const c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,n=Wgt){return dt().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&bt(s.shape)<n)}getGPGPUContext(){return this.gpgpu}where(t){ti("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=t.dataSync();return Lgt(t.shape,n)}packedUnaryOp(t,n,s){const r=new $u(t.shape,n),i=this.compileAndRun(r,[t],s);return Lo().makeTensorFromTensorInfo(i)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const r=E4(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,r)}if(dt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,M4,t.dtype);const n=new Ko(t.shape,M4),s=this.compileAndRun(n,[t]);return Lo().makeTensorFromTensorInfo(s)}makeTensorInfo(t,n,s){let r;if(n==="string"&&s!=null&&s.length>0&&op(s[0])){const i=s.map(o=>ou(o));r=this.write(i,t,n)}else r=this.write(s,t,n);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:n}}makeOutput(t,n,s){return Lo().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,s),this)}unpackTensor(t){const n=new Ogt(t.shape);return this.runWebGLProgram(n,[t],t.dtype)}packTensor(t){const n=new wgt(t.shape),s=!0;return this.runWebGLProgram(n,[t],t.dtype,null,s)}packedReshape(t,n){const s=[Th(t.shape),...Ah(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},i=[Th(n),...Ah(n)],o=new A4(i,s),a=!0,u=[s],l=this.runWebGLProgram(o,[r],t.dtype,u,a);return{dataId:l.dataId,shape:n,dtype:l.dtype}}decode(t,n){const s=this.texData.get(t),{isPacked:r,shape:i,dtype:o}=s;if(n!=null){const d=bt(i),p=n[0]*n[1]*4;O(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Qx(i);let u;r?u=new umt(a):u=new amt(a);const l=!0,c=[n??Yx(a)],h=this.runWebGLProgram(u,[{shape:a,dtype:o,dataId:t}],o,c,l,n);return{dtype:o,shape:i,dataId:h.dataId}}runWebGLProgram(t,n,s,r,i=!1,o){const a=this.makeTensorInfo(t.outputShape,s),u=this.texData.get(a.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===Bf.DENSE){const x=o??Yx(t.outputShape);u.texShape=x.map(b=>b*2)}if(t.outTexUsage!=null&&(u.usage=t.outTexUsage),bt(a.shape)===0)return u.values=Cs(a.dtype,0),a;const l=[],c=n.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(b.texture==null){if(!t.packedInputs&&bt(x.shape)<=dt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!b.isPacked!=!!t.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),l.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!eb(b.shape,x.shape)){const w=x,y=x.shape;x.shape=b.shape,x=this.packedReshape(x,y),l.push(x),b=this.texData.get(x.dataId),w.shape=y}return{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:u,isUniform:!1},d=omt(t,c,h),p=this.getAndSaveBinary(d,()=>rmt(this.gpgpu,t,c,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),dt().get("ENGINE_COMPILE_ONLY")||imt(this.gpgpu,p,c,h,r),l.forEach(x=>this.disposeIntermediateTensorInfo(x)),f&&(m=this.endTimer(m),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(m)}));const g=dt().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const x=dr();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!dt().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&i===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(t,n,s,r,i=!1){return s=s||n[0].dtype,this.runWebGLProgram(t,n,s,r,i)}getAndSaveBinary(t,n){return t in this.binaryCache||(this.binaryCache[t]=n()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(dt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ct(()=>{if(!dt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=dt().getBool("DEBUG");dt().set("DEBUG",!1);const n=this.abs(Be(1e-8)).dataSync()[0];if(dt().set("DEBUG",t),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?zgt:Bgt}uploadToGPU(t){const n=this.texData.get(t),{shape:s,dtype:r,values:i,texture:o,usage:a,isPacked:u}=n;if(o!=null)return;const l=this.activeTimers!=null;let c;l&&(c=dr());let h=n.texShape;if(h==null&&(h=dft(s,u),n.texShape=h),i!=null){const d=Qx(s);let p,f=h[1],m=h[0];const g=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(u||!g)&&([f,m]=Dh(h[0],h[1])),u?p=new dmt(d,g):p=new v4(d,g);const x=g?[m,f]:h,b=this.makeTensorInfo(x,r),w=this.texData.get(b.dataId);g?w.usage=ai.PIXELS:w.usage=ai.UPLOAD,w.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),f,m,i);const y=[[m,f]],v=!0,k=this.runWebGLProgram(p,[b],r,y,v),C=this.texData.get(k.dataId);n.texShape=C.texShape,n.isPacked=C.isPacked,n.usage=C.usage,dt().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(n.texture=C.texture,n.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(b),l&&(this.uploadWaitMs+=dr()-c)}else{const d=this.acquireTexture(h,a,r,u);n.texture=d}}convertAndCacheOnCPU(t,n){const s=this.texData.get(t),{dtype:r}=s;return n!=null&&(s.values=Ggt(n,r)),s.values}acquireTexture(t,n,s,r){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,n,r)}computeBytes(t,n){return t[0]*t[1]*j0(n)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,n]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(n));return Promise.all(t)}else{for(const[,n]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(n),r(!0)}catch(i){throw i}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await L_(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(h4(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:n,customUniformLocations:s,infLoc:r,nanLoc:i,inShapesLocations:o,inTexShapesLocations:a,outShapeLocation:u,outShapeStridesLocation:l,outTexShapeLocation:c}=y4(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=n,t.customUniformLocations=s,t.infLoc=r,t.nanLoc=i,t.inShapesLocations=o,t.inTexShapesLocations=a,t.outShapeLocation=u,t.outShapeStridesLocation=l,t.outTexShapeLocation=c}}createTensorFromGPUData(t,n,s){t.channels=t.channels||"RGBA";const{texture:r,height:i,width:o,channels:a}=t,u=Lo().backend;if(!u.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=u.writeTexture(r,n,s,i,o,a);return Lo().makeTensorFromDataId(l,n,s,u)}}sb.nextDataId=0;function Ggt(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){const n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */bR()&&MR("webgl",()=>new sb,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O2=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Oh{constructor(t,n,s){this.variableNames=["A","B"],this.outputShape=fe(n,s),this.enableShapeUniforms=Js(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uf=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Gf{constructor(t,n,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=fe(n,s);const i=this.outputShape.length;this.enableShapeUniforms=Js(i);let o="";if(r)if(i===0||bt(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${sn(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const a=Qs("coords",i);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${a[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${a[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${a[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${a[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Br(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const Hgt={kernelName:Ep,backendName:"webgl",kernelFunc:Br};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Su(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,i=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(i.dataId),a=Br({inputs:{x:s},backend:n}),u=Br({inputs:{x:r},backend:n});return o.complexTensorInfos={real:a,imag:u},i}const qgt={kernelName:vk,backendName:"webgl",kernelFunc:Su};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O4="return (a < 0.) ? b * a : a;",L4=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function jgt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:i}=s,o=n.makeTensorInfo([],"float32",iu(i,"float32")),a=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gf(L4,r.shape,o.shape):new Oh(O4,r.shape,o.shape),u=n.runWebGLProgram(a,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),u}const Kgt={kernelName:f1,backendName:"webgl",kernelFunc:jgt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z4="return (a < 0.) ? b * a : a;",B4=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Xgt(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,i=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gf(B4,s.shape,r.shape):new Oh(z4,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],"float32")}const Ygt={kernelName:R1,backendName:"webgl",kernelFunc:Xgt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lh="if (isnan(x)) return x;";function Ae({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:i})=>{const{x:o}=r,a=i,u=s||o.dtype;if(a.shouldExecuteOnCPU([o])&&n!=null){const h=a.texData.get(o.dataId),d=n(h.values,u);return a.makeTensorInfo(o.shape,u,d)}const l=dt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let c;return l?c=new $u(o.shape,t):c=new Ko(o.shape,e),a.runWebGLProgram(c,[o],u)}}function Es({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:o,backend:a})=>{const{a:u,b:l}=o,c=a;if(s&&u.dtype==="complex64"){const f=c.texData.get(u.dataId),m=c.texData.get(l.dataId),[g,x]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[y,v]=w,k={dataId:y.dataId,dtype:y.dtype,shape:u.shape},C={dataId:v.dataId,dtype:v.dtype,shape:l.shape},I=new Oh(e,u.shape,l.shape);return c.runWebGLProgram(I,[k,C],_r(y.dtype,v.dtype))}),b=Su({inputs:{real:g,imag:x},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(x),b}const h=i||_r(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||c.shouldExecuteOnCPU([u,l]))&&r!=null){const f=c.texData.get(u.dataId).values,m=c.texData.get(l.dataId).values,g=u.dtype==="string"?Dl(f):f,x=u.dtype==="string"?Dl(m):m,[b,w]=r(u.shape,l.shape,g,x,h),y=c.makeTensorInfo(w,h),v=c.texData.get(y.dataId);return v.values=b,y}const d=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let p;return d?p=new Gf(t,u.shape,l.shape,n):p=new Oh(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function Hf(e,t=!1){if(e==="linear")return t?Agt:Sgt;if(e==="relu")return t?Rgt:Egt;if(e==="elu")return t?Fgt:Ngt;if(e==="relu6")return t?_gt:Dgt;if(e==="prelu")return t?B4:z4;if(e==="leakyrelu")return t?L4:O4;if(e==="sigmoid")return t?Mgt:Tgt;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P4{constructor(t,n,s,r=!1,i=!1,o=!1,a=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Js(this.outputShape.length);const c=r?t[1]:t[2],h=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=i?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",x="";a&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const b=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let w="rc.x",y="rc.x";t[0]<n[0]?w=`imod(rc.x, ${t[0]})`:n[0]<t[0]&&(y=`imod(rc.x, ${n[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${y};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};let V4=class{constructor(t,n,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=fe(n,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U4="return a * b;";function L2(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,i=_r(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=n.texData.get(s.dataId),u=n.texData.get(r.dataId),l=new V4(W4.REAL,s.shape,r.shape),c=new V4(W4.IMAG,s.shape,r.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:r.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(l,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=Su({inputs:{real:d,imag:p},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}if(n.shouldExecuteOnCPU([s,r])){const a=n.texData.get(s.dataId),u=n.texData.get(r.dataId),[l,c]=Ymt(s.shape,r.shape,a.values,u.values,i),h=n.makeTensorInfo(c,i),d=n.texData.get(h.dataId);return d.values=l,h}let o;return dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Gf(U4,s.shape,r.shape):o=new Oh(U4,s.shape,r.shape),n.runWebGLProgram(o,[s,r],i)}const Zgt={kernelName:Lp,backendName:"webgl",kernelFunc:L2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jgt(e,t,n){const s=[Th(e.shape),...Ah(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},i=[Th(t),...Ah(t)],o=new A4(i,s),a=!0,u=[s],l=n.runWebGLProgram(o,[r],e.dtype,u,a);return{dataId:l.dataId,shape:t,dtype:l.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:i}=s,o=n,a=bt(r.shape),u=yF(i,a),l=bt(u);O(a===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=o.texData.get(r.dataId);return c.isPacked&&!eb(r.shape,u)&&!(c.texture!==null&&eb(c.shape,u))?Jgt(r,u,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype})}const Qgt={kernelName:M1,backendName:"webgl",kernelFunc:Bt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G4{constructor(t,n){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:o}=t;this.outputShape=[r,o];const a=Math.floor(s/4)*4,u=s%4;let l="sumValue += dot(values, ones);";if(n!=null){const h=1/n;l=`sumValue += dot(values * ${Qc(h)?h.toPrecision(2):h}, ones);`}let c="";i%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${a};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t0t{constructor(t,n){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:o}=t;this.outputShape=[r,o];let a="0.0",u="";n==="prod"?a="1.0":n==="min"?(a="1.0 / 1e-20",u="min"):n==="max"&&(a="-1.0 / 1e-20",u="max");let l=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?l="sumValue":n==="prod"?l="prodValue":n==="all"?l="allValue":n==="any"&&(l="anyValue");const c=Math.floor(s/4)*4,h=s%4;let d=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";n==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):n==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";i%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e0t(e){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const n=t.length?t[t.length-1].outSize:e[1],s=gx(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function Vl(e,t,n,s){const r=e0t(e.shape);let i=e;for(let o=0;o<r.length;o++){const{inSize:a,windowSize:u,outSize:l}=r[o];let c,h;n==="mean"?c=o===0?new G4({windowSize:u,inSize:a,batchSize:e.shape[0],outSize:l},a):new G4({windowSize:u,inSize:a,batchSize:e.shape[0],outSize:l}):c=new t0t({windowSize:u,inSize:a,batchSize:e.shape[0],outSize:l},n),h=i,i=s.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n0t{constructor(t,n){this.variableNames=["A"];const s=new Array(t.length);for(let o=0;o<s.length;o++)s[o]=t[n[o]];this.outputShape=s,this.rank=s.length;const r=sn(this.rank),i=s0t(n);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}}function s0t(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r0t{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let c=0;c<s.length;c++)s[c]=t[n[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=sn(this.rank),i=T4("rc",this.rank),o=new Array(this.rank);for(let c=0;c<n.length;c++)o[n[c]]=i[c];const a=`vec2(${o.slice(-2).join()})`,u=`++${i[this.rank-1]} < ${s[this.rank-1]}`,l=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rb(e,t,n){const s=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new r0t(e.shape,t):new n0t(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i0t(e,t,n,s){const r=t,i=e.shape.length,o=ye(r,e.shape);let a=o;const u=Cn(a,i),l=u!=null;let c=e;l&&(c=rb(e,u,s),a=Fn(a.length,i)),Ss("sum",a,i);const[h,d]=hs(c.shape,a);let p=h;n&&(p=Wn(h,o));const f=bt(d),m=bt(e.shape)/f,g=Bt({inputs:{x:c},attrs:{shape:[m,f]},backend:s}),x=hI(e.dtype),b=Vl(g,x,"sum",s),w=Bt({inputs:{x:b},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(b),l&&s.disposeIntermediateTensorInfo(c),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ib(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s;return i0t(r,i,o,n)}const o0t={kernelName:W1,backendName:"webgl",kernelFunc:ib};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tr(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:i}=s,o=n,a=r.shape.length,u=new Array(a);for(let c=0;c<u.length;c++)u[c]=r.shape[i[c]];let l;if(o.shouldExecuteOnCPU([r])){const c=o.texData.get(r.dataId).values,h=_2(c,r.shape,r.dtype,i,u);l=o.makeTensorInfo(u,r.dtype);const d=o.texData.get(l.dataId);d.values=h}else l=rb(r,i,o);return l}const a0t={kernelName:sh,backendName:"webgl",kernelFunc:tr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H4=1e3;function ob({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),x=bt(m),b=bt(g),w=fe(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);O(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);const y=n?[x,h,p]:[x,p,h],v=s?[b,f,d]:[b,d,f],k=Bt({inputs:{x:e},backend:r,attrs:{shape:y}}),C=Bt({inputs:{x:t},backend:r,attrs:{shape:v}}),I=[k,C],$=Math.max(x,b),S=n?k.shape[1]:k.shape[2],N=i!=null,F=o!=null,D=u==="leakyrelu",E=u!=null?Hf(u,!0):null,A=N||F||D||E!=null;let T;if((p===1||f===1)&&S>H4&&A===!1){let _=k,M=C;n&&(_=tr({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),I.push(_)),s&&(M=tr({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),I.push(M));const z=f!==1,B=f===1;let V=_;z&&(V=Bt({inputs:{x:_},backend:r,attrs:{shape:[$,S,1]}}),I.push(V));const G=f===1?2:1;let j=M;B&&(j=Bt({inputs:{x:M},backend:r,attrs:{shape:[$,1,S]}}),I.push(j));const H=L2({inputs:{a:V,b:j},backend:r});T=ib({inputs:{x:H},backend:r,attrs:{axis:G,keepDims:!0}}),I.push(H)}else{const _=_r(e.dtype,t.dtype),M=new P4(y,v,[$,p,f],n,s,N,E,F,D),z=[k,C];if(i!=null&&z.push(i),F&&z.push(o),D){const B=r.makeTensorInfo([],"float32",iu(a,"float32"));z.push(B),I.push(B)}T=r.runWebGLProgram(M,z,_)}const R=Bt({inputs:{x:T},backend:r,attrs:{shape:w}});I.push(T);for(const _ of I)r.disposeIntermediateTensorInfo(_);return R}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u0t(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i,bias:o,preluActivationWeights:a}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;return ob({a:r,b:i,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}const l0t={kernelName:K1,backendName:"webgl",kernelFunc:u0t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q4="return abs(x);";function c0t(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const i=n.texData.get(s.dataId),o=E4(i.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return dt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new $u(s.shape,q4):r=new Ko(s.shape,q4),n.runWebGLProgram(r,[s],s.dtype)}const h0t={kernelName:K0,backendName:"webgl",kernelFunc:c0t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d0t=Ti+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,p0t=Ae({opSnippet:d0t}),f0t={kernelName:up,backendName:"webgl",kernelFunc:p0t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m0t=Ti+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,g0t=Ae({opSnippet:m0t}),x0t={kernelName:lp,backendName:"webgl",kernelFunc:g0t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j4="return a + b;",b0t=Es({opSnippet:j4,packedOpSnippet:j4,supportsComplex:!0,cpuKernelImpl:Tmt}),y0t={kernelName:nh,backendName:"webgl",kernelFunc:b0t};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w0t{constructor(t,n){this.outputShape=[],this.outputShape=t,this.variableNames=n.map((i,o)=>`T${o}`);const s=[];this.variableNames.forEach(i=>{s.push(`float v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v0t{constructor(t,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=n.map((i,o)=>`T${o}`);const s=[];this.variableNames.forEach(i=>{s.push(`vec4 v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ab(e){const{inputs:t,backend:n}=e,s=t;if(s.length===1)return Br({inputs:{x:s[0]},backend:n});if(s.length>dt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(s.length/2),u=ab({inputs:s.slice(0,a),backend:n}),l=ab({inputs:s.slice(a),backend:n});return ab({inputs:[u,l],backend:n})}const r=s.map(a=>a.dtype).reduce((a,u)=>_r(a,u)),i=s.map(a=>a.shape),o=dt().getBool("WEBGL_PACK")?new v0t(s[0].shape,i):new w0t(s[0].shape,i);return n.runWebGLProgram(o,s,r)}const k0t={kernelName:mk,backendName:"webgl",kernelFunc:ab};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I0t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s,a=r.shape.length,u=ye(i,r.shape);let l=u;const c=Cn(l,a);let h=r;c!=null&&(h=tr({inputs:{x:r},backend:n,attrs:{perm:c}}),l=Fn(l.length,a)),Ss("all",l,a);const[d,p]=hs(h.shape,l),f=bt(p),m=Bt({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=Vl(m,m.dtype,"all",n);let x;if(o){const b=Wn(d,u);x=Bt({inputs:{x:g},backend:n,attrs:{shape:b}})}else x=Bt({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),x}const C0t={kernelName:gk,backendName:"webgl",kernelFunc:I0t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $0t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s,a=r.shape.length,u=ye(i,r.shape);let l=u;const c=Cn(l,a);let h=r;c!=null&&(h=tr({inputs:{x:r},backend:n,attrs:{perm:c}}),l=Fn(l.length,a)),Ss("any",l,a);const[d,p]=hs(h.shape,l),f=bt(p),m=Bt({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=Vl(m,m.dtype,"any",n);let x;if(o){const b=Wn(d,u);x=Bt({inputs:{x:g},backend:n,attrs:{shape:b}})}else x=Bt({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),x}const S0t={kernelName:xk,backendName:"webgl",kernelFunc:$0t};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N0t{constructor(t,n,s){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:o}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[i,o];const a=n==="max"?">":"<",u=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E0t{constructor(t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,O(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const i=t[t.length-1],o=Math.ceil(i/n);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,u=a.length,l=sn(u),c=Qs("coords",u);let h,d;if(o===1){d=u+1;const I=sn(d);h=`
        ${I} sourceLocR = ${I}(${c.join()}, 0);
        ++${c[u-1]};
        ${I} sourceLocG = ${I}(${c.join()}, 0);
        ++${c[u-2]};
        ${I} sourceLocA = ${I}(${c.join()}, 0);
        --${c[u-1]};
        ${I} sourceLocB = ${I}(${c.join()}, 0);
        --${c[u-2]};`}else d=u,h=`
        ${l} sourceLocR = coords;
        ++${c[u-1]};
        ${l} sourceLocG = coords;
        ++${c[u-2]};
        ${l} sourceLocA = coords;
        --${c[u-1]};
        ${l} sourceLocB = coords;
        --${c[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(I=>"int "+I),g=Qs("sourceLocR",d-1).concat("inIdx.r"),x=Qs("sourceLocG",d-1).concat("inIdx.g"),b=Qs("sourceLocB",d-1).concat("inIdx.b"),w=Qs("sourceLocA",d-1).concat("inIdx.a"),y=s==="max"?"greaterThan":"lessThan",v=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,k=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,C=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[u-1]} < ${a[u-1]-1};
        bool hasNextRow = ${c[u-2]} < ${a[u-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K4(e,t,n,s=null){let r=t.shape[0],i=t.shape[1];s!=null&&(r=s.shape[0],i=s.shape[1]);const o=gx(i),a={windowSize:o,inSize:i,batchSize:r,outSize:Math.ceil(i/o)},u=new N0t(a,n,s==null),l=[t];s!=null&&l.push(s);const c=e.runWebGLProgram(u,l,"int32");if(c.shape[1]===1)return c;const h=K4(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function X4(e,t,n,s=null){const r=s!=null?s.shape:t.shape,i=r[r.length-1],o=gx(i),a=new E0t(r,o,n,s==null),u=s==null?[t]:[t,s],l=e.runWebGLProgram(a,u,"int32");if(l.shape.length===t.shape.length){const c=X4(e,t,n,l);return e.disposeIntermediateTensorInfo(l),c}return l}function Y4(e,t,n,s){const r=[n];if(Ss("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!dt().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const i=[],o=e.texData.get(t.dataId),a=o!==null&&o.isPacked;let u=t;a&&(u=e.unpackTensor(t),i.push(u));const[l,c]=hs(u.shape,r),h=bt(c),d=Bt({inputs:{x:u},backend:e,attrs:{shape:[-1,h]}});i.push(d);const p=K4(e,d,s);i.push(p);const f=Bt({inputs:{x:p},backend:e,attrs:{shape:l}});return i.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return X4(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D0t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;let o=ye(i,r.shape);const a=Cn(o,r.shape.length);let u=r;const l=[];a!=null&&(u=tr({inputs:{x:r},backend:n,attrs:{perm:a}}),l.push(u),o=Fn(o.length,u.shape.length)),Ss("argMax",[o[0]],u.shape.length);const c=Y4(n,u,o[0],"max");return l.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}const T0t={kernelName:X0,backendName:"webgl",kernelFunc:D0t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A0t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;let o=ye(i,r.shape);const a=Cn(o,r.shape.length);let u=r;const l=[];a!=null&&(u=tr({inputs:{x:r},backend:n,attrs:{perm:a}}),l.push(u),o=Fn(o.length,u.shape.length)),Ss("argMin",[o[0]],u.shape.length);const c=Y4(n,u,o[0],"min");return l.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}const F0t={kernelName:Y0,backendName:"webgl",kernelFunc:A0t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R0t=Ti+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,_0t=Ae({opSnippet:R0t}),M0t={kernelName:cp,backendName:"webgl",kernelFunc:_0t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O0t=Ti+"return log(x + sqrt(x * x + 1.0));",L0t=Ae({opSnippet:O0t}),z0t={kernelName:hp,backendName:"webgl",kernelFunc:L0t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B0t=Ti+`
  return atan(x);
`,P0t=Ae({opSnippet:B0t}),W0t={kernelName:dp,backendName:"webgl",kernelFunc:P0t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V0t=O2+`
  return atan(a, b);
`,U0t=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Uf+`
  return result;
`,G0t=Es({opSnippet:V0t,packedOpSnippet:U0t}),H0t={kernelName:fp,backendName:"webgl",kernelFunc:G0t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q0t=Ti+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,j0t=Ae({opSnippet:q0t}),K0t={kernelName:pp,backendName:"webgl",kernelFunc:j0t};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qf{constructor(t,n,s,r=!1,i=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideHeight,u=t.strideWidth,l=t.dilationHeight,c=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const m=n==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(m||(b="-1.0 / 1e-20"),s){const I=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${u});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${I} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?i?g:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let y=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(y="avgValue / max(count, 1.0)");const v=Math.floor(o/4)*4,k=o%4,C=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${u});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${v};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${y});
      }
    `}}class z2{constructor(t,n,s,r=!1,i=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideDepth,u=t.strideHeight,l=t.strideWidth,c=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterDepth,f=t.effectiveFilterHeight,m=t.effectiveFilterWidth,g=t.padInfo.front,x=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const w=n==="avg";let y="0.0";if(w||(y="-1.0 / 1e-20"),s){const S=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${x}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${S} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?i?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let k=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(k="avgValue / max(count, 1.0)");const C=Math.floor(o/4)*4,I=o%4,$=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${x}, ${b});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${$}
            }

            int xC = xCCorner + ${C};
            if (${I===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${$}
            } else if (${I===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${$}
            } else if (${I===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${$}
            }
          }
        }
        setOutput(${k});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X0t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Wf(r,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=s,l=1;O(Ws(o,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=vi(r.shape,i,o,l,a,u);if(c.filterWidth===1&&c.filterHeight===1&&Le(c.inShape,c.outShape))return Br({inputs:{x:r},backend:n});const h=new qf(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}const Y0t={kernelName:Z0,backendName:"webgl",kernelFunc:X0t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z0t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=s,c=[1,1,1],h=Sa(r.shape,i,o,c,a,u,l),d=new z2(h,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}const J0t={kernelName:J0,backendName:"webgl",kernelFunc:Z0t};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q0t{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const n=t.filterHeight,s=t.filterWidth,r=t.strideHeight,i=t.strideWidth,o=t.dilationHeight,a=t.dilationWidth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=u-1-t.padInfo.top,h=l-1-t.padInfo.left,d=1/(n*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class t1t{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const n=t.filterDepth,s=t.filterHeight,r=t.filterWidth,i=t.strideDepth,o=t.strideHeight,a=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,c=t.dilationWidth,h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=h-1-t.padInfo.front,m=d-1-t.padInfo.top,g=p-1-t.padInfo.left,x=1/(n*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e1t(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,o=i,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=s,h=[1,1,1],d=Sa(o.shape,a,u,h,l,c),p=new t1t(d);return n.runWebGLProgram(p,[r],o.dtype)}const n1t={kernelName:yk,backendName:"webgl",kernelFunc:e1t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s1t(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,o=i;Wf([r,i],"avgPoolGrad");const{filterSize:a,strides:u,pad:l}=s,c=vi(o.shape,a,u,1,l),h=new Q0t(c);return n.runWebGLProgram(h,[r],o.dtype)}const r1t={kernelName:bk,backendName:"webgl",kernelFunc:s1t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i1t(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i}=t,{transposeA:o,transposeB:a}=s;return ob({a:r,b:i,transposeA:o,transposeB:a,backend:n})}const o1t={kernelName:Q0,backendName:"webgl",kernelFunc:i1t};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a1t{constructor(t,n,s,r,i,o){this.outputShape=[],this.variableNames=["x","mean","variance"],fe(t,n),fe(t,s);let a="0.0";r!=null&&(fe(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";i!=null&&(fe(t,i),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u1t{constructor(t,n,s,r,i,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],fe(t,n),fe(t,s);let a="vec4(0.0)";r!=null&&(fe(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";i!=null&&(fe(t,i),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l1t=({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:i,offset:o,scale:a}=e;O(r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;u==null&&(u=.001);const l=[s,r,i];let c=null;o!=null&&(c=o.shape,l.push(o));let h=null;a!=null&&(h=a.shape,l.push(a));const d=dt().getBool("WEBGL_PACK_NORMALIZATION")?new u1t(s.shape,r.shape,i.shape,c,h,u):new a1t(s.shape,r.shape,i.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)},c1t={kernelName:h1,backendName:"webgl",kernelFunc:l1t};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h1t{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const n=sn(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=d1t(this.rank);let r;const i=t.map((o,a)=>`sourceLoc.${B2[a]} = start[${a}] + coords.${B2[a]};`);r=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const B2=["x","y","z","w","u","v"];function d1t(e){if(e===1)return"sourceLoc";if(e<=6)return B2.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p1t{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=sn(this.rank),s=Qs("coords",this.rank),r=Qs("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${i})`,a=`
      result.x = ${o};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${o};
        --${r[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${o};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${o};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${n}(${t.map((c,h)=>`start[${h}]`).join()});`:t.map((c,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${a}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f1t(e,t,n,s){const r=s.texData.get(e.dataId),i=s.makeTensorInfo(n,e.dtype),o=s.texData.get(i.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let a=oC(t,te(e.shape));r.slice&&(a+=r.slice.flatOffset),o.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||e.dataId};const u=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,u+1),i}function zh(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,size:o}=s,[a,u]=mx(r,i,o);if(sC(r,a,u),bt(u)===0)return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=n.texData.get(r.dataId),d=agt(h.values,a,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,d)}const{isPacked:l}=n.texData.get(r.dataId),c=iC(r.shape,a,u);if(l||!c){const h=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new p1t(u):new h1t(u),d=[a];return n.runWebGLProgram(h,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),f1t(r,a,u,n)}const m1t={kernelName:P1,backendName:"webgl",kernelFunc:zh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g1t=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,crops:o}=s;O(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((b,w)=>b*w),u=xf(r.shape,i,a),l=bf(u.length,i.length),c=yf(r.shape,i,a),h=hC(o,i.length),d=dC(c,o,i.length),p=[],f=Bt({inputs:{x:r},backend:n,attrs:{shape:u}}),m=tr({inputs:{x:f},backend:n,attrs:{perm:l}}),g=Bt({inputs:{x:m},backend:n,attrs:{shape:c}}),x=zh({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(b=>n.disposeIntermediateTensorInfo(b)),x},x1t={kernelName:t1,backendName:"webgl",kernelFunc:g1t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b1t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:o}=s,a=n.readSync(r.dataId),u=n.readSync(i.dataId),l=N4(a,u,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,l)}const y1t={kernelName:wk,backendName:"webgl",kernelFunc:b1t};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w1t(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,i=n.readSync(s.dataId),o=n.readSync(r.dataId),a=fe(Array.from(i),Array.from(o));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const v1t={kernelName:SF,backendName:"webgl",kernelFunc:w1t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k1t="return float(a != b);",Z4=Es({opSnippet:k1t,cpuKernelImpl:Jmt,dtype:"bool"}),I1t={kernelName:E1,backendName:"webgl",kernelFunc:Z4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jf(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Br({inputs:{x:r.complexTensorInfos.real},backend:n})}const C1t={kernelName:qk,backendName:"webgl",kernelFunc:jf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $1t="return float(int(x));";function S1t(e,t){const n=new Ko(e.shape,$1t),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P2(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return Br({inputs:{x:r},backend:n});const o=ds(r.shape),a=P2({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=Su({inputs:{real:a,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(a),u}if(r.dtype==="complex64"){const o=jf({inputs:{input:r},backend:n}),a=P2({inputs:{x:o},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(o),a}if(!wF(r.dtype,i)){const o=Br({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:i}}if(n.shouldExecuteOnCPU([r])){const o=n.texData.get(r.dataId).values,[a,u,l]=Fmt(o,r.shape,r.dtype,i);return n.makeTensorInfo(a,u,l)}if(i==="int32")return S1t(r,n);if(i==="bool"){const o=n.makeTensorInfo([],"bool",Cs("bool",1)),a=Z4({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),a}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const N1t={kernelName:mp,backendName:"webgl",kernelFunc:P2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J4="return ceil(x);",E1t=Ae({opSnippet:J4,packedOpSnippet:J4,cpuKernelImpl:Rmt}),D1t={kernelName:gp,backendName:"webgl",kernelFunc:E1t};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T1t{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A1t{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F1t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:i,clipValueMax:o}=s;let a;dt().getBool("WEBGL_PACK_CLIP")?a=new A1t(r.shape):a=new T1t(r.shape);const u=[[i],[o]];return n.runWebGLProgram(a,[r],r.dtype,u)}const R1t={kernelName:xp,backendName:"webgl",kernelFunc:F1t};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _1t{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q4(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function M1t(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),i=new _1t(s.shape),o=[Q4(s,r.complexTensorInfos.real),Q4(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(i,o,o[0].dtype)}const O1t={kernelName:e1,backendName:"webgl",kernelFunc:M1t};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L1t{constructor(t){this.outputShape=[],this.outputShape=Wo(t,1),this.variableNames=t.map((o,a)=>`T${a}`);const n=new Array(t.length-1);n[0]=t[0][1];for(let o=1;o<n.length;o++)n[o]=n[o-1]+t[o][1];const s=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<n.length;o++){const a=n[o-1];s.push(`else if (yC < ${n[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const r=n.length,i=n[n.length-1];s.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z1t{constructor(t,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Wo(t,n);const s=this.outputShape,r=s.length,i=sn(r),o=Qs("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((m,g)=>`T${g}`);const u=new Array(t.length-1);u[0]=t[0][n];for(let m=1;m<u.length;m++)u[m]=u[m-1]+t[m][n];const l=a[n],c=a.slice(-2),h=a.join();let d=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let m=1;m<u.length;m++){const g=u[m-1];d+=`
        if (${l} < ${u[m]}  && ${l} >= ${u[m-1]}) {
          return getChannel(
            getT${m}(${ub(a,l,g)}),
            vec2(${ub(c,l,g)}));
        }`}const p=u.length,f=u[u.length-1];d+=`
        return getChannel(
          getT${p}(${ub(a,l,f)}),
          vec2(${ub(c,l,f)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[r-1]} = ${o[r-1]} + 1;
        if (${o[r-1]} < ${s[r-1]}) {
          result.g = getValue(${o});
        }

        ${o[r-2]} = ${o[r-2]} + 1;
        if (${o[r-2]} < ${s[r-2]}) {
          result.a = getValue(${o});
        }

        ${o[r-1]} = ${o[r-1]} - 1;
        if (${o[r-2]} < ${s[r-2]} &&
            ${o[r-1]} < ${s[r-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function ub(e,t,n){const s=e.indexOf(t);return e.map((r,i)=>i===s?`${r} - ${n}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lb(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Br({inputs:{x:r.complexTensorInfos.imag},backend:n})}const B1t={kernelName:zk,backendName:"webgl",kernelFunc:lb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kf(e,t,n){const s=e[0].dtype;if(s==="complex64"){const p=e.map(b=>jf({inputs:{input:b},backend:n})),f=e.map(b=>lb({inputs:{input:b},backend:n})),m=Kf(p,t,n),g=Kf(f,t,n),x=Su({inputs:{real:m,imag:g},backend:n});return p.forEach(b=>n.disposeIntermediateTensorInfo(b)),f.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),x}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){const p=e.map(y=>{const v=[-1,bt(y.shape.slice(t))];return Bt({inputs:{x:y},backend:n,attrs:{shape:v}})}),f=p.map(y=>({vals:n.readSync(y.dataId),shape:y.shape})),m=Wo(p.map(y=>y.shape),1),g=p[0].shape[0]===1,x=_mt(f,m,s,g),b=Wo(e.map(y=>y.shape),t),w=n.makeTensorInfo(b,s,x);return p.forEach(y=>n.disposeIntermediateTensorInfo(y)),w}const i=e.filter(p=>bt(p.shape)>0),o=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){const p=o?new Ko(e[0].shape,Cu):new $u(e[0].shape,Cu);return n.runWebGLProgram(p,e,s)}const a=dt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>a){const p=[];for(let m=0;m<i.length;m+=a){const g=i.slice(m,m+a);p.push(Kf(g,t,n))}const f=Kf(p,t,n);for(const m of p)n.disposeIntermediateTensorInfo(m);return f}if(o){const p=new z1t(i.map(f=>f.shape),t);return n.runWebGLProgram(p,i,s)}const{tensors2D:u,outShape:l}=P1t(i,t,n),c=new L1t(u.map(p=>p.shape)),h=n.runWebGLProgram(c,u,s);u.forEach(p=>n.disposeIntermediateTensorInfo(p));const d=Bt({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function P1t(e,t,n){const s=Wo(e.map(r=>r.shape),t);return{tensors2D:e.map(r=>Bt({inputs:{x:r},attrs:{shape:[-1,bt(r.shape.slice(t))]},backend:n})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tz(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,i=ye(r,t[0].shape)[0],o=t.map(l=>l.shape);uC(o,i);const a=Wo(t.map(l=>l.shape),i);if(bt(a)===0)return n.makeTensorInfo(a,t[0].dtype,[]);const u=t.filter(l=>bt(l.shape)>0);return u.length===1?Br({inputs:{x:u[0]},backend:n}):Kf(u,i,n)}const W1t={kernelName:n1,backendName:"webgl",kernelFunc:tz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ez{constructor(t,n=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,a=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4,g=t.dataFormat==="channelsLast",x=g?1:2,b=g?2:3,w=g?3:1;let y="",v="";s&&(r?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:y=`
          float activation(float x) {
            ${s}
          }
        `,v="result = activation(result);");const k=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${v}
        setOutput(result);
      }
    `}}class V1t{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const n=t.padInfo.front,s=t.padInfo.top,r=t.padInfo.left,i=t.strideDepth,o=t.strideHeight,a=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,c=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${o}, ${a});
      const ivec3 pads = ivec3(${n}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nz{constructor(t,n=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Js(this.outputShape.length);const o=t.padInfo.left,a=t.strideWidth,u=t.dilationWidth,l=t.filterHeight,c=t.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<c;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const x=g*2;if(d+=`
           xC = xCCorner + ${x*u};
           `,a===1){if(x<c&&(o%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,u===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<c)){const b=o%2===0?ik(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,u>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):b===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<c&&(o%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<c&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<c&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<c&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:i?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U1t{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Js(this.outputShape.length);const{dataFormat:s}=n,r=Zs(),i=s==="channelsLast",o=i?1:2,a=i?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let l="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)l+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cb(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function sz({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const u=e.shape,l=s.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p=n.dataFormat==="channelsLast",f=!1,m=!1;let g;const x=[];if(i!=null){const b=cb(i.shape,p);b!=null&&(i=Bt({inputs:{x:i},backend:s,attrs:{shape:b}}),x.push(i))}if(r!=null){const b=cb(r.shape,p);b!=null&&(r=Bt({inputs:{x:r},backend:s,attrs:{shape:b}}),x.push(r))}if(!((h===1||d===1)&&c>H4)&&l.isPacked&&p&&l.texture!=null&&u[2]%2!==0&&Le(l.shape.slice(-3),u.slice(-3))){const b=u[0]*u[1]*(u[2]+1),w={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},y=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,O(eb(l.shape,w.shape),()=>`packed reshape ${l.shape} to ${w.shape} isn't free`);const v=Bt({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});x.push(v);const k=ob({a:w,b:v,backend:s,transposeA:f,transposeB:m,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o}),C=s.texData.get(k.dataId);O(C.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=y,C.shape=n.outShape,g=Br({inputs:{x:k},backend:s}),g.shape=n.outShape,x.push(k)}else{const b=n.outHeight*n.outWidth,w=Bt({inputs:{x:e},backend:s,attrs:{shape:p?[n.batchSize,b,n.inChannels]:[n.batchSize,n.inChannels,b]}}),y=Bt({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),v=ob({a:p?w:y,b:p?y:w,transposeA:!p,transposeB:m,backend:s,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o});g=Bt({inputs:{x:v},backend:s,attrs:{shape:n.outShape}}),x.push(w),x.push(y),x.push(v)}for(const b of x)s.disposeIntermediateTensorInfo(b);return g}function rz({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f=p==="channelsLast",m=u*l*c,g=d*h,x=[n.batchSize,m,g],b=!0,w=!1,y=[];if(i!=null){const _=cb(i.shape,f);_!=null&&(i=Bt({inputs:{x:i},backend:s,attrs:{shape:_}}),y.push(i))}if(r!=null){const _=cb(r.shape,f);_!=null&&(r=Bt({inputs:{x:r},backend:s,attrs:{shape:_}}),y.push(r))}const v=Bt({inputs:{x:t},backend:s,attrs:{shape:[1,m,bt(t.shape)/m]}});y.push(v);const k=new U1t(x,n),C=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=s.runWebGLProgram(k,[e],"float32",C),$=Bt({inputs:{x:I},backend:s,attrs:{shape:x}});y.push(I),y.push($);const S=r!=null,N=i!=null,F=a==="leakyrelu",D=a?Hf(a,!0):null,E=new P4(f?$.shape:v.shape,f?v.shape:$.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,w,S,D,N,F),A=f?[$,v]:[v,$];if(r&&A.push(r),N&&A.push(i),F){const _=s.makeTensorInfo([],"float32",iu(o,"float32"));A.push(_),y.push(_)}const T=s.runWebGLProgram(E,A,"float32"),R=Bt({inputs:{x:T},backend:s,attrs:{shape:n.outShape}});y.push(T);for(const _ of y)s.disposeIntermediateTensorInfo(_);return R}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G1t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=s,h=Na(u),d=$s(r.shape,i.shape,o,l,a,c,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=sz({x:r,filter:i,convInfo:d,backend:n});else if(d.strideWidth<=2&&h==="channelsLast"&&dt().getBool("WEBGL_EXP_CONV")){const m=new nz(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(m,[r,i],"float32",g)}else if(dt().getBool("WEBGL_CONV_IM2COL"))p=rz({x:r,filter:i,convInfo:d,backend:n});else{const m=new ez(d);p=n.runWebGLProgram(m,[r,i],"float32")}const f=Bt({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}const H1t={kernelName:s1,backendName:"webgl",kernelFunc:G1t};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q1t{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const n=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,o=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${o}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class j1t{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const n=t.filterHeight,s=t.filterWidth,r=t.strideHeight,i=t.strideWidth,o=t.dataFormat==="channelsLast",a=n-1-t.padInfo.top,u=s-1-t.padInfo.left,l=o?1:2,c=o?2:3,h=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class K1t{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const n=t.strideDepth,s=t.strideHeight,r=t.strideWidth,i=t.padInfo.front,o=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${i};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${o};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class X1t{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const n=t.filterDepth,s=t.filterHeight,r=t.filterWidth,i=t.strideDepth,o=t.strideHeight,a=t.strideWidth,u=n-1-t.padInfo.front,l=s-1-t.padInfo.top,c=r-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y1t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:o,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=s,h=Na(u),d=$s(r.shape,c,o,1,a,l,!1,h),p=new q1t(d);return n.runWebGLProgram(p,[r,i],"float32")}const Z1t={kernelName:kk,backendName:"webgl",kernelFunc:Y1t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J1t(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{inputShape:o,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=s,h=Na(l),d=$s(o,i.shape,a,1,u,c,!1,h),p=new j1t(d);return n.runWebGLProgram(p,[r,i],"float32")}const Q1t={kernelName:r1,backendName:"webgl",kernelFunc:J1t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function txt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dilations:u}=s,l=lu(r.shape,i.shape,o,u,a),c=new V1t(l);return n.runWebGLProgram(c,[r,i],"float32")}const ext={kernelName:i1,backendName:"webgl",kernelFunc:txt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nxt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:o,pad:a,filterShape:u}=s,l=lu(r.shape,u,o,1,a),c=new K1t(l);return n.runWebGLProgram(c,[r,i],"float32")}const sxt={kernelName:Ik,backendName:"webgl",kernelFunc:nxt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rxt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{pad:o,strides:a,inputShape:u}=s,l=lu(u,i.shape,a,1,o),c=new X1t(l);return n.runWebGLProgram(c,[r,i],"float32")}const ixt={kernelName:Ck,backendName:"webgl",kernelFunc:rxt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oxt=Lh+`
  return cos(x);
`,axt=Ae({opSnippet:oxt}),uxt={kernelName:bp,backendName:"webgl",kernelFunc:axt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lxt=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,cxt=Ae({opSnippet:lxt}),hxt={kernelName:yp,backendName:"webgl",kernelFunc:cxt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dxt{constructor(t,n,s,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,u,l]=t,[c]=n,[h,d]=s;this.outputShape=[c,h,d,l];const p=r==="bilinear"?1:0,[f,m]=[`${a-1}.0`,`${u-1}.0`],[g,x,b]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[w,y,v]=d>1?[`${(u-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${y};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pxt=e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:i,boxInd:o}=t,{cropSize:a,method:u,extrapolationValue:l}=s,c=new dxt(r.shape,i.shape,a,u,l);return n.runWebGLProgram(c,[r,i,o],"float32")},fxt={kernelName:Sk,backendName:"webgl",kernelFunc:pxt};var Xf;(function(e){e.Prod="*",e.Sum="+"})(Xf||(Xf={}));class iz{constructor(t,n,s,r){this.op=t,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,o=this.op===Xf.Prod?"1.0":"0.0",a=s?o:`getX(${oz(i,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let l="",c="";s?(l=r?`end != ${u-1}`:"end != 0",c=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${u}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${sn(i)} coords = getOutputCoords();
        int end = ${az(i,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${c};
          ${az(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${oz(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function oz(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function az(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(e,t,n,s,r,i){const o=t.shape.length,a=Cn([s],o);let u=t;a!=null&&(u=tr({inputs:{x:t},backend:n,attrs:{perm:a}}));const l=Fn(1,o)[0];if(l!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=u.shape[l];let h=Br({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new iz(e,u.shape,!1,i),f=[[d]],m=h;h=n.runWebGLProgram(p,[h],h.dtype,f),n.disposeIntermediateTensorInfo(m)}if(r){const d=new iz(e,u.shape,r,i),p=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(p)}if(a!=null){const d=cu(a),p=tr({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mxt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:o,reverse:a}=s;return uz(Xf.Prod,r,n,i,o,a)}const gxt={kernelName:$k,backendName:"webgl",kernelFunc:mxt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xxt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:o,reverse:a}=s;return uz(Xf.Sum,r,n,i,o,a)}const bxt={kernelName:o1,backendName:"webgl",kernelFunc:xxt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yxt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:o,binaryOutput:a}=s;if(r.shape.length===1){const u=n.readSync(r.dataId),l=n.readSync(i.dataId),c=N4(u,l,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,c)}else if(r.shape.length===2){const u=n.bufferSync(r),l=n.bufferSync(i),c=Amt(u,l,o,a);return n.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const wxt={kernelName:Nk,backendName:"webgl",kernelFunc:yxt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vxt{constructor(t,n,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=n,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kxt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:i,dataFormat:o}=s,a=r.shape[0],u=o==="NHWC"?r.shape[1]:r.shape[2],l=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],h=u*i,d=l*i,p=c/(i*i),f=o==="NHWC"?[a,h,d,p]:[a,p,h,d],m=new vxt(f,i,o);return n.runWebGLProgram(m,[r],r.dtype)}const Ixt={kernelName:Ek,backendName:"webgl",kernelFunc:kxt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lz{constructor(t,n=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Js(this.outputShape.length);const o=t.filterHeight,a=t.filterWidth,u=t.outChannels/t.inChannels;let l="",c="";s&&(r?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:l=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const h=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cz{constructor(t,n=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Js(this.outputShape.length);const o=t.outChannels/t.inChannels,a=t.padInfo.left,u=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)p+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let x=0;x<h;x++)p+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const b=x*2;if(p+=`
          xC = xCCorner + ${b*l};
          `,u===1){if(b<h&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,l===1&&b>0?p+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<h)){const w=a%2===0?ik(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,l>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:p+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):w===1?p+=`
                    xC${b+1} = xTexelC${b};
                    `:p+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<h&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<h&&(p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<h&&(p+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<h&&(p+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cxt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dilations:u,dimRoundingMode:l}=s;let c=u;c==null&&(c=[1,1]),O(Ws(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const h=$s(r.shape,i.shape,o,c,a,l,!0);let d;dt().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new cz(h):d=new lz(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,i],"float32",p)}const $xt={kernelName:a1,backendName:"webgl",kernelFunc:Cxt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sxt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const n=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Nxt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const n=t.filterHeight,s=t.filterWidth,r=t.strideHeight,i=t.strideWidth,o=n-1-t.padInfo.top,a=s-1-t.padInfo.left,u=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ext(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:o,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=s,h=$s(r.shape,c,o,a,u,l,!0),d=new Sxt(h);return n.runWebGLProgram(d,[r,i],"float32")}const Dxt={kernelName:Dk,backendName:"webgl",kernelFunc:Ext};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Txt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{strides:o,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=s,h=$s(c,i.shape,o,a,u,l,!0),d=new Nxt(h);return n.runWebGLProgram(d,[r,i],"float32")}const Axt={kernelName:Tk,backendName:"webgl",kernelFunc:Txt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fxt{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rxt(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],i=bt(s.shape),o=Bt({inputs:{x:s},backend:n,attrs:{shape:[i]}}),a=new Fxt(i),u=n.runWebGLProgram(a,[o],o.dtype),l=Bt({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}const _xt={kernelName:NF,backendName:"webgl",kernelFunc:Rxt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mxt{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:n,inWidth:s,padInfo:r,strideHeight:i,strideWidth:o,filterHeight:a,filterWidth:u,dilationHeight:l,dilationWidth:c}=t,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oxt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dilations:u}=s,l=uf(r.shape,i.shape,o,a,"NHWC",u);let c;const h=new Mxt(l);c=n.runWebGLProgram(h,[r,i],"float32");const d=Bt({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}const Lxt={kernelName:u1,backendName:"webgl",kernelFunc:Oxt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zxt(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,i=t,{allDims:o,summedDims:a,idDims:u}=vC(r,i.length);IC(o.length,u,i);const{path:l,steps:c}=CC(a,u),h=c.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:x,expandDims:b}=kC(p,u[g]);let w;$C(x)?w=i[g]:(w=tr({inputs:{x:i[g]},backend:n,attrs:{perm:x}}),f.push(w));const y=w.shape.slice();for(let v=0;v<b.length;++v)y.splice(b[v],0,1);Le(w.shape,y)||(w=Bt({inputs:{x:w},backend:n,attrs:{shape:y}}),f.push(w)),d===null?d=w:(d=L2({inputs:{a:w,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=ib({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const Bxt={kernelName:EF,backendName:"webgl",kernelFunc:zxt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pxt="return (x >= 0.0) ? x : (exp(x) - 1.0);",Wxt=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Vxt=Ae({opSnippet:Pxt,packedOpSnippet:Wxt}),Uxt={kernelName:vp,backendName:"webgl",kernelFunc:Vxt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gxt="return (b >= 1.0) ? a : a * (b + 1.0);",Hxt=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,qxt=e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,i=dt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gf(Hxt,s.shape,r.shape):new Oh(Gxt,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],s.dtype)},jxt={kernelName:Rk,backendName:"webgl",kernelFunc:qxt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kxt=`
  return vec4(equal(a, b));
`,Xxt="return float(a == b);",Yxt=Es({opSnippet:Xxt,packedOpSnippet:Kxt,dtype:"bool",cpuKernelImpl:Mmt}),Zxt={kernelName:l1,backendName:"webgl",kernelFunc:Yxt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jxt=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${pC};
  float a1 = ${fC};
  float a2 = ${mC};
  float a3 = ${gC};
  float a4 = ${xC};
  float a5 = ${bC};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Qxt=Ae({opSnippet:Jxt}),tbt={kernelName:kp,backendName:"webgl",kernelFunc:Qxt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ebt=Lh+`
  return exp(x);
`,nbt=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hz=Ae({opSnippet:ebt,packedOpSnippet:nbt,cpuKernelImpl:Omt,dtype:"float32"}),sbt={kernelName:Ip,backendName:"webgl",kernelFunc:hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W2(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:i}=t,o=i.shape.length,a=i.shape.slice();let u=r;return r<0&&(O(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+r+1),a.splice(u,0,1),Bt({inputs:{x:i},backend:s,attrs:{shape:a}})}const rbt={kernelName:c1,backendName:"webgl",kernelFunc:W2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dz="return exp(x) - 1.0;",ibt=Ae({opSnippet:dz,packedOpSnippet:dz,cpuKernelImpl:Lmt}),obt={kernelName:Cp,backendName:"webgl",kernelFunc:ibt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pz{constructor(t,n,s){this.variableNames=["real","imag"];const r=n[1];this.outputShape=n;const i=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=s?`${r}.0`:"1.0";let a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fz(e,t,n){const s=n.texData.get(e.dataId),r=bt(e.shape),i=e.shape[e.shape.length-1],o=r/i,a=Bt({inputs:{x:e},backend:n,attrs:{shape:[o,i]}}),u=a.shape,l=new pz("real",u,t),c=new pz("imag",u,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],d=n.runWebGLProgram(l,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=Su({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const m=Bt({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function abt(e){const{inputs:t,backend:n}=e,{input:s}=t;return fz(s,!1,n)}const ubt={kernelName:_k,backendName:"webgl",kernelFunc:abt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lbt{constructor(t,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yf(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:i}=n;if(i=i||ap(r),i==="string"){const o=Bn(i,bt(s));return o.fill(r),t.makeTensorInfo(s,i,o)}else{const o=new lbt(s,r),a=[[r]];return t.runWebGLProgram(o,[],i,a)}}const cbt={kernelName:Mk,backendName:"webgl",kernelFunc:Yf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hbt{constructor(t){this.variableNames=["Image"],this.outputShape=[];const n=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dbt={kernelName:Ok,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new hbt(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mz="return floor(x);",pbt=Ae({opSnippet:mz,packedOpSnippet:mz,cpuKernelImpl:zmt}),fbt={kernelName:$p,backendName:"webgl",kernelFunc:pbt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mbt=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,gbt=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,xbt=Es({opSnippet:mbt,packedOpSnippet:gbt,dtype:"int32"}),bbt={kernelName:Sp,backendName:"webgl",kernelFunc:xbt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ybt{constructor(t){this.variableNames=["A"];const n=Zs(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wbt{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=Zs(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vbt={kernelName:pZ,backendName:"webgl",kernelFunc:kbt};let Bh,V2=dt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function kbt(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:i}=s,o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[u,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[l,u],h=[l,u,i];if(a||o){const m=dt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Bh==null||m!==V2)&&(V2=m,Bh=document.createElement("canvas").getContext("2d",{willReadFrequently:V2})),Bh.canvas.width=u,Bh.canvas.height=l,Bh.drawImage(r,0,0,u,l),r=Bh.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=ai.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=dt().getBool("WEBGL_PACK")?new wbt(h):new ybt(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ibt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:o,preluActivationWeights:a}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=Na(c),g=$s(r.shape,i.shape,u,h,l,d,!1,m);let x;const b=[],w=o!=null,y=a!=null,v=p==="leakyrelu",k=()=>{const I=[r,i],$=(S,N)=>{if(N==="NCHW"&&S.shape.length===1&&S.shape[0]!==1){const F=Bt({inputs:{x:S},backend:n,attrs:{shape:[S.shape[0],1,1]}});return b.push(F),F}return S};if(w&&I.push($(o,c)),y&&I.push($(a,c)),v){const S=n.makeTensorInfo([],"float32",iu(f,"float32"));I.push(S),b.push(S)}return I};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=sz({x:r,filter:i,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&dt().getBool("WEBGL_EXP_CONV")){const I=p?Hf(p,!0):null,$=new nz(g,w,I,y,v),S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=k();x=n.runWebGLProgram($,N,"float32",S)}else if(dt().getBool("WEBGL_CONV_IM2COL"))x=rz({x:r,filter:i,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const I=p?Hf(p,!1):null,$=new ez(g,w,I,y,v),S=k();x=n.runWebGLProgram($,S,"float32")}const C=Bt({inputs:{x},backend:n,attrs:{shape:g.outShape}});return b.push(x),b.forEach(I=>n.disposeIntermediateTensorInfo(I)),C}const Cbt={kernelName:X1,backendName:"webgl",kernelFunc:Ibt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $bt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:o,preluActivationWeights:a}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=c;m==null&&(m=[1,1]),O(Ws(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const g=$s(r.shape,i.shape,u,m,l,h,!0),x=dt().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?Hf(d,x):null,w=[r,i],y=o!=null,v=a!=null,k=d==="leakyrelu";if(y&&w.push(o),v&&w.push(a),k){const S=n.makeTensorInfo([],"float32",iu(p,"float32"));w.push(S),f.push(S)}let C;x?C=new cz(g,y,b,v,k):C=new lz(g,y,b,v,k);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],$=n.runWebGLProgram(C,w,"float32",I);return f.forEach(S=>n.disposeIntermediateTensorInfo(S)),$}const Sbt={kernelName:qF,backendName:"webgl",kernelFunc:$bt};class Nbt{constructor(t,n,s,r){this.sliceDim=t,this.strides=n,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const i=sn(s.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ebt(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,i=r.shape,o=i[i.length-1],a=bt(s.shape),[u,l,c,h]=eC(s,r),d=Bt({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),p=Bt({inputs:{x:s},backend:n,attrs:{shape:[bt(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const x=n.readSync(r.dataId),b=n.bufferSync(s),w=Bmt(x,b,s.dtype,l,o,c,h,s.shape,a);return n.makeTensorInfo(u,s.dtype,w.values)}const f=new Nbt(o,h,[l,c],s.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=Bt({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}const Dbt={kernelName:DF,backendName:"webgl",kernelFunc:Ebt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tbt{constructor(t,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const s=sn(this.rank),r=Abt(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function Abt(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:i}=t,{axis:o,batchDims:a}=s,u=ye(o,r.shape)[0];if(dt().get("DEBUG")){const b=n.readSync(i.dataId),w=r.shape[u];for(let y=0;y<b.length;++y){const v=b[y];O(v<=w-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${w-1}]`)}}const l=EC(r,i,u,a),c=bt(i.shape),h=[],d=Bt({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=Bt({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,i])||r.dtype==="string"){const b=n.bufferSync(p),w=n.bufferSync(d),y=Pmt(w,b,f);return h.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.makeTensorInfo(l.outputShape,y.dtype,y.values)}const m=new Tbt(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const x=Bt({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),x}const Fbt={kernelName:d1,backendName:"webgl",kernelFunc:gz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rbt="return float(a > b);",_bt=`
  return vec4(greaterThan(a, b));
`,Mbt=Es({opSnippet:Rbt,packedOpSnippet:_bt,cpuKernelImpl:Wmt,dtype:"bool"}),Obt={kernelName:p1,backendName:"webgl",kernelFunc:Mbt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lbt="return float(a >= b);",zbt=`
  return vec4(greaterThanEqual(a, b));
`,Bbt=Es({opSnippet:Lbt,packedOpSnippet:zbt,dtype:"bool",cpuKernelImpl:Vmt}),Pbt={kernelName:Np,backendName:"webgl",kernelFunc:Bbt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wbt(e){const{inputs:t,backend:n}=e,{input:s}=t;return fz(s,!0,n)}const Vbt={kernelName:Lk,backendName:"webgl",kernelFunc:Wbt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ubt="return float(!isnan(x) && !isinf(x));",Gbt=Ae({opSnippet:Ubt,dtype:"bool"}),Hbt={kernelName:Dp,backendName:"webgl",kernelFunc:Gbt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qbt="return float(isinf(x));",jbt=Ae({opSnippet:qbt,dtype:"bool"}),Kbt={kernelName:Tp,backendName:"webgl",kernelFunc:jbt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xbt="return float(isnan(x));",Ybt=Ae({opSnippet:Xbt,dtype:"bool"}),Zbt={kernelName:Ap,backendName:"webgl",kernelFunc:Ybt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jbt="return float(a < b);",Qbt=`
  return vec4(lessThan(a, b));
`,tyt=Es({opSnippet:Jbt,packedOpSnippet:Qbt,cpuKernelImpl:Umt,dtype:"bool"}),eyt={kernelName:m1,backendName:"webgl",kernelFunc:tyt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nyt="return float(a <= b);",syt=`
  return vec4(lessThanEqual(a, b));
`,ryt=Es({opSnippet:nyt,packedOpSnippet:syt,cpuKernelImpl:Gmt,dtype:"bool"}),iyt={kernelName:g1,backendName:"webgl",kernelFunc:ryt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oyt(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:i}=n,o=Hmt(s,r,i);return t.makeTensorInfo([o.length],"float32",o)}const ayt={kernelName:TF,backendName:"webgl",kernelFunc:oyt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uyt=Lh+`
  return x < 0.0 ? 0./0. : log(x);
`,lyt=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cyt=Ae({opSnippet:uyt,packedOpSnippet:lyt,cpuKernelImpl:qmt}),hyt={kernelName:Fp,backendName:"webgl",kernelFunc:cyt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dyt=Lh+`
  return log(1.0 + x);
`,pyt=Ae({opSnippet:dyt}),fyt={kernelName:Rp,backendName:"webgl",kernelFunc:pyt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const myt="return float(a >= 1.0 && b >= 1.0);",gyt=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,xyt=Es({opSnippet:myt,packedOpSnippet:gyt,dtype:"bool"}),byt={kernelName:x1,backendName:"webgl",kernelFunc:xyt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yyt="return float(!(x >= 1.0));",wyt=Ae({opSnippet:yyt}),vyt={kernelName:b1,backendName:"webgl",kernelFunc:wyt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kyt="return float(a >= 1.0 || b >= 1.0);",Iyt=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Cyt=Es({opSnippet:kyt,packedOpSnippet:Iyt,dtype:"bool"}),$yt={kernelName:y1,backendName:"webgl",kernelFunc:Cyt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Syt{constructor(t,n,s,r,i){this.variableNames=["x"],this.outputShape=[];const o=n,a=t[3]-1;this.outputShape=t;let u;const l=`float(${s}) + float(${r}) * sum`;i===.5?u=`inversesqrt(${l})`:i===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nyt{constructor(t,n,s,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=n,a=t[3]-1;this.outputShape=t;let u;const l=`float(${s}) + float(${r}) * sum`;i===.5?u=`inversesqrt(${l})`:i===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eyt=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:i,bias:o,alpha:a,beta:u}=s,l=dt().getBool("WEBGL_PACK_NORMALIZATION")?new Nyt(r.shape,i,o,a,u):new Syt(r.shape,i,o,a,u);return n.runWebGLProgram(l,[r],r.dtype)},Dyt={kernelName:w1,backendName:"webgl",kernelFunc:Eyt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tyt{constructor(t,n,s,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=n,this.bias=s,this.alpha=r,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ayt=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:i,dy:o}=t,{depthRadius:a,bias:u,alpha:l,beta:c}=s,h=new Tyt(r.shape,a,u,l,c);return n.runWebGLProgram(h,[r,i,o],r.dtype)},Fyt={kernelName:Bk,backendName:"webgl",kernelFunc:Ayt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ryt(e,t,n,s){const r=bt(t),i=bt(e.shape)/r,o=Bt({inputs:{x:e},attrs:{shape:[i,r]},backend:s}),a=Vl(o,e.dtype,"max",s),u=Bt({inputs:{x:a},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(a),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:i,keepDims:o}=s,a=r.shape.length,u=ye(i,r.shape);let l=u;const c=Cn(l,a),h=c!=null,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const b=n.texData.get(p.dataId).values,w=new Array(a);for(let k=0;k<w.length;k++)w[k]=r.shape[c[k]];const y=_2(b,r.shape,r.dtype,c,w);p=n.makeTensorInfo(w,r.dtype);const v=n.texData.get(p.dataId);v.values=y}else p=rb(r,c,n);l=Fn(l.length,a)}Ss("max",l,a);const[f,m]=hs(p.shape,l);let g=f;o&&(g=Wn(f,u));let x;if(d){const b=n.texData.get(p.dataId).values,w=jmt(b,bt(m),g,r.dtype);x=n.makeTensorInfo(g,r.dtype);const y=n.texData.get(x.dataId);y.values=w}else x=Ryt(p,m,g,n);return h&&n.disposeIntermediateTensorInfo(p),x}const _yt={kernelName:v1,backendName:"webgl",kernelFunc:xz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Myt=O2+`
  return max(a, b);
`,Oyt=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Uf+`
  return result;
`,Lyt=Es({opSnippet:Myt,packedOpSnippet:Oyt,cpuKernelImpl:Kmt}),zyt={kernelName:_p,backendName:"webgl",kernelFunc:Lyt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Byt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Wf(r,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=s,l=1;O(Ws(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=vi(r.shape,i,o,l,a,u);if(c.filterWidth===1&&c.filterHeight===1&&Le(c.inShape,c.outShape))return Br({inputs:{x:r},backend:n});const h=new qf(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}const Pyt={kernelName:k1,backendName:"webgl",kernelFunc:Byt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wyt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:o,pad:a,dataFormat:u,dimRoundingMode:l}=s,c=[1,1,1],h=Sa(r.shape,i,o,c,a,l,u),d=new z2(h,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}const Vyt={kernelName:I1,backendName:"webgl",kernelFunc:Wyt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uyt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const n=t.strideHeight,s=t.strideWidth,r=t.dilationHeight,i=t.effectiveFilterHeight,o=t.effectiveFilterWidth,a=i-1-t.padInfo.top,u=o-1-t.padInfo.left,l=i*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Gyt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const n=t.strideDepth,s=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,a=t.dilationWidth,u=t.effectiveFilterDepth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,h=u-1-t.padInfo.front,d=l-1-t.padInfo.top,p=c-1-t.padInfo.left,f=u*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hyt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,o=i,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=s,h=[1,1,1],d=Sa(o.shape,a,u,h,l,c),p=new z2(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new Gyt(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}const qyt={kernelName:Wk,backendName:"webgl",kernelFunc:Hyt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jyt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i,output:o}=t,a=i;Wf([i,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,d=vi(a.shape,u,l,1,c,h),p=!0,f=new qf(d,"max",p),m=n.runWebGLProgram(f,[a],a.dtype),g=new Uyt(d),x=n.runWebGLProgram(g,[r,m],a.dtype);return n.disposeIntermediateTensorInfo(m),x}const Kyt={kernelName:Pk,backendName:"webgl",kernelFunc:jyt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xyt(e,t,n,s){let r=new qf(n,"max",!1);const i=s.runWebGLProgram(r,[e],"float32");r=new qf(n,"max",!0,!0,t);const o=s.runWebGLProgram(r,[e],"float32");return[i,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yyt={kernelName:AF,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:i,pad:o,includeBatchInIndex:a}=t,u=n;O(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const l=[1,1];O(Ws(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const c=vi(s.shape,r,i,l,o),[h,d]=Xyt(s,a,c,u);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zyt(e,t,n,s){const r=bt(t),i=bt(e.shape)/r,o=Bt({inputs:{x:e},attrs:{shape:[i,r]},backend:s}),a=Vl(o,"float32","mean",s),u=Bt({inputs:{x:a},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(a),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jyt={kernelName:C1,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:i}=t,o=n,a=s.shape.length,u=ye(i,s.shape);let l=u;const c=Cn(l,a),h=c!=null,d=o.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const w=o.texData.get(f.dataId).values,y=new Array(a);for(let C=0;C<y.length;C++)y[C]=s.shape[c[C]];const v=_2(w,s.shape,s.dtype,c,y);f=o.makeTensorInfo(y,s.dtype);const k=o.texData.get(f.dataId);k.values=v}else f=rb(s,c,o);p.push(f),l=Fn(l.length,a)}Ss("sum",l,a);const[m,g]=hs(f.shape,l);let x=m;r&&(x=Wn(m,u));const b=Zyt(f,g,x,o);for(const w of p)o.disposeIntermediateTensorInfo(w);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qyt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s,a=r.shape.length,u=ye(i,r.shape);let l=u;const c=Cn(l,a);let h=r;c!=null&&(h=tr({inputs:{x:r},backend:n,attrs:{perm:c}}),l=Fn(l.length,r.shape.length)),Ss("min",l,a);const[d,p]=hs(h.shape,l),f=bt(p),m=Bt({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=Vl(m,m.dtype,"min",n);let x;if(o){const b=Wn(d,u);x=Bt({inputs:{x:g},backend:n,attrs:{shape:b}})}else x=Bt({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),x}const twt={kernelName:$1,backendName:"webgl",kernelFunc:Qyt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ewt=O2+`
  return min(a, b);
`,nwt=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Uf+`
  return result;
`,swt=Es({opSnippet:ewt,packedOpSnippet:nwt,cpuKernelImpl:Xmt}),rwt={kernelName:Mp,backendName:"webgl",kernelFunc:swt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iwt{constructor(t,n,s){this.variableNames=["x"],this.outputShape=n.map((c,h)=>c[0]+t[h]+c[1]);const r=t.length,i=sn(r),o=n.map(c=>c[0]).join(","),a=n.map((c,h)=>c[0]+t[h]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${o});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class owt{constructor(t,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((f,m)=>f[0]+t[m]+f[1]);const r=t.length,i=sn(r),o=n.map(f=>f[0]).join(","),a=n.map((f,m)=>f[0]+t[m]).join(","),u=Qs("rc",r),l=Qs("source",r),c=`${u[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${l.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${u[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
      `}else{const f=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${u[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
        rc = outputLoc;
        ${u[r-2]} += 1;
        if(${u[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${l.join()}), ${h});
          ${u[r-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${l.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${o});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const awt=({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:i}=n,o=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new owt(s.shape,r,i):new iwt(s.shape,r,i);return t.runWebGLProgram(o,[s],s.dtype)},uwt={kernelName:S1,backendName:"webgl",kernelFunc:awt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lwt=`if (b == 0.0) return NAN;
  return mod(a, b);`,cwt=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Uf+`
  return result;
`,hwt=Es({opSnippet:lwt,packedOpSnippet:cwt}),dwt={kernelName:Op,backendName:"webgl",kernelFunc:hwt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pwt{constructor(t,n,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fwt=`
if (a == b) {
  return 1.0;
};
return a / b;`,mwt=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,bz=Es({opSnippet:fwt,packedOpSnippet:mwt,checkOutOfBounds:!0}),gwt={kernelName:wp,backendName:"webgl",kernelFunc:bz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yz="return a - b;",wz=Es({opSnippet:yz,packedOpSnippet:yz,supportsComplex:!0,cpuKernelImpl:mgt}),xwt={kernelName:Jp,backendName:"webgl",kernelFunc:wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:i}=s,o=ye([i],r.shape),a=xz({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=Wn(a.shape,o),l=Bt({inputs:{x:a},backend:n,attrs:{shape:u}}),c=wz({inputs:{a:r,b:l},backend:n}),h=hz({inputs:{x:c},backend:n}),d=ib({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=Bt({inputs:{x:d},backend:n,attrs:{shape:u}}),f=bz({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const bwt={kernelName:G1,backendName:"webgl",kernelFunc:vz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ywt(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:i,seed:o,normalized:a}=s,u=a?r:vz({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new pwt(l,c,i),d=[[o]],p=n.runWebGLProgram(h,[u],"int32",d);return a||n.disposeIntermediateTensorInfo(u),p}const wwt={kernelName:FF,backendName:"webgl",kernelFunc:ywt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vwt=Ti+`
  return -x;
`,kwt=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Iwt(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const i=n.texData.get(s.dataId),[o,a]=Zmt(i.values,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,o)}let r;return dt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new $u(s.shape,kwt):r=new Ko(s.shape,vwt),n.runWebGLProgram(r,[s],s.dtype)}const Cwt={kernelName:N1,backendName:"webgl",kernelFunc:Iwt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $wt=XI;function Swt(e){ti("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=s,l=n.readSync(r.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=$wt(l,c,o,a,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Nwt={kernelName:Vk,backendName:"webgl",kernelFunc:Swt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ewt=YI;function Dwt(e){ti("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=Ewt(c,h,o,a,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const Twt={kernelName:Uk,backendName:"webgl",kernelFunc:Dwt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Awt=ZI;function Fwt(e){ti("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),d=o,p=a,f=u,m=l,{selectedIndices:g,selectedScores:x}=Awt(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const Rwt={kernelName:Gk,backendName:"webgl",kernelFunc:Fwt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _wt{constructor(t,n,s,r){this.variableNames=["indices"],this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mwt=e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:i,depth:o,onValue:a,offValue:u}=s,l=bt(r.shape),c=new _wt(l,o,a,u),h=Bt({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=[...r.shape,o],f=Bt({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),f},Owt={kernelName:T1,backendName:"webgl",kernelFunc:Mwt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hb(e){const{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){const r=jf({inputs:{input:s},backend:n}),i=hb({inputs:{x:r},backend:n}),o=lb({inputs:{input:s},backend:n}),a=hb({inputs:{x:o},backend:n}),u=Su({inputs:{real:i,imag:a},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),u}else return Yf({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}const Lwt={kernelName:j1,backendName:"webgl",kernelFunc:hb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz(e){const{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=jf({inputs:{input:s},backend:n}),i=kz({inputs:{x:r},backend:n}),o=lb({inputs:{input:s},backend:n}),a=hb({inputs:{x:o},backend:n}),u=Su({inputs:{real:i,imag:a},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),u}else return Yf({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const zwt={kernelName:D1,backendName:"webgl",kernelFunc:kz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bwt(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return W2({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const i=t[0].shape,o=t[0].dtype;t.forEach(c=>{ok(i,c.shape,"All tensors passed to stack must have matching shapes"),O(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=t.map(c=>{const h=W2({inputs:{input:c},backend:n,attrs:{dim:r}});return a.push(h),h}),l=tz({inputs:u,backend:n,attrs:{axis:r}});return a.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}const Pwt={kernelName:A1,backendName:"webgl",kernelFunc:Bwt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wwt{constructor(t,n,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((l,c)=>l[0]+t[c]+l[1]);const r=t.length,i=sn(r),o=n.map(l=>l[0]).join(","),a=n.map((l,c)=>l[0]+t[c]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${o});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vwt{constructor(t,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((m,g)=>m[0]+t[g]+m[1]);const r=t.length,i=sn(r),o=n.map(m=>m[0]).join(","),a=n.map((m,g)=>m[0]+t[g]).join(","),u=Qs("rc",r),l=Qs("source",r),c=`${u[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${i} rc = outputLoc;`,`${u[r-1]} += 1;
       if(${c}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${u[r-2]} += 1;
       if(${u[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${u[r-1]} += 1;
         if(${c}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${m}] = getChannel(getX(${l.join()}), ${h});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${o});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iz=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,constantValue:o}=s;if(bt(r.shape)===0){const l=i.map((c,h)=>c[0]+r.shape[h]+c[1]);return Yf({backend:n,attrs:{shape:l,value:o,dtype:r.dtype}})}const a=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vwt(r.shape,i,o):new Wwt(r.shape,i,o),u=[[o]];return n.runWebGLProgram(a,[r],r.dtype,u)},Uwt={kernelName:F1,backendName:"webgl",kernelFunc:Iz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gwt=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Hwt=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Uf+`
  return result;
`,qwt=Es({opSnippet:Gwt,packedOpSnippet:Hwt}),jwt={kernelName:zp,backendName:"webgl",kernelFunc:qwt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kwt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s,a=r.shape.length,u=[],l=ye(i,r.shape);let c=l;const h=Cn(c,a);let d=r;h!=null&&(d=tr({inputs:{x:r},backend:n,attrs:{perm:h}}),c=Fn(c.length,a),u.push(d)),Ss("prod",c,a);let p;if(n.shouldExecuteOnCPU([d])){const f=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:x}=Qmt(d.shape,d.dtype,f,c);p=n.makeTensorInfo(g,x,m)}else{const[f,m]=hs(d.shape,c),g=bt(m),x=Bt({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),b=hI(r.dtype),w=Vl(x,b,"prod",n);p=Bt({inputs:{x:w},backend:n,attrs:{shape:f}}),u.push(x),u.push(w)}if(o){u.push(p);const f=Wn(p.shape,l);p=Bt({inputs:{x:p},backend:n,attrs:{shape:f}})}return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const Xwt={kernelName:_1,backendName:"webgl",kernelFunc:Kwt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ywt(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:o}=t,{outputRaggedRank:a}=s,u=r.map(x=>n.readSync(x.dataId)),l=r.map(x=>x.shape),c=n.readSync(i.dataId),h=n.readSync(o.dataId),[d,p,f]=tgt(u,l,c,i.shape,i.dtype,h,o.shape,a),m=d.map(x=>n.makeTensorInfo([x.length],"int32",x)),g=n.makeTensorInfo(f,i.dtype,p);return m.concat([g])}const Zwt={kernelName:RF,backendName:"webgl",kernelFunc:Ywt};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jwt(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:i}=t,o=n.readSync(s.dataId),a=n.readSync(r.dataId),u=n.readSync(i.dataId),[l,c]=egt(o,s.shape,s.dtype,a,r.shape,u,i.shape),h=n.makeTensorInfo([l.length],"int32",l),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const Qwt={kernelName:_F,backendName:"webgl",kernelFunc:Jwt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tvt(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:i,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:u}=s,l=n.readSync(r.dataId),c=n.readSync(i.dataId),h=n.readSync(o.dataId),d=a.map(g=>n.readSync(g.dataId)),p=a.map(g=>g.shape),[f,m]=ngt(l,r.shape,c,i.shape,i.dtype,h,o.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,m)}const evt={kernelName:MF,backendName:"webgl",kernelFunc:tvt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cz=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:i,dtype:o}=n,a=sgt(s,r,i,o);return t.makeTensorInfo([a.length],o,a)},nvt={kernelName:Hk,backendName:"webgl",kernelFunc:Cz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const svt="return 1.0 / x;",rvt=Ae({opSnippet:svt}),ivt={kernelName:Bp,backendName:"webgl",kernelFunc:rvt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ovt=Ti+`
  return (x < 0.0) ? 0.0 : x;
`,avt=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,uvt=Ae({opSnippet:ovt,packedOpSnippet:avt}),lvt={kernelName:Pp,backendName:"webgl",kernelFunc:uvt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cvt=Ti+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,hvt=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,dvt=Ae({opSnippet:cvt,packedOpSnippet:hvt}),pvt={kernelName:Wp,backendName:"webgl",kernelFunc:dvt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fvt{constructor(t,n,s,r,i){this.variableNames=["A"],this.outputShape=[];const[o,a,u,l]=t;this.outputShape=[o,n,s,l];const c=[r&&n>1?a-1:a,r&&s>1?u-1:u],h=[r&&n>1?n-1:n,r&&s>1?s-1:s];let d;i?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mvt{constructor(t,n,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,u,l]=t;this.outputShape=[o,n,s,l];const c=[r&&n>1?a-1:a,r&&s>1?u-1:u],h=[r&&n>1?n-1:n,r&&s>1?s-1:s];let d;i?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gvt(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:o,size:a}=s,[u,l]=a,c=dt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new mvt(r.shape,u,l,i,o):new fvt(r.shape,u,l,i,o);return n.runWebGLProgram(c,[r],"float32")}const xvt={kernelName:L1,backendName:"webgl",kernelFunc:gvt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bvt{constructor(t,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,r,i]=n,[,o,a]=t,u=[s&&o>1?r-1:r,s&&a>1?i-1:i],l=[s&&o>1?o-1:o,s&&a>1?a-1:a],c=u[0]/l[0],h=u[1]/l[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yvt(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:o}=s,a=new bvt(i.shape,r.shape,o);return n.runWebGLProgram(a,[i],i.dtype)}const wvt={kernelName:Kk,backendName:"webgl",kernelFunc:yvt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vvt{constructor(t,n,s,r,i){this.variableNames=["A"],this.outputShape=[];const[o,a,u,l]=t;this.outputShape=[o,n,s,l];const c=[r&&n>1?a-1:a,r&&s>1?u-1:u],h=[r&&n>1?n-1:n,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;i?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kvt{constructor(t,n,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,u,l]=t;this.outputShape=[o,n,s,l];const c=[r&&n>1?a-1:a,r&&s>1?u-1:u],h=[r&&n>1?n-1:n,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;i?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ivt(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:o,size:a}=s,[u,l]=a,c=dt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new kvt(r.shape,u,l,i,o):new vvt(r.shape,u,l,i,o);return n.runWebGLProgram(c,[r],r.dtype)}const Cvt={kernelName:O1,backendName:"webgl",kernelFunc:Ivt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $vt{constructor(t,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,r,i]=n,[,o,a]=t,u=[s&&o>1?r-1:r,s&&a>1?i-1:i],l=[s&&o>1?o-1:o,s&&a>1?a-1:a],c=u[0]/l[0],h=u[1]/l[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Svt(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:o}=s,a=new $vt(i.shape,r.shape,o);return n.runWebGLProgram(a,[i],i.dtype)}const Nvt={kernelName:jk,backendName:"webgl",kernelFunc:Svt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Evt{constructor(t,n){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const r=a=>n.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,i=t.map((a,u)=>r(u)).join(","),o=sn(s);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dvt{constructor(t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const r=Qs("rc",s),i=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,o=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=sn(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(r.slice())};
          if(${i}){
            result.g = ${l(r.slice())};
          }
          if(${o}) {
            result.b = ${c(r.slice())};
            if(${i}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return d(f)}function l(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=t.map((b,w)=>p(w,f)),g=m.join(","),x=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function p(f,m){return n.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tvt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:i}=s,o=r.shape.length,a=ye(i,r.shape);if(o===0)return Br({inputs:{x:r},backend:n});const u=dt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Dvt(r.shape,a):new Evt(r.shape,a);return n.runWebGLProgram(u,[r],r.dtype)}const Avt={kernelName:z1,backendName:"webgl",kernelFunc:Tvt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fvt{constructor(t,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],r=t[2];this.outputShape=t;let i="";typeof n=="number"?i=`float outputValue = ${n.toFixed(2)};`:i=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rvt={kernelName:tI,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:i,center:o}=t,a=n,u=new Fvt(s.shape,i),[l,c]=cC(o,s.shape[1],s.shape[2]),h=[[l,c,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(u,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _vt=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Mvt=Ae({opSnippet:_vt}),Ovt={kernelName:Vp,backendName:"webgl",kernelFunc:Mvt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lvt="return inversesqrt(x);",zvt=Ae({opSnippet:Lvt,cpuKernelImpl:rgt}),Bvt={kernelName:Up,backendName:"webgl",kernelFunc:zvt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $z{constructor(t,n,s,r,i,o,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const u=sn(i.length),l=sn(o.length);let c="";s===1?c="i":s===2&&(c="i, j");const h=`getIndices(${c})`;let d="";r===1?d="i":r===2&&(d="i, coords[1]");const p=`getUpdates(${d})`,f=n>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pvt(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:i}=t,{shape:o}=s,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=gf(i,r,o),d=[h/l,l];if(h===0)return n.makeTensorInfo(o,r.dtype);const p=Bt({inputs:{x:r},backend:n,attrs:{shape:[u,a]}}),f=Bt({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new $z(u,a,p.shape.length,f.shape.length,c,d),x=n.runWebGLProgram(g,[f,p,m],f.dtype),b=Bt({inputs:{x},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(m),b}const Wvt={kernelName:OF,backendName:"webgl",kernelFunc:Pvt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vvt{constructor(t,n,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const i="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,a=dt().getNumber("WEBGL_VERSION")===2?i:o,u=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uvt(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:i}=t,{side:o}=s,a=new Vvt(r.shape[0],r.shape[1],i.shape[1],o),u=[[r.shape[1]]];return n.runWebGLProgram(a,[r,i],"int32",u)}const Gvt={kernelName:LF,backendName:"webgl",kernelFunc:Uvt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hvt{constructor(t,n,s){this.variableNames=["c","a","b"],this.outputShape=n;let r,i;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)i="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let c=0;c<n.length;c++)l.push(`${a[c]}`),c<t&&u.push(`${a[c]}`);r=u.join(),i=l.join()}const o=sn(s);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qvt(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:i}=t,o=new Hvt(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,i],_r(r.dtype,i.dtype))}const jvt={kernelName:B1,backendName:"webgl",kernelFunc:qvt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kvt=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${xx};
  float scale = ${bx};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Xvt=Ae({opSnippet:Kvt}),Yvt={kernelName:Gp,backendName:"webgl",kernelFunc:Xvt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zvt=Lh+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Jvt=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Qvt=Ae({opSnippet:Zvt,packedOpSnippet:Jvt,cpuKernelImpl:ogt}),tkt={kernelName:Kp,backendName:"webgl",kernelFunc:Qvt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ekt=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,nkt=Ae({opSnippet:ekt}),skt={kernelName:jp,backendName:"webgl",kernelFunc:nkt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rkt=Lh+`
  return sin(x);
`,ikt=Ae({opSnippet:rkt}),okt={kernelName:Hp,backendName:"webgl",kernelFunc:ikt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const akt=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,ukt=Ae({opSnippet:akt}),lkt={kernelName:qp,backendName:"webgl",kernelFunc:ukt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ckt=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,hkt=Ae({opSnippet:ckt}),dkt={kernelName:Xp,backendName:"webgl",kernelFunc:hkt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pkt=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,paddings:o}=s;O(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((x,b)=>x*b),u=[[0,0]];u.push(...o);for(let x=1+i.length;x<r.shape.length;++x)u.push([0,0]);const l=[],c=Iz({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),h=xf(c.shape,i,a,!1),d=bf(h.length,i.length,!1),p=yf(c.shape,i,a,!1),f=Bt({inputs:{x:c},backend:n,attrs:{shape:h}}),m=tr({inputs:{x:f},backend:n,attrs:{perm:d}}),g=Bt({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach(x=>n.disposeIntermediateTensorInfo(x)),g},fkt={kernelName:V1,backendName:"webgl",kernelFunc:pkt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mkt(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:i,defaultValue:o}=t;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=n.readSync(s.dataId),u=n.readSync(r.dataId),l=n.readSync(i.dataId),c=n.readSync(o.dataId)[0],[h,d,p,f,m]=ugt(a,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const gkt={kernelName:zF,backendName:"webgl",kernelFunc:mkt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xkt(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:i}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(n.readSync(r.dataId)),a=n.readSync(s.dataId),u=Array.from(n.readSync(i.dataId)),[l,c,h]=lgt(a,s.shape,s.dtype,o,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const bkt={kernelName:BF,backendName:"webgl",kernelFunc:xkt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ykt(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);const o=n.readSync(s.dataId),a=n.readSync(r.dataId),u=n.readSync(i.dataId),[l,c]=D4(o,s.shape,s.dtype,a,u,!0);return n.makeTensorInfo(c,s.dtype,l)}const wkt={kernelName:PF,backendName:"webgl",kernelFunc:ykt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vkt(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);const o=n.readSync(s.dataId),a=n.readSync(r.dataId),u=n.readSync(i.dataId),[l,c]=D4(o,s.shape,s.dtype,a,u);return n.makeTensorInfo(c,s.dtype,l)}const kkt={kernelName:WF,backendName:"webgl",kernelFunc:vkt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ikt(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:i,defaultValue:o}=t,{outputShape:a}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=gf(i,r,a),p=!1;if(i.dtype==="string"){const x=n.bufferSync(r),b=n.bufferSync(i),w=au(n.readSync(o.dataId)[0]),y=igt(x,b,a,d,c,l,u,h,w,p);return n.makeTensorInfo(a,y.dtype,y.values)}const f=new $z(l,u,r.shape.length,i.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[i,r,o],i.dtype),g=Bt({inputs:{x:m},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(m),g}const Ckt={kernelName:VF,backendName:"webgl",kernelFunc:Ikt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $kt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:i,axis:o}=s,a=ye(o,r.shape)[0],u=SC(r,i,a),l=r.shape.length,c=new Array(l).fill(0),h=r.shape.slice();return u.map(d=>{const p=[...h];p[a]=d;const f=zh({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[a]+=d,f})}const Skt={kernelName:U1,backendName:"webgl",kernelFunc:$kt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sz="return sqrt(x);",Nkt=Ae({opSnippet:Sz,packedOpSnippet:Sz,cpuKernelImpl:cgt}),Ekt={kernelName:Yp,backendName:"webgl",kernelFunc:Nkt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dkt="return x * x;",Tkt=Ae({opSnippet:Dkt}),Akt={kernelName:Xk,backendName:"webgl",kernelFunc:Tkt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nz="return (a - b) * (a - b);",Fkt=Es({opSnippet:Nz,packedOpSnippet:Nz}),Rkt={kernelName:Zp,backendName:"webgl",kernelFunc:Fkt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _kt({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=Ti+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,i=new Ko(s.shape,r);return n.runWebGLProgram(i,[s],s.dtype)}const Mkt={kernelName:nf,backendName:"webgl",kernelFunc:_kt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Okt{constructor(t,n,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,i=sn(s.length),o=sn(s.length);let a="";if(r===1)a="coords * strides + begin";else{let u=0;a=s.map((l,c)=>(u++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${u-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${t});
      ${i} strides = ${i}(${n});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lkt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,end:o,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:y}=aC(r.shape,i,o,a,u,l,c,h,d);let v;if(m)v=Bt({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||x){O(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const C=rC(b,w,y),I=zh({inputs:{x:r},backend:n,attrs:{begin:b,size:C}});v=Bt({inputs:{x:I},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(I)}else if(n.shouldExecuteOnCPU([r])){const C=n.readSync(r.dataId),I=we(r.shape,r.dtype,C),$=hgt(p,I,y,b);v=n.makeTensorInfo(f,r.dtype,$.values)}else{const C=new Okt(b,y,p);v=n.runWebGLProgram(C,[r],r.dtype)}const k=Bt({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}const zkt={kernelName:Yk,backendName:"webgl",kernelFunc:Lkt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bkt(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:i,leftPad:o,rightPad:a,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=dgt(d,p,r,i,o,a,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const Pkt={kernelName:UF,backendName:"webgl",kernelFunc:Bkt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wkt(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:i,delimiter:o}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=n.readSync(i.dataId),u=n.readSync(o.dataId)[0],[l,c,h]=pgt(a,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const Vkt={kernelName:GF,backendName:"webgl",kernelFunc:Wkt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ukt(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(i.dataId),a=fgt(o,r);return n.makeTensorInfo(i.shape,"int32",a)}const Gkt={kernelName:HF,backendName:"webgl",kernelFunc:Ukt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hkt="return tan(x);",qkt=Ae({opSnippet:Hkt}),jkt={kernelName:Qp,backendName:"webgl",kernelFunc:qkt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kkt=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Xkt=Ae({opSnippet:Kkt}),Ykt={kernelName:tf,backendName:"webgl",kernelFunc:Xkt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zkt{constructor(t,n){this.variableNames=["A"];const s=new Array(t.length);for(let o=0;o<s.length;o++)s[o]=t[o]*n[o];this.outputShape=s,this.rank=s.length;const r=sn(this.rank),i=Jkt(t);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}}function Jkt(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ez(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:i}=s;if(r.dtype==="string"||r.shape.length>5){const a=n.readSync(r.dataId),u=r.dtype==="string"?a.map(h=>au(h)):a,l=we(r.shape,r.dtype,u),c=ggt(l,i);return n.makeTensorInfo(c.shape,c.dtype,c.values)}const o=new Zkt(r.shape,i);return n.runWebGLProgram(o,[r],r.dtype)}const Qkt={kernelName:ef,backendName:"webgl",kernelFunc:Ez};class tIt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class eIt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ul(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function Dz(e){let t=1;for(;t<e;)t*=2;return t}function nIt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:i,sorted:o}=s,a=dt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=dt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([r])||c<a||i>u){const $=n.readSync(r.dataId),[S,N]=xgt($,l,r.dtype,i,o);return[n.makeTensorInfo(S.shape,S.dtype,S.values),n.makeTensorInfo(N.shape,N.dtype,N.values)]}if(i===0)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(c===1)return[r,Yf({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=h!==null&&h.isPacked,p=d?n.unpackTensor(r):r,f=bt(l)/c,m=Bt({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&Ul(n,p);const g=Dz(i),x=Dz(c);let b=null;const w=()=>b===null?[m,m]:[m,b],y=($,S,N)=>{const F=w(),D=new tIt(N),E=[[c],[b===null?1:0],[Number.NEGATIVE_INFINITY],[$],[S]],A=b;b=n.runWebGLProgram(D,F,"int32",E),Ul(n,A)};for(let $=1;$<g;$*=2){const S=$*2;for(let N=$;N>=1;N/=2)y(S,N,[f,x])}for(let $=x;$>g;$/=2){const S=w(),N=new eIt([f,$/2]),F=[[c],[b===null?1:0],[g]],D=b;b=n.runWebGLProgram(N,S,"int32",F),Ul(n,D);const E=g/2,A=E*2;for(let T=E;T>=1;T/=2)y(A,T,b.shape)}let v=b;b=zh({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,i]}}),Ul(n,v);let k=gz({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});Ul(n,m);const C=l.slice(0,-1);C.push(i),v=b,b=Bt({inputs:{x:b},attrs:{shape:C},backend:n}),Ul(n,v);const I=k;return k=Bt({inputs:{x:k},attrs:{shape:C},backend:n}),Ul(n,I),[k,b]}const sIt={kernelName:Zk,backendName:"webgl",kernelFunc:nIt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rIt{constructor(t,n,s,r,i,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=s==="nearest"?1:2;let u;switch(r){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iIt(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:i}=t,{interpolation:o,fillMode:a,fillValue:u,outputShape:l}=s,[c,h,d,p]=r.shape,[f,m]=l??[h,d],g=[c,f,m,p],x=new rIt(h,d,o,a,u,g);return n.runWebGLProgram(x,[r,i],"float32")}const oIt={kernelName:Jk,backendName:"webgl",kernelFunc:iIt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aIt(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:i}=t;Wf(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=s.readSync(i.dataId),{outputValues:a,outputShape:u,indices:l}=bgt(o,r,i.shape,i.dtype);return[s.makeTensorInfo(u,i.dtype,a),s.makeTensorInfo([l.length],"int32",l)]}const uIt={kernelName:Qk,backendName:"webgl",kernelFunc:aIt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lIt(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:i}=s;i<0&&(i+=r.shape.length);const o=r,a=o.shape.length,u=r.shape[i],l=new Array(a-1);let c=0;for(let m=0;m<a;m++)m!==i&&(l[c++]=o.shape[m]);const h=[],d=new Array(a).fill(0),p=o.shape.slice();p[i]=1;const f=new Array(u);for(let m=0;m<f.length;m++){d[i]=m;const g=zh({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),x=Bt({inputs:{x:g},backend:n,attrs:{shape:l}});f[m]=x,h.push(g)}return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const cIt={kernelName:H1,backendName:"webgl",kernelFunc:lIt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hIt{constructor(t,n){this.variableNames=["x","segmentIds"];const s=t.windowSize,r=t.batchSize,i=t.inSize,o=t.numSegments,a=o*Math.ceil(i/s);this.outputShape=[r,a];const u="0.0",l="sumValue",c=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";i%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let f="";i%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dIt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:i}=t,{numSegments:o}=s,a=r.shape.length,u=[];let l=0;const c=Cn([l],a);let h=r;c!=null&&(h=tr({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(h),l=Fn(1,a)[0]);const d=u3(h.shape,l,o),p=bt([h.shape[l]]),f=Bt({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=hI(r.dtype),g=(y,v,k,C,I)=>{const $=y.shape[0],S=y.shape[1],N=a3(S,I),F={windowSize:N,inSize:S,batchSize:$,numSegments:I},D=new hIt(F,v),E=n.compileAndRun(D,[y,k],C);if(u.push(E),E.shape[1]===I)return E;const A=Cz({backend:n,attrs:{start:0,stop:I,step:1,dtype:"float32"}}),T=Ez({inputs:{x:A},backend:n,attrs:{reps:[S/N]}});return u.push(A),u.push(T),g(E,v,T,C,I)},x=g(f,"unsortedSegmentSum",i,m,o),b=Bt({inputs:{x},backend:n,attrs:{shape:d}});let w=b;if(c!=null){u.push(b);const y=cu(c);w=tr({inputs:{x:w},backend:n,attrs:{perm:y}})}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),w}const pIt={kernelName:q1,backendName:"webgl",kernelFunc:dIt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fIt=[l0t,h0t,f0t,x0t,y0t,k0t,C0t,S0t,T0t,F0t,M0t,z0t,W0t,H0t,K0t,Y0t,J0t,n1t,r1t,o1t,c1t,x1t,y1t,v1t,N1t,D1t,R1t,qgt,O1t,W1t,H1t,Z1t,Q1t,ext,sxt,ixt,uxt,hxt,fxt,gxt,bxt,wxt,Ixt,$xt,Dxt,Axt,_xt,Lxt,Bxt,Uxt,jxt,Zxt,tbt,sbt,rbt,obt,ubt,cbt,dbt,fbt,bbt,vbt,Cbt,Sbt,Dbt,Fbt,Obt,Pbt,Hgt,Vbt,B1t,Hbt,Kbt,Zbt,Kgt,eyt,iyt,ayt,hyt,fyt,byt,vyt,$yt,Dyt,Fyt,_yt,zyt,Pyt,Vyt,qyt,Kyt,Yyt,Jyt,twt,rwt,uwt,dwt,wwt,Zgt,Cwt,Nwt,Twt,Rwt,I1t,Owt,zwt,Pwt,Uwt,jwt,Ygt,Xwt,Zwt,Qwt,evt,nvt,C1t,gwt,ivt,lvt,pvt,Qgt,xvt,wvt,Cvt,Nvt,Avt,Rvt,Ovt,Bvt,Wvt,Gvt,jvt,Yvt,tkt,skt,okt,lkt,m1t,bwt,dkt,fkt,gkt,bkt,wkt,kkt,Ckt,Skt,Ekt,Akt,Rkt,Mkt,zkt,Pkt,Vkt,Gkt,xwt,o0t,jkt,Ykt,Qkt,sIt,oIt,a0t,uIt,cIt,pIt,Lwt];for(const e of fIt)YF(e);/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mIt=(e,t,n)=>{if(e.size()[0]!==t.size()[0])throw Error("x and y have different number of samples.");if(e.size()[0]!==n.size()[0])throw Error("x and w have different number of samples.");if(t.size()[1]!==1)throw Error("y has more than one columns.");if(n.size()[1]!==1&&n.size()[0]!==n.size()[1])throw Error("The size of w is neither (m ,1) nor (m, m).");let s=n;if(n.size()[1]===1){const f=qt.squeeze(n).toArray();s=qt.matrix(qt.diag(f))}const r=$l(e.toArray(),e.size()),i=$l(s.toArray(),s.size()),o=$l(t.toArray(),t.size()),a=r.transpose().matMul(i).matMul(r),u=r.transpose().matMul(i).matMul(o),l=a.arraySync(),c=qt.matrix(l),h=qt.det(c);let d;h!==0?d=qt.inv(c):(console.warn("Matrix x is singular, use pseudo-inverse instead."),d=qt.pinv(c));const p=$l(d.toArray(),d.size()).matMul(u).arraySync();return qt.matrix(p)},U2=class{constructor(e,t,n){if(Ze(this,"model"),Ze(this,"data"),Ze(this,"initialized",!1),Ze(this,"expectedValue"),Ze(this,"predictions"),Ze(this,"nFeatures"),Ze(this,"nTargets"),Ze(this,"nSamplesAdded"),Ze(this,"varyingIndexes",null),Ze(this,"nVaryFeatures",null),Ze(this,"sampledData",null),Ze(this,"maskMat",null),Ze(this,"kernelWeight",null),Ze(this,"yMat",null),Ze(this,"yExpMat",null),Ze(this,"lastMask",null),Ze(this,"lcg"),Ze(this,"rng"),Ze(this,"rngInt"),Ze(this,"initializeModel",async()=>{this.initialized||(this.predictions=await this.model(this.data),this.nTargets=this.predictions[0].length,this.expectedValue=qt.mean(this.predictions,0),this.initialized=!0)}),Ze(this,"explainOneInstance",async(s,r=null)=>{if(this.initialized||await this.initializeModel(),s.length!==this.nFeatures)throw new Error("x has to have the same number of features as the background dataset.");const i=[s.slice()],o=await this.model(i),a=qt.reshape(qt.matrix(o),[1,this.nTargets]),u=this.sampleFeatureCoalitions(s,r);if(u===0){const c=[];for(let h=0;h<this.nTargets;h++)c.push(new Array(this.nFeatures).fill(0));return c}else if(u===-1){const c=[];for(let h=0;h<this.nTargets;h++){const d=new Array(this.nFeatures).fill(0),p=o[0][h]-this.expectedValue[h];d[this.varyingIndexes[0]]=p,c.push(d)}return c}await this.inferenceFeatureCoalitions();const l=[];for(let c=0;c<this.nTargets;c++)l.push(this.computeShap(u,a,c));return l}),Ze(this,"computeShap",(s,r,i)=>{const o=this.yExpMat.subset(qt.index(qt.range(0,this.yExpMat.size()[0]),i)),a=qt.add(o,-this.expectedValue[i]),u=a.size(),l=this.kernelWeight,c=l.size(),h=this.maskMat,d=h.size();if(this.nVaryFeatures===null||this.varyingIndexes===null)throw Error("this.nVaryFeatures is null");const p=Array.from(new Array(this.nVaryFeatures),(y,v)=>v);if(s<.2){const y=[];for(let I=0;I<h.size()[0];I++){const $=qt.sum(qt.row(h,I));y.push($)}const v=qt.matrix(qt.zeros([c[0]*2,c[1]]));for(const I of[0,1])for(let $=0;$<c[0];$++)if(I===0){const S=l.get([$,0])*(this.nVaryFeatures-y[$]);v.subset(qt.index($,0),Math.sqrt(S))}else{const S=l.get([$,0])*y[$];v.subset(qt.index(c[0]+$,0),Math.sqrt(S))}const k=qt.matrix(qt.zeros([u[0]*2,u[1]]));for(let I=0;I<u[0];I++)k.subset(qt.index(I,0),a.get([I,0])*v.get([I,0]));for(let I=0;I<u[0];I++){const $=u[0]+I;let S=a.get([I,0])-(r.get([0,i])-this.expectedValue[i]);S*=v.get([$,0]),k.subset(qt.index($,0),S)}const C=qt.matrix(qt.zeros([d[0]*2,d[1]]));for(const I of[0,2])for(let $=0;$<d[0];$++)for(let S=0;S<d[1];S++)if(I===0)C.subset(qt.index($,S),h.get([$,S])*v.get([$,0]));else{const N=d[0]+$,F=h.get([$,S])-1;C.subset(qt.index(N,S),F*v.get([N,0]))}}if(p.length===0)return new Array(this.nVaryFeatures).fill(0);let f=h.clone();const m=p[p.length-1];f=f.subset(qt.index(qt.range(0,f.size()[0]),qt.range(0,m)));for(let y=0;y<f.size()[0];y++)for(let v=0;v<f.size()[1];v++)f.subset(qt.index(y,v),f.get([y,v])-h.get([y,m]));const g=a.clone();for(let y=0;y<g.size()[0];y++)g.subset(qt.index(y,0),g.get([y,0])-h.get([y,m])*(r.get([0,i])-this.expectedValue[i]));const x=mIt(f,g,l),b=r.get([0,i])-this.expectedValue[i]-qt.sum(x),w=new Array(this.nFeatures).fill(0);for(let y=0;y<x.size()[0];y++){const v=this.varyingIndexes[y];w[v]=x.get([y,0])}return w[this.varyingIndexes[m]]=b,w}),Ze(this,"getVaryingIndexes",s=>{const r=[];for(let i=0;i<this.data[0].length;i++){let o=!0;for(let a=0;a<this.data.length;a++)if(s[i]!==this.data[a][i]){o=!1;break}o||r.push(i)}return r}),Ze(this,"inferenceFeatureCoalitions",async()=>{if(this.sampledData===null)throw Error("sampledData is null.");if(this.yExpMat===null)throw Error("yExpMat is null.");if(this.yMat===null)throw Error("yMat is null.");const s=this.sampledData.toArray(),r=await this.model(s);this.yMat.subset(qt.index(qt.range(0,this.yMat.size()[0]),qt.range(0,this.nTargets)),r);const i=this.data.length;for(let o=0;o<this.nSamplesAdded;o++){let a=this.yMat.subset(qt.index(qt.range(o*i,(o+1)*i),qt.range(0,this.nTargets)));typeof a=="number"&&(a=qt.matrix([[a]]));const u=qt.mean(a,0).subset(qt.index(qt.range(0,this.nTargets)));this.yExpMat.subset(qt.index(o,qt.range(0,this.nTargets)),u)}}),Ze(this,"sampleFeatureCoalitions",(s,r)=>{if(this.varyingIndexes=this.getVaryingIndexes(s),this.nVaryFeatures=this.varyingIndexes.length,this.nVaryFeatures===0)return 0;if(this.nVaryFeatures===1)return-1;let i=r||this.nFeatures*2+2048,o=Math.pow(2,30);if(this.nFeatures<=30&&(o=Math.pow(2,this.nFeatures)-2,i>o&&(i=o)),this.prepareSampling(i),this.kernelWeight===null)throw Error("kernelWeight is not initialized.");const a=Math.ceil((this.nVaryFeatures-1)/2),u=Math.floor((this.nVaryFeatures-1)/2),l=new Array(a).fill(0);for(let m=1;m<a+1;m++)l[m-1]=(this.nVaryFeatures-1)/(m*(this.nVaryFeatures-m));for(let m=1;m<u+1;m++)l[m-1]*=2;const c=l.reduce((m,g)=>m+g);for(let m=1;m<a+1;m++)l[m-1]/=c;let h=0,d=i,p=l.slice();for(let m=1;m<=a;m++){let g=ST(this.nVaryFeatures,m);if(m<=u&&(g*=2),g<d*p[m-1]){if(h+=1,d-=g,p[m-1]<1){const y=1-p[m-1];for(let v=0;v<p.length;v++)p[v]/=y}let x=l[m-1]/ST(this.nVaryFeatures,m);m<=u&&(x/=2);const b=Array.from(new Array(this.nVaryFeatures),(y,v)=>v),w=a9(b,m);for(const y of w){const v=new Array(this.nVaryFeatures).fill(0);for(const k of y)v[k]=1;if(this.addSample(s,v,x),m<=u){const k=v.map(C=>C===0?1:0);this.addSample(s,k,x)}}}else break}const f=this.nSamplesAdded;if(d=i-f,h!==a){p=l.slice();for(let C=0;C<u;C++)p[C]/=2;p=p.slice(h);const m=p.reduce((C,I)=>C+I);for(let C=0;C<p.length;C++)p[C]/=m;const g=[];let x=0;const b=p.map((C=>I=>C+=I)(0));for(let C=0;C<10*d;C++){const I=this.rng(0,1)(),$=b.filter(S=>I>=S).length;g.push($)}const w=new Map;for(;d>0&&x<g.length;){const C=g[x]+h+1;x+=1;const I=new Array(this.nVaryFeatures).fill(0),$=[],S=new Set;for(;$.length<C;){const F=this.rngInt(this.nVaryFeatures)();S.has(F)||(S.add(F),$.push(F))}for(const F of $)I[F]=1;const N=U2.getMaskStr(I);if(w.has(N)){const F=w.get(N);this.kernelWeight.subset(qt.index(F,0),this.kernelWeight.get([F,0])+1)}else w.set(N,this.nSamplesAdded),d-=1,this.addSample(s,I,1);if(d>0&&C<=u){const F=I.map(E=>E===0?1:0),D=U2.getMaskStr(F);if(w.has(D)){const E=w.get(D);this.kernelWeight.subset(qt.index(E,0),this.kernelWeight.get([E,0])+1)}else w.set(D,this.nSamplesAdded),d-=1,this.addSample(s,I,1)}}const y=l.slice(h).reduce((C,I)=>C+I),v=qt.sum(this.kernelWeight.subset(qt.index(qt.range(f,this.kernelWeight.size()[0]),0))),k=y/v;for(let C=f;C<this.kernelWeight.size()[0];C++)this.kernelWeight.subset(qt.index(C,0),this.kernelWeight.get([C,0])*k)}return i/o}),Ze(this,"prepareSampling",s=>{if(this.nVaryFeatures===null)throw Error("nVaryFeatures is not initialized.");const r=this.data.length;this.sampledData=qt.matrix(qt.zeros([r*s,this.nFeatures]));const i=qt.matrix(this.data);for(let o=0;o<s;o++){const a=o*r;this.sampledData.subset(qt.index(qt.range(a,a+r),qt.range(0,i.size()[1])),i)}this.maskMat=qt.matrix(qt.zeros([s,this.nVaryFeatures])),this.kernelWeight=qt.matrix(qt.zeros([s,1])),this.yMat=qt.matrix(qt.zeros([s*r,this.nTargets])),this.yExpMat=qt.matrix(qt.zeros([s,this.nTargets])),this.lastMask=qt.matrix(qt.zeros([s]))}),this.model=e,this.data=t,n){let s=n;(n<0||n>1)&&(console.warn("Clipping random seed to range [0, 1)"),s=Math.abs(s),s=s-Math.floor(s)),this.lcg=$T(s)}else this.lcg=$T(.20230101);this.rng=s9.source(this.lcg),this.rngInt=r9.source(this.lcg),this.predictions=[[]],this.expectedValue=[],this.nTargets=1,this.nFeatures=this.data[0].length,this.nSamplesAdded=0}addSample(e,t,n){if(this.sampledData===null)throw Error("this.sampleData is null");if(this.maskMat===null)throw Error("this.maskMat is null");if(this.kernelWeight===null)throw Error("this.kernelWeight is null");if(this.varyingIndexes===null)throw Error("this.varyingIndexes is null");const s=this.data.length,r=this.nSamplesAdded*s,i=r+s;for(let o=0;o<t.length;o++)if(t[o]===1){const a=this.varyingIndexes[o],u=new Array(s).fill(e[a]);this.sampledData.subset(qt.index(qt.range(r,i),a),u.length===1?u[0]:u)}this.maskMat.subset(qt.index(this.nSamplesAdded,qt.range(0,this.maskMat.size()[1])),t),this.kernelWeight.subset(qt.index(this.nSamplesAdded,0),n),this.nSamplesAdded+=1}};let Tz=U2;Ze(Tz,"getMaskStr",e=>e.map(t=>t===1?"1":"0").join(""));var G2="http://www.w3.org/1999/xhtml",Az={svg:"http://www.w3.org/2000/svg",xhtml:G2,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function db(e){var t=e+="",n=t.indexOf(":");return n>=0&&(t=e.slice(0,n))!=="xmlns"&&(e=e.slice(n+1)),Az.hasOwnProperty(t)?{space:Az[t],local:e}:e}function gIt(e){return function(){var t=this.ownerDocument,n=this.namespaceURI;return n===G2&&t.documentElement.namespaceURI===G2?t.createElement(e):t.createElementNS(n,e)}}function xIt(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}function Fz(e){var t=db(e);return(t.local?xIt:gIt)(t)}function bIt(){}function H2(e){return e==null?bIt:function(){return this.querySelector(e)}}function yIt(e){typeof e!="function"&&(e=H2(e));for(var t=this._groups,n=t.length,s=new Array(n),r=0;r<n;++r)for(var i=t[r],o=i.length,a=s[r]=new Array(o),u,l,c=0;c<o;++c)(u=i[c])&&(l=e.call(u,u.__data__,c,i))&&("__data__"in u&&(l.__data__=u.__data__),a[c]=l);return new br(s,this._parents)}function Rz(e){return e==null?[]:Array.isArray(e)?e:Array.from(e)}function wIt(){return[]}function _z(e){return e==null?wIt:function(){return this.querySelectorAll(e)}}function vIt(e){return function(){return Rz(e.apply(this,arguments))}}function kIt(e){typeof e=="function"?e=vIt(e):e=_z(e);for(var t=this._groups,n=t.length,s=[],r=[],i=0;i<n;++i)for(var o=t[i],a=o.length,u,l=0;l<a;++l)(u=o[l])&&(s.push(e.call(u,u.__data__,l,o)),r.push(u));return new br(s,r)}function Mz(e){return function(){return this.matches(e)}}function Oz(e){return function(t){return t.matches(e)}}var IIt=Array.prototype.find;function CIt(e){return function(){return IIt.call(this.children,e)}}function $It(){return this.firstElementChild}function SIt(e){return this.select(e==null?$It:CIt(typeof e=="function"?e:Oz(e)))}var NIt=Array.prototype.filter;function EIt(){return Array.from(this.children)}function DIt(e){return function(){return NIt.call(this.children,e)}}function TIt(e){return this.selectAll(e==null?EIt:DIt(typeof e=="function"?e:Oz(e)))}function AIt(e){typeof e!="function"&&(e=Mz(e));for(var t=this._groups,n=t.length,s=new Array(n),r=0;r<n;++r)for(var i=t[r],o=i.length,a=s[r]=[],u,l=0;l<o;++l)(u=i[l])&&e.call(u,u.__data__,l,i)&&a.push(u);return new br(s,this._parents)}function Lz(e){return new Array(e.length)}function FIt(){return new br(this._enter||this._groups.map(Lz),this._parents)}function pb(e,t){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=t}pb.prototype={constructor:pb,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,t){return this._parent.insertBefore(e,t)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}};function RIt(e){return function(){return e}}function _It(e,t,n,s,r,i){for(var o=0,a,u=t.length,l=i.length;o<l;++o)(a=t[o])?(a.__data__=i[o],s[o]=a):n[o]=new pb(e,i[o]);for(;o<u;++o)(a=t[o])&&(r[o]=a)}function MIt(e,t,n,s,r,i,o){var a,u,l=new Map,c=t.length,h=i.length,d=new Array(c),p;for(a=0;a<c;++a)(u=t[a])&&(d[a]=p=o.call(u,u.__data__,a,t)+"",l.has(p)?r[a]=u:l.set(p,u));for(a=0;a<h;++a)p=o.call(e,i[a],a,i)+"",(u=l.get(p))?(s[a]=u,u.__data__=i[a],l.delete(p)):n[a]=new pb(e,i[a]);for(a=0;a<c;++a)(u=t[a])&&l.get(d[a])===u&&(r[a]=u)}function OIt(e){return e.__data__}function LIt(e,t){if(!arguments.length)return Array.from(this,OIt);var n=t?MIt:_It,s=this._parents,r=this._groups;typeof e!="function"&&(e=RIt(e));for(var i=r.length,o=new Array(i),a=new Array(i),u=new Array(i),l=0;l<i;++l){var c=s[l],h=r[l],d=h.length,p=zIt(e.call(c,c&&c.__data__,l,s)),f=p.length,m=a[l]=new Array(f),g=o[l]=new Array(f),x=u[l]=new Array(d);n(c,h,m,g,x,p,t);for(var b=0,w=0,y,v;b<f;++b)if(y=m[b]){for(b>=w&&(w=b+1);!(v=g[w])&&++w<f;);y._next=v||null}}return o=new br(o,s),o._enter=a,o._exit=u,o}function zIt(e){return typeof e=="object"&&"length"in e?e:Array.from(e)}function BIt(){return new br(this._exit||this._groups.map(Lz),this._parents)}function PIt(e,t,n){var s=this.enter(),r=this,i=this.exit();return typeof e=="function"?(s=e(s),s&&(s=s.selection())):s=s.append(e+""),t!=null&&(r=t(r),r&&(r=r.selection())),n==null?i.remove():n(i),s&&r?s.merge(r).order():r}function WIt(e){for(var t=e.selection?e.selection():e,n=this._groups,s=t._groups,r=n.length,i=s.length,o=Math.min(r,i),a=new Array(r),u=0;u<o;++u)for(var l=n[u],c=s[u],h=l.length,d=a[u]=new Array(h),p,f=0;f<h;++f)(p=l[f]||c[f])&&(d[f]=p);for(;u<r;++u)a[u]=n[u];return new br(a,this._parents)}function VIt(){for(var e=this._groups,t=-1,n=e.length;++t<n;)for(var s=e[t],r=s.length-1,i=s[r],o;--r>=0;)(o=s[r])&&(i&&o.compareDocumentPosition(i)^4&&i.parentNode.insertBefore(o,i),i=o);return this}function UIt(e){e||(e=GIt);function t(h,d){return h&&d?e(h.__data__,d.__data__):!h-!d}for(var n=this._groups,s=n.length,r=new Array(s),i=0;i<s;++i){for(var o=n[i],a=o.length,u=r[i]=new Array(a),l,c=0;c<a;++c)(l=o[c])&&(u[c]=l);u.sort(t)}return new br(r,this._parents).order()}function GIt(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}function HIt(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this}function qIt(){return Array.from(this)}function jIt(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var s=e[t],r=0,i=s.length;r<i;++r){var o=s[r];if(o)return o}return null}function KIt(){let e=0;for(const t of this)++e;return e}function XIt(){return!this.node()}function YIt(e){for(var t=this._groups,n=0,s=t.length;n<s;++n)for(var r=t[n],i=0,o=r.length,a;i<o;++i)(a=r[i])&&e.call(a,a.__data__,i,r);return this}function ZIt(e){return function(){this.removeAttribute(e)}}function JIt(e){return function(){this.removeAttributeNS(e.space,e.local)}}function QIt(e,t){return function(){this.setAttribute(e,t)}}function tCt(e,t){return function(){this.setAttributeNS(e.space,e.local,t)}}function eCt(e,t){return function(){var n=t.apply(this,arguments);n==null?this.removeAttribute(e):this.setAttribute(e,n)}}function nCt(e,t){return function(){var n=t.apply(this,arguments);n==null?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}}function sCt(e,t){var n=db(e);if(arguments.length<2){var s=this.node();return n.local?s.getAttributeNS(n.space,n.local):s.getAttribute(n)}return this.each((t==null?n.local?JIt:ZIt:typeof t=="function"?n.local?nCt:eCt:n.local?tCt:QIt)(n,t))}function zz(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView}function rCt(e){return function(){this.style.removeProperty(e)}}function iCt(e,t,n){return function(){this.style.setProperty(e,t,n)}}function oCt(e,t,n){return function(){var s=t.apply(this,arguments);s==null?this.style.removeProperty(e):this.style.setProperty(e,s,n)}}function aCt(e,t,n){return arguments.length>1?this.each((t==null?rCt:typeof t=="function"?oCt:iCt)(e,t,n??"")):Ph(this.node(),e)}function Ph(e,t){return e.style.getPropertyValue(t)||zz(e).getComputedStyle(e,null).getPropertyValue(t)}function uCt(e){return function(){delete this[e]}}function lCt(e,t){return function(){this[e]=t}}function cCt(e,t){return function(){var n=t.apply(this,arguments);n==null?delete this[e]:this[e]=n}}function hCt(e,t){return arguments.length>1?this.each((t==null?uCt:typeof t=="function"?cCt:lCt)(e,t)):this.node()[e]}function Bz(e){return e.trim().split(/^|\s+/)}function q2(e){return e.classList||new Pz(e)}function Pz(e){this._node=e,this._names=Bz(e.getAttribute("class")||"")}Pz.prototype={add:function(e){var t=this._names.indexOf(e);t<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var t=this._names.indexOf(e);t>=0&&(this._names.splice(t,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}};function Wz(e,t){for(var n=q2(e),s=-1,r=t.length;++s<r;)n.add(t[s])}function Vz(e,t){for(var n=q2(e),s=-1,r=t.length;++s<r;)n.remove(t[s])}function dCt(e){return function(){Wz(this,e)}}function pCt(e){return function(){Vz(this,e)}}function fCt(e,t){return function(){(t.apply(this,arguments)?Wz:Vz)(this,e)}}function mCt(e,t){var n=Bz(e+"");if(arguments.length<2){for(var s=q2(this.node()),r=-1,i=n.length;++r<i;)if(!s.contains(n[r]))return!1;return!0}return this.each((typeof t=="function"?fCt:t?dCt:pCt)(n,t))}function gCt(){this.textContent=""}function xCt(e){return function(){this.textContent=e}}function bCt(e){return function(){var t=e.apply(this,arguments);this.textContent=t??""}}function yCt(e){return arguments.length?this.each(e==null?gCt:(typeof e=="function"?bCt:xCt)(e)):this.node().textContent}function wCt(){this.innerHTML=""}function vCt(e){return function(){this.innerHTML=e}}function kCt(e){return function(){var t=e.apply(this,arguments);this.innerHTML=t??""}}function ICt(e){return arguments.length?this.each(e==null?wCt:(typeof e=="function"?kCt:vCt)(e)):this.node().innerHTML}function CCt(){this.nextSibling&&this.parentNode.appendChild(this)}function $Ct(){return this.each(CCt)}function SCt(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function NCt(){return this.each(SCt)}function ECt(e){var t=typeof e=="function"?e:Fz(e);return this.select(function(){return this.appendChild(t.apply(this,arguments))})}function DCt(){return null}function TCt(e,t){var n=typeof e=="function"?e:Fz(e),s=t==null?DCt:typeof t=="function"?t:H2(t);return this.select(function(){return this.insertBefore(n.apply(this,arguments),s.apply(this,arguments)||null)})}function ACt(){var e=this.parentNode;e&&e.removeChild(this)}function FCt(){return this.each(ACt)}function RCt(){var e=this.cloneNode(!1),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function _Ct(){var e=this.cloneNode(!0),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function MCt(e){return this.select(e?_Ct:RCt)}function OCt(e){return arguments.length?this.property("__data__",e):this.node().__data__}function LCt(e){return function(t){e.call(this,t,this.__data__)}}function zCt(e){return e.trim().split(/^|\s+/).map(function(t){var n="",s=t.indexOf(".");return s>=0&&(n=t.slice(s+1),t=t.slice(0,s)),{type:t,name:n}})}function BCt(e){return function(){var t=this.__on;if(t){for(var n=0,s=-1,r=t.length,i;n<r;++n)i=t[n],(!e.type||i.type===e.type)&&i.name===e.name?this.removeEventListener(i.type,i.listener,i.options):t[++s]=i;++s?t.length=s:delete this.__on}}}function PCt(e,t,n){return function(){var s=this.__on,r,i=LCt(t);if(s){for(var o=0,a=s.length;o<a;++o)if((r=s[o]).type===e.type&&r.name===e.name){this.removeEventListener(r.type,r.listener,r.options),this.addEventListener(r.type,r.listener=i,r.options=n),r.value=t;return}}this.addEventListener(e.type,i,n),r={type:e.type,name:e.name,value:t,listener:i,options:n},s?s.push(r):this.__on=[r]}}function WCt(e,t,n){var s=zCt(e+""),r,i=s.length,o;if(arguments.length<2){var a=this.node().__on;if(a){for(var u=0,l=a.length,c;u<l;++u)for(r=0,c=a[u];r<i;++r)if((o=s[r]).type===c.type&&o.name===c.name)return c.value}return}for(a=t?PCt:BCt,r=0;r<i;++r)this.each(a(s[r],t,n));return this}function Uz(e,t,n){var s=zz(e),r=s.CustomEvent;typeof r=="function"?r=new r(t,n):(r=s.document.createEvent("Event"),n?(r.initEvent(t,n.bubbles,n.cancelable),r.detail=n.detail):r.initEvent(t,!1,!1)),e.dispatchEvent(r)}function VCt(e,t){return function(){return Uz(this,e,t)}}function UCt(e,t){return function(){return Uz(this,e,t.apply(this,arguments))}}function GCt(e,t){return this.each((typeof t=="function"?UCt:VCt)(e,t))}function*HCt(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var s=e[t],r=0,i=s.length,o;r<i;++r)(o=s[r])&&(yield o)}var j2=[null];function br(e,t){this._groups=e,this._parents=t}function Wh(){return new br([[document.documentElement]],j2)}function qCt(){return this}br.prototype=Wh.prototype={constructor:br,select:yIt,selectAll:kIt,selectChild:SIt,selectChildren:TIt,filter:AIt,data:LIt,enter:FIt,exit:BIt,join:PIt,merge:WIt,selection:qCt,order:VIt,sort:UIt,call:HIt,nodes:qIt,node:jIt,size:KIt,empty:XIt,each:YIt,attr:sCt,style:aCt,property:hCt,classed:mCt,text:yCt,html:ICt,raise:$Ct,lower:NCt,append:ECt,insert:TCt,remove:FCt,clone:MCt,datum:OCt,on:WCt,dispatch:GCt,[Symbol.iterator]:HCt};function yr(e){return typeof e=="string"?new br([[document.querySelector(e)]],[document.documentElement]):new br([[e]],j2)}function jCt(e){let t;for(;t=e.sourceEvent;)e=t;return e}function fo(e,t){if(e=jCt(e),t===void 0&&(t=e.currentTarget),t){var n=t.ownerSVGElement||t;if(n.createSVGPoint){var s=n.createSVGPoint();return s.x=e.clientX,s.y=e.clientY,s=s.matrixTransform(t.getScreenCTM().inverse()),[s.x,s.y]}if(t.getBoundingClientRect){var r=t.getBoundingClientRect();return[e.clientX-r.left-t.clientLeft,e.clientY-r.top-t.clientTop]}}return[e.pageX,e.pageY]}function KCt(e){return typeof e=="string"?new br([document.querySelectorAll(e)],[document.documentElement]):new br([Rz(e)],j2)}function XCt(e){if(!e.ok)throw new Error(e.status+" "+e.statusText);if(!(e.status===204||e.status===205))return e.json()}function YCt(e,t){return fetch(e,t).then(XCt)}function Vh(e,t){return e==null||t==null?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function ZCt(e,t){return e==null||t==null?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function Gz(e){let t,n,s;e.length!==2?(t=Vh,n=(a,u)=>Vh(e(a),u),s=(a,u)=>e(a)-u):(t=e===Vh||e===ZCt?e:JCt,n=e,s=e);function r(a,u,l=0,c=a.length){if(l<c){if(t(u,u)!==0)return c;do{const h=l+c>>>1;n(a[h],u)<0?l=h+1:c=h}while(l<c)}return l}function i(a,u,l=0,c=a.length){if(l<c){if(t(u,u)!==0)return c;do{const h=l+c>>>1;n(a[h],u)<=0?l=h+1:c=h}while(l<c)}return l}function o(a,u,l=0,c=a.length){const h=r(a,u,l,c-1);return h>l&&s(a[h-1],u)>-s(a[h],u)?h-1:h}return{left:r,center:o,right:i}}function JCt(){return 0}function QCt(e){return e===null?NaN:+e}function*t2t(e,t){if(t===void 0)for(let n of e)n!=null&&(n=+n)>=n&&(yield n);else{let n=-1;for(let s of e)(s=t(s,++n,e))!=null&&(s=+s)>=s&&(yield s)}}const e2t=Gz(Vh).right;Gz(QCt).center;var Hz=e2t;function n2t(e,t){let n=0;if(t===void 0)for(let s of e)s!=null&&(s=+s)>=s&&++n;else{let s=-1;for(let r of e)(r=t(r,++s,e))!=null&&(r=+r)>=r&&++n}return n}function Zf(e,t){let n,s;if(t===void 0)for(const r of e)r!=null&&(n===void 0?r>=r&&(n=s=r):(n>r&&(n=r),s<r&&(s=r)));else{let r=-1;for(let i of e)(i=t(i,++r,e))!=null&&(n===void 0?i>=i&&(n=s=i):(n>i&&(n=i),s<i&&(s=i)))}return[n,s]}class Uh{constructor(){this._partials=new Float64Array(32),this._n=0}add(t){const n=this._partials;let s=0;for(let r=0;r<this._n&&r<32;r++){const i=n[r],o=t+i,a=Math.abs(t)<Math.abs(i)?t-(o-i):i-(o-t);a&&(n[s++]=a),t=o}return n[s]=t,this._n=s+1,this}valueOf(){const t=this._partials;let n=this._n,s,r,i,o=0;if(n>0){for(o=t[--n];n>0&&(s=o,r=t[--n],o=s+r,i=r-(o-s),!i););n>0&&(i<0&&t[n-1]<0||i>0&&t[n-1]>0)&&(r=i*2,s=o+r,r==s-o&&(o=s))}return o}}class qz extends Map{constructor(t,n=i2t){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),t!=null)for(const[s,r]of t)this.set(s,r)}get(t){return super.get(jz(this,t))}has(t){return super.has(jz(this,t))}set(t,n){return super.set(s2t(this,t),n)}delete(t){return super.delete(r2t(this,t))}}function jz({_intern:e,_key:t},n){const s=t(n);return e.has(s)?e.get(s):n}function s2t({_intern:e,_key:t},n){const s=t(n);return e.has(s)?e.get(s):(e.set(s,n),n)}function r2t({_intern:e,_key:t},n){const s=t(n);return e.has(s)&&(n=e.get(s),e.delete(s)),n}function i2t(e){return e!==null&&typeof e=="object"?e.valueOf():e}function o2t(e){return e}function a2t(e=Vh){if(e===Vh)return Kz;if(typeof e!="function")throw new TypeError("compare is not a function");return(t,n)=>{const s=e(t,n);return s||s===0?s:(e(n,n)===0)-(e(t,t)===0)}}function Kz(e,t){return(e==null||!(e>=e))-(t==null||!(t>=t))||(e<t?-1:e>t?1:0)}var u2t=Array.prototype,l2t=u2t.slice;function K2(e){return()=>e}const c2t=Math.sqrt(50),h2t=Math.sqrt(10),d2t=Math.sqrt(2);function fb(e,t,n){const s=(t-e)/Math.max(0,n),r=Math.floor(Math.log10(s)),i=s/Math.pow(10,r),o=i>=c2t?10:i>=h2t?5:i>=d2t?2:1;let a,u,l;return r<0?(l=Math.pow(10,-r)/o,a=Math.round(e*l),u=Math.round(t*l),a/l<e&&++a,u/l>t&&--u,l=-l):(l=Math.pow(10,r)*o,a=Math.round(e/l),u=Math.round(t/l),a*l<e&&++a,u*l>t&&--u),u<a&&.5<=n&&n<2?fb(e,t,n*2):[a,u,l]}function Jf(e,t,n){if(t=+t,e=+e,n=+n,!(n>0))return[];if(e===t)return[e];const s=t<e,[r,i,o]=s?fb(t,e,n):fb(e,t,n);if(!(i>=r))return[];const a=i-r+1,u=new Array(a);if(s)if(o<0)for(let l=0;l<a;++l)u[l]=(i-l)/-o;else for(let l=0;l<a;++l)u[l]=(i-l)*o;else if(o<0)for(let l=0;l<a;++l)u[l]=(r+l)/-o;else for(let l=0;l<a;++l)u[l]=(r+l)*o;return u}function Gh(e,t,n){return t=+t,e=+e,n=+n,fb(e,t,n)[2]}function p2t(e,t,n){t=+t,e=+e,n=+n;const s=t<e,r=s?Gh(t,e,n):Gh(e,t,n);return(s?-1:1)*(r<0?1/-r:r)}function Xz(e,t,n){let s;for(;;){const r=Gh(e,t,n);if(r===s||r===0||!isFinite(r))return[e,t];r>0?(e=Math.floor(e/r)*r,t=Math.ceil(t/r)*r):r<0&&(e=Math.ceil(e*r)/r,t=Math.floor(t*r)/r),s=r}}function Yz(e){return Math.ceil(Math.log(n2t(e))/Math.LN2)+1}function f2t(){var e=o2t,t=Zf,n=Yz;function s(r){Array.isArray(r)||(r=Array.from(r));var i,o=r.length,a,u,l=new Array(o);for(i=0;i<o;++i)l[i]=e(r[i],i,r);var c=t(l),h=c[0],d=c[1],p=n(l,h,d);if(!Array.isArray(p)){const w=d,y=+p;if(t===Zf&&([h,d]=Xz(h,d,y)),p=Jf(h,d,y),p[0]<=h&&(u=Gh(h,d,y)),p[p.length-1]>=d)if(w>=d&&t===Zf){const v=Gh(h,d,y);isFinite(v)&&(v>0?d=(Math.floor(d/v)+1)*v:v<0&&(d=(Math.ceil(d*-v)+1)/-v))}else p.pop()}for(var f=p.length,m=0,g=f;p[m]<=h;)++m;for(;p[g-1]>d;)--g;(m||g<f)&&(p=p.slice(m,g),f=g-m);var x=new Array(f+1),b;for(i=0;i<=f;++i)b=x[i]=[],b.x0=i>0?p[i-1]:h,b.x1=i<f?p[i]:d;if(isFinite(u)){if(u>0)for(i=0;i<o;++i)(a=l[i])!=null&&h<=a&&a<=d&&x[Math.min(f,Math.floor((a-h)/u))].push(r[i]);else if(u<0){for(i=0;i<o;++i)if((a=l[i])!=null&&h<=a&&a<=d){const w=Math.floor((h-a)*u);x[Math.min(f,w+(p[w]<=a))].push(r[i])}}}else for(i=0;i<o;++i)(a=l[i])!=null&&h<=a&&a<=d&&x[Hz(p,a,0,f)].push(r[i]);return x}return s.value=function(r){return arguments.length?(e=typeof r=="function"?r:K2(r),s):e},s.domain=function(r){return arguments.length?(t=typeof r=="function"?r:K2([r[0],r[1]]),s):t},s.thresholds=function(r){return arguments.length?(n=typeof r=="function"?r:K2(Array.isArray(r)?l2t.call(r):r),s):n},s}function X2(e,t){let n;if(t===void 0)for(const s of e)s!=null&&(n<s||n===void 0&&s>=s)&&(n=s);else{let s=-1;for(let r of e)(r=t(r,++s,e))!=null&&(n<r||n===void 0&&r>=r)&&(n=r)}return n}function m2t(e,t){let n,s=-1,r=-1;if(t===void 0)for(const i of e)++r,i!=null&&(n<i||n===void 0&&i>=i)&&(n=i,s=r);else for(let i of e)(i=t(i,++r,e))!=null&&(n<i||n===void 0&&i>=i)&&(n=i,s=r);return s}function Y2(e,t){let n;if(t===void 0)for(const s of e)s!=null&&(n>s||n===void 0&&s>=s)&&(n=s);else{let s=-1;for(let r of e)(r=t(r,++s,e))!=null&&(n>r||n===void 0&&r>=r)&&(n=r)}return n}function g2t(e,t){let n,s=-1,r=-1;if(t===void 0)for(const i of e)++r,i!=null&&(n>i||n===void 0&&i>=i)&&(n=i,s=r);else for(let i of e)(i=t(i,++r,e))!=null&&(n>i||n===void 0&&i>=i)&&(n=i,s=r);return s}function Z2(e,t,n=0,s=1/0,r){if(t=Math.floor(t),n=Math.floor(Math.max(0,n)),s=Math.floor(Math.min(e.length-1,s)),!(n<=t&&t<=s))return e;for(r=r===void 0?Kz:a2t(r);s>n;){if(s-n>600){const u=s-n+1,l=t-n+1,c=Math.log(u),h=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*h*(u-h)/u)*(l-u/2<0?-1:1),p=Math.max(n,Math.floor(t-l*h/u+d)),f=Math.min(s,Math.floor(t+(u-l)*h/u+d));Z2(e,t,p,f,r)}const i=e[t];let o=n,a=s;for(Qf(e,n,t),r(e[s],i)>0&&Qf(e,n,s);o<a;){for(Qf(e,o,a),++o,--a;r(e[o],i)<0;)++o;for(;r(e[a],i)>0;)--a}r(e[n],i)===0?Qf(e,n,a):(++a,Qf(e,a,s)),a<=t&&(n=a+1),t<=a&&(s=a-1)}return e}function Qf(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function x2t(e,t,n){if(e=Float64Array.from(t2t(e,n)),!(!(s=e.length)||isNaN(t=+t))){if(t<=0||s<2)return Y2(e);if(t>=1)return X2(e);var s,r=(s-1)*t,i=Math.floor(r),o=X2(Z2(e,i).subarray(0,i+1)),a=Y2(e.subarray(i+1));return o+(a-o)*(r-i)}}function b2t(e,t){let n=0,s=0;if(t===void 0)for(let r of e)r!=null&&(r=+r)>=r&&(++n,s+=r);else{let r=-1;for(let i of e)(i=t(i,++r,e))!=null&&(i=+i)>=i&&(++n,s+=i)}if(n)return s/n}function y2t(e,t){return x2t(e,.5,t)}function w2t(e,t,n){e=+e,t=+t,n=(r=arguments.length)<2?(t=e,e=0,1):r<3?1:+n;for(var s=-1,r=Math.max(0,Math.ceil((t-e)/n))|0,i=new Array(r);++s<r;)i[s]=e+s*n;return i}var v2t=Zz(Math.random);function Zz(e){return function(n,s=0,r=n.length){let i=r-(s=+s);for(;i;){const o=e()*i--|0,a=n[i+s];n[i+s]=n[o+s],n[o+s]=a}return n}}function k2t(e,t){let n=0;if(t===void 0)for(let s of e)(s=+s)&&(n+=s);else{let s=-1;for(let r of e)(r=+t(r,++s,e))&&(n+=r)}return n}function tm(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e);break}return this}function I2t(e,t){switch(arguments.length){case 0:break;case 1:{typeof e=="function"?this.interpolator(e):this.range(e);break}default:{this.domain(e),typeof t=="function"?this.interpolator(t):this.range(t);break}}return this}const Jz=Symbol("implicit");function J2(){var e=new qz,t=[],n=[],s=Jz;function r(i){let o=e.get(i);if(o===void 0){if(s!==Jz)return s;e.set(i,o=t.push(i)-1)}return n[o%n.length]}return r.domain=function(i){if(!arguments.length)return t.slice();t=[],e=new qz;for(const o of i)e.has(o)||e.set(o,t.push(o)-1);return r},r.range=function(i){return arguments.length?(n=Array.from(i),r):n.slice()},r.unknown=function(i){return arguments.length?(s=i,r):s},r.copy=function(){return J2(t,n).unknown(s)},tm.apply(r,arguments),r}function Q2(){var e=J2().unknown(void 0),t=e.domain,n=e.range,s=0,r=1,i,o,a=!1,u=0,l=0,c=.5;delete e.unknown;function h(){var d=t().length,p=r<s,f=p?r:s,m=p?s:r;i=(m-f)/Math.max(1,d-u+l*2),a&&(i=Math.floor(i)),f+=(m-f-i*(d-u))*c,o=i*(1-u),a&&(f=Math.round(f),o=Math.round(o));var g=w2t(d).map(function(x){return f+i*x});return n(p?g.reverse():g)}return e.domain=function(d){return arguments.length?(t(d),h()):t()},e.range=function(d){return arguments.length?([s,r]=d,s=+s,r=+r,h()):[s,r]},e.rangeRound=function(d){return[s,r]=d,s=+s,r=+r,a=!0,h()},e.bandwidth=function(){return o},e.step=function(){return i},e.round=function(d){return arguments.length?(a=!!d,h()):a},e.padding=function(d){return arguments.length?(u=Math.min(1,l=+d),h()):u},e.paddingInner=function(d){return arguments.length?(u=Math.min(1,d),h()):u},e.paddingOuter=function(d){return arguments.length?(l=+d,h()):l},e.align=function(d){return arguments.length?(c=Math.max(0,Math.min(1,d)),h()):c},e.copy=function(){return Q2(t(),[s,r]).round(a).paddingInner(u).paddingOuter(l).align(c)},tm.apply(h(),arguments)}function Qz(e){var t=e.copy;return e.padding=e.paddingOuter,delete e.paddingInner,delete e.paddingOuter,e.copy=function(){return Qz(t())},e}function C2t(){return Qz(Q2.apply(null,arguments).paddingInner(1))}function Hh(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function em(e,t){var n=Object.create(e.prototype);for(var s in t)n[s]=t[s];return n}function Nu(){}var Gl=.7,qh=1/Gl,jh="\\s*([+-]?\\d+)\\s*",nm="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",Xo="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",$2t=/^#([0-9a-f]{3,8})$/,S2t=new RegExp(`^rgb\\(${jh},${jh},${jh}\\)$`),N2t=new RegExp(`^rgb\\(${Xo},${Xo},${Xo}\\)$`),E2t=new RegExp(`^rgba\\(${jh},${jh},${jh},${nm}\\)$`),D2t=new RegExp(`^rgba\\(${Xo},${Xo},${Xo},${nm}\\)$`),T2t=new RegExp(`^hsl\\(${nm},${Xo},${Xo}\\)$`),A2t=new RegExp(`^hsla\\(${nm},${Xo},${Xo},${nm}\\)$`),tB={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Hh(Nu,Eu,{copy(e){return Object.assign(new this.constructor,this,e)},displayable(){return this.rgb().displayable()},hex:eB,formatHex:eB,formatHex8:F2t,formatHsl:R2t,formatRgb:nB,toString:nB});function eB(){return this.rgb().formatHex()}function F2t(){return this.rgb().formatHex8()}function R2t(){return aB(this).formatHsl()}function nB(){return this.rgb().formatRgb()}function Eu(e){var t,n;return e=(e+"").trim().toLowerCase(),(t=$2t.exec(e))?(n=t[1].length,t=parseInt(t[1],16),n===6?sB(t):n===3?new Ds(t>>8&15|t>>4&240,t>>4&15|t&240,(t&15)<<4|t&15,1):n===8?mb(t>>24&255,t>>16&255,t>>8&255,(t&255)/255):n===4?mb(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|t&240,((t&15)<<4|t&15)/255):null):(t=S2t.exec(e))?new Ds(t[1],t[2],t[3],1):(t=N2t.exec(e))?new Ds(t[1]*255/100,t[2]*255/100,t[3]*255/100,1):(t=E2t.exec(e))?mb(t[1],t[2],t[3],t[4]):(t=D2t.exec(e))?mb(t[1]*255/100,t[2]*255/100,t[3]*255/100,t[4]):(t=T2t.exec(e))?oB(t[1],t[2]/100,t[3]/100,1):(t=A2t.exec(e))?oB(t[1],t[2]/100,t[3]/100,t[4]):tB.hasOwnProperty(e)?sB(tB[e]):e==="transparent"?new Ds(NaN,NaN,NaN,0):null}function sB(e){return new Ds(e>>16&255,e>>8&255,e&255,1)}function mb(e,t,n,s){return s<=0&&(e=t=n=NaN),new Ds(e,t,n,s)}function t$(e){return e instanceof Nu||(e=Eu(e)),e?(e=e.rgb(),new Ds(e.r,e.g,e.b,e.opacity)):new Ds}function gb(e,t,n,s){return arguments.length===1?t$(e):new Ds(e,t,n,s??1)}function Ds(e,t,n,s){this.r=+e,this.g=+t,this.b=+n,this.opacity=+s}Hh(Ds,gb,em(Nu,{brighter(e){return e=e==null?qh:Math.pow(qh,e),new Ds(this.r*e,this.g*e,this.b*e,this.opacity)},darker(e){return e=e==null?Gl:Math.pow(Gl,e),new Ds(this.r*e,this.g*e,this.b*e,this.opacity)},rgb(){return this},clamp(){return new Ds(Hl(this.r),Hl(this.g),Hl(this.b),xb(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:rB,formatHex:rB,formatHex8:_2t,formatRgb:iB,toString:iB}));function rB(){return`#${ql(this.r)}${ql(this.g)}${ql(this.b)}`}function _2t(){return`#${ql(this.r)}${ql(this.g)}${ql(this.b)}${ql((isNaN(this.opacity)?1:this.opacity)*255)}`}function iB(){const e=xb(this.opacity);return`${e===1?"rgb(":"rgba("}${Hl(this.r)}, ${Hl(this.g)}, ${Hl(this.b)}${e===1?")":`, ${e})`}`}function xb(e){return isNaN(e)?1:Math.max(0,Math.min(1,e))}function Hl(e){return Math.max(0,Math.min(255,Math.round(e)||0))}function ql(e){return e=Hl(e),(e<16?"0":"")+e.toString(16)}function oB(e,t,n,s){return s<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new mo(e,t,n,s)}function aB(e){if(e instanceof mo)return new mo(e.h,e.s,e.l,e.opacity);if(e instanceof Nu||(e=Eu(e)),!e)return new mo;if(e instanceof mo)return e;e=e.rgb();var t=e.r/255,n=e.g/255,s=e.b/255,r=Math.min(t,n,s),i=Math.max(t,n,s),o=NaN,a=i-r,u=(i+r)/2;return a?(t===i?o=(n-s)/a+(n<s)*6:n===i?o=(s-t)/a+2:o=(t-n)/a+4,a/=u<.5?i+r:2-i-r,o*=60):a=u>0&&u<1?0:o,new mo(o,a,u,e.opacity)}function bb(e,t,n,s){return arguments.length===1?aB(e):new mo(e,t,n,s??1)}function mo(e,t,n,s){this.h=+e,this.s=+t,this.l=+n,this.opacity=+s}Hh(mo,bb,em(Nu,{brighter(e){return e=e==null?qh:Math.pow(qh,e),new mo(this.h,this.s,this.l*e,this.opacity)},darker(e){return e=e==null?Gl:Math.pow(Gl,e),new mo(this.h,this.s,this.l*e,this.opacity)},rgb(){var e=this.h%360+(this.h<0)*360,t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,s=n+(n<.5?n:1-n)*t,r=2*n-s;return new Ds(e$(e>=240?e-240:e+120,r,s),e$(e,r,s),e$(e<120?e+240:e-120,r,s),this.opacity)},clamp(){return new mo(uB(this.h),yb(this.s),yb(this.l),xb(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const e=xb(this.opacity);return`${e===1?"hsl(":"hsla("}${uB(this.h)}, ${yb(this.s)*100}%, ${yb(this.l)*100}%${e===1?")":`, ${e})`}`}}));function uB(e){return e=(e||0)%360,e<0?e+360:e}function yb(e){return Math.max(0,Math.min(1,e||0))}function e$(e,t,n){return(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)*255}const lB=Math.PI/180,cB=180/Math.PI,wb=18,hB=.96422,dB=1,pB=.82521,fB=4/29,Kh=6/29,mB=3*Kh*Kh,M2t=Kh*Kh*Kh;function gB(e){if(e instanceof Yo)return new Yo(e.l,e.a,e.b,e.opacity);if(e instanceof Zo)return bB(e);e instanceof Ds||(e=t$(e));var t=o$(e.r),n=o$(e.g),s=o$(e.b),r=s$((.2225045*t+.7168786*n+.0606169*s)/dB),i,o;return t===n&&n===s?i=o=r:(i=s$((.4360747*t+.3850649*n+.1430804*s)/hB),o=s$((.0139322*t+.0971045*n+.7141733*s)/pB)),new Yo(116*r-16,500*(i-r),200*(r-o),e.opacity)}function n$(e,t,n,s){return arguments.length===1?gB(e):new Yo(e,t,n,s??1)}function Yo(e,t,n,s){this.l=+e,this.a=+t,this.b=+n,this.opacity=+s}Hh(Yo,n$,em(Nu,{brighter(e){return new Yo(this.l+wb*(e??1),this.a,this.b,this.opacity)},darker(e){return new Yo(this.l-wb*(e??1),this.a,this.b,this.opacity)},rgb(){var e=(this.l+16)/116,t=isNaN(this.a)?e:e+this.a/500,n=isNaN(this.b)?e:e-this.b/200;return t=hB*r$(t),e=dB*r$(e),n=pB*r$(n),new Ds(i$(3.1338561*t-1.6168667*e-.4906146*n),i$(-.9787684*t+1.9161415*e+.033454*n),i$(.0719453*t-.2289914*e+1.4052427*n),this.opacity)}}));function s$(e){return e>M2t?Math.pow(e,1/3):e/mB+fB}function r$(e){return e>Kh?e*e*e:mB*(e-fB)}function i$(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function o$(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function xB(e){if(e instanceof Zo)return new Zo(e.h,e.c,e.l,e.opacity);if(e instanceof Yo||(e=gB(e)),e.a===0&&e.b===0)return new Zo(NaN,0<e.l&&e.l<100?0:NaN,e.l,e.opacity);var t=Math.atan2(e.b,e.a)*cB;return new Zo(t<0?t+360:t,Math.sqrt(e.a*e.a+e.b*e.b),e.l,e.opacity)}function O2t(e,t,n,s){return arguments.length===1?xB(e):new Zo(n,t,e,s??1)}function L2t(e,t,n,s){return arguments.length===1?xB(e):new Zo(e,t,n,s??1)}function Zo(e,t,n,s){this.h=+e,this.c=+t,this.l=+n,this.opacity=+s}function bB(e){if(isNaN(e.h))return new Yo(e.l,0,0,e.opacity);var t=e.h*lB;return new Yo(e.l,Math.cos(t)*e.c,Math.sin(t)*e.c,e.opacity)}Hh(Zo,L2t,em(Nu,{brighter(e){return new Zo(this.h,this.c,this.l+wb*(e??1),this.opacity)},darker(e){return new Zo(this.h,this.c,this.l-wb*(e??1),this.opacity)},rgb(){return bB(this).rgb()}}));var yB=-.14861,a$=1.78277,u$=-.29227,vb=-.90649,sm=1.97294,wB=sm*vb,vB=sm*a$,kB=a$*u$-vb*yB;function z2t(e){if(e instanceof jl)return new jl(e.h,e.s,e.l,e.opacity);e instanceof Ds||(e=t$(e));var t=e.r/255,n=e.g/255,s=e.b/255,r=(kB*s+wB*t-vB*n)/(kB+wB-vB),i=s-r,o=(sm*(n-r)-u$*i)/vb,a=Math.sqrt(o*o+i*i)/(sm*r*(1-r)),u=a?Math.atan2(o,i)*cB-120:NaN;return new jl(u<0?u+360:u,a,r,e.opacity)}function Du(e,t,n,s){return arguments.length===1?z2t(e):new jl(e,t,n,s??1)}function jl(e,t,n,s){this.h=+e,this.s=+t,this.l=+n,this.opacity=+s}Hh(jl,Du,em(Nu,{brighter(e){return e=e==null?qh:Math.pow(qh,e),new jl(this.h,this.s,this.l*e,this.opacity)},darker(e){return e=e==null?Gl:Math.pow(Gl,e),new jl(this.h,this.s,this.l*e,this.opacity)},rgb(){var e=isNaN(this.h)?0:(this.h+120)*lB,t=+this.l,n=isNaN(this.s)?0:this.s*t*(1-t),s=Math.cos(e),r=Math.sin(e);return new Ds(255*(t+n*(yB*s+a$*r)),255*(t+n*(u$*s+vb*r)),255*(t+n*(sm*s)),this.opacity)}}));function B2t(e,t,n,s,r){var i=e*e,o=i*e;return((1-3*e+3*i-o)*t+(4-6*i+3*o)*n+(1+3*e+3*i-3*o)*s+o*r)/6}function P2t(e){var t=e.length-1;return function(n){var s=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),r=e[s],i=e[s+1],o=s>0?e[s-1]:2*r-i,a=s<t-1?e[s+2]:2*i-r;return B2t((n-s/t)*t,o,r,i,a)}}var kb=e=>()=>e;function IB(e,t){return function(n){return e+n*t}}function W2t(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(s){return Math.pow(e+s*t,n)}}function CB(e,t){var n=t-e;return n?IB(e,n>180||n<-180?n-360*Math.round(n/360):n):kb(isNaN(e)?t:e)}function V2t(e){return(e=+e)==1?ui:function(t,n){return n-t?W2t(t,n,e):kb(isNaN(t)?n:t)}}function ui(e,t){var n=t-e;return n?IB(e,n):kb(isNaN(e)?t:e)}var rm=function e(t){var n=V2t(t);function s(r,i){var o=n((r=gb(r)).r,(i=gb(i)).r),a=n(r.g,i.g),u=n(r.b,i.b),l=ui(r.opacity,i.opacity);return function(c){return r.r=o(c),r.g=a(c),r.b=u(c),r.opacity=l(c),r+""}}return s.gamma=e,s}(1);function U2t(e){return function(t){var n=t.length,s=new Array(n),r=new Array(n),i=new Array(n),o,a;for(o=0;o<n;++o)a=gb(t[o]),s[o]=a.r||0,r[o]=a.g||0,i[o]=a.b||0;return s=e(s),r=e(r),i=e(i),a.opacity=1,function(u){return a.r=s(u),a.g=r(u),a.b=i(u),a+""}}}var $B=U2t(P2t);function G2t(e,t){t||(t=[]);var n=e?Math.min(t.length,e.length):0,s=t.slice(),r;return function(i){for(r=0;r<n;++r)s[r]=e[r]*(1-i)+t[r]*i;return s}}function H2t(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}function q2t(e,t){var n=t?t.length:0,s=e?Math.min(n,e.length):0,r=new Array(s),i=new Array(n),o;for(o=0;o<s;++o)r[o]=Kl(e[o],t[o]);for(;o<n;++o)i[o]=t[o];return function(a){for(o=0;o<s;++o)i[o]=r[o](a);return i}}function j2t(e,t){var n=new Date;return e=+e,t=+t,function(s){return n.setTime(e*(1-s)+t*s),n}}function go(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}function K2t(e,t){var n={},s={},r;(e===null||typeof e!="object")&&(e={}),(t===null||typeof t!="object")&&(t={});for(r in t)r in e?n[r]=Kl(e[r],t[r]):s[r]=t[r];return function(i){for(r in n)s[r]=n[r](i);return s}}var l$=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,c$=new RegExp(l$.source,"g");function X2t(e){return function(){return e}}function Y2t(e){return function(t){return e(t)+""}}function SB(e,t){var n=l$.lastIndex=c$.lastIndex=0,s,r,i,o=-1,a=[],u=[];for(e=e+"",t=t+"";(s=l$.exec(e))&&(r=c$.exec(t));)(i=r.index)>n&&(i=t.slice(n,i),a[o]?a[o]+=i:a[++o]=i),(s=s[0])===(r=r[0])?a[o]?a[o]+=r:a[++o]=r:(a[++o]=null,u.push({i:o,x:go(s,r)})),n=c$.lastIndex;return n<t.length&&(i=t.slice(n),a[o]?a[o]+=i:a[++o]=i),a.length<2?u[0]?Y2t(u[0].x):X2t(t):(t=u.length,function(l){for(var c=0,h;c<t;++c)a[(h=u[c]).i]=h.x(l);return a.join("")})}function Kl(e,t){var n=typeof t,s;return t==null||n==="boolean"?kb(t):(n==="number"?go:n==="string"?(s=Eu(t))?(t=s,rm):SB:t instanceof Eu?rm:t instanceof Date?j2t:H2t(t)?G2t:Array.isArray(t)?q2t:typeof t.valueOf!="function"&&typeof t.toString!="function"||isNaN(t)?K2t:go)(e,t)}function NB(e,t){return e=+e,t=+t,function(n){return Math.round(e*(1-n)+t*n)}}var EB=180/Math.PI,h$={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function DB(e,t,n,s,r,i){var o,a,u;return(o=Math.sqrt(e*e+t*t))&&(e/=o,t/=o),(u=e*n+t*s)&&(n-=e*u,s-=t*u),(a=Math.sqrt(n*n+s*s))&&(n/=a,s/=a,u/=a),e*s<t*n&&(e=-e,t=-t,u=-u,o=-o),{translateX:r,translateY:i,rotate:Math.atan2(t,e)*EB,skewX:Math.atan(u)*EB,scaleX:o,scaleY:a}}var Ib;function Z2t(e){const t=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(e+"");return t.isIdentity?h$:DB(t.a,t.b,t.c,t.d,t.e,t.f)}function J2t(e){return e==null||(Ib||(Ib=document.createElementNS("http://www.w3.org/2000/svg","g")),Ib.setAttribute("transform",e),!(e=Ib.transform.baseVal.consolidate()))?h$:(e=e.matrix,DB(e.a,e.b,e.c,e.d,e.e,e.f))}function TB(e,t,n,s){function r(l){return l.length?l.pop()+" ":""}function i(l,c,h,d,p,f){if(l!==h||c!==d){var m=p.push("translate(",null,t,null,n);f.push({i:m-4,x:go(l,h)},{i:m-2,x:go(c,d)})}else(h||d)&&p.push("translate("+h+t+d+n)}function o(l,c,h,d){l!==c?(l-c>180?c+=360:c-l>180&&(l+=360),d.push({i:h.push(r(h)+"rotate(",null,s)-2,x:go(l,c)})):c&&h.push(r(h)+"rotate("+c+s)}function a(l,c,h,d){l!==c?d.push({i:h.push(r(h)+"skewX(",null,s)-2,x:go(l,c)}):c&&h.push(r(h)+"skewX("+c+s)}function u(l,c,h,d,p,f){if(l!==h||c!==d){var m=p.push(r(p)+"scale(",null,",",null,")");f.push({i:m-4,x:go(l,h)},{i:m-2,x:go(c,d)})}else(h!==1||d!==1)&&p.push(r(p)+"scale("+h+","+d+")")}return function(l,c){var h=[],d=[];return l=e(l),c=e(c),i(l.translateX,l.translateY,c.translateX,c.translateY,h,d),o(l.rotate,c.rotate,h,d),a(l.skewX,c.skewX,h,d),u(l.scaleX,l.scaleY,c.scaleX,c.scaleY,h,d),l=c=null,function(p){for(var f=-1,m=d.length,g;++f<m;)h[(g=d[f]).i]=g.x(p);return h.join("")}}}var Q2t=TB(Z2t,"px, ","px)","deg)"),t$t=TB(J2t,", ",")",")"),e$t=1e-12;function AB(e){return((e=Math.exp(e))+1/e)/2}function n$t(e){return((e=Math.exp(e))-1/e)/2}function s$t(e){return((e=Math.exp(2*e))-1)/(e+1)}var FB=function e(t,n,s){function r(i,o){var a=i[0],u=i[1],l=i[2],c=o[0],h=o[1],d=o[2],p=c-a,f=h-u,m=p*p+f*f,g,x;if(m<e$t)x=Math.log(d/l)/t,g=function(C){return[a+C*p,u+C*f,l*Math.exp(t*C*x)]};else{var b=Math.sqrt(m),w=(d*d-l*l+s*m)/(2*l*n*b),y=(d*d-l*l-s*m)/(2*d*n*b),v=Math.log(Math.sqrt(w*w+1)-w),k=Math.log(Math.sqrt(y*y+1)-y);x=(k-v)/t,g=function(C){var I=C*x,$=AB(v),S=l/(n*b)*($*s$t(t*I+v)-n$t(v));return[a+S*p,u+S*f,l*$/AB(t*I+v)]}}return g.duration=x*1e3*t/Math.SQRT2,g}return r.rho=function(i){var o=Math.max(.001,+i),a=o*o,u=a*a;return e(o,a,u)},r}(Math.SQRT2,2,4);function r$t(e){return function(t,n){var s=e((t=bb(t)).h,(n=bb(n)).h),r=ui(t.s,n.s),i=ui(t.l,n.l),o=ui(t.opacity,n.opacity);return function(a){return t.h=s(a),t.s=r(a),t.l=i(a),t.opacity=o(a),t+""}}}var i$t=r$t(CB);function o$t(e,t){var n=ui((e=n$(e)).l,(t=n$(t)).l),s=ui(e.a,t.a),r=ui(e.b,t.b),i=ui(e.opacity,t.opacity);return function(o){return e.l=n(o),e.a=s(o),e.b=r(o),e.opacity=i(o),e+""}}function RB(e){return function t(n){n=+n;function s(r,i){var o=e((r=Du(r)).h,(i=Du(i)).h),a=ui(r.s,i.s),u=ui(r.l,i.l),l=ui(r.opacity,i.opacity);return function(c){return r.h=o(c),r.s=a(c),r.l=u(Math.pow(c,n)),r.opacity=l(c),r+""}}return s.gamma=t,s}(1)}RB(CB);var _B=RB(ui);function a$t(e,t){t===void 0&&(t=e,e=Kl);for(var n=0,s=t.length-1,r=t[0],i=new Array(s<0?0:s);n<s;)i[n]=e(r,r=t[++n]);return function(o){var a=Math.max(0,Math.min(s-1,Math.floor(o*=s)));return i[a](o-a)}}function u$t(e,t){for(var n=new Array(t),s=0;s<t;++s)n[s]=e(s/(t-1));return n}function l$t(e){return function(){return e}}function c$t(e){return+e}var MB=[0,1];function Ai(e){return e}function d$(e,t){return(t-=e=+e)?function(n){return(n-e)/t}:l$t(isNaN(t)?NaN:.5)}function h$t(e,t){var n;return e>t&&(n=e,e=t,t=n),function(s){return Math.max(e,Math.min(t,s))}}function d$t(e,t,n){var s=e[0],r=e[1],i=t[0],o=t[1];return r<s?(s=d$(r,s),i=n(o,i)):(s=d$(s,r),i=n(i,o)),function(a){return i(s(a))}}function p$t(e,t,n){var s=Math.min(e.length,t.length)-1,r=new Array(s),i=new Array(s),o=-1;for(e[s]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++o<s;)r[o]=d$(e[o],e[o+1]),i[o]=n(t[o],t[o+1]);return function(a){var u=Hz(e,a,1,s)-1;return i[u](r[u](a))}}function p$(e,t){return t.domain(e.domain()).range(e.range()).interpolate(e.interpolate()).clamp(e.clamp()).unknown(e.unknown())}function f$(){var e=MB,t=MB,n=Kl,s,r,i,o=Ai,a,u,l;function c(){var d=Math.min(e.length,t.length);return o!==Ai&&(o=h$t(e[0],e[d-1])),a=d>2?p$t:d$t,u=l=null,h}function h(d){return d==null||isNaN(d=+d)?i:(u||(u=a(e.map(s),t,n)))(s(o(d)))}return h.invert=function(d){return o(r((l||(l=a(t,e.map(s),go)))(d)))},h.domain=function(d){return arguments.length?(e=Array.from(d,c$t),c()):e.slice()},h.range=function(d){return arguments.length?(t=Array.from(d),c()):t.slice()},h.rangeRound=function(d){return t=Array.from(d),n=NB,c()},h.clamp=function(d){return arguments.length?(o=d?!0:Ai,c()):o!==Ai},h.interpolate=function(d){return arguments.length?(n=d,c()):n},h.unknown=function(d){return arguments.length?(i=d,h):i},function(d,p){return s=d,r=p,c()}}function f$t(){return f$()(Ai,Ai)}function m$t(e){return Math.abs(e=Math.round(e))>=1e21?e.toLocaleString("en").replace(/,/g,""):e.toString(10)}function Cb(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var n,s=e.slice(0,n);return[s.length>1?s[0]+s.slice(2):s,+e.slice(n+1)]}function Xh(e){return e=Cb(Math.abs(e)),e?e[1]:NaN}function g$t(e,t){return function(n,s){for(var r=n.length,i=[],o=0,a=e[0],u=0;r>0&&a>0&&(u+a+1>s&&(a=Math.max(1,s-u)),i.push(n.substring(r-=a,r+a)),!((u+=a+1)>s));)a=e[o=(o+1)%e.length];return i.reverse().join(t)}}function x$t(e){return function(t){return t.replace(/[0-9]/g,function(n){return e[+n]})}}var b$t=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function im(e){if(!(t=b$t.exec(e)))throw new Error("invalid format: "+e);var t;return new m$({fill:t[1],align:t[2],sign:t[3],symbol:t[4],zero:t[5],width:t[6],comma:t[7],precision:t[8]&&t[8].slice(1),trim:t[9],type:t[10]})}im.prototype=m$.prototype;function m$(e){this.fill=e.fill===void 0?" ":e.fill+"",this.align=e.align===void 0?">":e.align+"",this.sign=e.sign===void 0?"-":e.sign+"",this.symbol=e.symbol===void 0?"":e.symbol+"",this.zero=!!e.zero,this.width=e.width===void 0?void 0:+e.width,this.comma=!!e.comma,this.precision=e.precision===void 0?void 0:+e.precision,this.trim=!!e.trim,this.type=e.type===void 0?"":e.type+""}m$.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(this.width===void 0?"":Math.max(1,this.width|0))+(this.comma?",":"")+(this.precision===void 0?"":"."+Math.max(0,this.precision|0))+(this.trim?"~":"")+this.type};function y$t(e){t:for(var t=e.length,n=1,s=-1,r;n<t;++n)switch(e[n]){case".":s=r=n;break;case"0":s===0&&(s=n),r=n;break;default:if(!+e[n])break t;s>0&&(s=0);break}return s>0?e.slice(0,s)+e.slice(r+1):e}var OB;function w$t(e,t){var n=Cb(e,t);if(!n)return e+"";var s=n[0],r=n[1],i=r-(OB=Math.max(-8,Math.min(8,Math.floor(r/3)))*3)+1,o=s.length;return i===o?s:i>o?s+new Array(i-o+1).join("0"):i>0?s.slice(0,i)+"."+s.slice(i):"0."+new Array(1-i).join("0")+Cb(e,Math.max(0,t+i-1))[0]}function LB(e,t){var n=Cb(e,t);if(!n)return e+"";var s=n[0],r=n[1];return r<0?"0."+new Array(-r).join("0")+s:s.length>r+1?s.slice(0,r+1)+"."+s.slice(r+1):s+new Array(r-s.length+2).join("0")}var zB={"%":(e,t)=>(e*100).toFixed(t),b:e=>Math.round(e).toString(2),c:e=>e+"",d:m$t,e:(e,t)=>e.toExponential(t),f:(e,t)=>e.toFixed(t),g:(e,t)=>e.toPrecision(t),o:e=>Math.round(e).toString(8),p:(e,t)=>LB(e*100,t),r:LB,s:w$t,X:e=>Math.round(e).toString(16).toUpperCase(),x:e=>Math.round(e).toString(16)};function BB(e){return e}var PB=Array.prototype.map,WB=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function v$t(e){var t=e.grouping===void 0||e.thousands===void 0?BB:g$t(PB.call(e.grouping,Number),e.thousands+""),n=e.currency===void 0?"":e.currency[0]+"",s=e.currency===void 0?"":e.currency[1]+"",r=e.decimal===void 0?".":e.decimal+"",i=e.numerals===void 0?BB:x$t(PB.call(e.numerals,String)),o=e.percent===void 0?"%":e.percent+"",a=e.minus===void 0?"−":e.minus+"",u=e.nan===void 0?"NaN":e.nan+"";function l(h){h=im(h);var d=h.fill,p=h.align,f=h.sign,m=h.symbol,g=h.zero,x=h.width,b=h.comma,w=h.precision,y=h.trim,v=h.type;v==="n"?(b=!0,v="g"):zB[v]||(w===void 0&&(w=12),y=!0,v="g"),(g||d==="0"&&p==="=")&&(g=!0,d="0",p="=");var k=m==="$"?n:m==="#"&&/[boxX]/.test(v)?"0"+v.toLowerCase():"",C=m==="$"?s:/[%p]/.test(v)?o:"",I=zB[v],$=/[defgprs%]/.test(v);w=w===void 0?6:/[gprs]/.test(v)?Math.max(1,Math.min(21,w)):Math.max(0,Math.min(20,w));function S(N){var F=k,D=C,E,A,T;if(v==="c")D=I(N)+D,N="";else{N=+N;var R=N<0||1/N<0;if(N=isNaN(N)?u:I(Math.abs(N),w),y&&(N=y$t(N)),R&&+N==0&&f!=="+"&&(R=!1),F=(R?f==="("?f:a:f==="-"||f==="("?"":f)+F,D=(v==="s"?WB[8+OB/3]:"")+D+(R&&f==="("?")":""),$){for(E=-1,A=N.length;++E<A;)if(T=N.charCodeAt(E),48>T||T>57){D=(T===46?r+N.slice(E+1):N.slice(E))+D,N=N.slice(0,E);break}}}b&&!g&&(N=t(N,1/0));var _=F.length+N.length+D.length,M=_<x?new Array(x-_+1).join(d):"";switch(b&&g&&(N=t(M+N,M.length?x-D.length:1/0),M=""),p){case"<":N=F+N+D+M;break;case"=":N=F+M+N+D;break;case"^":N=M.slice(0,_=M.length>>1)+F+N+D+M.slice(_);break;default:N=M+F+N+D;break}return i(N)}return S.toString=function(){return h+""},S}function c(h,d){var p=l((h=im(h),h.type="f",h)),f=Math.max(-8,Math.min(8,Math.floor(Xh(d)/3)))*3,m=Math.pow(10,-f),g=WB[8+f/3];return function(x){return p(m*x)+g}}return{format:l,formatPrefix:c}}var $b,Sb,VB;k$t({thousands:",",grouping:[3],currency:["$",""]});function k$t(e){return $b=v$t(e),Sb=$b.format,VB=$b.formatPrefix,$b}function I$t(e){return Math.max(0,-Xh(Math.abs(e)))}function C$t(e,t){return Math.max(0,Math.max(-8,Math.min(8,Math.floor(Xh(t)/3)))*3-Xh(Math.abs(e)))}function $$t(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,Xh(t)-Xh(e))+1}function S$t(e,t,n,s){var r=p2t(e,t,n),i;switch(s=im(s??",f"),s.type){case"s":{var o=Math.max(Math.abs(e),Math.abs(t));return s.precision==null&&!isNaN(i=C$t(r,o))&&(s.precision=i),VB(s,o)}case"":case"e":case"g":case"p":case"r":{s.precision==null&&!isNaN(i=$$t(r,Math.max(Math.abs(e),Math.abs(t))))&&(s.precision=i-(s.type==="e"));break}case"f":case"%":{s.precision==null&&!isNaN(i=I$t(r))&&(s.precision=i-(s.type==="%")*2);break}}return Sb(s)}function g$(e){var t=e.domain;return e.ticks=function(n){var s=t();return Jf(s[0],s[s.length-1],n??10)},e.tickFormat=function(n,s){var r=t();return S$t(r[0],r[r.length-1],n??10,s)},e.nice=function(n){n==null&&(n=10);var s=t(),r=0,i=s.length-1,o=s[r],a=s[i],u,l,c=10;for(a<o&&(l=o,o=a,a=l,l=r,r=i,i=l);c-- >0;){if(l=Gh(o,a,n),l===u)return s[r]=o,s[i]=a,t(s);if(l>0)o=Math.floor(o/l)*l,a=Math.ceil(a/l)*l;else if(l<0)o=Math.ceil(o*l)/l,a=Math.floor(a*l)/l;else break;u=l}return e},e}function UB(){var e=f$t();return e.copy=function(){return p$(e,UB())},tm.apply(e,arguments),g$(e)}function N$t(e,t){e=e.slice();var n=0,s=e.length-1,r=e[n],i=e[s],o;return i<r&&(o=n,n=s,s=o,o=r,r=i,i=o),e[n]=t.floor(r),e[s]=t.ceil(i),e}function GB(e){return Math.log(e)}function HB(e){return Math.exp(e)}function E$t(e){return-Math.log(-e)}function D$t(e){return-Math.exp(-e)}function T$t(e){return isFinite(e)?+("1e"+e):e<0?0:e}function A$t(e){return e===10?T$t:e===Math.E?Math.exp:t=>Math.pow(e,t)}function F$t(e){return e===Math.E?Math.log:e===10&&Math.log10||e===2&&Math.log2||(e=Math.log(e),t=>Math.log(t)/e)}function qB(e){return(t,n)=>-e(-t,n)}function R$t(e){const t=e(GB,HB),n=t.domain;let s=10,r,i;function o(){return r=F$t(s),i=A$t(s),n()[0]<0?(r=qB(r),i=qB(i),e(E$t,D$t)):e(GB,HB),t}return t.base=function(a){return arguments.length?(s=+a,o()):s},t.domain=function(a){return arguments.length?(n(a),o()):n()},t.ticks=a=>{const u=n();let l=u[0],c=u[u.length-1];const h=c<l;h&&([l,c]=[c,l]);let d=r(l),p=r(c),f,m;const g=a==null?10:+a;let x=[];if(!(s%1)&&p-d<g){if(d=Math.floor(d),p=Math.ceil(p),l>0){for(;d<=p;++d)for(f=1;f<s;++f)if(m=d<0?f/i(-d):f*i(d),!(m<l)){if(m>c)break;x.push(m)}}else for(;d<=p;++d)for(f=s-1;f>=1;--f)if(m=d>0?f/i(-d):f*i(d),!(m<l)){if(m>c)break;x.push(m)}x.length*2<g&&(x=Jf(l,c,g))}else x=Jf(d,p,Math.min(p-d,g)).map(i);return h?x.reverse():x},t.tickFormat=(a,u)=>{if(a==null&&(a=10),u==null&&(u=s===10?"s":","),typeof u!="function"&&(!(s%1)&&(u=im(u)).precision==null&&(u.trim=!0),u=Sb(u)),a===1/0)return u;const l=Math.max(1,s*a/t.ticks().length);return c=>{let h=c/i(Math.round(r(c)));return h*s<s-.5&&(h*=s),h<=l?u(c):""}},t.nice=()=>n(N$t(n(),{floor:a=>i(Math.floor(r(a))),ceil:a=>i(Math.ceil(r(a)))})),t}function jB(){const e=R$t(f$()).domain([1,10]);return e.copy=()=>p$(e,jB()).base(e.base()),tm.apply(e,arguments),e}function KB(e){return function(t){return t<0?-Math.pow(-t,e):Math.pow(t,e)}}function _$t(e){return e<0?-Math.sqrt(-e):Math.sqrt(e)}function M$t(e){return e<0?-e*e:e*e}function O$t(e){var t=e(Ai,Ai),n=1;function s(){return n===1?e(Ai,Ai):n===.5?e(_$t,M$t):e(KB(n),KB(1/n))}return t.exponent=function(r){return arguments.length?(n=+r,s()):n},g$(t)}function x$(){var e=O$t(f$());return e.copy=function(){return p$(e,x$()).exponent(e.exponent())},tm.apply(e,arguments),e}function L$t(){return x$.apply(null,arguments).exponent(.5)}const b$=new Date,y$=new Date;function Jo(e,t,n,s){function r(i){return e(i=arguments.length===0?new Date:new Date(+i)),i}return r.floor=i=>(e(i=new Date(+i)),i),r.ceil=i=>(e(i=new Date(i-1)),t(i,1),e(i),i),r.round=i=>{const o=r(i),a=r.ceil(i);return i-o<a-i?o:a},r.offset=(i,o)=>(t(i=new Date(+i),o==null?1:Math.floor(o)),i),r.range=(i,o,a)=>{const u=[];if(i=r.ceil(i),a=a==null?1:Math.floor(a),!(i<o)||!(a>0))return u;let l;do u.push(l=new Date(+i)),t(i,a),e(i);while(l<i&&i<o);return u},r.filter=i=>Jo(o=>{if(o>=o)for(;e(o),!i(o);)o.setTime(o-1)},(o,a)=>{if(o>=o)if(a<0)for(;++a<=0;)for(;t(o,-1),!i(o););else for(;--a>=0;)for(;t(o,1),!i(o););}),n&&(r.count=(i,o)=>(b$.setTime(+i),y$.setTime(+o),e(b$),e(y$),Math.floor(n(b$,y$))),r.every=i=>(i=Math.floor(i),!isFinite(i)||!(i>0)?null:i>1?r.filter(s?o=>s(o)%i===0:o=>r.count(0,o)%i===0):r)),r}const w$=1e3*60,om=w$*60*24,XB=om*7,v$=Jo(e=>e.setHours(0,0,0,0),(e,t)=>e.setDate(e.getDate()+t),(e,t)=>(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*w$)/om,e=>e.getDate()-1);v$.range;const k$=Jo(e=>{e.setUTCHours(0,0,0,0)},(e,t)=>{e.setUTCDate(e.getUTCDate()+t)},(e,t)=>(t-e)/om,e=>e.getUTCDate()-1);k$.range,Jo(e=>{e.setUTCHours(0,0,0,0)},(e,t)=>{e.setUTCDate(e.getUTCDate()+t)},(e,t)=>(t-e)/om,e=>Math.floor(e/om)).range;function Xl(e){return Jo(t=>{t.setDate(t.getDate()-(t.getDay()+7-e)%7),t.setHours(0,0,0,0)},(t,n)=>{t.setDate(t.getDate()+n*7)},(t,n)=>(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*w$)/XB)}const YB=Xl(0),Nb=Xl(1),z$t=Xl(2),B$t=Xl(3),Yh=Xl(4),P$t=Xl(5),W$t=Xl(6);YB.range,Nb.range,z$t.range,B$t.range,Yh.range,P$t.range,W$t.range;function Yl(e){return Jo(t=>{t.setUTCDate(t.getUTCDate()-(t.getUTCDay()+7-e)%7),t.setUTCHours(0,0,0,0)},(t,n)=>{t.setUTCDate(t.getUTCDate()+n*7)},(t,n)=>(n-t)/XB)}const ZB=Yl(0),Eb=Yl(1),V$t=Yl(2),U$t=Yl(3),Zh=Yl(4),G$t=Yl(5),H$t=Yl(6);ZB.range,Eb.range,V$t.range,U$t.range,Zh.range,G$t.range,H$t.range;const Zl=Jo(e=>{e.setMonth(0,1),e.setHours(0,0,0,0)},(e,t)=>{e.setFullYear(e.getFullYear()+t)},(e,t)=>t.getFullYear()-e.getFullYear(),e=>e.getFullYear());Zl.every=e=>!isFinite(e=Math.floor(e))||!(e>0)?null:Jo(t=>{t.setFullYear(Math.floor(t.getFullYear()/e)*e),t.setMonth(0,1),t.setHours(0,0,0,0)},(t,n)=>{t.setFullYear(t.getFullYear()+n*e)}),Zl.range;const Jl=Jo(e=>{e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},(e,t)=>{e.setUTCFullYear(e.getUTCFullYear()+t)},(e,t)=>t.getUTCFullYear()-e.getUTCFullYear(),e=>e.getUTCFullYear());Jl.every=e=>!isFinite(e=Math.floor(e))||!(e>0)?null:Jo(t=>{t.setUTCFullYear(Math.floor(t.getUTCFullYear()/e)*e),t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},(t,n)=>{t.setUTCFullYear(t.getUTCFullYear()+n*e)}),Jl.range;function I$(e){if(0<=e.y&&e.y<100){var t=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return t.setFullYear(e.y),t}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function C$(e){if(0<=e.y&&e.y<100){var t=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return t.setUTCFullYear(e.y),t}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function am(e,t,n){return{y:e,m:t,d:n,H:0,M:0,S:0,L:0}}function q$t(e){var t=e.dateTime,n=e.date,s=e.time,r=e.periods,i=e.days,o=e.shortDays,a=e.months,u=e.shortMonths,l=um(r),c=lm(r),h=um(i),d=lm(i),p=um(o),f=lm(o),m=um(a),g=lm(a),x=um(u),b=lm(u),w={a:R,A:_,b:M,B:z,c:null,d:sP,e:sP,f:mSt,g:$St,G:NSt,H:dSt,I:pSt,j:fSt,L:rP,m:gSt,M:xSt,p:B,q:V,Q:cP,s:hP,S:bSt,u:ySt,U:wSt,V:vSt,w:kSt,W:ISt,x:null,X:null,y:CSt,Y:SSt,Z:ESt,"%":lP},y={a:G,A:j,b:H,B:at,c:null,d:oP,e:oP,f:FSt,g:VSt,G:GSt,H:DSt,I:TSt,j:ASt,L:aP,m:RSt,M:_St,p:it,q:ft,Q:cP,s:hP,S:MSt,u:OSt,U:LSt,V:zSt,w:BSt,W:PSt,x:null,X:null,y:WSt,Y:USt,Z:HSt,"%":lP},v={a:S,A:N,b:F,B:D,c:E,d:eP,e:eP,f:uSt,g:tP,G:QB,H:nP,I:nP,j:rSt,L:aSt,m:sSt,M:iSt,p:$,q:nSt,Q:cSt,s:hSt,S:oSt,u:Z$t,U:J$t,V:Q$t,w:Y$t,W:tSt,x:A,X:T,y:tP,Y:QB,Z:eSt,"%":lSt};w.x=k(n,w),w.X=k(s,w),w.c=k(t,w),y.x=k(n,y),y.X=k(s,y),y.c=k(t,y);function k(X,ut){return function(wt){var ot=[],Et=-1,Tt=0,Rt=X.length,_t,kt,Lt;for(wt instanceof Date||(wt=new Date(+wt));++Et<Rt;)X.charCodeAt(Et)===37&&(ot.push(X.slice(Tt,Et)),(kt=JB[_t=X.charAt(++Et)])!=null?_t=X.charAt(++Et):kt=_t==="e"?" ":"0",(Lt=ut[_t])&&(_t=Lt(wt,kt)),ot.push(_t),Tt=Et+1);return ot.push(X.slice(Tt,Et)),ot.join("")}}function C(X,ut){return function(wt){var ot=am(1900,void 0,1),Et=I(ot,X,wt+="",0),Tt,Rt;if(Et!=wt.length)return null;if("Q"in ot)return new Date(ot.Q);if("s"in ot)return new Date(ot.s*1e3+("L"in ot?ot.L:0));if(ut&&!("Z"in ot)&&(ot.Z=0),"p"in ot&&(ot.H=ot.H%12+ot.p*12),ot.m===void 0&&(ot.m="q"in ot?ot.q:0),"V"in ot){if(ot.V<1||ot.V>53)return null;"w"in ot||(ot.w=1),"Z"in ot?(Tt=C$(am(ot.y,0,1)),Rt=Tt.getUTCDay(),Tt=Rt>4||Rt===0?Eb.ceil(Tt):Eb(Tt),Tt=k$.offset(Tt,(ot.V-1)*7),ot.y=Tt.getUTCFullYear(),ot.m=Tt.getUTCMonth(),ot.d=Tt.getUTCDate()+(ot.w+6)%7):(Tt=I$(am(ot.y,0,1)),Rt=Tt.getDay(),Tt=Rt>4||Rt===0?Nb.ceil(Tt):Nb(Tt),Tt=v$.offset(Tt,(ot.V-1)*7),ot.y=Tt.getFullYear(),ot.m=Tt.getMonth(),ot.d=Tt.getDate()+(ot.w+6)%7)}else("W"in ot||"U"in ot)&&("w"in ot||(ot.w="u"in ot?ot.u%7:"W"in ot?1:0),Rt="Z"in ot?C$(am(ot.y,0,1)).getUTCDay():I$(am(ot.y,0,1)).getDay(),ot.m=0,ot.d="W"in ot?(ot.w+6)%7+ot.W*7-(Rt+5)%7:ot.w+ot.U*7-(Rt+6)%7);return"Z"in ot?(ot.H+=ot.Z/100|0,ot.M+=ot.Z%100,C$(ot)):I$(ot)}}function I(X,ut,wt,ot){for(var Et=0,Tt=ut.length,Rt=wt.length,_t,kt;Et<Tt;){if(ot>=Rt)return-1;if(_t=ut.charCodeAt(Et++),_t===37){if(_t=ut.charAt(Et++),kt=v[_t in JB?ut.charAt(Et++):_t],!kt||(ot=kt(X,wt,ot))<0)return-1}else if(_t!=wt.charCodeAt(ot++))return-1}return ot}function $(X,ut,wt){var ot=l.exec(ut.slice(wt));return ot?(X.p=c.get(ot[0].toLowerCase()),wt+ot[0].length):-1}function S(X,ut,wt){var ot=p.exec(ut.slice(wt));return ot?(X.w=f.get(ot[0].toLowerCase()),wt+ot[0].length):-1}function N(X,ut,wt){var ot=h.exec(ut.slice(wt));return ot?(X.w=d.get(ot[0].toLowerCase()),wt+ot[0].length):-1}function F(X,ut,wt){var ot=x.exec(ut.slice(wt));return ot?(X.m=b.get(ot[0].toLowerCase()),wt+ot[0].length):-1}function D(X,ut,wt){var ot=m.exec(ut.slice(wt));return ot?(X.m=g.get(ot[0].toLowerCase()),wt+ot[0].length):-1}function E(X,ut,wt){return I(X,t,ut,wt)}function A(X,ut,wt){return I(X,n,ut,wt)}function T(X,ut,wt){return I(X,s,ut,wt)}function R(X){return o[X.getDay()]}function _(X){return i[X.getDay()]}function M(X){return u[X.getMonth()]}function z(X){return a[X.getMonth()]}function B(X){return r[+(X.getHours()>=12)]}function V(X){return 1+~~(X.getMonth()/3)}function G(X){return o[X.getUTCDay()]}function j(X){return i[X.getUTCDay()]}function H(X){return u[X.getUTCMonth()]}function at(X){return a[X.getUTCMonth()]}function it(X){return r[+(X.getUTCHours()>=12)]}function ft(X){return 1+~~(X.getUTCMonth()/3)}return{format:function(X){var ut=k(X+="",w);return ut.toString=function(){return X},ut},parse:function(X){var ut=C(X+="",!1);return ut.toString=function(){return X},ut},utcFormat:function(X){var ut=k(X+="",y);return ut.toString=function(){return X},ut},utcParse:function(X){var ut=C(X+="",!0);return ut.toString=function(){return X},ut}}}var JB={"-":"",_:" ",0:"0"},Ts=/^\s*\d+/,j$t=/^%/,K$t=/[\\^$*+?|[\]().{}]/g;function Pe(e,t,n){var s=e<0?"-":"",r=(s?-e:e)+"",i=r.length;return s+(i<n?new Array(n-i+1).join(t)+r:r)}function X$t(e){return e.replace(K$t,"\\$&")}function um(e){return new RegExp("^(?:"+e.map(X$t).join("|")+")","i")}function lm(e){return new Map(e.map((t,n)=>[t.toLowerCase(),n]))}function Y$t(e,t,n){var s=Ts.exec(t.slice(n,n+1));return s?(e.w=+s[0],n+s[0].length):-1}function Z$t(e,t,n){var s=Ts.exec(t.slice(n,n+1));return s?(e.u=+s[0],n+s[0].length):-1}function J$t(e,t,n){var s=Ts.exec(t.slice(n,n+2));return s?(e.U=+s[0],n+s[0].length):-1}function Q$t(e,t,n){var s=Ts.exec(t.slice(n,n+2));return s?(e.V=+s[0],n+s[0].length):-1}function tSt(e,t,n){var s=Ts.exec(t.slice(n,n+2));return s?(e.W=+s[0],n+s[0].length):-1}function QB(e,t,n){var s=Ts.exec(t.slice(n,n+4));return s?(e.y=+s[0],n+s[0].length):-1}function tP(e,t,n){var s=Ts.exec(t.slice(n,n+2));return s?(e.y=+s[0]+(+s[0]>68?1900:2e3),n+s[0].length):-1}function eSt(e,t,n){var s=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(t.slice(n,n+6));return s?(e.Z=s[1]?0:-(s[2]+(s[3]||"00")),n+s[0].length):-1}function nSt(e,t,n){var s=Ts.exec(t.slice(n,n+1));return s?(e.q=s[0]*3-3,n+s[0].length):-1}function sSt(e,t,n){var s=Ts.exec(t.slice(n,n+2));return s?(e.m=s[0]-1,n+s[0].length):-1}function eP(e,t,n){var s=Ts.exec(t.slice(n,n+2));return s?(e.d=+s[0],n+s[0].length):-1}function rSt(e,t,n){var s=Ts.exec(t.slice(n,n+3));return s?(e.m=0,e.d=+s[0],n+s[0].length):-1}function nP(e,t,n){var s=Ts.exec(t.slice(n,n+2));return s?(e.H=+s[0],n+s[0].length):-1}function iSt(e,t,n){var s=Ts.exec(t.slice(n,n+2));return s?(e.M=+s[0],n+s[0].length):-1}function oSt(e,t,n){var s=Ts.exec(t.slice(n,n+2));return s?(e.S=+s[0],n+s[0].length):-1}function aSt(e,t,n){var s=Ts.exec(t.slice(n,n+3));return s?(e.L=+s[0],n+s[0].length):-1}function uSt(e,t,n){var s=Ts.exec(t.slice(n,n+6));return s?(e.L=Math.floor(s[0]/1e3),n+s[0].length):-1}function lSt(e,t,n){var s=j$t.exec(t.slice(n,n+1));return s?n+s[0].length:-1}function cSt(e,t,n){var s=Ts.exec(t.slice(n));return s?(e.Q=+s[0],n+s[0].length):-1}function hSt(e,t,n){var s=Ts.exec(t.slice(n));return s?(e.s=+s[0],n+s[0].length):-1}function sP(e,t){return Pe(e.getDate(),t,2)}function dSt(e,t){return Pe(e.getHours(),t,2)}function pSt(e,t){return Pe(e.getHours()%12||12,t,2)}function fSt(e,t){return Pe(1+v$.count(Zl(e),e),t,3)}function rP(e,t){return Pe(e.getMilliseconds(),t,3)}function mSt(e,t){return rP(e,t)+"000"}function gSt(e,t){return Pe(e.getMonth()+1,t,2)}function xSt(e,t){return Pe(e.getMinutes(),t,2)}function bSt(e,t){return Pe(e.getSeconds(),t,2)}function ySt(e){var t=e.getDay();return t===0?7:t}function wSt(e,t){return Pe(YB.count(Zl(e)-1,e),t,2)}function iP(e){var t=e.getDay();return t>=4||t===0?Yh(e):Yh.ceil(e)}function vSt(e,t){return e=iP(e),Pe(Yh.count(Zl(e),e)+(Zl(e).getDay()===4),t,2)}function kSt(e){return e.getDay()}function ISt(e,t){return Pe(Nb.count(Zl(e)-1,e),t,2)}function CSt(e,t){return Pe(e.getFullYear()%100,t,2)}function $St(e,t){return e=iP(e),Pe(e.getFullYear()%100,t,2)}function SSt(e,t){return Pe(e.getFullYear()%1e4,t,4)}function NSt(e,t){var n=e.getDay();return e=n>=4||n===0?Yh(e):Yh.ceil(e),Pe(e.getFullYear()%1e4,t,4)}function ESt(e){var t=e.getTimezoneOffset();return(t>0?"-":(t*=-1,"+"))+Pe(t/60|0,"0",2)+Pe(t%60,"0",2)}function oP(e,t){return Pe(e.getUTCDate(),t,2)}function DSt(e,t){return Pe(e.getUTCHours(),t,2)}function TSt(e,t){return Pe(e.getUTCHours()%12||12,t,2)}function ASt(e,t){return Pe(1+k$.count(Jl(e),e),t,3)}function aP(e,t){return Pe(e.getUTCMilliseconds(),t,3)}function FSt(e,t){return aP(e,t)+"000"}function RSt(e,t){return Pe(e.getUTCMonth()+1,t,2)}function _St(e,t){return Pe(e.getUTCMinutes(),t,2)}function MSt(e,t){return Pe(e.getUTCSeconds(),t,2)}function OSt(e){var t=e.getUTCDay();return t===0?7:t}function LSt(e,t){return Pe(ZB.count(Jl(e)-1,e),t,2)}function uP(e){var t=e.getUTCDay();return t>=4||t===0?Zh(e):Zh.ceil(e)}function zSt(e,t){return e=uP(e),Pe(Zh.count(Jl(e),e)+(Jl(e).getUTCDay()===4),t,2)}function BSt(e){return e.getUTCDay()}function PSt(e,t){return Pe(Eb.count(Jl(e)-1,e),t,2)}function WSt(e,t){return Pe(e.getUTCFullYear()%100,t,2)}function VSt(e,t){return e=uP(e),Pe(e.getUTCFullYear()%100,t,2)}function USt(e,t){return Pe(e.getUTCFullYear()%1e4,t,4)}function GSt(e,t){var n=e.getUTCDay();return e=n>=4||n===0?Zh(e):Zh.ceil(e),Pe(e.getUTCFullYear()%1e4,t,4)}function HSt(){return"+0000"}function lP(){return"%"}function cP(e){return+e}function hP(e){return Math.floor(+e/1e3)}var Jh,dP;qSt({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});function qSt(e){return Jh=q$t(e),dP=Jh.format,Jh.parse,Jh.utcFormat,Jh.utcParse,Jh}function jSt(){var e=0,t=1,n,s,r,i,o=Ai,a=!1,u;function l(h){return h==null||isNaN(h=+h)?u:o(r===0?.5:(h=(i(h)-n)*r,a?Math.max(0,Math.min(1,h)):h))}l.domain=function(h){return arguments.length?([e,t]=h,n=i(e=+e),s=i(t=+t),r=n===s?0:1/(s-n),l):[e,t]},l.clamp=function(h){return arguments.length?(a=!!h,l):a},l.interpolator=function(h){return arguments.length?(o=h,l):o};function c(h){return function(d){var p,f;return arguments.length?([p,f]=d,o=h(p,f),l):[o(0),o(1)]}}return l.range=c(Kl),l.rangeRound=c(NB),l.unknown=function(h){return arguments.length?(u=h,l):u},function(h){return i=h,n=h(e),s=h(t),r=n===s?0:1/(s-n),l}}function KSt(e,t){return t.domain(e.domain()).interpolator(e.interpolator()).clamp(e.clamp()).unknown(e.unknown())}function pP(){var e=g$(jSt()(Ai));return e.copy=function(){return KSt(e,pP())},I2t.apply(e,arguments)}function Ql(e){for(var t=e.length/6|0,n=new Array(t),s=0;s<t;)n[s]="#"+e.slice(s*6,++s*6);return n}var XSt=Ql("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),YSt=Ql("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),ZSt=Ql("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),JSt=Ql("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),QSt=Ql("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"),tNt=Ql("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab"),eNt=e=>$B(e[e.length-1]),nNt=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(Ql),sNt=eNt(nNt);_B(Du(-100,.75,.35),Du(80,1.5,.8)),_B(Du(260,.75,.35),Du(80,1.5,.8));var Db=Du();function rNt(e){(e<0||e>1)&&(e-=Math.floor(e));var t=Math.abs(e-.5);return Db.h=360*e-100,Db.s=1.5-1.5*t,Db.l=.8-.9*t,Db+""}var Qh=0,cm=0,hm=0,fP=1e3,Tb,dm,Ab=0,tc=0,Fb=0,pm=typeof performance=="object"&&performance.now?performance:Date,mP=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function $$(){return tc||(mP(iNt),tc=pm.now()+Fb)}function iNt(){tc=0}function Rb(){this._call=this._time=this._next=null}Rb.prototype=gP.prototype={constructor:Rb,restart:function(e,t,n){if(typeof e!="function")throw new TypeError("callback is not a function");n=(n==null?$$():+n)+(t==null?0:+t),!this._next&&dm!==this&&(dm?dm._next=this:Tb=this,dm=this),this._call=e,this._time=n,S$()},stop:function(){this._call&&(this._call=null,this._time=1/0,S$())}};function gP(e,t,n){var s=new Rb;return s.restart(e,t,n),s}function oNt(){$$(),++Qh;for(var e=Tb,t;e;)(t=tc-e._time)>=0&&e._call.call(void 0,t),e=e._next;--Qh}function xP(){tc=(Ab=pm.now())+Fb,Qh=cm=0;try{oNt()}finally{Qh=0,uNt(),tc=0}}function aNt(){var e=pm.now(),t=e-Ab;t>fP&&(Fb-=t,Ab=e)}function uNt(){for(var e,t=Tb,n,s=1/0;t;)t._call?(s>t._time&&(s=t._time),e=t,t=t._next):(n=t._next,t._next=null,t=e?e._next=n:Tb=n);dm=e,S$(s)}function S$(e){if(!Qh){cm&&(cm=clearTimeout(cm));var t=e-tc;t>24?(e<1/0&&(cm=setTimeout(xP,e-pm.now()-Fb)),hm&&(hm=clearInterval(hm))):(hm||(Ab=pm.now(),hm=setInterval(aNt,fP)),Qh=1,mP(xP))}}function N$(e,t,n){var s=new Rb;return t=t==null?0:+t,s.restart(r=>{s.stop(),e(r+t)},t,n),s}var lNt={value:()=>{}};function fm(){for(var e=0,t=arguments.length,n={},s;e<t;++e){if(!(s=arguments[e]+"")||s in n||/[\s.]/.test(s))throw new Error("illegal type: "+s);n[s]=[]}return new _b(n)}function _b(e){this._=e}function cNt(e,t){return e.trim().split(/^|\s+/).map(function(n){var s="",r=n.indexOf(".");if(r>=0&&(s=n.slice(r+1),n=n.slice(0,r)),n&&!t.hasOwnProperty(n))throw new Error("unknown type: "+n);return{type:n,name:s}})}_b.prototype=fm.prototype={constructor:_b,on:function(e,t){var n=this._,s=cNt(e+"",n),r,i=-1,o=s.length;if(arguments.length<2){for(;++i<o;)if((r=(e=s[i]).type)&&(r=hNt(n[r],e.name)))return r;return}if(t!=null&&typeof t!="function")throw new Error("invalid callback: "+t);for(;++i<o;)if(r=(e=s[i]).type)n[r]=bP(n[r],e.name,t);else if(t==null)for(r in n)n[r]=bP(n[r],e.name,null);return this},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new _b(e)},call:function(e,t){if((r=arguments.length-2)>0)for(var n=new Array(r),s=0,r,i;s<r;++s)n[s]=arguments[s+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(i=this._[e],s=0,r=i.length;s<r;++s)i[s].value.apply(t,n)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var s=this._[e],r=0,i=s.length;r<i;++r)s[r].value.apply(t,n)}};function hNt(e,t){for(var n=0,s=e.length,r;n<s;++n)if((r=e[n]).name===t)return r.value}function bP(e,t,n){for(var s=0,r=e.length;s<r;++s)if(e[s].name===t){e[s]=lNt,e=e.slice(0,s).concat(e.slice(s+1));break}return n!=null&&e.push({name:t,value:n}),e}var dNt=fm("start","end","cancel","interrupt"),pNt=[],yP=0,wP=1,E$=2,Mb=3,vP=4,D$=5,Ob=6;function Lb(e,t,n,s,r,i){var o=e.__transition;if(!o)e.__transition={};else if(n in o)return;fNt(e,n,{name:t,index:s,group:r,on:dNt,tween:pNt,time:i.time,delay:i.delay,duration:i.duration,ease:i.ease,timer:null,state:yP})}function T$(e,t){var n=xo(e,t);if(n.state>yP)throw new Error("too late; already scheduled");return n}function Qo(e,t){var n=xo(e,t);if(n.state>Mb)throw new Error("too late; already running");return n}function xo(e,t){var n=e.__transition;if(!n||!(n=n[t]))throw new Error("transition not found");return n}function fNt(e,t,n){var s=e.__transition,r;s[t]=n,n.timer=gP(i,0,n.time);function i(l){n.state=wP,n.timer.restart(o,n.delay,n.time),n.delay<=l&&o(l-n.delay)}function o(l){var c,h,d,p;if(n.state!==wP)return u();for(c in s)if(p=s[c],p.name===n.name){if(p.state===Mb)return N$(o);p.state===vP?(p.state=Ob,p.timer.stop(),p.on.call("interrupt",e,e.__data__,p.index,p.group),delete s[c]):+c<t&&(p.state=Ob,p.timer.stop(),p.on.call("cancel",e,e.__data__,p.index,p.group),delete s[c])}if(N$(function(){n.state===Mb&&(n.state=vP,n.timer.restart(a,n.delay,n.time),a(l))}),n.state=E$,n.on.call("start",e,e.__data__,n.index,n.group),n.state===E$){for(n.state=Mb,r=new Array(d=n.tween.length),c=0,h=-1;c<d;++c)(p=n.tween[c].value.call(e,e.__data__,n.index,n.group))&&(r[++h]=p);r.length=h+1}}function a(l){for(var c=l<n.duration?n.ease.call(null,l/n.duration):(n.timer.restart(u),n.state=D$,1),h=-1,d=r.length;++h<d;)r[h].call(e,c);n.state===D$&&(n.on.call("end",e,e.__data__,n.index,n.group),u())}function u(){n.state=Ob,n.timer.stop(),delete s[t];for(var l in s)return;delete e.__transition}}function td(e,t){var n=e.__transition,s,r,i=!0,o;if(n){t=t==null?null:t+"";for(o in n){if((s=n[o]).name!==t){i=!1;continue}r=s.state>E$&&s.state<D$,s.state=Ob,s.timer.stop(),s.on.call(r?"interrupt":"cancel",e,e.__data__,s.index,s.group),delete n[o]}i&&delete e.__transition}}function mNt(e){return this.each(function(){td(this,e)})}function gNt(e,t){var n,s;return function(){var r=Qo(this,e),i=r.tween;if(i!==n){s=n=i;for(var o=0,a=s.length;o<a;++o)if(s[o].name===t){s=s.slice(),s.splice(o,1);break}}r.tween=s}}function xNt(e,t,n){var s,r;if(typeof n!="function")throw new Error;return function(){var i=Qo(this,e),o=i.tween;if(o!==s){r=(s=o).slice();for(var a={name:t,value:n},u=0,l=r.length;u<l;++u)if(r[u].name===t){r[u]=a;break}u===l&&r.push(a)}i.tween=r}}function bNt(e,t){var n=this._id;if(e+="",arguments.length<2){for(var s=xo(this.node(),n).tween,r=0,i=s.length,o;r<i;++r)if((o=s[r]).name===e)return o.value;return null}return this.each((t==null?gNt:xNt)(n,e,t))}function A$(e,t,n){var s=e._id;return e.each(function(){var r=Qo(this,s);(r.value||(r.value={}))[t]=n.apply(this,arguments)}),function(r){return xo(r,s).value[t]}}function kP(e,t){var n;return(typeof t=="number"?go:t instanceof Eu?rm:(n=Eu(t))?(t=n,rm):SB)(e,t)}function yNt(e){return function(){this.removeAttribute(e)}}function wNt(e){return function(){this.removeAttributeNS(e.space,e.local)}}function vNt(e,t,n){var s,r=n+"",i;return function(){var o=this.getAttribute(e);return o===r?null:o===s?i:i=t(s=o,n)}}function kNt(e,t,n){var s,r=n+"",i;return function(){var o=this.getAttributeNS(e.space,e.local);return o===r?null:o===s?i:i=t(s=o,n)}}function INt(e,t,n){var s,r,i;return function(){var o,a=n(this),u;return a==null?void this.removeAttribute(e):(o=this.getAttribute(e),u=a+"",o===u?null:o===s&&u===r?i:(r=u,i=t(s=o,a)))}}function CNt(e,t,n){var s,r,i;return function(){var o,a=n(this),u;return a==null?void this.removeAttributeNS(e.space,e.local):(o=this.getAttributeNS(e.space,e.local),u=a+"",o===u?null:o===s&&u===r?i:(r=u,i=t(s=o,a)))}}function $Nt(e,t){var n=db(e),s=n==="transform"?t$t:kP;return this.attrTween(e,typeof t=="function"?(n.local?CNt:INt)(n,s,A$(this,"attr."+e,t)):t==null?(n.local?wNt:yNt)(n):(n.local?kNt:vNt)(n,s,t))}function SNt(e,t){return function(n){this.setAttribute(e,t.call(this,n))}}function NNt(e,t){return function(n){this.setAttributeNS(e.space,e.local,t.call(this,n))}}function ENt(e,t){var n,s;function r(){var i=t.apply(this,arguments);return i!==s&&(n=(s=i)&&NNt(e,i)),n}return r._value=t,r}function DNt(e,t){var n,s;function r(){var i=t.apply(this,arguments);return i!==s&&(n=(s=i)&&SNt(e,i)),n}return r._value=t,r}function TNt(e,t){var n="attr."+e;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(t==null)return this.tween(n,null);if(typeof t!="function")throw new Error;var s=db(e);return this.tween(n,(s.local?ENt:DNt)(s,t))}function ANt(e,t){return function(){T$(this,e).delay=+t.apply(this,arguments)}}function FNt(e,t){return t=+t,function(){T$(this,e).delay=t}}function RNt(e){var t=this._id;return arguments.length?this.each((typeof e=="function"?ANt:FNt)(t,e)):xo(this.node(),t).delay}function _Nt(e,t){return function(){Qo(this,e).duration=+t.apply(this,arguments)}}function MNt(e,t){return t=+t,function(){Qo(this,e).duration=t}}function ONt(e){var t=this._id;return arguments.length?this.each((typeof e=="function"?_Nt:MNt)(t,e)):xo(this.node(),t).duration}function LNt(e,t){if(typeof t!="function")throw new Error;return function(){Qo(this,e).ease=t}}function zNt(e){var t=this._id;return arguments.length?this.each(LNt(t,e)):xo(this.node(),t).ease}function BNt(e,t){return function(){var n=t.apply(this,arguments);if(typeof n!="function")throw new Error;Qo(this,e).ease=n}}function PNt(e){if(typeof e!="function")throw new Error;return this.each(BNt(this._id,e))}function WNt(e){typeof e!="function"&&(e=Mz(e));for(var t=this._groups,n=t.length,s=new Array(n),r=0;r<n;++r)for(var i=t[r],o=i.length,a=s[r]=[],u,l=0;l<o;++l)(u=i[l])&&e.call(u,u.__data__,l,i)&&a.push(u);return new Ma(s,this._parents,this._name,this._id)}function VNt(e){if(e._id!==this._id)throw new Error;for(var t=this._groups,n=e._groups,s=t.length,r=n.length,i=Math.min(s,r),o=new Array(s),a=0;a<i;++a)for(var u=t[a],l=n[a],c=u.length,h=o[a]=new Array(c),d,p=0;p<c;++p)(d=u[p]||l[p])&&(h[p]=d);for(;a<s;++a)o[a]=t[a];return new Ma(o,this._parents,this._name,this._id)}function UNt(e){return(e+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||t==="start"})}function GNt(e,t,n){var s,r,i=UNt(t)?T$:Qo;return function(){var o=i(this,e),a=o.on;a!==s&&(r=(s=a).copy()).on(t,n),o.on=r}}function HNt(e,t){var n=this._id;return arguments.length<2?xo(this.node(),n).on.on(e):this.each(GNt(n,e,t))}function qNt(e){return function(){var t=this.parentNode;for(var n in this.__transition)if(+n!==e)return;t&&t.removeChild(this)}}function jNt(){return this.on("end.remove",qNt(this._id))}function KNt(e){var t=this._name,n=this._id;typeof e!="function"&&(e=H2(e));for(var s=this._groups,r=s.length,i=new Array(r),o=0;o<r;++o)for(var a=s[o],u=a.length,l=i[o]=new Array(u),c,h,d=0;d<u;++d)(c=a[d])&&(h=e.call(c,c.__data__,d,a))&&("__data__"in c&&(h.__data__=c.__data__),l[d]=h,Lb(l[d],t,n,d,l,xo(c,n)));return new Ma(i,this._parents,t,n)}function XNt(e){var t=this._name,n=this._id;typeof e!="function"&&(e=_z(e));for(var s=this._groups,r=s.length,i=[],o=[],a=0;a<r;++a)for(var u=s[a],l=u.length,c,h=0;h<l;++h)if(c=u[h]){for(var d=e.call(c,c.__data__,h,u),p,f=xo(c,n),m=0,g=d.length;m<g;++m)(p=d[m])&&Lb(p,t,n,m,d,f);i.push(d),o.push(c)}return new Ma(i,o,t,n)}var YNt=Wh.prototype.constructor;function ZNt(){return new YNt(this._groups,this._parents)}function JNt(e,t){var n,s,r;return function(){var i=Ph(this,e),o=(this.style.removeProperty(e),Ph(this,e));return i===o?null:i===n&&o===s?r:r=t(n=i,s=o)}}function IP(e){return function(){this.style.removeProperty(e)}}function QNt(e,t,n){var s,r=n+"",i;return function(){var o=Ph(this,e);return o===r?null:o===s?i:i=t(s=o,n)}}function tEt(e,t,n){var s,r,i;return function(){var o=Ph(this,e),a=n(this),u=a+"";return a==null&&(u=a=(this.style.removeProperty(e),Ph(this,e))),o===u?null:o===s&&u===r?i:(r=u,i=t(s=o,a))}}function eEt(e,t){var n,s,r,i="style."+t,o="end."+i,a;return function(){var u=Qo(this,e),l=u.on,c=u.value[i]==null?a||(a=IP(t)):void 0;(l!==n||r!==c)&&(s=(n=l).copy()).on(o,r=c),u.on=s}}function nEt(e,t,n){var s=(e+="")=="transform"?Q2t:kP;return t==null?this.styleTween(e,JNt(e,s)).on("end.style."+e,IP(e)):typeof t=="function"?this.styleTween(e,tEt(e,s,A$(this,"style."+e,t))).each(eEt(this._id,e)):this.styleTween(e,QNt(e,s,t),n).on("end.style."+e,null)}function sEt(e,t,n){return function(s){this.style.setProperty(e,t.call(this,s),n)}}function rEt(e,t,n){var s,r;function i(){var o=t.apply(this,arguments);return o!==r&&(s=(r=o)&&sEt(e,o,n)),s}return i._value=t,i}function iEt(e,t,n){var s="style."+(e+="");if(arguments.length<2)return(s=this.tween(s))&&s._value;if(t==null)return this.tween(s,null);if(typeof t!="function")throw new Error;return this.tween(s,rEt(e,t,n??""))}function oEt(e){return function(){this.textContent=e}}function aEt(e){return function(){var t=e(this);this.textContent=t??""}}function uEt(e){return this.tween("text",typeof e=="function"?aEt(A$(this,"text",e)):oEt(e==null?"":e+""))}function lEt(e){return function(t){this.textContent=e.call(this,t)}}function cEt(e){var t,n;function s(){var r=e.apply(this,arguments);return r!==n&&(t=(n=r)&&lEt(r)),t}return s._value=e,s}function hEt(e){var t="text";if(arguments.length<1)return(t=this.tween(t))&&t._value;if(e==null)return this.tween(t,null);if(typeof e!="function")throw new Error;return this.tween(t,cEt(e))}function dEt(){for(var e=this._name,t=this._id,n=$P(),s=this._groups,r=s.length,i=0;i<r;++i)for(var o=s[i],a=o.length,u,l=0;l<a;++l)if(u=o[l]){var c=xo(u,t);Lb(u,e,n,l,o,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new Ma(s,this._parents,e,n)}function pEt(){var e,t,n=this,s=n._id,r=n.size();return new Promise(function(i,o){var a={value:o},u={value:function(){--r===0&&i()}};n.each(function(){var l=Qo(this,s),c=l.on;c!==e&&(t=(e=c).copy(),t._.cancel.push(a),t._.interrupt.push(a),t._.end.push(u)),l.on=t}),r===0&&i()})}var fEt=0;function Ma(e,t,n,s){this._groups=e,this._parents=t,this._name=n,this._id=s}function CP(e){return Wh().transition(e)}function $P(){return++fEt}var Oa=Wh.prototype;Ma.prototype=CP.prototype={constructor:Ma,select:KNt,selectAll:XNt,selectChild:Oa.selectChild,selectChildren:Oa.selectChildren,filter:WNt,merge:VNt,selection:ZNt,transition:dEt,call:Oa.call,nodes:Oa.nodes,node:Oa.node,size:Oa.size,empty:Oa.empty,each:Oa.each,on:HNt,attr:$Nt,attrTween:TNt,style:nEt,styleTween:iEt,text:uEt,textTween:hEt,remove:jNt,tween:bNt,delay:RNt,duration:ONt,ease:zNt,easeVarying:PNt,end:pEt,[Symbol.iterator]:Oa[Symbol.iterator]};const mEt=e=>+e;function gEt(e){return((e*=2)<=1?e*e:--e*(2-e)+1)/2}function SP(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}var F$=3;(function e(t){t=+t;function n(s){return Math.pow(s,t)}return n.exponent=e,n})(F$),function e(t){t=+t;function n(s){return 1-Math.pow(1-s,t)}return n.exponent=e,n}(F$);var xEt=function e(t){t=+t;function n(s){return((s*=2)<=1?Math.pow(s,t):2-Math.pow(2-s,t))/2}return n.exponent=e,n}(F$);function zb(e){return(Math.pow(2,-10*e)-.0009765625)*1.0009775171065494}var ed=2*Math.PI,R$=1,_$=.3;(function e(t,n){var s=Math.asin(1/(t=Math.max(1,t)))*(n/=ed);function r(i){return t*zb(- --i)*Math.sin((s-i)/n)}return r.amplitude=function(i){return e(i,n*ed)},r.period=function(i){return e(t,i)},r})(R$,_$);var bEt=function e(t,n){var s=Math.asin(1/(t=Math.max(1,t)))*(n/=ed);function r(i){return 1-t*zb(i=+i)*Math.sin((i+s)/n)}return r.amplitude=function(i){return e(i,n*ed)},r.period=function(i){return e(t,i)},r}(R$,_$);(function e(t,n){var s=Math.asin(1/(t=Math.max(1,t)))*(n/=ed);function r(i){return((i=i*2-1)<0?t*zb(-i)*Math.sin((s-i)/n):2-t*zb(i)*Math.sin((s+i)/n))/2}return r.amplitude=function(i){return e(i,n*ed)},r.period=function(i){return e(t,i)},r})(R$,_$);var yEt={time:null,delay:0,duration:250,ease:SP};function wEt(e,t){for(var n;!(n=e.__transition)||!(n=n[t]);)if(!(e=e.parentNode))throw new Error(`transition ${t} not found`);return n}function vEt(e){var t,n;e instanceof Ma?(t=e._id,e=e._name):(t=$P(),(n=yEt).time=$$(),e=e==null?null:e+"");for(var s=this._groups,r=s.length,i=0;i<r;++i)for(var o=s[i],a=o.length,u,l=0;l<a;++l)(u=o[l])&&Lb(u,e,t,l,o,n||wEt(u,t));return new Ma(s,this._parents,e,t)}Wh.prototype.interrupt=mNt,Wh.prototype.transition=vEt;function kEt(e){return e}var M$=1,O$=2,L$=3,mm=4,NP=1e-6;function IEt(e){return"translate("+e+",0)"}function CEt(e){return"translate(0,"+e+")"}function $Et(e){return t=>+e(t)}function SEt(e,t){return t=Math.max(0,e.bandwidth()-t*2)/2,e.round()&&(t=Math.round(t)),n=>+e(n)+t}function NEt(){return!this.__axis}function EP(e,t){var n=[],s=null,r=null,i=6,o=6,a=3,u=typeof window<"u"&&window.devicePixelRatio>1?0:.5,l=e===M$||e===mm?-1:1,c=e===mm||e===O$?"x":"y",h=e===M$||e===L$?IEt:CEt;function d(p){var f=s??(t.ticks?t.ticks.apply(t,n):t.domain()),m=r??(t.tickFormat?t.tickFormat.apply(t,n):kEt),g=Math.max(i,0)+a,x=t.range(),b=+x[0]+u,w=+x[x.length-1]+u,y=(t.bandwidth?SEt:$Et)(t.copy(),u),v=p.selection?p.selection():p,k=v.selectAll(".domain").data([null]),C=v.selectAll(".tick").data(f,t).order(),I=C.exit(),$=C.enter().append("g").attr("class","tick"),S=C.select("line"),N=C.select("text");k=k.merge(k.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),C=C.merge($),S=S.merge($.append("line").attr("stroke","currentColor").attr(c+"2",l*i)),N=N.merge($.append("text").attr("fill","currentColor").attr(c,l*g).attr("dy",e===M$?"0em":e===L$?"0.71em":"0.32em")),p!==v&&(k=k.transition(p),C=C.transition(p),S=S.transition(p),N=N.transition(p),I=I.transition(p).attr("opacity",NP).attr("transform",function(F){return isFinite(F=y(F))?h(F+u):this.getAttribute("transform")}),$.attr("opacity",NP).attr("transform",function(F){var D=this.parentNode.__axis;return h((D&&isFinite(D=D(F))?D:y(F))+u)})),I.remove(),k.attr("d",e===mm||e===O$?o?"M"+l*o+","+b+"H"+u+"V"+w+"H"+l*o:"M"+u+","+b+"V"+w:o?"M"+b+","+l*o+"V"+u+"H"+w+"V"+l*o:"M"+b+","+u+"H"+w),C.attr("opacity",1).attr("transform",function(F){return h(y(F)+u)}),S.attr(c+"2",l*i),N.attr(c,l*g).text(m),v.filter(NEt).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",e===O$?"start":e===mm?"end":"middle"),v.each(function(){this.__axis=y})}return d.scale=function(p){return arguments.length?(t=p,d):t},d.ticks=function(){return n=Array.from(arguments),d},d.tickArguments=function(p){return arguments.length?(n=p==null?[]:Array.from(p),d):n.slice()},d.tickValues=function(p){return arguments.length?(s=p==null?null:Array.from(p),d):s&&s.slice()},d.tickFormat=function(p){return arguments.length?(r=p,d):r},d.tickSize=function(p){return arguments.length?(i=o=+p,d):i},d.tickSizeInner=function(p){return arguments.length?(i=+p,d):i},d.tickSizeOuter=function(p){return arguments.length?(o=+p,d):o},d.tickPadding=function(p){return arguments.length?(a=+p,d):a},d.offset=function(p){return arguments.length?(u=+p,d):u},d}function EEt(e){return EP(L$,e)}function DEt(e){return EP(mm,e)}function er(e){return function(){return e}}const DP=Math.abs,nr=Math.atan2,ec=Math.cos,TEt=Math.max,z$=Math.min,ta=Math.sin,nd=Math.sqrt,Pr=1e-12,gm=Math.PI,Bb=gm/2,AEt=2*gm;function FEt(e){return e>1?0:e<-1?gm:Math.acos(e)}function TP(e){return e>=1?Bb:e<=-1?-Bb:Math.asin(e)}const B$=Math.PI,P$=2*B$,nc=1e-6,REt=P$-nc;function AP(e){this._+=e[0];for(let t=1,n=e.length;t<n;++t)this._+=arguments[t]+e[t]}function _Et(e){let t=Math.floor(e);if(!(t>=0))throw new Error(`invalid digits: ${e}`);if(t>15)return AP;const n=10**t;return function(s){this._+=s[0];for(let r=1,i=s.length;r<i;++r)this._+=Math.round(arguments[r]*n)/n+s[r]}}class W${constructor(t){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=t==null?AP:_Et(t)}moveTo(t,n){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+n}`}closePath(){this._x1!==null&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(t,n){this._append`L${this._x1=+t},${this._y1=+n}`}quadraticCurveTo(t,n,s,r){this._append`Q${+t},${+n},${this._x1=+s},${this._y1=+r}`}bezierCurveTo(t,n,s,r,i,o){this._append`C${+t},${+n},${+s},${+r},${this._x1=+i},${this._y1=+o}`}arcTo(t,n,s,r,i){if(t=+t,n=+n,s=+s,r=+r,i=+i,i<0)throw new Error(`negative radius: ${i}`);let o=this._x1,a=this._y1,u=s-t,l=r-n,c=o-t,h=a-n,d=c*c+h*h;if(this._x1===null)this._append`M${this._x1=t},${this._y1=n}`;else if(d>nc)if(!(Math.abs(h*u-l*c)>nc)||!i)this._append`L${this._x1=t},${this._y1=n}`;else{let p=s-o,f=r-a,m=u*u+l*l,g=p*p+f*f,x=Math.sqrt(m),b=Math.sqrt(d),w=i*Math.tan((B$-Math.acos((m+d-g)/(2*x*b)))/2),y=w/b,v=w/x;Math.abs(y-1)>nc&&this._append`L${t+y*c},${n+y*h}`,this._append`A${i},${i},0,0,${+(h*p>c*f)},${this._x1=t+v*u},${this._y1=n+v*l}`}}arc(t,n,s,r,i,o){if(t=+t,n=+n,s=+s,o=!!o,s<0)throw new Error(`negative radius: ${s}`);let a=s*Math.cos(r),u=s*Math.sin(r),l=t+a,c=n+u,h=1^o,d=o?r-i:i-r;this._x1===null?this._append`M${l},${c}`:(Math.abs(this._x1-l)>nc||Math.abs(this._y1-c)>nc)&&this._append`L${l},${c}`,s&&(d<0&&(d=d%P$+P$),d>REt?this._append`A${s},${s},0,1,${h},${t-a},${n-u}A${s},${s},0,1,${h},${this._x1=l},${this._y1=c}`:d>nc&&this._append`A${s},${s},0,${+(d>=B$)},${h},${this._x1=t+s*Math.cos(i)},${this._y1=n+s*Math.sin(i)}`)}rect(t,n,s,r){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+n}h${s=+s}v${+r}h${-s}Z`}toString(){return this._}}function FP(){return new W$}FP.prototype=W$.prototype;function V$(e){let t=3;return e.digits=function(n){if(!arguments.length)return t;if(n==null)t=null;else{const s=Math.floor(n);if(!(s>=0))throw new RangeError(`invalid digits: ${n}`);t=s}return e},()=>new W$(t)}function MEt(e){return e.innerRadius}function OEt(e){return e.outerRadius}function LEt(e){return e.startAngle}function zEt(e){return e.endAngle}function BEt(e){return e&&e.padAngle}function PEt(e,t,n,s,r,i,o,a){var u=n-e,l=s-t,c=o-r,h=a-i,d=h*u-c*l;if(!(d*d<Pr))return d=(c*(t-i)-h*(e-r))/d,[e+d*u,t+d*l]}function Pb(e,t,n,s,r,i,o){var a=e-n,u=t-s,l=(o?i:-i)/nd(a*a+u*u),c=l*u,h=-l*a,d=e+c,p=t+h,f=n+c,m=s+h,g=(d+f)/2,x=(p+m)/2,b=f-d,w=m-p,y=b*b+w*w,v=r-i,k=d*m-f*p,C=(w<0?-1:1)*nd(TEt(0,v*v*y-k*k)),I=(k*w-b*C)/y,$=(-k*b-w*C)/y,S=(k*w+b*C)/y,N=(-k*b+w*C)/y,F=I-g,D=$-x,E=S-g,A=N-x;return F*F+D*D>E*E+A*A&&(I=S,$=N),{cx:I,cy:$,x01:-c,y01:-h,x11:I*(r/v-1),y11:$*(r/v-1)}}function WEt(){var e=MEt,t=OEt,n=er(0),s=null,r=LEt,i=zEt,o=BEt,a=null,u=V$(l);function l(){var c,h,d=+e.apply(this,arguments),p=+t.apply(this,arguments),f=r.apply(this,arguments)-Bb,m=i.apply(this,arguments)-Bb,g=DP(m-f),x=m>f;if(a||(a=c=u()),p<d&&(h=p,p=d,d=h),!(p>Pr))a.moveTo(0,0);else if(g>AEt-Pr)a.moveTo(p*ec(f),p*ta(f)),a.arc(0,0,p,f,m,!x),d>Pr&&(a.moveTo(d*ec(m),d*ta(m)),a.arc(0,0,d,m,f,x));else{var b=f,w=m,y=f,v=m,k=g,C=g,I=o.apply(this,arguments)/2,$=I>Pr&&(s?+s.apply(this,arguments):nd(d*d+p*p)),S=z$(DP(p-d)/2,+n.apply(this,arguments)),N=S,F=S,D,E;if($>Pr){var A=TP($/d*ta(I)),T=TP($/p*ta(I));(k-=A*2)>Pr?(A*=x?1:-1,y+=A,v-=A):(k=0,y=v=(f+m)/2),(C-=T*2)>Pr?(T*=x?1:-1,b+=T,w-=T):(C=0,b=w=(f+m)/2)}var R=p*ec(b),_=p*ta(b),M=d*ec(v),z=d*ta(v);if(S>Pr){var B=p*ec(w),V=p*ta(w),G=d*ec(y),j=d*ta(y),H;if(g<gm)if(H=PEt(R,_,G,j,B,V,M,z)){var at=R-H[0],it=_-H[1],ft=B-H[0],X=V-H[1],ut=1/ta(FEt((at*ft+it*X)/(nd(at*at+it*it)*nd(ft*ft+X*X)))/2),wt=nd(H[0]*H[0]+H[1]*H[1]);N=z$(S,(d-wt)/(ut-1)),F=z$(S,(p-wt)/(ut+1))}else N=F=0}C>Pr?F>Pr?(D=Pb(G,j,R,_,p,F,x),E=Pb(B,V,M,z,p,F,x),a.moveTo(D.cx+D.x01,D.cy+D.y01),F<S?a.arc(D.cx,D.cy,F,nr(D.y01,D.x01),nr(E.y01,E.x01),!x):(a.arc(D.cx,D.cy,F,nr(D.y01,D.x01),nr(D.y11,D.x11),!x),a.arc(0,0,p,nr(D.cy+D.y11,D.cx+D.x11),nr(E.cy+E.y11,E.cx+E.x11),!x),a.arc(E.cx,E.cy,F,nr(E.y11,E.x11),nr(E.y01,E.x01),!x))):(a.moveTo(R,_),a.arc(0,0,p,b,w,!x)):a.moveTo(R,_),!(d>Pr)||!(k>Pr)?a.lineTo(M,z):N>Pr?(D=Pb(M,z,B,V,d,-N,x),E=Pb(R,_,G,j,d,-N,x),a.lineTo(D.cx+D.x01,D.cy+D.y01),N<S?a.arc(D.cx,D.cy,N,nr(D.y01,D.x01),nr(E.y01,E.x01),!x):(a.arc(D.cx,D.cy,N,nr(D.y01,D.x01),nr(D.y11,D.x11),!x),a.arc(0,0,d,nr(D.cy+D.y11,D.cx+D.x11),nr(E.cy+E.y11,E.cx+E.x11),x),a.arc(E.cx,E.cy,N,nr(E.y11,E.x11),nr(E.y01,E.x01),!x))):a.arc(0,0,d,v,y,x)}if(a.closePath(),c)return a=null,c+""||null}return l.centroid=function(){var c=(+e.apply(this,arguments)+ +t.apply(this,arguments))/2,h=(+r.apply(this,arguments)+ +i.apply(this,arguments))/2-gm/2;return[ec(h)*c,ta(h)*c]},l.innerRadius=function(c){return arguments.length?(e=typeof c=="function"?c:er(+c),l):e},l.outerRadius=function(c){return arguments.length?(t=typeof c=="function"?c:er(+c),l):t},l.cornerRadius=function(c){return arguments.length?(n=typeof c=="function"?c:er(+c),l):n},l.padRadius=function(c){return arguments.length?(s=c==null?null:typeof c=="function"?c:er(+c),l):s},l.startAngle=function(c){return arguments.length?(r=typeof c=="function"?c:er(+c),l):r},l.endAngle=function(c){return arguments.length?(i=typeof c=="function"?c:er(+c),l):i},l.padAngle=function(c){return arguments.length?(o=typeof c=="function"?c:er(+c),l):o},l.context=function(c){return arguments.length?(a=c??null,l):a},l}var VEt=Array.prototype.slice;function UEt(e){return typeof e=="object"&&"length"in e?e:Array.from(e)}function RP(e){this._context=e}RP.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;default:this._context.lineTo(e,t);break}}};function GEt(e){return new RP(e)}function _P(e){return e[0]}function MP(e){return e[1]}function HEt(e,t){var n=er(!0),s=null,r=GEt,i=null,o=V$(a);e=typeof e=="function"?e:e===void 0?_P:er(e),t=typeof t=="function"?t:t===void 0?MP:er(t);function a(u){var l,c=(u=UEt(u)).length,h,d=!1,p;for(s==null&&(i=r(p=o())),l=0;l<=c;++l)!(l<c&&n(h=u[l],l,u))===d&&((d=!d)?i.lineStart():i.lineEnd()),d&&i.point(+e(h,l,u),+t(h,l,u));if(p)return i=null,p+""||null}return a.x=function(u){return arguments.length?(e=typeof u=="function"?u:er(+u),a):e},a.y=function(u){return arguments.length?(t=typeof u=="function"?u:er(+u),a):t},a.defined=function(u){return arguments.length?(n=typeof u=="function"?u:er(!!u),a):n},a.curve=function(u){return arguments.length?(r=u,s!=null&&(i=r(s)),a):r},a.context=function(u){return arguments.length?(u==null?s=i=null:i=r(s=u),a):s},a}class OP{constructor(t,n){this._context=t,this._x=n}areaStart(){this._line=0}areaEnd(){this._line=NaN}lineStart(){this._point=0}lineEnd(){(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line}point(t,n){switch(t=+t,n=+n,this._point){case 0:{this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break}case 1:this._point=2;default:{this._x?this._context.bezierCurveTo(this._x0=(this._x0+t)/2,this._y0,this._x0,n,t,n):this._context.bezierCurveTo(this._x0,this._y0=(this._y0+n)/2,t,this._y0,t,n);break}}this._x0=t,this._y0=n}}function qEt(e){return new OP(e,!0)}function jEt(e){return new OP(e,!1)}function KEt(e){return e.source}function XEt(e){return e.target}function LP(e){let t=KEt,n=XEt,s=_P,r=MP,i=null,o=null,a=V$(u);function u(){let l;const c=VEt.call(arguments),h=t.apply(this,c),d=n.apply(this,c);if(i==null&&(o=e(l=a())),o.lineStart(),c[0]=h,o.point(+s.apply(this,c),+r.apply(this,c)),c[0]=d,o.point(+s.apply(this,c),+r.apply(this,c)),o.lineEnd(),l)return o=null,l+""||null}return u.source=function(l){return arguments.length?(t=l,u):t},u.target=function(l){return arguments.length?(n=l,u):n},u.x=function(l){return arguments.length?(s=typeof l=="function"?l:er(+l),u):s},u.y=function(l){return arguments.length?(r=typeof l=="function"?l:er(+l),u):r},u.context=function(l){return arguments.length?(l==null?i=o=null:o=e(i=l),u):i},u}function YEt(){return LP(qEt)}function ZEt(){return LP(jEt)}function zP(e,t,n){e._context.bezierCurveTo((2*e._x0+e._x1)/3,(2*e._y0+e._y1)/3,(e._x0+2*e._x1)/3,(e._y0+2*e._y1)/3,(e._x0+4*e._x1+t)/6,(e._y0+4*e._y1+n)/6)}function BP(e){this._context=e}BP.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:zP(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1);break}(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:zP(this,e,t);break}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t}};function JEt(e){return new BP(e)}function PP(e){return e<0?-1:1}function WP(e,t,n){var s=e._x1-e._x0,r=t-e._x1,i=(e._y1-e._y0)/(s||r<0&&-0),o=(n-e._y1)/(r||s<0&&-0),a=(i*r+o*s)/(s+r);return(PP(i)+PP(o))*Math.min(Math.abs(i),Math.abs(o),.5*Math.abs(a))||0}function VP(e,t){var n=e._x1-e._x0;return n?(3*(e._y1-e._y0)/n-t)/2:t}function U$(e,t,n){var s=e._x0,r=e._y0,i=e._x1,o=e._y1,a=(i-s)/3;e._context.bezierCurveTo(s+a,r+a*t,i-a,o-a*n,i,o)}function Wb(e){this._context=e}Wb.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:U$(this,this._t0,VP(this,this._t0));break}(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line=1-this._line},point:function(e,t){var n=NaN;if(e=+e,t=+t,!(e===this._x1&&t===this._y1)){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;break;case 2:this._point=3,U$(this,VP(this,n=WP(this,e,t)),n);break;default:U$(this,this._t0,n=WP(this,e,t));break}this._x0=this._x1,this._x1=e,this._y0=this._y1,this._y1=t,this._t0=n}}};function UP(e){this._context=new GP(e)}(UP.prototype=Object.create(Wb.prototype)).point=function(e,t){Wb.prototype.point.call(this,t,e)};function GP(e){this._context=e}GP.prototype={moveTo:function(e,t){this._context.moveTo(t,e)},closePath:function(){this._context.closePath()},lineTo:function(e,t){this._context.lineTo(t,e)},bezierCurveTo:function(e,t,n,s,r,i){this._context.bezierCurveTo(t,e,s,n,i,r)}};function QEt(e){return new Wb(e)}function tDt(e){return new UP(e)}function HP(e,t){this._context=e,this._t=t}HP.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&this._point===2&&this._context.lineTo(this._x,this._y),(this._line||this._line!==0&&this._point===1)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;default:{if(this._t<=0)this._context.lineTo(this._x,t),this._context.lineTo(e,t);else{var n=this._x*(1-this._t)+e*this._t;this._context.lineTo(n,this._y),this._context.lineTo(n,t)}break}}this._x=e,this._y=t}};function eDt(e){return new HP(e,1)}function nDt(e){var t=0,n=e.children,s=n&&n.length;if(!s)t=1;else for(;--s>=0;)t+=n[s].value;e.value=t}function sDt(){return this.eachAfter(nDt)}function rDt(e,t){let n=-1;for(const s of this)e.call(t,s,++n,this);return this}function iDt(e,t){for(var n=this,s=[n],r,i,o=-1;n=s.pop();)if(e.call(t,n,++o,this),r=n.children)for(i=r.length-1;i>=0;--i)s.push(r[i]);return this}function oDt(e,t){for(var n=this,s=[n],r=[],i,o,a,u=-1;n=s.pop();)if(r.push(n),i=n.children)for(o=0,a=i.length;o<a;++o)s.push(i[o]);for(;n=r.pop();)e.call(t,n,++u,this);return this}function aDt(e,t){let n=-1;for(const s of this)if(e.call(t,s,++n,this))return s}function uDt(e){return this.eachAfter(function(t){for(var n=+e(t.data)||0,s=t.children,r=s&&s.length;--r>=0;)n+=s[r].value;t.value=n})}function lDt(e){return this.eachBefore(function(t){t.children&&t.children.sort(e)})}function cDt(e){for(var t=this,n=hDt(t,e),s=[t];t!==n;)t=t.parent,s.push(t);for(var r=s.length;e!==n;)s.splice(r,0,e),e=e.parent;return s}function hDt(e,t){if(e===t)return e;var n=e.ancestors(),s=t.ancestors(),r=null;for(e=n.pop(),t=s.pop();e===t;)r=e,e=n.pop(),t=s.pop();return r}function dDt(){for(var e=this,t=[e];e=e.parent;)t.push(e);return t}function pDt(){return Array.from(this)}function fDt(){var e=[];return this.eachBefore(function(t){t.children||e.push(t)}),e}function mDt(){var e=this,t=[];return e.each(function(n){n!==e&&t.push({source:n.parent,target:n})}),t}function*gDt(){var e=this,t,n=[e],s,r,i;do for(t=n.reverse(),n=[];e=t.pop();)if(yield e,s=e.children)for(r=0,i=s.length;r<i;++r)n.push(s[r]);while(n.length)}function G$(e,t){e instanceof Map?(e=[void 0,e],t===void 0&&(t=yDt)):t===void 0&&(t=bDt);for(var n=new xm(e),s,r=[n],i,o,a,u;s=r.pop();)if((o=t(s.data))&&(u=(o=Array.from(o)).length))for(s.children=o,a=u-1;a>=0;--a)r.push(i=o[a]=new xm(o[a])),i.parent=s,i.depth=s.depth+1;return n.eachBefore(vDt)}function xDt(){return G$(this).eachBefore(wDt)}function bDt(e){return e.children}function yDt(e){return Array.isArray(e)?e[1]:null}function wDt(e){e.data.value!==void 0&&(e.value=e.data.value),e.data=e.data.data}function vDt(e){var t=0;do e.height=t;while((e=e.parent)&&e.height<++t)}function xm(e){this.data=e,this.depth=this.height=0,this.parent=null}xm.prototype=G$.prototype={constructor:xm,count:sDt,each:rDt,eachAfter:oDt,eachBefore:iDt,find:aDt,sum:uDt,sort:lDt,path:cDt,ancestors:dDt,descendants:pDt,leaves:fDt,links:mDt,copy:xDt,[Symbol.iterator]:gDt};function kDt(e){return e==null?null:IDt(e)}function IDt(e){if(typeof e!="function")throw new Error;return e}function qP(){return 0}function CDt(e){return function(){return e}}const $Dt=1664525,SDt=1013904223,jP=4294967296;function NDt(){let e=1;return()=>(e=($Dt*e+SDt)%jP)/jP}function EDt(e){return typeof e=="object"&&"length"in e?e:Array.from(e)}function DDt(e,t){let n=e.length,s,r;for(;n;)r=t()*n--|0,s=e[n],e[n]=e[r],e[r]=s;return e}function TDt(e,t){for(var n=0,s=(e=DDt(Array.from(e),t)).length,r=[],i,o;n<s;)i=e[n],o&&KP(o,i)?++n:(o=FDt(r=ADt(r,i)),n=0);return o}function ADt(e,t){var n,s;if(H$(t,e))return[t];for(n=0;n<e.length;++n)if(Vb(t,e[n])&&H$(bm(e[n],t),e))return[e[n],t];for(n=0;n<e.length-1;++n)for(s=n+1;s<e.length;++s)if(Vb(bm(e[n],e[s]),t)&&Vb(bm(e[n],t),e[s])&&Vb(bm(e[s],t),e[n])&&H$(XP(e[n],e[s],t),e))return[e[n],e[s],t];throw new Error}function Vb(e,t){var n=e.r-t.r,s=t.x-e.x,r=t.y-e.y;return n<0||n*n<s*s+r*r}function KP(e,t){var n=e.r-t.r+Math.max(e.r,t.r,1)*1e-9,s=t.x-e.x,r=t.y-e.y;return n>0&&n*n>s*s+r*r}function H$(e,t){for(var n=0;n<t.length;++n)if(!KP(e,t[n]))return!1;return!0}function FDt(e){switch(e.length){case 1:return RDt(e[0]);case 2:return bm(e[0],e[1]);case 3:return XP(e[0],e[1],e[2])}}function RDt(e){return{x:e.x,y:e.y,r:e.r}}function bm(e,t){var n=e.x,s=e.y,r=e.r,i=t.x,o=t.y,a=t.r,u=i-n,l=o-s,c=a-r,h=Math.sqrt(u*u+l*l);return{x:(n+i+u/h*c)/2,y:(s+o+l/h*c)/2,r:(h+r+a)/2}}function XP(e,t,n){var s=e.x,r=e.y,i=e.r,o=t.x,a=t.y,u=t.r,l=n.x,c=n.y,h=n.r,d=s-o,p=s-l,f=r-a,m=r-c,g=u-i,x=h-i,b=s*s+r*r-i*i,w=b-o*o-a*a+u*u,y=b-l*l-c*c+h*h,v=p*f-d*m,k=(f*y-m*w)/(v*2)-s,C=(m*g-f*x)/v,I=(p*w-d*y)/(v*2)-r,$=(d*x-p*g)/v,S=C*C+$*$-1,N=2*(i+k*C+I*$),F=k*k+I*I-i*i,D=-(Math.abs(S)>1e-6?(N+Math.sqrt(N*N-4*S*F))/(2*S):F/N);return{x:s+k+C*D,y:r+I+$*D,r:D}}function YP(e,t,n){var s=e.x-t.x,r,i,o=e.y-t.y,a,u,l=s*s+o*o;l?(i=t.r+n.r,i*=i,u=e.r+n.r,u*=u,i>u?(r=(l+u-i)/(2*l),a=Math.sqrt(Math.max(0,u/l-r*r)),n.x=e.x-r*s-a*o,n.y=e.y-r*o+a*s):(r=(l+i-u)/(2*l),a=Math.sqrt(Math.max(0,i/l-r*r)),n.x=t.x+r*s-a*o,n.y=t.y+r*o+a*s)):(n.x=t.x+n.r,n.y=t.y)}function ZP(e,t){var n=e.r+t.r-1e-6,s=t.x-e.x,r=t.y-e.y;return n>0&&n*n>s*s+r*r}function JP(e){var t=e._,n=e.next._,s=t.r+n.r,r=(t.x*n.r+n.x*t.r)/s,i=(t.y*n.r+n.y*t.r)/s;return r*r+i*i}function Ub(e){this._=e,this.next=null,this.previous=null}function _Dt(e,t){if(!(i=(e=EDt(e)).length))return 0;var n,s,r,i,o,a,u,l,c,h,d;if(n=e[0],n.x=0,n.y=0,!(i>1))return n.r;if(s=e[1],n.x=-s.r,s.x=n.r,s.y=0,!(i>2))return n.r+s.r;YP(s,n,r=e[2]),n=new Ub(n),s=new Ub(s),r=new Ub(r),n.next=r.previous=s,s.next=n.previous=r,r.next=s.previous=n;t:for(u=3;u<i;++u){YP(n._,s._,r=e[u]),r=new Ub(r),l=s.next,c=n.previous,h=s._.r,d=n._.r;do if(h<=d){if(ZP(l._,r._)){s=l,n.next=s,s.previous=n,--u;continue t}h+=l._.r,l=l.next}else{if(ZP(c._,r._)){n=c,n.next=s,s.previous=n,--u;continue t}d+=c._.r,c=c.previous}while(l!==c.next);for(r.previous=n,r.next=s,n.next=s.previous=s=r,o=JP(n);(r=r.next)!==s;)(a=JP(r))<o&&(n=r,o=a);s=n.next}for(n=[s._],r=s;(r=r.next)!==s;)n.push(r._);for(r=TDt(n,t),u=0;u<i;++u)n=e[u],n.x-=r.x,n.y-=r.y;return r.r}function MDt(e){return Math.sqrt(e.value)}function ODt(){var e=null,t=1,n=1,s=qP;function r(i){const o=NDt();return i.x=t/2,i.y=n/2,e?i.eachBefore(QP(e)).eachAfter(q$(s,.5,o)).eachBefore(tW(1)):i.eachBefore(QP(MDt)).eachAfter(q$(qP,1,o)).eachAfter(q$(s,i.r/Math.min(t,n),o)).eachBefore(tW(Math.min(t,n)/(2*i.r))),i}return r.radius=function(i){return arguments.length?(e=kDt(i),r):e},r.size=function(i){return arguments.length?(t=+i[0],n=+i[1],r):[t,n]},r.padding=function(i){return arguments.length?(s=typeof i=="function"?i:CDt(+i),r):s},r}function QP(e){return function(t){t.children||(t.r=Math.max(0,+e(t)||0))}}function q$(e,t,n){return function(s){if(r=s.children){var r,i,o=r.length,a=e(s)*t||0,u;if(a)for(i=0;i<o;++i)r[i].r+=a;if(u=_Dt(r,n),a)for(i=0;i<o;++i)r[i].r-=a;s.r=u+a}}}function tW(e){return function(t){var n=t.parent;t.r*=e,n&&(t.x=n.x+e*t.x,t.y=n.y+e*t.y)}}function LDt(e){e.x0=Math.round(e.x0),e.y0=Math.round(e.y0),e.x1=Math.round(e.x1),e.y1=Math.round(e.y1)}function zDt(e,t,n,s,r){for(var i=e.children,o,a=-1,u=i.length,l=e.value&&(s-t)/e.value;++a<u;)o=i[a],o.y0=n,o.y1=r,o.x0=t,o.x1=t+=o.value*l}function BDt(){var e=1,t=1,n=0,s=!1;function r(o){var a=o.height+1;return o.x0=o.y0=n,o.x1=e,o.y1=t/a,o.eachBefore(i(t,a)),s&&o.eachBefore(LDt),o}function i(o,a){return function(u){u.children&&zDt(u,u.x0,o*(u.depth+1)/a,u.x1,o*(u.depth+2)/a);var l=u.x0,c=u.y0,h=u.x1-n,d=u.y1-n;h<l&&(l=h=(l+h)/2),d<c&&(c=d=(c+d)/2),u.x0=l,u.y0=c,u.x1=h,u.y1=d}}return r.round=function(o){return arguments.length?(s=!!o,r):s},r.size=function(o){return arguments.length?(e=+o[0],t=+o[1],r):[e,t]},r.padding=function(o){return arguments.length?(n=+o,r):n},r}function PDt(e,t){return e.parent===t.parent?1:2}function j$(e){var t=e.children;return t?t[0]:e.t}function K$(e){var t=e.children;return t?t[t.length-1]:e.t}function WDt(e,t,n){var s=n/(t.i-e.i);t.c-=s,t.s+=n,e.c+=s,t.z+=n,t.m+=n}function VDt(e){for(var t=0,n=0,s=e.children,r=s.length,i;--r>=0;)i=s[r],i.z+=t,i.m+=t,t+=i.s+(n+=i.c)}function UDt(e,t,n){return e.a.parent===t.parent?e.a:n}function Gb(e,t){this._=e,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=t}Gb.prototype=Object.create(xm.prototype);function GDt(e){for(var t=new Gb(e,0),n,s=[t],r,i,o,a;n=s.pop();)if(i=n._.children)for(n.children=new Array(a=i.length),o=a-1;o>=0;--o)s.push(r=n.children[o]=new Gb(i[o],o)),r.parent=n;return(t.parent=new Gb(null,0)).children=[t],t}function HDt(){var e=PDt,t=1,n=1,s=null;function r(l){var c=GDt(l);if(c.eachAfter(i),c.parent.m=-c.z,c.eachBefore(o),s)l.eachBefore(u);else{var h=l,d=l,p=l;l.eachBefore(function(b){b.x<h.x&&(h=b),b.x>d.x&&(d=b),b.depth>p.depth&&(p=b)});var f=h===d?1:e(h,d)/2,m=f-h.x,g=t/(d.x+f+m),x=n/(p.depth||1);l.eachBefore(function(b){b.x=(b.x+m)*g,b.y=b.depth*x})}return l}function i(l){var c=l.children,h=l.parent.children,d=l.i?h[l.i-1]:null;if(c){VDt(l);var p=(c[0].z+c[c.length-1].z)/2;d?(l.z=d.z+e(l._,d._),l.m=l.z-p):l.z=p}else d&&(l.z=d.z+e(l._,d._));l.parent.A=a(l,d,l.parent.A||h[0])}function o(l){l._.x=l.z+l.parent.m,l.m+=l.parent.m}function a(l,c,h){if(c){for(var d=l,p=l,f=c,m=d.parent.children[0],g=d.m,x=p.m,b=f.m,w=m.m,y;f=K$(f),d=j$(d),f&&d;)m=j$(m),p=K$(p),p.a=l,y=f.z+b-d.z-g+e(f._,d._),y>0&&(WDt(UDt(f,l,h),l,y),g+=y,x+=y),b+=f.m,g+=d.m,w+=m.m,x+=p.m;f&&!K$(p)&&(p.t=f,p.m+=b-x),d&&!j$(m)&&(m.t=d,m.m+=g-w,h=l)}return h}function u(l){l.x*=t,l.y=l.depth*n}return r.separation=function(l){return arguments.length?(e=l,r):e},r.size=function(l){return arguments.length?(s=!1,t=+l[0],n=+l[1],r):s?null:[t,n]},r.nodeSize=function(l){return arguments.length?(s=!0,t=+l[0],n=+l[1],r):s?[t,n]:null},r}const qDt={passive:!1},ym={capture:!0,passive:!1};function X$(e){e.stopImmediatePropagation()}function sd(e){e.preventDefault(),e.stopImmediatePropagation()}function Y$(e){var t=e.document.documentElement,n=yr(e).on("dragstart.drag",sd,ym);"onselectstart"in t?n.on("selectstart.drag",sd,ym):(t.__noselect=t.style.MozUserSelect,t.style.MozUserSelect="none")}function Z$(e,t){var n=e.document.documentElement,s=yr(e).on("dragstart.drag",null);t&&(s.on("click.drag",sd,ym),setTimeout(function(){s.on("click.drag",null)},0)),"onselectstart"in n?s.on("selectstart.drag",null):(n.style.MozUserSelect=n.__noselect,delete n.__noselect)}var Hb=e=>()=>e;function J$(e,{sourceEvent:t,subject:n,target:s,identifier:r,active:i,x:o,y:a,dx:u,dy:l,dispatch:c}){Object.defineProperties(this,{type:{value:e,enumerable:!0,configurable:!0},sourceEvent:{value:t,enumerable:!0,configurable:!0},subject:{value:n,enumerable:!0,configurable:!0},target:{value:s,enumerable:!0,configurable:!0},identifier:{value:r,enumerable:!0,configurable:!0},active:{value:i,enumerable:!0,configurable:!0},x:{value:o,enumerable:!0,configurable:!0},y:{value:a,enumerable:!0,configurable:!0},dx:{value:u,enumerable:!0,configurable:!0},dy:{value:l,enumerable:!0,configurable:!0},_:{value:c}})}J$.prototype.on=function(){var e=this._.on.apply(this._,arguments);return e===this._?this:e};function jDt(e){return!e.ctrlKey&&!e.button}function KDt(){return this.parentNode}function XDt(e,t){return t??{x:e.x,y:e.y}}function YDt(){return navigator.maxTouchPoints||"ontouchstart"in this}function ZDt(){var e=jDt,t=KDt,n=XDt,s=YDt,r={},i=fm("start","drag","end"),o=0,a,u,l,c,h=0;function d(y){y.on("mousedown.drag",p).filter(s).on("touchstart.drag",g).on("touchmove.drag",x,qDt).on("touchend.drag touchcancel.drag",b).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function p(y,v){if(!(c||!e.call(this,y,v))){var k=w(this,t.call(this,y,v),y,v,"mouse");k&&(yr(y.view).on("mousemove.drag",f,ym).on("mouseup.drag",m,ym),Y$(y.view),X$(y),l=!1,a=y.clientX,u=y.clientY,k("start",y))}}function f(y){if(sd(y),!l){var v=y.clientX-a,k=y.clientY-u;l=v*v+k*k>h}r.mouse("drag",y)}function m(y){yr(y.view).on("mousemove.drag mouseup.drag",null),Z$(y.view,l),sd(y),r.mouse("end",y)}function g(y,v){if(e.call(this,y,v)){var k=y.changedTouches,C=t.call(this,y,v),I=k.length,$,S;for($=0;$<I;++$)(S=w(this,C,y,v,k[$].identifier,k[$]))&&(X$(y),S("start",y,k[$]))}}function x(y){var v=y.changedTouches,k=v.length,C,I;for(C=0;C<k;++C)(I=r[v[C].identifier])&&(sd(y),I("drag",y,v[C]))}function b(y){var v=y.changedTouches,k=v.length,C,I;for(c&&clearTimeout(c),c=setTimeout(function(){c=null},500),C=0;C<k;++C)(I=r[v[C].identifier])&&(X$(y),I("end",y,v[C]))}function w(y,v,k,C,I,$){var S=i.copy(),N=fo($||k,v),F,D,E;if((E=n.call(y,new J$("beforestart",{sourceEvent:k,target:d,identifier:I,active:o,x:N[0],y:N[1],dx:0,dy:0,dispatch:S}),C))!=null)return F=E.x-N[0]||0,D=E.y-N[1]||0,function A(T,R,_){var M=N,z;switch(T){case"start":r[I]=A,z=o++;break;case"end":delete r[I],--o;case"drag":N=fo(_||R,v),z=o;break}S.call(T,y,new J$(T,{sourceEvent:R,subject:E,target:d,identifier:I,active:z,x:N[0]+F,y:N[1]+D,dx:N[0]-M[0],dy:N[1]-M[1],dispatch:S}),C)}}return d.filter=function(y){return arguments.length?(e=typeof y=="function"?y:Hb(!!y),d):e},d.container=function(y){return arguments.length?(t=typeof y=="function"?y:Hb(y),d):t},d.subject=function(y){return arguments.length?(n=typeof y=="function"?y:Hb(y),d):n},d.touchable=function(y){return arguments.length?(s=typeof y=="function"?y:Hb(!!y),d):s},d.on=function(){var y=i.on.apply(i,arguments);return y===i?d:y},d.clickDistance=function(y){return arguments.length?(h=(y=+y)*y,d):Math.sqrt(h)},d}var Q$=e=>()=>e;function JDt(e,{sourceEvent:t,target:n,selection:s,mode:r,dispatch:i}){Object.defineProperties(this,{type:{value:e,enumerable:!0,configurable:!0},sourceEvent:{value:t,enumerable:!0,configurable:!0},target:{value:n,enumerable:!0,configurable:!0},selection:{value:s,enumerable:!0,configurable:!0},mode:{value:r,enumerable:!0,configurable:!0},_:{value:i}})}function QDt(e){e.stopImmediatePropagation()}function tS(e){e.preventDefault(),e.stopImmediatePropagation()}var eW={name:"drag"},eS={name:"space"},rd={name:"handle"},id={name:"center"};const{abs:nW,max:sr,min:rr}=Math;function sW(e){return[+e[0],+e[1]]}function nS(e){return[sW(e[0]),sW(e[1])]}var sS={name:"x",handles:["w","e"].map(wm),input:function(e,t){return e==null?null:[[+e[0],t[0][1]],[+e[1],t[1][1]]]},output:function(e){return e&&[e[0][0],e[1][0]]}},rS={name:"y",handles:["n","s"].map(wm),input:function(e,t){return e==null?null:[[t[0][0],+e[0]],[t[1][0],+e[1]]]},output:function(e){return e&&[e[0][1],e[1][1]]}},tTt={name:"xy",handles:["n","w","e","s","nw","ne","sw","se"].map(wm),input:function(e){return e==null?null:nS(e)},output:function(e){return e}},La={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},rW={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},iW={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},eTt={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},nTt={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function wm(e){return{type:e}}function sTt(e){return!e.ctrlKey&&!e.button}function rTt(){var e=this.ownerSVGElement||this;return e.hasAttribute("viewBox")?(e=e.viewBox.baseVal,[[e.x,e.y],[e.x+e.width,e.y+e.height]]):[[0,0],[e.width.baseVal.value,e.height.baseVal.value]]}function iTt(){return navigator.maxTouchPoints||"ontouchstart"in this}function iS(e){for(;!e.__brush;)if(!(e=e.parentNode))return;return e.__brush}function oTt(e){return e[0][0]===e[1][0]||e[0][1]===e[1][1]}function aTt(){return uTt(tTt)}function uTt(e){var t=rTt,n=sTt,s=iTt,r=!0,i=fm("start","brush","end"),o=6,a;function u(g){var x=g.property("__brush",m).selectAll(".overlay").data([wm("overlay")]);x.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",La.overlay).merge(x).each(function(){var w=iS(this).extent;yr(this).attr("x",w[0][0]).attr("y",w[0][1]).attr("width",w[1][0]-w[0][0]).attr("height",w[1][1]-w[0][1])}),g.selectAll(".selection").data([wm("selection")]).enter().append("rect").attr("class","selection").attr("cursor",La.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var b=g.selectAll(".handle").data(e.handles,function(w){return w.type});b.exit().remove(),b.enter().append("rect").attr("class",function(w){return"handle handle--"+w.type}).attr("cursor",function(w){return La[w.type]}),g.each(l).attr("fill","none").attr("pointer-events","all").on("mousedown.brush",d).filter(s).on("touchstart.brush",d).on("touchmove.brush",p).on("touchend.brush touchcancel.brush",f).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}u.move=function(g,x,b){g.tween?g.on("start.brush",function(w){c(this,arguments).beforestart().start(w)}).on("interrupt.brush end.brush",function(w){c(this,arguments).end(w)}).tween("brush",function(){var w=this,y=w.__brush,v=c(w,arguments),k=y.selection,C=e.input(typeof x=="function"?x.apply(this,arguments):x,y.extent),I=Kl(k,C);function $(S){y.selection=S===1&&C===null?null:I(S),l.call(w),v.brush()}return k!==null&&C!==null?$:$(1)}):g.each(function(){var w=this,y=arguments,v=w.__brush,k=e.input(typeof x=="function"?x.apply(w,y):x,v.extent),C=c(w,y).beforestart();td(w),v.selection=k===null?null:k,l.call(w),C.start(b).brush(b).end(b)})},u.clear=function(g,x){u.move(g,null,x)};function l(){var g=yr(this),x=iS(this).selection;x?(g.selectAll(".selection").style("display",null).attr("x",x[0][0]).attr("y",x[0][1]).attr("width",x[1][0]-x[0][0]).attr("height",x[1][1]-x[0][1]),g.selectAll(".handle").style("display",null).attr("x",function(b){return b.type[b.type.length-1]==="e"?x[1][0]-o/2:x[0][0]-o/2}).attr("y",function(b){return b.type[0]==="s"?x[1][1]-o/2:x[0][1]-o/2}).attr("width",function(b){return b.type==="n"||b.type==="s"?x[1][0]-x[0][0]+o:o}).attr("height",function(b){return b.type==="e"||b.type==="w"?x[1][1]-x[0][1]+o:o})):g.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function c(g,x,b){var w=g.__brush.emitter;return w&&(!b||!w.clean)?w:new h(g,x,b)}function h(g,x,b){this.that=g,this.args=x,this.state=g.__brush,this.active=0,this.clean=b}h.prototype={beforestart:function(){return++this.active===1&&(this.state.emitter=this,this.starting=!0),this},start:function(g,x){return this.starting?(this.starting=!1,this.emit("start",g,x)):this.emit("brush",g),this},brush:function(g,x){return this.emit("brush",g,x),this},end:function(g,x){return--this.active===0&&(delete this.state.emitter,this.emit("end",g,x)),this},emit:function(g,x,b){var w=yr(this.that).datum();i.call(g,this.that,new JDt(g,{sourceEvent:x,target:u,selection:e.output(this.state.selection),mode:b,dispatch:i}),w)}};function d(g){if(a&&!g.touches||!n.apply(this,arguments))return;var x=this,b=g.target.__data__.type,w=(r&&g.metaKey?b="overlay":b)==="selection"?eW:r&&g.altKey?id:rd,y=e===rS?null:eTt[b],v=e===sS?null:nTt[b],k=iS(x),C=k.extent,I=k.selection,$=C[0][0],S,N,F=C[0][1],D,E,A=C[1][0],T,R,_=C[1][1],M,z,B=0,V=0,G,j=y&&v&&r&&g.shiftKey,H,at,it=Array.from(g.touches||[g],kt=>{const Lt=kt.identifier;return kt=fo(kt,x),kt.point0=kt.slice(),kt.identifier=Lt,kt});td(x);var ft=c(x,arguments,!0).beforestart();if(b==="overlay"){I&&(G=!0);const kt=[it[0],it[1]||it[0]];k.selection=I=[[S=e===rS?$:rr(kt[0][0],kt[1][0]),D=e===sS?F:rr(kt[0][1],kt[1][1])],[T=e===rS?A:sr(kt[0][0],kt[1][0]),M=e===sS?_:sr(kt[0][1],kt[1][1])]],it.length>1&&Et(g)}else S=I[0][0],D=I[0][1],T=I[1][0],M=I[1][1];N=S,E=D,R=T,z=M;var X=yr(x).attr("pointer-events","none"),ut=X.selectAll(".overlay").attr("cursor",La[b]);if(g.touches)ft.moved=ot,ft.ended=Tt;else{var wt=yr(g.view).on("mousemove.brush",ot,!0).on("mouseup.brush",Tt,!0);r&&wt.on("keydown.brush",Rt,!0).on("keyup.brush",_t,!0),Y$(g.view)}l.call(x),ft.start(g,w.name);function ot(kt){for(const Lt of kt.changedTouches||[kt])for(const Ue of it)Ue.identifier===Lt.identifier&&(Ue.cur=fo(Lt,x));if(j&&!H&&!at&&it.length===1){const Lt=it[0];nW(Lt.cur[0]-Lt[0])>nW(Lt.cur[1]-Lt[1])?at=!0:H=!0}for(const Lt of it)Lt.cur&&(Lt[0]=Lt.cur[0],Lt[1]=Lt.cur[1]);G=!0,tS(kt),Et(kt)}function Et(kt){const Lt=it[0],Ue=Lt.point0;var he;switch(B=Lt[0]-Ue[0],V=Lt[1]-Ue[1],w){case eS:case eW:{y&&(B=sr($-S,rr(A-T,B)),N=S+B,R=T+B),v&&(V=sr(F-D,rr(_-M,V)),E=D+V,z=M+V);break}case rd:{it[1]?(y&&(N=sr($,rr(A,it[0][0])),R=sr($,rr(A,it[1][0])),y=1),v&&(E=sr(F,rr(_,it[0][1])),z=sr(F,rr(_,it[1][1])),v=1)):(y<0?(B=sr($-S,rr(A-S,B)),N=S+B,R=T):y>0&&(B=sr($-T,rr(A-T,B)),N=S,R=T+B),v<0?(V=sr(F-D,rr(_-D,V)),E=D+V,z=M):v>0&&(V=sr(F-M,rr(_-M,V)),E=D,z=M+V));break}case id:{y&&(N=sr($,rr(A,S-B*y)),R=sr($,rr(A,T+B*y))),v&&(E=sr(F,rr(_,D-V*v)),z=sr(F,rr(_,M+V*v)));break}}R<N&&(y*=-1,he=S,S=T,T=he,he=N,N=R,R=he,b in rW&&ut.attr("cursor",La[b=rW[b]])),z<E&&(v*=-1,he=D,D=M,M=he,he=E,E=z,z=he,b in iW&&ut.attr("cursor",La[b=iW[b]])),k.selection&&(I=k.selection),H&&(N=I[0][0],R=I[1][0]),at&&(E=I[0][1],z=I[1][1]),(I[0][0]!==N||I[0][1]!==E||I[1][0]!==R||I[1][1]!==z)&&(k.selection=[[N,E],[R,z]],l.call(x),ft.brush(kt,w.name))}function Tt(kt){if(QDt(kt),kt.touches){if(kt.touches.length)return;a&&clearTimeout(a),a=setTimeout(function(){a=null},500)}else Z$(kt.view,G),wt.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);X.attr("pointer-events","all"),ut.attr("cursor",La.overlay),k.selection&&(I=k.selection),oTt(I)&&(k.selection=null,l.call(x)),ft.end(kt,w.name)}function Rt(kt){switch(kt.keyCode){case 16:{j=y&&v;break}case 18:{w===rd&&(y&&(T=R-B*y,S=N+B*y),v&&(M=z-V*v,D=E+V*v),w=id,Et(kt));break}case 32:{(w===rd||w===id)&&(y<0?T=R-B:y>0&&(S=N-B),v<0?M=z-V:v>0&&(D=E-V),w=eS,ut.attr("cursor",La.selection),Et(kt));break}default:return}tS(kt)}function _t(kt){switch(kt.keyCode){case 16:{j&&(H=at=j=!1,Et(kt));break}case 18:{w===id&&(y<0?T=R:y>0&&(S=N),v<0?M=z:v>0&&(D=E),w=rd,Et(kt));break}case 32:{w===eS&&(kt.altKey?(y&&(T=R-B*y,S=N+B*y),v&&(M=z-V*v,D=E+V*v),w=id):(y<0?T=R:y>0&&(S=N),v<0?M=z:v>0&&(D=E),w=rd),ut.attr("cursor",La[b]),Et(kt));break}default:return}tS(kt)}}function p(g){c(this,arguments).moved(g)}function f(g){c(this,arguments).ended(g)}function m(){var g=this.__brush||{selection:null};return g.extent=nS(t.apply(this,arguments)),g.dim=e,g}return u.extent=function(g){return arguments.length?(t=typeof g=="function"?g:Q$(nS(g)),u):t},u.filter=function(g){return arguments.length?(n=typeof g=="function"?g:Q$(!!g),u):n},u.touchable=function(g){return arguments.length?(s=typeof g=="function"?g:Q$(!!g),u):s},u.handleSize=function(g){return arguments.length?(o=+g,u):o},u.keyModifiers=function(g){return arguments.length?(r=!!g,u):r},u.on=function(){var g=i.on.apply(i,arguments);return g===i?u:g},u}var qb=e=>()=>e;function lTt(e,{sourceEvent:t,target:n,transform:s,dispatch:r}){Object.defineProperties(this,{type:{value:e,enumerable:!0,configurable:!0},sourceEvent:{value:t,enumerable:!0,configurable:!0},target:{value:n,enumerable:!0,configurable:!0},transform:{value:s,enumerable:!0,configurable:!0},_:{value:r}})}function za(e,t,n){this.k=e,this.x=t,this.y=n}za.prototype={constructor:za,scale:function(e){return e===1?this:new za(this.k*e,this.x,this.y)},translate:function(e,t){return e===0&t===0?this:new za(this.k,this.x+this.k*e,this.y+this.k*t)},apply:function(e){return[e[0]*this.k+this.x,e[1]*this.k+this.y]},applyX:function(e){return e*this.k+this.x},applyY:function(e){return e*this.k+this.y},invert:function(e){return[(e[0]-this.x)/this.k,(e[1]-this.y)/this.k]},invertX:function(e){return(e-this.x)/this.k},invertY:function(e){return(e-this.y)/this.k},rescaleX:function(e){return e.copy().domain(e.range().map(this.invertX,this).map(e.invert,e))},rescaleY:function(e){return e.copy().domain(e.range().map(this.invertY,this).map(e.invert,e))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var jb=new za(1,0,0);oW.prototype=za.prototype;function oW(e){for(;!e.__zoom;)if(!(e=e.parentNode))return jb;return e.__zoom}function oS(e){e.stopImmediatePropagation()}function vm(e){e.preventDefault(),e.stopImmediatePropagation()}function cTt(e){return(!e.ctrlKey||e.type==="wheel")&&!e.button}function hTt(){var e=this;return e instanceof SVGElement?(e=e.ownerSVGElement||e,e.hasAttribute("viewBox")?(e=e.viewBox.baseVal,[[e.x,e.y],[e.x+e.width,e.y+e.height]]):[[0,0],[e.width.baseVal.value,e.height.baseVal.value]]):[[0,0],[e.clientWidth,e.clientHeight]]}function aW(){return this.__zoom||jb}function dTt(e){return-e.deltaY*(e.deltaMode===1?.05:e.deltaMode?1:.002)*(e.ctrlKey?10:1)}function pTt(){return navigator.maxTouchPoints||"ontouchstart"in this}function fTt(e,t,n){var s=e.invertX(t[0][0])-n[0][0],r=e.invertX(t[1][0])-n[1][0],i=e.invertY(t[0][1])-n[0][1],o=e.invertY(t[1][1])-n[1][1];return e.translate(r>s?(s+r)/2:Math.min(0,s)||Math.max(0,r),o>i?(i+o)/2:Math.min(0,i)||Math.max(0,o))}function mTt(){var e=cTt,t=hTt,n=fTt,s=dTt,r=pTt,i=[0,1/0],o=[[-1/0,-1/0],[1/0,1/0]],a=250,u=FB,l=fm("start","zoom","end"),c,h,d,p=500,f=150,m=0,g=10;function x(E){E.property("__zoom",aW).on("wheel.zoom",I,{passive:!1}).on("mousedown.zoom",$).on("dblclick.zoom",S).filter(r).on("touchstart.zoom",N).on("touchmove.zoom",F).on("touchend.zoom touchcancel.zoom",D).style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}x.transform=function(E,A,T,R){var _=E.selection?E.selection():E;_.property("__zoom",aW),E!==_?v(E,A,T,R):_.interrupt().each(function(){k(this,arguments).event(R).start().zoom(null,typeof A=="function"?A.apply(this,arguments):A).end()})},x.scaleBy=function(E,A,T,R){x.scaleTo(E,function(){var _=this.__zoom.k,M=typeof A=="function"?A.apply(this,arguments):A;return _*M},T,R)},x.scaleTo=function(E,A,T,R){x.transform(E,function(){var _=t.apply(this,arguments),M=this.__zoom,z=T==null?y(_):typeof T=="function"?T.apply(this,arguments):T,B=M.invert(z),V=typeof A=="function"?A.apply(this,arguments):A;return n(w(b(M,V),z,B),_,o)},T,R)},x.translateBy=function(E,A,T,R){x.transform(E,function(){return n(this.__zoom.translate(typeof A=="function"?A.apply(this,arguments):A,typeof T=="function"?T.apply(this,arguments):T),t.apply(this,arguments),o)},null,R)},x.translateTo=function(E,A,T,R,_){x.transform(E,function(){var M=t.apply(this,arguments),z=this.__zoom,B=R==null?y(M):typeof R=="function"?R.apply(this,arguments):R;return n(jb.translate(B[0],B[1]).scale(z.k).translate(typeof A=="function"?-A.apply(this,arguments):-A,typeof T=="function"?-T.apply(this,arguments):-T),M,o)},R,_)};function b(E,A){return A=Math.max(i[0],Math.min(i[1],A)),A===E.k?E:new za(A,E.x,E.y)}function w(E,A,T){var R=A[0]-T[0]*E.k,_=A[1]-T[1]*E.k;return R===E.x&&_===E.y?E:new za(E.k,R,_)}function y(E){return[(+E[0][0]+ +E[1][0])/2,(+E[0][1]+ +E[1][1])/2]}function v(E,A,T,R){E.on("start.zoom",function(){k(this,arguments).event(R).start()}).on("interrupt.zoom end.zoom",function(){k(this,arguments).event(R).end()}).tween("zoom",function(){var _=this,M=arguments,z=k(_,M).event(R),B=t.apply(_,M),V=T==null?y(B):typeof T=="function"?T.apply(_,M):T,G=Math.max(B[1][0]-B[0][0],B[1][1]-B[0][1]),j=_.__zoom,H=typeof A=="function"?A.apply(_,M):A,at=u(j.invert(V).concat(G/j.k),H.invert(V).concat(G/H.k));return function(it){if(it===1)it=H;else{var ft=at(it),X=G/ft[2];it=new za(X,V[0]-ft[0]*X,V[1]-ft[1]*X)}z.zoom(null,it)}})}function k(E,A,T){return!T&&E.__zooming||new C(E,A)}function C(E,A){this.that=E,this.args=A,this.active=0,this.sourceEvent=null,this.extent=t.apply(E,A),this.taps=0}C.prototype={event:function(E){return E&&(this.sourceEvent=E),this},start:function(){return++this.active===1&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(E,A){return this.mouse&&E!=="mouse"&&(this.mouse[1]=A.invert(this.mouse[0])),this.touch0&&E!=="touch"&&(this.touch0[1]=A.invert(this.touch0[0])),this.touch1&&E!=="touch"&&(this.touch1[1]=A.invert(this.touch1[0])),this.that.__zoom=A,this.emit("zoom"),this},end:function(){return--this.active===0&&(delete this.that.__zooming,this.emit("end")),this},emit:function(E){var A=yr(this.that).datum();l.call(E,this.that,new lTt(E,{sourceEvent:this.sourceEvent,target:x,type:E,transform:this.that.__zoom,dispatch:l}),A)}};function I(E,...A){if(!e.apply(this,arguments))return;var T=k(this,A).event(E),R=this.__zoom,_=Math.max(i[0],Math.min(i[1],R.k*Math.pow(2,s.apply(this,arguments)))),M=fo(E);if(T.wheel)(T.mouse[0][0]!==M[0]||T.mouse[0][1]!==M[1])&&(T.mouse[1]=R.invert(T.mouse[0]=M)),clearTimeout(T.wheel);else{if(R.k===_)return;T.mouse=[M,R.invert(M)],td(this),T.start()}vm(E),T.wheel=setTimeout(z,f),T.zoom("mouse",n(w(b(R,_),T.mouse[0],T.mouse[1]),T.extent,o));function z(){T.wheel=null,T.end()}}function $(E,...A){if(d||!e.apply(this,arguments))return;var T=E.currentTarget,R=k(this,A,!0).event(E),_=yr(E.view).on("mousemove.zoom",V,!0).on("mouseup.zoom",G,!0),M=fo(E,T),z=E.clientX,B=E.clientY;Y$(E.view),oS(E),R.mouse=[M,this.__zoom.invert(M)],td(this),R.start();function V(j){if(vm(j),!R.moved){var H=j.clientX-z,at=j.clientY-B;R.moved=H*H+at*at>m}R.event(j).zoom("mouse",n(w(R.that.__zoom,R.mouse[0]=fo(j,T),R.mouse[1]),R.extent,o))}function G(j){_.on("mousemove.zoom mouseup.zoom",null),Z$(j.view,R.moved),vm(j),R.event(j).end()}}function S(E,...A){if(e.apply(this,arguments)){var T=this.__zoom,R=fo(E.changedTouches?E.changedTouches[0]:E,this),_=T.invert(R),M=T.k*(E.shiftKey?.5:2),z=n(w(b(T,M),R,_),t.apply(this,A),o);vm(E),a>0?yr(this).transition().duration(a).call(v,z,R,E):yr(this).call(x.transform,z,R,E)}}function N(E,...A){if(e.apply(this,arguments)){var T=E.touches,R=T.length,_=k(this,A,E.changedTouches.length===R).event(E),M,z,B,V;for(oS(E),z=0;z<R;++z)B=T[z],V=fo(B,this),V=[V,this.__zoom.invert(V),B.identifier],_.touch0?!_.touch1&&_.touch0[2]!==V[2]&&(_.touch1=V,_.taps=0):(_.touch0=V,M=!0,_.taps=1+!!c);c&&(c=clearTimeout(c)),M&&(_.taps<2&&(h=V[0],c=setTimeout(function(){c=null},p)),td(this),_.start())}}function F(E,...A){if(this.__zooming){var T=k(this,A).event(E),R=E.changedTouches,_=R.length,M,z,B,V;for(vm(E),M=0;M<_;++M)z=R[M],B=fo(z,this),T.touch0&&T.touch0[2]===z.identifier?T.touch0[0]=B:T.touch1&&T.touch1[2]===z.identifier&&(T.touch1[0]=B);if(z=T.that.__zoom,T.touch1){var G=T.touch0[0],j=T.touch0[1],H=T.touch1[0],at=T.touch1[1],it=(it=H[0]-G[0])*it+(it=H[1]-G[1])*it,ft=(ft=at[0]-j[0])*ft+(ft=at[1]-j[1])*ft;z=b(z,Math.sqrt(it/ft)),B=[(G[0]+H[0])/2,(G[1]+H[1])/2],V=[(j[0]+at[0])/2,(j[1]+at[1])/2]}else if(T.touch0)B=T.touch0[0],V=T.touch0[1];else return;T.zoom("touch",n(w(z,B,V),T.extent,o))}}function D(E,...A){if(this.__zooming){var T=k(this,A).event(E),R=E.changedTouches,_=R.length,M,z;for(oS(E),d&&clearTimeout(d),d=setTimeout(function(){d=null},p),M=0;M<_;++M)z=R[M],T.touch0&&T.touch0[2]===z.identifier?delete T.touch0:T.touch1&&T.touch1[2]===z.identifier&&delete T.touch1;if(T.touch1&&!T.touch0&&(T.touch0=T.touch1,delete T.touch1),T.touch0)T.touch0[1]=this.__zoom.invert(T.touch0[0]);else if(T.end(),T.taps===2&&(z=fo(z,this),Math.hypot(h[0]-z[0],h[1]-z[1])<g)){var B=yr(this).on("dblclick.zoom");B&&B.apply(this,arguments)}}}return x.wheelDelta=function(E){return arguments.length?(s=typeof E=="function"?E:qb(+E),x):s},x.filter=function(E){return arguments.length?(e=typeof E=="function"?E:qb(!!E),x):e},x.touchable=function(E){return arguments.length?(r=typeof E=="function"?E:qb(!!E),x):r},x.extent=function(E){return arguments.length?(t=typeof E=="function"?E:qb([[+E[0][0],+E[0][1]],[+E[1][0],+E[1][1]]]),x):t},x.scaleExtent=function(E){return arguments.length?(i[0]=+E[0],i[1]=+E[1],x):[i[0],i[1]]},x.translateExtent=function(E){return arguments.length?(o[0][0]=+E[0][0],o[1][0]=+E[1][0],o[0][1]=+E[0][1],o[1][1]=+E[1][1],x):[[o[0][0],o[0][1]],[o[1][0],o[1][1]]]},x.constrain=function(E){return arguments.length?(n=E,x):n},x.duration=function(E){return arguments.length?(a=+E,x):a},x.interpolate=function(E){return arguments.length?(u=E,x):u},x.on=function(){var E=l.on.apply(l,arguments);return E===l?x:E},x.clickDistance=function(E){return arguments.length?(m=(E=+E)*E,x):Math.sqrt(m)},x.tapDistance=function(E){return arguments.length?(g=+E,x):g},x}var uW=Math.random,gTt=function e(t){function n(s,r){return s=s==null?0:+s,r=r==null?1:+r,arguments.length===1?(r=s,s=0):r-=s,function(){return t()*r+s}}return n.source=e,n}(uW),xTt=function e(t){function n(s,r){return arguments.length<2&&(r=s,s=0),s=Math.floor(s),r=Math.floor(r)-s,function(){return Math.floor(t()*r+s)}}return n.source=e,n}(uW);const bTt=1664525,yTt=1013904223,lW=1/4294967296;function wTt(e=Math.random()){let t=(0<=e&&e<1?e/lW:Math.abs(e))|0;return()=>(t=bTt*t+yTt|0,lW*(t>>>0))}var vTt=Array.prototype,kTt=vTt.slice;function ITt(e,t){return e-t}function CTt(e){for(var t=0,n=e.length,s=e[n-1][1]*e[0][0]-e[n-1][0]*e[0][1];++t<n;)s+=e[t-1][1]*e[t][0]-e[t-1][0]*e[t][1];return s}var cW=e=>()=>e;function $Tt(e,t){for(var n=-1,s=t.length,r;++n<s;)if(r=STt(e,t[n]))return r;return 0}function STt(e,t){for(var n=t[0],s=t[1],r=-1,i=0,o=e.length,a=o-1;i<o;a=i++){var u=e[i],l=u[0],c=u[1],h=e[a],d=h[0],p=h[1];if(NTt(u,h,t))return 0;c>s!=p>s&&n<(d-l)*(s-c)/(p-c)+l&&(r=-r)}return r}function NTt(e,t,n){var s;return ETt(e,t,n)&&DTt(e[s=+(e[0]===t[0])],n[s],t[s])}function ETt(e,t,n){return(t[0]-e[0])*(n[1]-e[1])===(n[0]-e[0])*(t[1]-e[1])}function DTt(e,t,n){return e<=t&&t<=n||n<=t&&t<=e}function TTt(){}var Ba=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];function ATt(){var e=1,t=1,n=Yz,s=u;function r(l){var c=n(l);if(Array.isArray(c))c=c.slice().sort(ITt);else{const h=Zf(l,FTt);for(c=Jf(...Xz(h[0],h[1],c),c);c[c.length-1]>=h[1];)c.pop();for(;c[1]<h[0];)c.shift()}return c.map(h=>i(l,h))}function i(l,c){const h=c==null?NaN:+c;if(isNaN(h))throw new Error(`invalid value: ${c}`);var d=[],p=[];return o(l,h,function(f){s(f,l,h),CTt(f)>0?d.push([f]):p.push(f)}),p.forEach(function(f){for(var m=0,g=d.length,x;m<g;++m)if($Tt((x=d[m])[0],f)!==-1){x.push(f);return}}),{type:"MultiPolygon",value:c,coordinates:d}}function o(l,c,h){var d=new Array,p=new Array,f,m,g,x,b,w;for(f=m=-1,x=sc(l[0],c),Ba[x<<1].forEach(y);++f<e-1;)g=x,x=sc(l[f+1],c),Ba[g|x<<1].forEach(y);for(Ba[x<<0].forEach(y);++m<t-1;){for(f=-1,x=sc(l[m*e+e],c),b=sc(l[m*e],c),Ba[x<<1|b<<2].forEach(y);++f<e-1;)g=x,x=sc(l[m*e+e+f+1],c),w=b,b=sc(l[m*e+f+1],c),Ba[g|x<<1|b<<2|w<<3].forEach(y);Ba[x|b<<3].forEach(y)}for(f=-1,b=l[m*e]>=c,Ba[b<<2].forEach(y);++f<e-1;)w=b,b=sc(l[m*e+f+1],c),Ba[b<<2|w<<3].forEach(y);Ba[b<<3].forEach(y);function y(v){var k=[v[0][0]+f,v[0][1]+m],C=[v[1][0]+f,v[1][1]+m],I=a(k),$=a(C),S,N;(S=p[I])?(N=d[$])?(delete p[S.end],delete d[N.start],S===N?(S.ring.push(C),h(S.ring)):d[S.start]=p[N.end]={start:S.start,end:N.end,ring:S.ring.concat(N.ring)}):(delete p[S.end],S.ring.push(C),p[S.end=$]=S):(S=d[$])?(N=p[I])?(delete d[S.start],delete p[N.end],S===N?(S.ring.push(C),h(S.ring)):d[N.start]=p[S.end]={start:N.start,end:S.end,ring:N.ring.concat(S.ring)}):(delete d[S.start],S.ring.unshift(k),d[S.start=I]=S):d[I]=p[$]={start:I,end:$,ring:[k,C]}}}function a(l){return l[0]*2+l[1]*(e+1)*4}function u(l,c,h){l.forEach(function(d){var p=d[0],f=d[1],m=p|0,g=f|0,x=aS(c[g*e+m]);p>0&&p<e&&m===p&&(d[0]=hW(p,aS(c[g*e+m-1]),x,h)),f>0&&f<t&&g===f&&(d[1]=hW(f,aS(c[(g-1)*e+m]),x,h))})}return r.contour=i,r.size=function(l){if(!arguments.length)return[e,t];var c=Math.floor(l[0]),h=Math.floor(l[1]);if(!(c>=0&&h>=0))throw new Error("invalid size");return e=c,t=h,r},r.thresholds=function(l){return arguments.length?(n=typeof l=="function"?l:Array.isArray(l)?cW(kTt.call(l)):cW(l),r):n},r.smooth=function(l){return arguments.length?(s=l?u:TTt,r):s===u},r}function FTt(e){return isFinite(e)?e:NaN}function sc(e,t){return e==null?!1:+e>=t}function aS(e){return e==null||isNaN(e=+e)?-1/0:e}function hW(e,t,n,s){const r=s-t,i=n-t,o=isFinite(r)||isFinite(i)?r/i:Math.sign(r)/Math.sign(i);return isNaN(o)?e:e+o-.5}var RTt=Math.PI,_Tt=RTt*2,MTt=Math.abs,uS=Math.sqrt;function bo(){}function Kb(e,t){e&&pW.hasOwnProperty(e.type)&&pW[e.type](e,t)}var dW={Feature:function(e,t){Kb(e.geometry,t)},FeatureCollection:function(e,t){for(var n=e.features,s=-1,r=n.length;++s<r;)Kb(n[s].geometry,t)}},pW={Sphere:function(e,t){t.sphere()},Point:function(e,t){e=e.coordinates,t.point(e[0],e[1],e[2])},MultiPoint:function(e,t){for(var n=e.coordinates,s=-1,r=n.length;++s<r;)e=n[s],t.point(e[0],e[1],e[2])},LineString:function(e,t){lS(e.coordinates,t,0)},MultiLineString:function(e,t){for(var n=e.coordinates,s=-1,r=n.length;++s<r;)lS(n[s],t,0)},Polygon:function(e,t){fW(e.coordinates,t)},MultiPolygon:function(e,t){for(var n=e.coordinates,s=-1,r=n.length;++s<r;)fW(n[s],t)},GeometryCollection:function(e,t){for(var n=e.geometries,s=-1,r=n.length;++s<r;)Kb(n[s],t)}};function lS(e,t,n){var s=-1,r=e.length-n,i;for(t.lineStart();++s<r;)i=e[s],t.point(i[0],i[1],i[2]);t.lineEnd()}function fW(e,t){var n=-1,s=e.length;for(t.polygonStart();++n<s;)lS(e[n],t,1);t.polygonEnd()}function km(e,t){e&&dW.hasOwnProperty(e.type)?dW[e.type](e,t):Kb(e,t)}var OTt=e=>e,cS=new Uh,hS=new Uh,mW,gW,dS,pS,Tu={point:bo,lineStart:bo,lineEnd:bo,polygonStart:function(){Tu.lineStart=LTt,Tu.lineEnd=BTt},polygonEnd:function(){Tu.lineStart=Tu.lineEnd=Tu.point=bo,cS.add(MTt(hS)),hS=new Uh},result:function(){var e=cS/2;return cS=new Uh,e}};function LTt(){Tu.point=zTt}function zTt(e,t){Tu.point=xW,mW=dS=e,gW=pS=t}function xW(e,t){hS.add(pS*e-dS*t),dS=e,pS=t}function BTt(){xW(mW,gW)}var bW=Tu,od=1/0,Xb=od,Im=-od,Yb=Im,PTt={point:WTt,lineStart:bo,lineEnd:bo,polygonStart:bo,polygonEnd:bo,result:function(){var e=[[od,Xb],[Im,Yb]];return Im=Yb=-(Xb=od=1/0),e}};function WTt(e,t){e<od&&(od=e),e>Im&&(Im=e),t<Xb&&(Xb=t),t>Yb&&(Yb=t)}var yW=PTt,fS=0,mS=0,Cm=0,Zb=0,Jb=0,ad=0,gS=0,xS=0,$m=0,wW,vW,ea,na,yo={point:rc,lineStart:kW,lineEnd:IW,polygonStart:function(){yo.lineStart=GTt,yo.lineEnd=HTt},polygonEnd:function(){yo.point=rc,yo.lineStart=kW,yo.lineEnd=IW},result:function(){var e=$m?[gS/$m,xS/$m]:ad?[Zb/ad,Jb/ad]:Cm?[fS/Cm,mS/Cm]:[NaN,NaN];return fS=mS=Cm=Zb=Jb=ad=gS=xS=$m=0,e}};function rc(e,t){fS+=e,mS+=t,++Cm}function kW(){yo.point=VTt}function VTt(e,t){yo.point=UTt,rc(ea=e,na=t)}function UTt(e,t){var n=e-ea,s=t-na,r=uS(n*n+s*s);Zb+=r*(ea+e)/2,Jb+=r*(na+t)/2,ad+=r,rc(ea=e,na=t)}function IW(){yo.point=rc}function GTt(){yo.point=qTt}function HTt(){CW(wW,vW)}function qTt(e,t){yo.point=CW,rc(wW=ea=e,vW=na=t)}function CW(e,t){var n=e-ea,s=t-na,r=uS(n*n+s*s);Zb+=r*(ea+e)/2,Jb+=r*(na+t)/2,ad+=r,r=na*e-ea*t,gS+=r*(ea+e),xS+=r*(na+t),$m+=r*3,rc(ea=e,na=t)}var $W=yo;function SW(e){this._context=e}SW.prototype={_radius:4.5,pointRadius:function(e){return this._radius=e,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){this._line===0&&this._context.closePath(),this._point=NaN},point:function(e,t){switch(this._point){case 0:{this._context.moveTo(e,t),this._point=1;break}case 1:{this._context.lineTo(e,t);break}default:{this._context.moveTo(e+this._radius,t),this._context.arc(e,t,this._radius,0,_Tt);break}}},result:bo};var bS=new Uh,yS,NW,EW,Sm,Nm,Qb={point:bo,lineStart:function(){Qb.point=jTt},lineEnd:function(){yS&&DW(NW,EW),Qb.point=bo},polygonStart:function(){yS=!0},polygonEnd:function(){yS=null},result:function(){var e=+bS;return bS=new Uh,e}};function jTt(e,t){Qb.point=DW,NW=Sm=e,EW=Nm=t}function DW(e,t){Sm-=e,Nm-=t,bS.add(uS(Sm*Sm+Nm*Nm)),Sm=e,Nm=t}var TW=Qb;let AW,ty,FW,RW;class _W{constructor(t){this._append=t==null?MW:KTt(t),this._radius=4.5,this._=""}pointRadius(t){return this._radius=+t,this}polygonStart(){this._line=0}polygonEnd(){this._line=NaN}lineStart(){this._point=0}lineEnd(){this._line===0&&(this._+="Z"),this._point=NaN}point(t,n){switch(this._point){case 0:{this._append`M${t},${n}`,this._point=1;break}case 1:{this._append`L${t},${n}`;break}default:{if(this._append`M${t},${n}`,this._radius!==FW||this._append!==ty){const s=this._radius,r=this._;this._="",this._append`m0,${s}a${s},${s} 0 1,1 0,${-2*s}a${s},${s} 0 1,1 0,${2*s}z`,FW=s,ty=this._append,RW=this._,this._=r}this._+=RW;break}}}result(){const t=this._;return this._="",t.length?t:null}}function MW(e){let t=1;this._+=e[0];for(const n=e.length;t<n;++t)this._+=arguments[t]+e[t]}function KTt(e){const t=Math.floor(e);if(!(t>=0))throw new RangeError(`invalid digits: ${e}`);if(t>15)return MW;if(t!==AW){const n=10**t;AW=t,ty=function(r){let i=1;this._+=r[0];for(const o=r.length;i<o;++i)this._+=Math.round(arguments[i]*n)/n+r[i]}}return ty}function XTt(e,t){let n=3,s=4.5,r,i;function o(a){return a&&(typeof s=="function"&&i.pointRadius(+s.apply(this,arguments)),km(a,r(i))),i.result()}return o.area=function(a){return km(a,r(bW)),bW.result()},o.measure=function(a){return km(a,r(TW)),TW.result()},o.bounds=function(a){return km(a,r(yW)),yW.result()},o.centroid=function(a){return km(a,r($W)),$W.result()},o.projection=function(a){return arguments.length?(r=a==null?(e=null,OTt):(e=a).stream,o):e},o.context=function(a){return arguments.length?(i=a==null?(t=null,new _W(n)):new SW(t=a),typeof s!="function"&&i.pointRadius(s),o):t},o.pointRadius=function(a){return arguments.length?(s=typeof a=="function"?a:(i.pointRadius(+a),+a),o):s},o.digits=function(a){if(!arguments.length)return n;if(a==null)n=null;else{const u=Math.floor(a);if(!(u>=0))throw new RangeError(`invalid digits: ${a}`);n=u}return t===null&&(i=new _W(n)),o},o.projection(e).digits(n).context(t)}function YTt(e){const t=+this._x.call(null,e),n=+this._y.call(null,e);return OW(this.cover(t,n),t,n,e)}function OW(e,t,n,s){if(isNaN(t)||isNaN(n))return e;var r,i=e._root,o={data:s},a=e._x0,u=e._y0,l=e._x1,c=e._y1,h,d,p,f,m,g,x,b;if(!i)return e._root=o,e;for(;i.length;)if((m=t>=(h=(a+l)/2))?a=h:l=h,(g=n>=(d=(u+c)/2))?u=d:c=d,r=i,!(i=i[x=g<<1|m]))return r[x]=o,e;if(p=+e._x.call(null,i.data),f=+e._y.call(null,i.data),t===p&&n===f)return o.next=i,r?r[x]=o:e._root=o,e;do r=r?r[x]=new Array(4):e._root=new Array(4),(m=t>=(h=(a+l)/2))?a=h:l=h,(g=n>=(d=(u+c)/2))?u=d:c=d;while((x=g<<1|m)===(b=(f>=d)<<1|p>=h));return r[b]=i,r[x]=o,e}function ZTt(e){var t,n,s=e.length,r,i,o=new Array(s),a=new Array(s),u=1/0,l=1/0,c=-1/0,h=-1/0;for(n=0;n<s;++n)isNaN(r=+this._x.call(null,t=e[n]))||isNaN(i=+this._y.call(null,t))||(o[n]=r,a[n]=i,r<u&&(u=r),r>c&&(c=r),i<l&&(l=i),i>h&&(h=i));if(u>c||l>h)return this;for(this.cover(u,l).cover(c,h),n=0;n<s;++n)OW(this,o[n],a[n],e[n]);return this}function JTt(e,t){if(isNaN(e=+e)||isNaN(t=+t))return this;var n=this._x0,s=this._y0,r=this._x1,i=this._y1;if(isNaN(n))r=(n=Math.floor(e))+1,i=(s=Math.floor(t))+1;else{for(var o=r-n||1,a=this._root,u,l;n>e||e>=r||s>t||t>=i;)switch(l=(t<s)<<1|e<n,u=new Array(4),u[l]=a,a=u,o*=2,l){case 0:r=n+o,i=s+o;break;case 1:n=r-o,i=s+o;break;case 2:r=n+o,s=i-o;break;case 3:n=r-o,s=i-o;break}this._root&&this._root.length&&(this._root=a)}return this._x0=n,this._y0=s,this._x1=r,this._y1=i,this}function QTt(){var e=[];return this.visit(function(t){if(!t.length)do e.push(t.data);while(t=t.next)}),e}function tAt(e){return arguments.length?this.cover(+e[0][0],+e[0][1]).cover(+e[1][0],+e[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}function wr(e,t,n,s,r){this.node=e,this.x0=t,this.y0=n,this.x1=s,this.y1=r}function eAt(e,t,n){var s,r=this._x0,i=this._y0,o,a,u,l,c=this._x1,h=this._y1,d=[],p=this._root,f,m;for(p&&d.push(new wr(p,r,i,c,h)),n==null?n=1/0:(r=e-n,i=t-n,c=e+n,h=t+n,n*=n);f=d.pop();)if(!(!(p=f.node)||(o=f.x0)>c||(a=f.y0)>h||(u=f.x1)<r||(l=f.y1)<i))if(p.length){var g=(o+u)/2,x=(a+l)/2;d.push(new wr(p[3],g,x,u,l),new wr(p[2],o,x,g,l),new wr(p[1],g,a,u,x),new wr(p[0],o,a,g,x)),(m=(t>=x)<<1|e>=g)&&(f=d[d.length-1],d[d.length-1]=d[d.length-1-m],d[d.length-1-m]=f)}else{var b=e-+this._x.call(null,p.data),w=t-+this._y.call(null,p.data),y=b*b+w*w;if(y<n){var v=Math.sqrt(n=y);r=e-v,i=t-v,c=e+v,h=t+v,s=p.data}}return s}function nAt(e){if(isNaN(c=+this._x.call(null,e))||isNaN(h=+this._y.call(null,e)))return this;var t,n=this._root,s,r,i,o=this._x0,a=this._y0,u=this._x1,l=this._y1,c,h,d,p,f,m,g,x;if(!n)return this;if(n.length)for(;;){if((f=c>=(d=(o+u)/2))?o=d:u=d,(m=h>=(p=(a+l)/2))?a=p:l=p,t=n,!(n=n[g=m<<1|f]))return this;if(!n.length)break;(t[g+1&3]||t[g+2&3]||t[g+3&3])&&(s=t,x=g)}for(;n.data!==e;)if(r=n,!(n=n.next))return this;return(i=n.next)&&delete n.next,r?(i?r.next=i:delete r.next,this):t?(i?t[g]=i:delete t[g],(n=t[0]||t[1]||t[2]||t[3])&&n===(t[3]||t[2]||t[1]||t[0])&&!n.length&&(s?s[x]=n:this._root=n),this):(this._root=i,this)}function sAt(e){for(var t=0,n=e.length;t<n;++t)this.remove(e[t]);return this}function rAt(){return this._root}function iAt(){var e=0;return this.visit(function(t){if(!t.length)do++e;while(t=t.next)}),e}function oAt(e){var t=[],n,s=this._root,r,i,o,a,u;for(s&&t.push(new wr(s,this._x0,this._y0,this._x1,this._y1));n=t.pop();)if(!e(s=n.node,i=n.x0,o=n.y0,a=n.x1,u=n.y1)&&s.length){var l=(i+a)/2,c=(o+u)/2;(r=s[3])&&t.push(new wr(r,l,c,a,u)),(r=s[2])&&t.push(new wr(r,i,c,l,u)),(r=s[1])&&t.push(new wr(r,l,o,a,c)),(r=s[0])&&t.push(new wr(r,i,o,l,c))}return this}function aAt(e){var t=[],n=[],s;for(this._root&&t.push(new wr(this._root,this._x0,this._y0,this._x1,this._y1));s=t.pop();){var r=s.node;if(r.length){var i,o=s.x0,a=s.y0,u=s.x1,l=s.y1,c=(o+u)/2,h=(a+l)/2;(i=r[0])&&t.push(new wr(i,o,a,c,h)),(i=r[1])&&t.push(new wr(i,c,a,u,h)),(i=r[2])&&t.push(new wr(i,o,h,c,l)),(i=r[3])&&t.push(new wr(i,c,h,u,l))}n.push(s)}for(;s=n.pop();)e(s.node,s.x0,s.y0,s.x1,s.y1);return this}function uAt(e){return e[0]}function lAt(e){return arguments.length?(this._x=e,this):this._x}function cAt(e){return e[1]}function hAt(e){return arguments.length?(this._y=e,this):this._y}function LW(e,t,n){var s=new wS(t??uAt,n??cAt,NaN,NaN,NaN,NaN);return e==null?s:s.addAll(e)}function wS(e,t,n,s,r,i){this._x=e,this._y=t,this._x0=n,this._y0=s,this._x1=r,this._y1=i,this._root=void 0}function zW(e){for(var t={data:e.data},n=t;e=e.next;)n=n.next={data:e.data};return t}var vr=LW.prototype=wS.prototype;vr.copy=function(){var e=new wS(this._x,this._y,this._x0,this._y0,this._x1,this._y1),t=this._root,n,s;if(!t)return e;if(!t.length)return e._root=zW(t),e;for(n=[{source:t,target:e._root=new Array(4)}];t=n.pop();)for(var r=0;r<4;++r)(s=t.source[r])&&(s.length?n.push({source:s,target:t.target[r]=new Array(4)}):t.target[r]=zW(s));return e},vr.add=YTt,vr.addAll=ZTt,vr.cover=JTt,vr.data=QTt,vr.extent=tAt,vr.find=eAt,vr.remove=nAt,vr.removeAll=sAt,vr.root=rAt,vr.size=iAt,vr.visit=oAt,vr.visitAfter=aAt,vr.x=lAt,vr.y=hAt;const vS=new Set,BW=(e,t)=>{t&&(vS.has(e)?(console.timeEnd(e),vS.delete(e)):(console.time(e),vS.add(e)))};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dAt=1e-7,pAt=1e-4;class PW{constructor(t,n){this.backend=t,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,n){this.dataIdsCount++,this.data.set(t,n)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class kS{refCount(t){return Wr("refCount")}incRef(t){return Wr("incRef")}timerAvailable(){return!0}time(t){return Wr("time")}read(t){return Wr("read")}readSync(t){return Wr("readSync")}readToGPU(t,n){return Wr("readToGPU")}numDataIds(){return Wr("numDataIds")}disposeData(t,n){return Wr("disposeData")}write(t,n,s){return Wr("write")}move(t,n,s,r,i){return Wr("move")}createTensorFromGPUData(t,n,s){return Wr("createTensorFromGPUData")}memory(){return Wr("memory")}floatPrecision(){return Wr("floatPrecision")}epsilon(){return this.floatPrecision()===32?dAt:pAt}dispose(){return Wr("dispose")}}function Wr(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fAt(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ud(e,t,n)}function ic(e,t,n){return Math.max(e,Math.min(t,n))}function IS(e){return e%2===0?e:e+1}function ud(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function mAt(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function L(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Fi(e,t,n=""){L(We(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function CS(e){L(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function xt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function We(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ld(e){return e%1===0}function $S(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function cd(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function WW(e,t=r=>0,n,s){return new Promise((r,i)=>{let o=0;const a=()=>{if(e()){r();return}o++;const u=t(o);if(n!=null&&o>=n){i();return}s!=null?s(a,u):setTimeout(a,u)};a()})}function VW(e,t){let n=1,s=-1;for(let i=0;i<e.length;++i)if(e[i]>=0)n*=e[i];else if(e[i]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(e[i]<0)throw Error(`Shapes can not be < 0. Found ${e[i]} at dim ${i}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function ve(e,t){const n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),L(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),L(e.every(s=>ld(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function Au(e,t){const n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,i=t==null||r?null:ve(t,e).sort();let o=0;for(let a=0;a<e.length;++a){if(i!=null){if(i[o]===a&&e[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${e[a]}' is not 1`);(i[o]==null||i[o]>a)&&e[a]===1&&(n.push(e[a]),s.push(a)),i[o]<=a&&o++}e[a]!==1&&(n.push(e[a]),s.push(a))}return{newShape:n,keptDims:s}}function As(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function Hn(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function gAt(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function xAt(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function UW(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function ey(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function bAt(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function Em(e){return typeof e=="string"||e instanceof String}function yAt(e){return typeof e=="boolean"}function SS(e){return typeof e=="number"}function Dm(e){return Array.isArray(e)?Dm(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":SS(e)?"float32":Em(e)?"string":yAt(e)?"bool":"float32"}function NS(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ES(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function ee(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function GW(e,t,n,s=!1){const r=new Array;if(t.length===1){const i=t[0]*(s?2:1);for(let o=0;o<i;o++)r[o]=n[e+o]}else{const i=t[0],o=t.slice(1),a=o.reduce((u,l)=>u*l)*(s?2:1);for(let u=0;u<i;u++)r[u]=GW(e+u*a,o,n,s)}return r}function wo(e,t,n=!1){if(e.length===0)return t[0];const s=e.reduce((r,i)=>r*i)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return GW(0,e,t,n)}function wAt(e,t){if(Array.isArray(e))return e;if(t==="float32")return e instanceof Float32Array?e:new Float32Array(e);if(t==="int32")return e instanceof Int32Array?e:new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function DS(e,t){const n=Vs(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function Vs(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function HW(e,t){const n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return wo(e,new Float32Array(n));if(t==="int32")return wo(e,new Int32Array(n));if(t==="bool")return wo(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Pa(e){e.forEach(t=>{L(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function sa(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function hd(e,t,n){if(t===0)return[];if(t===1)return[e];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function TS(e){return e&&e.then&&typeof e.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qW="tfjsflags";class vAt{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=kAt,this.populateURLFlags()}setPlatform(t,n){this.platform!=null&&(pt().getBool("IS_TEST")||pt().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=n}registerFlag(t,n,s){if(this.flagRegistry[t]={evaluationFn:n,setHook:s},this.urlFlags[t]!=null){const r=this.urlFlags[t];pt().getBool("IS_TEST")||pt().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const n=this.evaluateFlag(t);if(TS(n))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=n,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,n){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=n,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(n)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);qW in t&&t[qW].split(",").forEach(s=>{const[r,i]=s.split(":");this.urlFlags[r]=CAt(r,i)})}}function kAt(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(IAt(t,s[0],s[1]),s.join("="))),t}function IAt(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function CAt(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function pt(){return jW}let jW=null;function $At(e){jW=e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let AS;function KW(){if(AS==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");AS=e}return AS}function SAt(){const e=KW();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function FS(e,t){const n=SAt();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const ny="Abs",Tm="Acos",Am="Acosh",dd="Add",RS="AddN",_S="All",MS="Any",sy="ArgMax",ry="ArgMin",Fm="Asin",Rm="Asinh",_m="Atan",Mm="Atanh",Om="Atan2",iy="AvgPool",OS="AvgPoolGrad",oy="AvgPool3D",LS="AvgPool3DGrad",ay="BatchMatMul",uy="BatchToSpaceND",zS="Bincount",NAt="BroadcastTo",XW="BroadcastArgs",Lm="Cast",zm="Ceil",Bm="ClipByValue",BS="Complex",ly="ComplexAbs",cy="Concat",hy="Conv2D",PS="Conv2DBackpropFilter",dy="Conv2DBackpropInput",py="Conv3D",WS="Conv3DBackpropFilterV2",VS="Conv3DBackpropInputV2",Pm="Cos",Wm="Cosh",US="Cumprod",fy="Cumsum",GS="CropAndResize",HS="DenseBincount",qS="DepthToSpace",my="DepthwiseConv2dNative",jS="DepthwiseConv2dNativeBackpropFilter",KS="DepthwiseConv2dNativeBackpropInput",YW="Diag",gy="Dilation2D",XS="Dilation2DBackpropInput",YS="Dilation2DBackpropFilter",Vm="RealDiv",ZW="Einsum",Um="Elu",ZS="EluGrad",Gm="Erf",xy="Equal",Hm="Exp",by="ExpandDims",qm="Expm1",JS="FFT",QS="Fill",tN="FlipLeftRight",jm="Floor",Km="FloorDiv",yy="FusedBatchNorm",wy="GatherV2",JW="GatherNd",vy="Greater",Xm="GreaterEqual",Ym="Identity",eN="IFFT",nN="Imag",Zm="IsFinite",Jm="IsInf",Qm="IsNan",ky="LeakyRelu",Iy="Less",Cy="LessEqual",QW="LinSpace",tg="Log",eg="Log1p",$y="LogicalAnd",Sy="LogicalNot",Ny="LogicalOr",EAt="LogSoftmax",Ey="LRN",sN="LRNGrad",Dy="Max",ng="Maximum",Ty="MaxPool",rN="MaxPoolGrad",Ay="MaxPool3D",iN="MaxPool3DGrad",tV="MaxPoolWithArgmax",Fy="Mean",Ry="Min",sg="Minimum",_y="MirrorPad",rg="Mod",eV="Multinomial",ig="Multiply",My="Neg",Oy="NotEqual",oN="NonMaxSuppressionV3",aN="NonMaxSuppressionV4",uN="NonMaxSuppressionV5",Ly="OnesLike",zy="OneHot",By="Pack",Py="PadV2",og="Pow",Wy="Prelu",Vy="Prod",nV="RaggedGather",sV="RaggedRange",rV="RaggedTensorToTensor",lN="Range",cN="Real",ag="Reciprocal",ug="Relu",Uy="Reshape",Gy="ResizeNearestNeighbor",hN="ResizeNearestNeighborGrad",Hy="ResizeBilinear",dN="ResizeBilinearGrad",lg="Relu6",qy="Reverse",cg="Round",hg="Rsqrt",iV="ScatterNd",oV="SearchSorted",jy="Select",dg="Selu",Ky="Slice",pg="Sin",fg="Sinh",mg="Sign",gg="Sigmoid",xg="Softplus",bg="Sqrt",Xy="Sum",Yy="SpaceToBatchND",Zy="SplitV",Jy="Softmax",pN="SparseFillEmptyRows",fN="SparseReshape",mN="SparseSegmentMean",gN="SparseSegmentSum",aV="SparseToDense",yg="SquaredDifference",xN="Square",bN="StridedSlice",yN="StringNGrams",wN="StringSplit",vN="StringToHashBucketFast",wg="Sub",vg="Tan",kg="Tanh",Ig="Tile",kN="TopK",IN="Transform",pd="Transpose",CN="Unique",Qy="Unpack",tw="UnsortedSegmentSum",ew="ZerosLike",Cg="Step",DAt="FromPixels",$N="RotateWithOffset",nw="_FusedMatMul",sw="FusedConv2D",uV="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function li(...e){pt().getBool("IS_TEST")||pt().getBool("PROD")||console.warn(...e)}function TAt(...e){pt().getBool("IS_TEST")||pt().getBool("PROD")||console.log(...e)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rw=FS("kernelRegistry",()=>new Map),SN=FS("gradRegistry",()=>new Map);function lV(e,t){const n=pV(e,t);return rw.get(n)}function cV(e){return SN.get(e)}function hV(e){const t=rw.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[i,o]=r,[a]=i.split("_");a===e&&n.push(o)}return n}function dV(e){const{kernelName:t,backendName:n}=e,s=pV(t,n);rw.has(s)&&li(`The kernel '${t}' for backend '${n}' is already registered`),rw.set(s,e)}function AAt(e){const{kernelName:t}=e;SN.has(t)&&pt().getBool("DEBUG")&&li(`Overriding the gradient for '${t}'`),SN.set(t,e)}function pV(e,t){return`${t}_${e}`}var oc=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function FAt(e){if(e.__esModule)return e;var t=e.default;if(typeof t=="function"){var n=function s(){if(this instanceof s){var r=[null];r.push.apply(r,arguments);var i=Function.bind.apply(t,r);return new i}return t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach(function(s){var r=Object.getOwnPropertyDescriptor(e,s);Object.defineProperty(n,s,r.get?r:{enumerable:!0,get:function(){return e[s]}})}),n}var NN=mn,Ri=null;try{Ri=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function mn(e,t,n){this.low=e|0,this.high=t|0,this.unsigned=!!n}mn.prototype.__isLong__,Object.defineProperty(mn.prototype,"__isLong__",{value:!0});function Vr(e){return(e&&e.__isLong__)===!0}mn.isLong=Vr;var fV={},mV={};function ac(e,t){var n,s,r;return t?(e>>>=0,(r=0<=e&&e<256)&&(s=mV[e],s)?s:(n=gn(e,(e|0)<0?-1:0,!0),r&&(mV[e]=n),n)):(e|=0,(r=-128<=e&&e<128)&&(s=fV[e],s)?s:(n=gn(e,e<0?-1:0,!1),r&&(fV[e]=n),n))}mn.fromInt=ac;function _i(e,t){if(isNaN(e))return t?uc:Mi;if(t){if(e<0)return uc;if(e>=xV)return kV}else{if(e<=-bV)return Ur;if(e+1>=bV)return vV}return e<0?_i(-e,t).neg():gn(e%fd|0,e/fd|0,t)}mn.fromNumber=_i;function gn(e,t,n){return new mn(e,t,n)}mn.fromBits=gn;var iw=Math.pow;function EN(e,t,n){if(e.length===0)throw Error("empty string");if(e==="NaN"||e==="Infinity"||e==="+Infinity"||e==="-Infinity")return Mi;if(typeof t=="number"?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return EN(e.substring(1),t,n).neg();for(var r=_i(iw(n,8)),i=Mi,o=0;o<e.length;o+=8){var a=Math.min(8,e.length-o),u=parseInt(e.substring(o,o+a),n);if(a<8){var l=_i(iw(n,a));i=i.mul(l).add(_i(u))}else i=i.mul(r),i=i.add(_i(u))}return i.unsigned=t,i}mn.fromString=EN;function vo(e,t){return typeof e=="number"?_i(e,t):typeof e=="string"?EN(e,t):gn(e.low,e.high,typeof t=="boolean"?t:e.unsigned)}mn.fromValue=vo;var gV=1<<16,RAt=1<<24,fd=gV*gV,xV=fd*fd,bV=xV/2,yV=ac(RAt),Mi=ac(0);mn.ZERO=Mi;var uc=ac(0,!0);mn.UZERO=uc;var md=ac(1);mn.ONE=md;var wV=ac(1,!0);mn.UONE=wV;var DN=ac(-1);mn.NEG_ONE=DN;var vV=gn(-1,2147483647,!1);mn.MAX_VALUE=vV;var kV=gn(-1,-1,!0);mn.MAX_UNSIGNED_VALUE=kV;var Ur=gn(0,-2147483648,!1);mn.MIN_VALUE=Ur;var Ot=mn.prototype;Ot.toInt=function(){return this.unsigned?this.low>>>0:this.low},Ot.toNumber=function(){return this.unsigned?(this.high>>>0)*fd+(this.low>>>0):this.high*fd+(this.low>>>0)},Ot.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Ur)){var n=_i(t),s=this.div(n),r=s.mul(n).sub(this);return s.toString(t)+r.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var i=_i(iw(t,6),this.unsigned),o=this,a="";;){var u=o.div(i),l=o.sub(u.mul(i)).toInt()>>>0,c=l.toString(t);if(o=u,o.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},Ot.getHighBits=function(){return this.high},Ot.getHighBitsUnsigned=function(){return this.high>>>0},Ot.getLowBits=function(){return this.low},Ot.getLowBitsUnsigned=function(){return this.low>>>0},Ot.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Ur)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,n=31;n>0&&!(t&1<<n);n--);return this.high!=0?n+33:n+1},Ot.isZero=function(){return this.high===0&&this.low===0},Ot.eqz=Ot.isZero,Ot.isNegative=function(){return!this.unsigned&&this.high<0},Ot.isPositive=function(){return this.unsigned||this.high>=0},Ot.isOdd=function(){return(this.low&1)===1},Ot.isEven=function(){return(this.low&1)===0},Ot.equals=function(t){return Vr(t)||(t=vo(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low},Ot.eq=Ot.equals,Ot.notEquals=function(t){return!this.eq(t)},Ot.neq=Ot.notEquals,Ot.ne=Ot.notEquals,Ot.lessThan=function(t){return this.comp(t)<0},Ot.lt=Ot.lessThan,Ot.lessThanOrEqual=function(t){return this.comp(t)<=0},Ot.lte=Ot.lessThanOrEqual,Ot.le=Ot.lessThanOrEqual,Ot.greaterThan=function(t){return this.comp(t)>0},Ot.gt=Ot.greaterThan,Ot.greaterThanOrEqual=function(t){return this.comp(t)>=0},Ot.gte=Ot.greaterThanOrEqual,Ot.ge=Ot.greaterThanOrEqual,Ot.compare=function(t){if(Vr(t)||(t=vo(t)),this.eq(t))return 0;var n=this.isNegative(),s=t.isNegative();return n&&!s?-1:!n&&s?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},Ot.comp=Ot.compare,Ot.negate=function(){return!this.unsigned&&this.eq(Ur)?Ur:this.not().add(md)},Ot.neg=Ot.negate,Ot.add=function(t){Vr(t)||(t=vo(t));var n=this.high>>>16,s=this.high&65535,r=this.low>>>16,i=this.low&65535,o=t.high>>>16,a=t.high&65535,u=t.low>>>16,l=t.low&65535,c=0,h=0,d=0,p=0;return p+=i+l,d+=p>>>16,p&=65535,d+=r+u,h+=d>>>16,d&=65535,h+=s+a,c+=h>>>16,h&=65535,c+=n+o,c&=65535,gn(d<<16|p,c<<16|h,this.unsigned)},Ot.subtract=function(t){return Vr(t)||(t=vo(t)),this.add(t.neg())},Ot.sub=Ot.subtract,Ot.multiply=function(t){if(this.isZero())return Mi;if(Vr(t)||(t=vo(t)),Ri){var n=Ri.mul(this.low,this.high,t.low,t.high);return gn(n,Ri.get_high(),this.unsigned)}if(t.isZero())return Mi;if(this.eq(Ur))return t.isOdd()?Ur:Mi;if(t.eq(Ur))return this.isOdd()?Ur:Mi;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(yV)&&t.lt(yV))return _i(this.toNumber()*t.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,i=this.low>>>16,o=this.low&65535,a=t.high>>>16,u=t.high&65535,l=t.low>>>16,c=t.low&65535,h=0,d=0,p=0,f=0;return f+=o*c,p+=f>>>16,f&=65535,p+=i*c,d+=p>>>16,p&=65535,p+=o*l,d+=p>>>16,p&=65535,d+=r*c,h+=d>>>16,d&=65535,d+=i*l,h+=d>>>16,d&=65535,d+=o*u,h+=d>>>16,d&=65535,h+=s*c+r*l+i*u+o*a,h&=65535,gn(p<<16|f,h<<16|d,this.unsigned)},Ot.mul=Ot.multiply,Ot.divide=function(t){if(Vr(t)||(t=vo(t)),t.isZero())throw Error("division by zero");if(Ri){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var n=(this.unsigned?Ri.div_u:Ri.div_s)(this.low,this.high,t.low,t.high);return gn(n,Ri.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?uc:Mi;var s,r,i;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return uc;if(t.gt(this.shru(1)))return wV;i=uc}else{if(this.eq(Ur)){if(t.eq(md)||t.eq(DN))return Ur;if(t.eq(Ur))return md;var o=this.shr(1);return s=o.div(t).shl(1),s.eq(Mi)?t.isNegative()?md:DN:(r=this.sub(t.mul(s)),i=s.add(r.div(t)),i)}else if(t.eq(Ur))return this.unsigned?uc:Mi;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=Mi}for(r=this;r.gte(t);){s=Math.max(1,Math.floor(r.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(s)/Math.LN2),u=a<=48?1:iw(2,a-48),l=_i(s),c=l.mul(t);c.isNegative()||c.gt(r);)s-=u,l=_i(s,this.unsigned),c=l.mul(t);l.isZero()&&(l=md),i=i.add(l),r=r.sub(c)}return i},Ot.div=Ot.divide,Ot.modulo=function(t){if(Vr(t)||(t=vo(t)),Ri){var n=(this.unsigned?Ri.rem_u:Ri.rem_s)(this.low,this.high,t.low,t.high);return gn(n,Ri.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))},Ot.mod=Ot.modulo,Ot.rem=Ot.modulo,Ot.not=function(){return gn(~this.low,~this.high,this.unsigned)},Ot.and=function(t){return Vr(t)||(t=vo(t)),gn(this.low&t.low,this.high&t.high,this.unsigned)},Ot.or=function(t){return Vr(t)||(t=vo(t)),gn(this.low|t.low,this.high|t.high,this.unsigned)},Ot.xor=function(t){return Vr(t)||(t=vo(t)),gn(this.low^t.low,this.high^t.high,this.unsigned)},Ot.shiftLeft=function(t){return Vr(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?gn(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):gn(0,this.low<<t-32,this.unsigned)},Ot.shl=Ot.shiftLeft,Ot.shiftRight=function(t){return Vr(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?gn(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):gn(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},Ot.shr=Ot.shiftRight,Ot.shiftRightUnsigned=function(t){if(Vr(t)&&(t=t.toInt()),t&=63,t===0)return this;var n=this.high;if(t<32){var s=this.low;return gn(s>>>t|n<<32-t,n>>>t,this.unsigned)}else return t===32?gn(n,0,this.unsigned):gn(n>>>t-32,0,this.unsigned)},Ot.shru=Ot.shiftRightUnsigned,Ot.shr_u=Ot.shiftRightUnsigned,Ot.toSigned=function(){return this.unsigned?gn(this.low,this.high,!1):this},Ot.toUnsigned=function(){return this.unsigned?this:gn(this.low,this.high,!0)},Ot.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},Ot.toBytesLE=function(){var t=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]},Ot.toBytesBE=function(){var t=this.high,n=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,n>>>24,n>>>16&255,n>>>8&255,n&255]},mn.fromBytes=function(t,n,s){return s?mn.fromBytesLE(t,n):mn.fromBytesBE(t,n)},mn.fromBytesLE=function(t,n){return new mn(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,n)},mn.fromBytesBE=function(t,n){return new mn(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],n)};var _At=Q7({__proto__:null,default:NN},[NN]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lc=NN||_At;function ow(e){return lc.fromString(e,!0,16)}const IV=ow("c3a5c85c97cb3127"),cc=ow("b492b66fbe98f273"),ir=ow("9ae16a3b2f90404f");function TN(e){return e.xor(e.shru(47))}function CV(e,t,n){const s=e.slice(t,t+n);return lc.fromBytes(Array.from(s),!0,!0)}function rn(e,t){return CV(e,t,8)}function $V(e,t){return CV(e,t,4)}function ms(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Fu(e,t,n=ow("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function MAt(e,t,n,s,r,i){r=r.add(e),i=ms(i.add(r).add(s),21);const o=r;return r=r.add(t),r=r.add(n),i=i.add(ms(r,44)),[r.add(s),i.add(o)]}function aw(e,t,n,s){return MAt(rn(e,t),rn(e,t+8),rn(e,t+16),rn(e,t+24),n,s)}function OAt(e,t=e.length){if(t>=8){const n=ir.add(t*2),s=rn(e,0).add(ir),r=rn(e,t-8),i=ms(r,37).mul(n).add(s),o=ms(s,25).add(r).mul(n);return Fu(i,o,n)}if(t>=4){const n=ir.add(t*2),s=$V(e,0);return Fu(s.shl(3).add(t),$V(e,t-4),n)}if(t>0){const n=e[0],s=e[t>>1],r=e[t-1],i=n+(s<<8),o=t+(r<<2);return TN(ir.mul(i).xor(IV.mul(o))).mul(ir)}return ir}function LAt(e,t=e.length){const n=ir.add(t*2),s=rn(e,0).mul(cc),r=rn(e,8),i=rn(e,t-8).mul(n),o=rn(e,t-16).mul(ir);return Fu(ms(s.add(r),43).add(ms(i,30)).add(o),s.add(ms(r.add(ir),18)).add(i),n)}function zAt(e,t=e.length){const n=ir.add(t*2),s=rn(e,0).mul(ir),r=rn(e,8),i=rn(e,t-8).mul(n),o=rn(e,t-16).mul(ir),a=ms(s.add(r),43).add(ms(i,30)).add(o),u=Fu(a,s.add(ms(r.add(ir),18)).add(i),n),l=rn(e,16).mul(n),c=rn(e,24),h=a.add(rn(e,t-32)).mul(n),d=u.add(rn(e,t-24)).mul(n);return Fu(ms(l.add(c),43).add(ms(h,30)).add(d),l.add(ms(c.add(s),18)).add(h),n)}function BAt(e,t=e.length){const n=lc.fromNumber(81,!0);if(t<=32)return t<=16?OAt(e,t):LAt(e,t);if(t<=64)return zAt(e,t);let s=n,r=n.mul(cc).add(113),i=TN(r.mul(ir).add(113)).mul(ir),o=[lc.UZERO,lc.UZERO],a=[lc.UZERO,lc.UZERO];s=s.mul(ir).add(rn(e,0));let u=0;const l=(t-1>>6)*64,c=l+(t-1&63)-63;do s=ms(s.add(r).add(o[0]).add(rn(e,u+8)),37).mul(cc),r=ms(r.add(o[1]).add(rn(e,u+48)),42).mul(cc),s=s.xor(a[1]),r=r.add(o[0]).add(rn(e,u+40)),i=ms(i.add(a[0]),33).mul(cc),o=aw(e,u,o[1].mul(cc),s.add(a[0])),a=aw(e,u+32,i.add(a[1]),r.add(rn(e,u+16))),[i,s]=[s,i],u+=64;while(u!==l);const h=cc.add(i.and(255).shl(1));return u=c,a[0]=a[0].add(t-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),s=ms(s.add(r).add(o[0]).add(rn(e,u+8)),37).mul(h),r=ms(r.add(o[1]).add(rn(e,u+48)),42).mul(h),s=s.xor(a[1].mul(9)),r=r.add(o[0].mul(9).add(rn(e,u+40))),i=ms(i.add(a[0]),33).mul(h),o=aw(e,u,o[1].mul(h),s.add(a[0])),a=aw(e,u+32,i.add(a[1]),r.add(rn(e,u+16))),[i,s]=[s,i],Fu(Fu(o[0],a[0],h).add(TN(r).mul(IV)).add(i),Fu(o[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ru(e,t){return t==="string"?_u(e):hc([e],t)}function PAt(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function hc(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=dc(e)),pt().getBool("DEBUG")&&gAt(e,t),PAt(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){const n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function kr(){return pt().platform.now()}function _u(e,t="utf-8"){return t=t||"utf-8",pt().platform.encode(e,t)}function Mu(e,t="utf-8"){return t=t||"utf-8",pt().platform.decode(e,t)}function ko(e){return pt().platform.isTypedArray(e)}function dc(e,t=[],n=!1){if(t==null&&(t=[]),typeof e=="boolean"||typeof e=="number"||typeof e=="string"||TS(e)||e==null||ko(e)&&n)t.push(e);else if(Array.isArray(e)||ko(e))for(let s=0;s<e.length;++s)dc(e[s],t,n);else{let s=-1;for(const r of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)dc(e[r],t,n)}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WAt{constructor(t,n){this.backendTimer=t,this.logger=n,n==null&&(this.logger=new UAt)}profileKernel(t,n,s){let r;const i=()=>{r=s()};let o;const a=kr();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(i);else{i();for(const l of r)l.dataSync();o=Promise.resolve({kernelMs:kr()-a})}if(pt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<r.length;l++){const c=r[l];c.data().then(h=>{VAt(h,c.dtype,t)})}return{kernelName:t,outputs:r,inputs:n,timeMs:o.then(l=>l.kernelMs),extraInfo:o.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:n,outputs:s,timeMs:r,inputs:i,extraInfo:o}=t;s.forEach(a=>{Promise.all([a.data(),r,o]).then(u=>{this.logger.logKernelProfile(n,a,u[0],u[1],i,u[2])})})}}function VAt(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){const r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class UAt{logKernelProfile(t,n,s,r,i,o){const a=typeof r=="number"?cd(`${r}ms`,9):r.error,u=cd(t,25),l=n.rank,c=n.size,h=cd(n.shape.toString(),14);let d="";for(const p in i){const f=i[p];if(f!=null){const m=f.shape||n.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${u}	%c${a}	%c${l}D ${h}	%c${c}	%c${d}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GAt(e,t,n){const s={},r={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<e.length;u++){const l=e[u],c=l.inputs;for(const h in c){const d=c[h];let p=!1;for(let f=0;f<t.length;f++)if(s[d.id]){l.outputs.forEach(m=>s[m.id]=!0),p=!0,r[l.id]=!0;break}if(p)break}}const i={};i[n.id]=!0;const o={};for(let u=e.length-1;u>=0;u--){const l=e[u],c=l.inputs;for(let h=0;h<l.outputs.length;h++)if(i[l.outputs[h].id]){for(const d in c)i[c[d].id]=!0,o[l.id]=!0;break}}const a=[];for(let u=0;u<e.length;u++){const l=e[u];if(r[l.id]&&o[l.id]){const c={};for(const d in l.inputs){const p=l.inputs[d];s[p.id]&&(c[d]=p)}const h=Object.assign({},l);h.inputs=c,h.outputs=l.outputs,a.push(h)}}return a}function HAt(e,t,n,s){for(let r=t.length-1;r>=0;r--){const i=t[r],o=[];if(i.outputs.forEach(u=>{const l=e[u.id];l!=null?o.push(l):o.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(o);for(const u in i.inputs){if(!(u in a))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(a)}.`);const l=n(()=>a[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);const c=i.inputs[u];if(!We(l.shape,c.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${c.shape}'`);if(e[c.id]==null)e[c.id]=l;else{const h=e[c.id];e[c.id]=s(h,l),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SV=20,$g=3,AN=7;function qAt(e,t,n,s){const r=ee(t),i=jAt(e,t,n,r),o=t.length,a=uw(e,t,n,r,i),u=["Tensor"];return s&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${o}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(a.map(l=>"    "+l).join(`
`)),u.join(`
`)}function jAt(e,t,n,s){const r=xt(t),i=s[s.length-1],o=new Array(i).fill(0),a=t.length,u=n==="complex64"?Ng(e):e;if(a>1)for(let l=0;l<r/i;l++){const c=l*i;for(let h=0;h<i;h++)o[h]=Math.max(o[h],Sg(u[c+h],0,n).length)}return o}function Sg(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(AN))} + ${parseFloat(e[1].toFixed(AN))}j`:Em(e)?s=`'${e}'`:n==="bool"?s=NV(e):s=parseFloat(e.toFixed(AN)).toString(),cd(s,t)}function NV(e){return e===0?"false":"true"}function uw(e,t,n,s,r,i=!0){const o=n==="complex64"?2:1,a=t[0],u=t.length;if(u===0){if(n==="complex64"){const m=Ng(e);return[Sg(m[0],0,n)]}return n==="bool"?[NV(e[0])]:[e[0].toString()]}if(u===1){if(a>SV){const g=$g*o;let x=Array.from(e.slice(0,g)),b=Array.from(e.slice((a-$g)*o,a*o));return n==="complex64"&&(x=Ng(x),b=Ng(b)),["["+x.map((w,y)=>Sg(w,r[y],n)).join(", ")+", ..., "+b.map((w,y)=>Sg(w,r[a-$g+y],n)).join(", ")+"]"]}return["["+(n==="complex64"?Ng(e):Array.from(e)).map((g,x)=>Sg(g,r[x],n)).join(", ")+"]"]}const l=t.slice(1),c=s.slice(1),h=s[0]*o,d=[];if(a>SV){for(let m=0;m<$g;m++){const g=m*h,x=g+h;d.push(...uw(e.slice(g,x),l,n,c,r,!1))}d.push("...");for(let m=a-$g;m<a;m++){const g=m*h,x=g+h;d.push(...uw(e.slice(g,x),l,n,c,r,m===a-1))}}else for(let m=0;m<a;m++){const g=m*h,x=g+h;d.push(...uw(e.slice(g,x),l,n,c,r,m===a-1))}const p=u===2?",":"";d[0]="["+(a>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Ng(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Us{constructor(t,n,s){if(this.dtype=n,this.shape=t.slice(),this.size=xt(t),s!=null){const r=s.length;L(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Hn(n,this.size),this.strides=ee(t)}set(t,...n){n.length===0&&(n=[0]),L(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const s=this.locToIndex(n);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let n=0;for(const r of t){if(r<0||r>=this.shape[n]){const i=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(i)}n++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let n=t[t.length-1];for(let s=0;s<t.length-1;++s)n+=this.strides[s]*t[s];return n}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const n=new Array(this.shape.length);for(let s=0;s<n.length-1;++s)n[s]=Math.floor(t/this.strides[s]),t-=n[s]*this.strides[s];return n[n.length-1]=t,n}get rank(){return this.shape.length}toTensor(){return Io().makeTensor(this.values,this.shape,this.dtype)}}let Io=null,gd=null;function KAt(e){Io=e}function XAt(e){gd=e}class qn{constructor(t,n,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=n||"float32",this.size=xt(t),this.strides=ee(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return gd.buffer(this.shape,this.dtype,t)}bufferSync(){return gd.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return wo(this.shape,t,this.dtype==="complex64")}arraySync(){return wo(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=Io().read(this.dataId);if(this.dtype==="string"){const n=await t;try{return n.map(s=>Mu(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),Io().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=Io().readSync(this.dataId);if(this.dtype==="string")try{return t.map(n=>Mu(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Io().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Io().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return gd.print(this,t)}clone(){return this.throwIfDisposed(),gd.clone(this)}toString(t=!1){const n=this.dataSync();return qAt(n,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),gd.cast(this,t)}variable(t=!0,n,s){return this.throwIfDisposed(),Io().makeVariable(this,t,n,s)}}Object.defineProperty(qn,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function gt(){return FS("Tensor",()=>qn)}gt();class lw extends qn{constructor(t,n,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=n,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!We(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Io().disposeTensor(this),this.dataId=t.dataId,Io().incRef(this,null)}dispose(){Io().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(lw,Symbol.hasInstance,{value:e=>e instanceof qn&&e.assign!=null&&e.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var EV;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(EV||(EV={}));var FN;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(FN||(FN={}));var RN;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(RN||(RN={}));var _N;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(_N||(_N={}));var MN;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(MN||(MN={}));const YAt={float32:_N,int32:FN,bool:RN,complex64:MN};function Gr(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return YAt[e][t]}function ON(e){return Gr(e,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _n(e,t){if(e.dtype===t.dtype)return[e,t];const n=Gr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function DV(e){const t=[];return TV(e,t,new Set),t}function TV(e,t,n){if(e==null)return;if(e instanceof qn){t.push(e);return}if(!ZAt(e))return;const s=e;for(const r in s){const i=s[r];n.has(i)||(n.add(i),TV(i,t,n))}}function ZAt(e){return Array.isArray(e)||typeof e=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(e){return e.kernelName!=null}class AV{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class xd{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new AV}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let n=0;n<t.length;n++){const s=t[n];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:n}=this.initializeBackend(t);if(n)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,n,s=1){return t in this.registryFactory?(li(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:n,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:n,asyncInit:s}=this.initializeBackend(t);if(!(s?await n:n))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new WAt(this.backendInstance),!0}setupRegisteredKernels(){hV(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){hV(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const n=this.registryFactory[t];if(n==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=n.factory();if(s&&!(s instanceof kS)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,i=s.then(o=>r<this.pendingBackendInitId?!1:(this.registry[t]=o,this.pendingBackendInit=null,!0)).catch(o=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,li(`Initialization of backend ${t} failed`),li(o.stack||o.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return li(`Initialization of backend ${t} failed`),li(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,n)=>this.registryFactory[n].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let n=0;n<t.length;n++){const s=t[n],{success:r,asyncInit:i}=this.initializeBackend(s);if(i||r)return{name:s,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,n){const s=this.state.tensorInfo.get(n),r=s.backend,i=this.readSync(n),o=r.refCount(n);r.disposeData(n,!0),s.backend=t,t.move(n,i,s.shape,s.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,n){let s=null;if(n==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");n=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=n(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(t,n,s){t();try{const r=s();return n(),r}catch(r){throw n(),r}}nextTensorId(){return xd.nextTensorId++}nextVariableId(){return xd.nextVariableId++}clone(t){const n=Z.runKernel(Ym,{x:t}),s={x:t},r=o=>({x:()=>{const a="float32",u={x:o},l={dtype:a};return Z.runKernel(Lm,u,l)}}),i=[];return this.addTapeNode(this.state.activeScope.name,s,[n],r,i,{}),n}runKernel(t,n,s){if(this.backendName==null&&this.backend,!(lV(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:n,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,n,s){const r=this.backend.numDataIds();let i=0;s.forEach(u=>{i+=u.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-n-i-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${t}'`)}runKernelFunc(t){let n,s=[];const r=this.isTapeOn(),i=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let u;const l=LN(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(LN(t)){const{kernelName:f,inputs:m,attrs:g}=t;this.backendName==null&&this.backend;const x=lV(f,this.backendName);L(x!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const b=this.backend.numDataIds();u=x.kernelFunc({inputs:m,attrs:g,backend:this.backend});const w=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,w);const y=w.map(v=>v.rank!=null?v:this.makeTensorFromTensorInfo(v));if(r){const v=this.getTensorsForGradient(f,m,y);s=this.saveTensorsForBackwardMode(v)}return y}}else{const{forwardFunc:f}=t,m=g=>{r&&(s=g.map(x=>this.keep(this.clone(x))))};a=()=>{const g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,m));const x=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,x),x}}const{inputs:c,attrs:h}=t,d=LN(t)?null:t.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=a():(p=this.profiler.profileKernel(l,c,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),n=p.outputs)}),r&&this.addTapeNode(l,c,n,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:n.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?n:n[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,n,s){const r=cV(t);if(r!=null){const i=r.inputsToSave||[],o=r.outputsToSave||[];let a;r.saveAllInputs?(L(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(n).map(l=>n[l])):a=i.map(l=>n[l]);const u=s.filter((l,c)=>o[c]);return a.concat(u)}return[]}makeTensor(t,n,s,r){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let i=t;s==="string"&&Em(t[0])&&(i=t.map(u=>_u(u)));const o=r.write(i,n,s),a=new qn(n,s,o,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const u=this.state.tensorInfo.get(o),l=bAt(i);this.state.numBytes+=l-u.bytes,u.bytes=l}return a}makeTensorFromDataId(t,n,s,r){s=s||"float32";const i={dataId:t,shape:n,dtype:s};return this.makeTensorFromTensorInfo(i,r)}makeTensorFromTensorInfo(t,n){const{dataId:s,shape:r,dtype:i}=t,o=new qn(r,i,s,this.nextTensorId());return this.trackTensor(o,n),o}makeVariable(t,n=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==t.dtype&&(t=t.cast(r));const i=new lw(t,n,s,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(t,n){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*ey(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:n||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof lw||this.track(t)}incRef(t,n){this.trackTensor(t,n),this.backend.incRef(t.dataId)}removeDataId(t,n){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===n&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const n=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*ey(t.dtype);this.state.numBytes-=s}n.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,n.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const n=this.state.registeredVariables[t];this.disposeVariable(n)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const n=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,n,s,r,i,o){const a={id:this.state.nextTapeNodeId++,kernelName:t,inputs:n,outputs:s,saved:i},u=cV(t);u!=null&&(r=u.gradFunc),r!=null&&(a.gradient=l=>(l=l.map((c,h)=>{if(c==null){const d=s[h],p=Vs(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),r(l.length>1?l:l[0],i,o))),this.state.activeTape.push(a)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(n.name=t),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(t){const n=DV(t),s=new Set(n.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const o=this.state.activeScope.track[i];!o.kept&&!s.has(o.id)&&o.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(i=>{!i.kept&&i.scopeId===r.id&&this.track(i)})}gradients(t,n,s,r=!1){if(L(n.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));L(i instanceof qn,()=>"The result y returned by f() must be a tensor.");const o=GAt(this.state.activeTape,n,i);if(!r&&o.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[i.id]=s??JAt(i.shape),HAt(a,o,l=>this.tidy(l),QAt);const u=n.map(l=>a[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(const c of l.saved)c.dispose()}),this.state.activeTape=null),{value:i,grads:u}})}customGrad(t){return L(NS(t),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{L(n.every(a=>a instanceof qn),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};n.forEach((a,u)=>{r[u]=a});const i=(a,u)=>(s=t(...n,u),L(s.value instanceof qn,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),L(NS(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),o=(a,u)=>{const l=s.gradFunc(a,u),c=Array.isArray(l)?l:[l];L(c.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),L(c.every(d=>d instanceof qn),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:i,backwardsFunc:o,inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,n){return this.state.tensorInfo.get(t).backend.readToGPU(t,n)}async time(t){const n=kr(),s=await this.backend.time(t);return s.wallMs=kr()-n,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new AV;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}xd.nextTensorId=0,xd.nextVariableId=0;function JAt(e){const t=DS(xt(e),"float32");return Z.makeTensor(t,e,"float32")}function FV(){const e=KW();if(e._tfengine==null){const t=new vAt(e);e._tfengine=new xd(t)}return $At(e._tfengine.ENV),KAt(()=>e._tfengine),e._tfengine}const Z=FV();function QAt(e,t){const n={a:e,b:t};return Z.runKernel(dd,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tFt(){return typeof navigator<"u"&&navigator!=null}function RV(e){if(e||tFt()){if(e||(e=navigator),e.product==="ReactNative")return!0;const t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){const n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function _V(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ci=pt();ci.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ci.registerFlag("IS_BROWSER",()=>_V()),ci.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),ci.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ci.registerFlag("PROD",()=>!1),ci.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ci.getBool("DEBUG")),ci.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ci.registerFlag("IS_TEST",()=>!1),ci.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),ci.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),ci.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),ci.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eg(e,t){let n=e;if(ko(e))return t==="string"?[]:[e.length];if(typeof e=="object"){if("texture"in e){const i=e.channels||"RGBA";return[e.height,e.width*i.length]}else if("buffer"in e&&!(e.buffer instanceof ArrayBuffer))return[e.buffer.size/(t==null?4:ey(t))]}if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||ko(n)&&t!=="string";)r.push(n.length),n=n[0];return Array.isArray(e)&&pt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&MV(e,r,[]),r}function MV(e,t,n){if(n=n||[],!Array.isArray(e)&&!ko(e)){L(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}L(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),L(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const s=t.slice(1);for(let r=0;r<e.length;++r)MV(e[r],s,n.concat(r))}function OV(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function P(e,t,n,s="numeric"){if(e instanceof qn)return OV(s,e.dtype,t,n),e;let r=Dm(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),OV(s,r,t,n),e==null||!ko(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){const u=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${u}'`)}const i=Eg(e,r);!ko(e)&&!Array.isArray(e)&&(e=[e]);const a=r!=="string"?hc(e,r):dc(e,[],!0);return Z.makeTensor(a,i,r)}function LV(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((i,o)=>P(i,`${t}[${o}]`,n,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eFt="__op";function J(e){const t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+eFt;const r=(...i)=>{Z.startScope(n);try{const o=s(...i);return TS(o)&&console.error("Cannot return a Promise inside of tidy."),Z.endScope(o),o}catch(o){throw Z.endScope(null),o}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nFt(e,t){const n=P(e,"real","complex"),s=P(t,"imag","complex");Fi(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return Z.runKernel(BS,r)}const pc=J({complex_:nFt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dg(e,t,n,s){if(s==null)s=Dm(e);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof e=="object"&&("texture"in e||"buffer"in e&&!(e.buffer instanceof ArrayBuffer))){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return Z.backend.createTensorFromGPUData(e,t||n,s)}if(!ko(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Pa(t);const r=xt(t),i=xt(n);L(r===i,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${i}`);for(let o=0;o<n.length;++o){const a=n[o],u=o===n.length-1?a!==xt(t.slice(o)):!0;L(n[o]===t[o]||!u,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!ko(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?hc(e,s):dc(e,[],!0),Z.makeTensor(e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tg(e,t,n){const s=Eg(e,n);return Dg(e,t,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zV={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cw=4;async function BV(e,t){const n=[],s=[],r=Array.isArray(e)?e.map(o=>o.name):Object.keys(e);for(let o=0;o<r.length;++o){const a=r[o],u=Array.isArray(e)?e[o].tensor:e[a];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${u.dtype}`);const l={name:a,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const c=new Promise(async h=>{const d=await u.bytes(),p=d.reduce((g,x)=>g+x.length,0)+cw*d.length,f=new Uint8Array(p);let m=0;for(let g=0;g<d.length;g++){const x=d[g],b=new Uint8Array(new Uint32Array([x.length]).buffer);f.set(b,m),m+=cw,f.set(x,m),m+=x.length}h(f)});s.push(c)}else s.push(u.data());t!=null&&(l.group=t),n.push(l)}const i=await Promise.all(s);return{data:rFt(i),specs:n}}function sFt(e,t){const n={};let s,r=0;for(const i of t){const o=i.name,a=i.dtype,u=i.shape,l=xt(u);let c;if("quantization"in i){const h=i.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${i.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(a!=="float32")throw new Error(`Weight ${i.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${a}.`)}else throw new Error(`Weight ${i.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const d=zV[h.dtype],p=e.slice(r,r+l*d),f=h.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(a==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){c=new Float32Array(f.length);for(let m=0;m<f.length;m++){const g=f[m];c[m]=g*h.scale+h.min}}else if(h.dtype==="float16")s===void 0&&(s=pFt()),c=s(f);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(a==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);c=new Int32Array(f.length);for(let m=0;m<f.length;m++){const g=f[m];c[m]=Math.round(g*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${a}`);r+=l*d}else if(a==="string"){const h=xt(i.shape);c=[];for(let d=0;d<h;d++){const p=new Uint32Array(e.slice(r,r+cw))[0];r+=cw;const f=new Uint8Array(e.slice(r,r+p));c.push(f),r+=p}}else{const h=zV[a],d=e.slice(r,r+l*h);if(a==="float32")c=new Float32Array(d);else if(a==="int32")c=new Int32Array(d);else if(a==="bool")c=new Uint8Array(d);else if(a==="complex64"){c=new Float32Array(d);const p=new Float32Array(c.length/2),f=new Float32Array(c.length/2);for(let x=0;x<p.length;x++)p[x]=c[x*2],f[x]=c[x*2+1];const m=Tg(p,u,"float32"),g=Tg(f,u,"float32");n[o]=pc(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${a}`);r+=l*h}a!=="complex64"&&(n[o]=Tg(c,u,a))}return n}function rFt(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach(i=>{if(t+=i.byteLength,n.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const s=new Uint8Array(t);let r=0;return n.forEach(i=>{s.set(new Uint8Array(i.buffer),r),r+=i.byteLength}),s.buffer}const zN=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function PV(e){return zN?Buffer.byteLength(e):new Blob([e]).size}function iFt(e){if(zN)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function oFt(e){if(zN){const s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function WV(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});const n=new Uint8Array(t);let s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function VV(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(n.initializerSignature=e.initializerSignature),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}function aFt(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(s.trainingConfig=e.trainingConfig),e.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return e.signature!=null&&(s.signature=e.signature),e.userDefinedMetadata!=null&&(s.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(s.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(s.initializerSignature=e.initializerSignature),s}async function uFt(e,t){let n,s;return e.weightsManifest!=null&&([n,s]=await t(e.weightsManifest)),aFt(e,n,s)}function hw(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:PV(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:PV(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function lFt(e){const t=[];for(const n of e)t.push(...n.weights);return t}function cFt(){const e=n=>{let s=n<<13,r=0;for(;!(s&8388608);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function hFt(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function dFt(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function pFt(){const e=cFt(),t=hFt(),n=dFt();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let o=0;o<s.length;o++){const a=s[o],u=e[n[a>>10]+(a&1023)]+t[a>>10];i[o]=u}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ts{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return ts.instance==null&&(ts.instance=new ts),ts.instance}static registerSaveRouter(t){ts.getInstance().saveRouters.push(t)}static registerLoadRouter(t){ts.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return ts.getHandlers(t,"save")}static getLoadHandlers(t,n){return ts.getHandlers(t,"load",n)}static getHandlers(t,n,s){const r=[];return(n==="load"?ts.getInstance().loadRouters:ts.getInstance().saveRouters).forEach(o=>{const a=o(t,s);a!==null&&r.push(a)}),r}}const fFt=e=>ts.getSaveHandlers(e),mFt=(e,t)=>ts.getLoadHandlers(e,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BN="tensorflowjs",PN=1,fc="models_store",Ou="model_info_store";function UV(){if(!pt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function WN(e){const t=e.result;t.createObjectStore(fc,{keyPath:"modelPath"}),t.createObjectStore(Ou,{keyPath:"modelPath"})}class mc{constructor(t){if(this.indexedDB=UV(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,n){return new Promise((s,r)=>{const i=this.indexedDB.open(BN,PN);i.onupgradeneeded=()=>WN(i),i.onsuccess=()=>{const o=i.result;if(n==null){const a=o.transaction(fc,"readonly"),l=a.objectStore(fc).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return o.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(l.result.modelArtifacts)},l.onerror=c=>(o.close(),r(l.error)),a.oncomplete=()=>o.close()}else{const a=hw(n),u=o.transaction(Ou,"readwrite");let l=u.objectStore(Ou);const c=l.put({modelPath:this.modelPath,modelArtifactsInfo:a});let h;c.onsuccess=()=>{h=o.transaction(fc,"readwrite");const p=h.objectStore(fc).put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:a});p.onsuccess=()=>s({modelArtifactsInfo:a}),p.onerror=f=>{l=u.objectStore(Ou);const m=l.delete(this.modelPath);m.onsuccess=()=>(o.close(),r(p.error)),m.onerror=g=>(o.close(),r(p.error))}},c.onerror=d=>(o.close(),r(c.error)),u.oncomplete=()=>{h==null?o.close():h.oncomplete=()=>o.close()}}},i.onerror=o=>r(i.error)})}}mc.URL_SCHEME="indexeddb://";const GV=e=>pt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(mc.URL_SCHEME)?gFt(e.slice(mc.URL_SCHEME.length)):null;ts.registerSaveRouter(GV),ts.registerLoadRouter(GV);function gFt(e){return new mc(e)}function xFt(e){return e.startsWith(mc.URL_SCHEME)?e.slice(mc.URL_SCHEME.length):e}class bFt{constructor(){this.indexedDB=UV()}async listModels(){return new Promise((t,n)=>{const s=this.indexedDB.open(BN,PN);s.onupgradeneeded=()=>WN(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(Ou,"readonly"),a=i.objectStore(Ou).getAll();a.onsuccess=()=>{const u={};for(const l of a.result)u[l.modelPath]=l.modelArtifactsInfo;t(u)},a.onerror=u=>(r.close(),n(a.error)),i.oncomplete=()=>r.close()},s.onerror=r=>n(s.error)})}async removeModel(t){return t=xFt(t),new Promise((n,s)=>{const r=this.indexedDB.open(BN,PN);r.onupgradeneeded=()=>WN(r),r.onsuccess=()=>{const i=r.result,o=i.transaction(Ou,"readwrite"),a=o.objectStore(Ou),u=a.get(t);let l;u.onsuccess=()=>{if(u.result==null)return i.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const c=a.delete(t),h=()=>{l=i.transaction(fc,"readwrite");const p=l.objectStore(fc).delete(t);p.onsuccess=()=>n(u.result.modelArtifactsInfo),p.onerror=f=>s(u.error)};c.onsuccess=h,c.onerror=d=>(h(),i.close(),s(u.error))}},u.onerror=c=>(i.close(),s(u.error)),o.oncomplete=()=>{l==null?i.close():l.oncomplete=()=>i.close()}},r.onerror=i=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wa="/",bd="tensorflowjs_models",HV="info",yFt="model_topology",wFt="weight_specs",vFt="weight_data",kFt="model_metadata";function qV(e){return{info:[bd,e,HV].join(Wa),topology:[bd,e,yFt].join(Wa),weightSpecs:[bd,e,wFt].join(Wa),weightData:[bd,e,vFt].join(Wa),modelMetadata:[bd,e,kFt].join(Wa)}}function jV(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function IFt(e){const t=e.split(Wa);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Wa)}function CFt(e){return e.startsWith(gc.URL_SCHEME)?e.slice(gc.URL_SCHEME.length):e}class gc{constructor(t){if(!pt().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=qV(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),r=hw(t);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,iFt(t.weightData));const i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch{throw jV(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const a=JSON.parse(i);n.format=a.format,n.generatedBy=a.generatedBy,n.convertedBy=a.convertedBy,a.signature!=null&&(n.signature=a.signature),a.userDefinedMetadata!=null&&(n.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(n.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(n.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(n.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=oFt(o),n}}gc.URL_SCHEME="localstorage://";const KV=e=>pt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(gc.URL_SCHEME)?$Ft(e.slice(gc.URL_SCHEME.length)):null;ts.registerSaveRouter(KV),ts.registerLoadRouter(KV);function $Ft(e){return new gc(e)}class SFt{constructor(){L(pt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),L(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},n=bd+Wa,s=Wa+HV;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);if(i.startsWith(n)&&i.endsWith(s)){const o=IFt(i);t[o]=JSON.parse(this.LS.getItem(i))}}return t}async removeModel(t){t=CFt(t);const n=qV(t);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(n.info));return jV(n),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XV="://";class ra{constructor(){this.managers={}}static getInstance(){return ra.instance==null&&(ra.instance=new ra),ra.instance}static registerManager(t,n){L(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(XV)&&(t=t.slice(0,t.indexOf(XV))),L(t.length>0,()=>"scheme must not be an empty string.");const s=ra.getInstance();L(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=n}static getManager(t){const n=ra.getInstance().managers[t];if(n==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(ra.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NFt{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,n){return fetch(t,n)}now(){return performance.now()}encode(t,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,n){return new TextDecoder(n).decode(t)}setTimeoutCustom(t,n){if(typeof window>"u"||!pt().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,n);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},n),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}}if(pt().get("IS_BROWSER")){pt().setPlatform("browser",new NFt);try{ra.registerManager(gc.URL_SCHEME,new SFt)}catch{}try{ra.registerManager(mc.URL_SCHEME,new bFt)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EFt={importFetch:()=>require("node-fetch")};let VN;class DFt{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return pt().global.fetch!=null?pt().global.fetch(t,n):(VN==null&&(VN=EFt.importFetch()),VN(t,n))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(t)}decode(t,n){return t.length===0?"":new this.util.TextDecoder(n).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}pt().get("IS_NODE")&&!pt().get("IS_BROWSER")&&pt().setPlatform("node",new DFt);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ke(e,t="float32",n){return t=t||"float32",Pa(e),new Us(e,t,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TFt(e,t){const n=P(e,"x","cast");if(!xAt(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return Z.runKernel(Lm,s,r)}const Wt=J({cast_:TFt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AFt(e){const n={x:P(e,"x","clone","string_or_numeric")};return Z.runKernel(Ym,n)}const xc=J({clone_:AFt});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FFt(e,t=!1){console.log(e.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */FV(),XAt({buffer:ke,cast:Wt,clone:xc,print:FFt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ia(){return Z}function UN(){return Z.memory()}function ht(e,t){return Z.tidy(e,t)}function be(e){DV(e).forEach(n=>n.dispose())}function oa(e){return Z.keep(e)}function YV(e,t,n=1){return Z.registerBackend(e,t,n)}function RFt(){return Z.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Ft(e,t){let n=P(e,"a","add"),s=P(t,"b","add");[n,s]=_n(n,s);const r={a:n,b:s};return Z.runKernel(dd,r)}const Dt=J({add_:_Ft});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MFt(e,t){let n=P(e,"a","floorDiv"),s=P(t,"b","floorDiv");[n,s]=_n(n,s);const r={a:n,b:s};return Z.runKernel(Km,r)}const ZV=J({floorDiv_:MFt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OFt(e,t){let n=P(e,"a","div"),s=P(t,"b","div");if([n,s]=_n(n,s),n.dtype==="int32"&&s.dtype==="int32")return ZV(n,s);const r={a:n,b:s},i={};return Z.runKernel(Vm,r,i)}const ne=J({div_:OFt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LFt(e,t){let n=P(e,"a","mul"),s=P(t,"b","mul");[n,s]=_n(n,s);const r={a:n,b:s};return Z.runKernel(ig,r)}const q=J({mul_:LFt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zFt(e){const t=P(e,"x","abs");if(t.dtype==="complex64"){const n={x:t};return Z.runKernel(ly,n)}else{const n={x:t};return Z.runKernel(ny,n)}}const gs=J({abs_:zFt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BFt(e){const n={x:P(e,"x","acos")};return Z.runKernel(Tm,n)}const PFt=J({acos_:BFt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WFt(e){const n={x:P(e,"x","acosh")};return Z.runKernel(Am,n)}const VFt=J({acosh_:WFt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UFt(e,t=null,n=!1){const r={x:P(e,"x","all","bool")},i={axis:t,keepDims:n};return Z.runKernel(_S,r,i)}const JV=J({all_:UFt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GFt(e,t=null,n=!1){const r={x:P(e,"x","any","bool")},i={axis:t,keepDims:n};return Z.runKernel(MS,r,i)}const GN=J({any_:GFt});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HFt(e,t=0){const s={x:P(e,"x","argMax")},r={axis:t};return Z.runKernel(sy,s,r)}const Ag=J({argMax_:HFt});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qFt(e,t=0){const s={x:P(e,"x","argMin")},r={axis:t};return Z.runKernel(ry,s,r)}const jFt=J({argMin_:qFt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KFt(e){const n={x:P(e,"x","asin")};return Z.runKernel(Fm,n)}const XFt=J({asin_:KFt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YFt(e){const n={x:P(e,"x","asinh")};return Z.runKernel(Rm,n)}const ZFt=J({asinh_:YFt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JFt(e){const n={x:P(e,"x","atan")};return Z.runKernel(_m,n)}const QFt=J({atan_:JFt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tRt(e,t){let n=P(e,"a","atan2"),s=P(t,"b","atan2");[n,s]=_n(n,s);const r={a:n,b:s};return Z.runKernel(Om,r)}const eRt=J({atan2_:tRt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nRt(e){const n={x:P(e,"x","atanh")};return Z.runKernel(Mm,n)}const sRt=J({atanh_:nRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fg(e,t,n,s,r="NHWC",i){const o=e[3],a=[...t,o],u=Ua(r);return Fs(e,a,n,i,s,null,null,u)}function Oi(e,t,n,s,r,i,o="channelsLast"){const[a,u]=Rg(t);let l;if(o==="channelsLast")l=[a,u,e[3],e[3]];else if(o==="channelsFirst")l=[a,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Fs(e,l,n,s,r,i,!1,o)}function Va(e,t,n,s,r,i,o="NDHWC"){const[a,u,l]=qN(t);let c,h;if(o==="NDHWC")h="channelsLast",c=[a,u,l,e[4],e[4]];else if(o==="NCDHW")h="channelsFirst",c=[a,u,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${o}`);return Lu(e,c,n,s,r,!1,h,i)}function Fs(e,t,n,s,r,i,o=!1,a="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if(a==="channelsLast")[u,l,c,h]=e;else if(a==="channelsFirst")[u,h,l,c]=e;else throw new Error(`Unknown dataFormat ${a}`);const[d,p,,f]=t,[m,g]=Rg(n),[x,b]=Rg(s),w=yd(d,x),y=yd(p,b),{padInfo:v,outHeight:k,outWidth:C}=oRt(r,l,c,m,g,w,y,i,a),I=o?f*h:f;let $;return a==="channelsFirst"?$=[u,I,k,C]:a==="channelsLast"&&($=[u,k,C,I]),{batchSize:u,dataFormat:a,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:C,outChannels:I,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:y,dilationHeight:x,dilationWidth:b,inShape:e,outShape:$,filterShape:t}}function Lu(e,t,n,s,r,i=!1,o="channelsLast",a){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[u,l,c,h,d]=e;else if(o==="channelsFirst")[u,d,l,c,h]=e;else throw new Error(`Unknown dataFormat ${o}`);const[p,f,m,,g]=t,[x,b,w]=qN(n),[y,v,k]=qN(s),C=yd(p,y),I=yd(f,v),$=yd(m,k),{padInfo:S,outDepth:N,outHeight:F,outWidth:D}=aRt(r,l,c,h,x,b,w,C,I,$,a),E=i?g*d:g;let A;return o==="channelsFirst"?A=[u,E,N,F,D]:o==="channelsLast"&&(A=[u,N,F,D,E]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:F,outWidth:D,outChannels:E,padInfo:S,strideDepth:x,strideHeight:b,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:I,effectiveFilterWidth:$,dilationDepth:y,dilationHeight:v,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function rRt(e,t,n,s,r){s==null&&(s=HN(e,t,n));const i=e[0],o=e[1],a=_g((i-t+2*s)/n+1,r),u=_g((o-t+2*s)/n+1,r);return[a,u]}function iRt(e,t,n,s,r,i){r==null&&(r=HN(e,t[0],s[0]));const o=[0,0,0,n];for(let a=0;a<3;a++)e[a]+2*r>=t[a]&&(o[a]=_g((e[a]-t[a]+2*r)/s[a]+1,i));return o}function HN(e,t,n,s=1){const r=yd(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Rg(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function qN(e){return typeof e=="number"?[e,e,e]:e}function yd(e,t){return t<=1?e:e+(e-1)*(t-1)}function oRt(e,t,n,s,r,i,o,a,u){let l,c,h;if(typeof e=="number"){l={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};const p=rRt([t,n],i,s,e,a);c=p[0],h=p[1]}else if(e==="same"){c=Math.ceil(t/s),h=Math.ceil(n/r);const d=Math.max(0,(c-1)*s+i-t),p=Math.max(0,(h-1)*r+o-n),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),x=p-g;l={top:f,bottom:m,left:g,right:x,type:"SAME"}}else if(e==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/s),h=Math.ceil((n-o+1)/r);else if(typeof e=="object"){const d=u==="channelsLast"?e[1][0]:e[2][0],p=u==="channelsLast"?e[1][1]:e[2][1],f=u==="channelsLast"?e[2][0]:e[3][0],m=u==="channelsLast"?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=_g((t-i+d+p)/s+1,a),h=_g((n-o+f+m)/r+1,a)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:l,outHeight:c,outWidth:h}}function aRt(e,t,n,s,r,i,o,a,u,l,c){let h,d,p,f;if(e==="valid"&&(e=0),typeof e=="number"){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};const g=iRt([t,n,s,1],[a,u,l],1,[r,i,o],e,c);d=g[0],p=g[1],f=g[2]}else if(e==="same"){d=Math.ceil(t/r),p=Math.ceil(n/i),f=Math.ceil(s/o);const m=(d-1)*r+a-t,g=(p-1)*i+u-n,x=(f-1)*o+l-s,b=Math.floor(m/2),w=m-b,y=Math.floor(g/2),v=g-y,k=Math.floor(x/2),C=x-k;h={top:y,bottom:v,left:k,right:C,front:b,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function _g(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function bc(e){const[t,n,s]=Rg(e);return t===1&&n===1&&s===1}function Gs(e,t){return bc(e)||bc(t)}function yc(e){return Rg(e).every(t=>t>0)}function Ua(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Ir(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")L(ld(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{L(ld(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uRt(e,t){const s={x:P(e,"x","reshape","string_or_numeric")},r={shape:t};return Z.runKernel(Uy,s,r)}const nt=J({reshape_:uRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lRt(e,t,n,s,r){const i=P(e,"x","avgPool","float32"),o=1;L(Gs(n,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);let a=i,u=!1;i.rank===3&&(u=!0,a=nt(i,[1,i.shape[0],i.shape[1],i.shape[2]])),L(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Ir("avgPool",s,r);const l={x:a},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let h=Z.runKernel(iy,l,c);return h=Wt(h,i.dtype),u?nt(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const jN=J({avgPool_:lRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cRt(e,t,n,s,r,i="NDHWC"){const o=P(e,"x","avgPool3d","float32");let a=o,u=!1;o.rank===4&&(u=!0,a=nt(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),L(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),L(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),L(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),Ir("avgPool3d",s,r);const l={x:a},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:i};let h=Z.runKernel(oy,l,c);return h=Wt(h,a.dtype),u?nt(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const hRt=J({avgPool3d_:cRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dRt(e,t=0){L(e.length>=1,()=>"Pass at least one tensor to concat");const n=LV(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),n.length===1)return xc(n[0]);const s=n,r={axis:t};return Z.runKernel(cy,s,r)}const Hs=J({concat_:dRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pRt(e,t,n=!1,s=!1){let r=P(e,"a","matMul"),i=P(t,"b","matMul");[r,i]=_n(r,i);const o={a:r,b:i},a={transposeA:n,transposeB:s};return Z.runKernel(ay,o,a)}const Ve=J({matMul_:pRt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fRt(e){const n={x:P(e,"x","sigmoid","float32")};return Z.runKernel(gg,n)}const wd=J({sigmoid_:fRt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mRt(e,t,n){const s=P(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:t,size:n};return Z.runKernel(Ky,r,i)}const Ke=J({slice_:mRt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gRt(e){const n={x:P(e,"x","tanh","float32")};return Z.runKernel(kg,n)}const KN=J({tanh_:gRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xRt(e,t,n){const s=P(e,"x","batchToSpaceND"),r=t.reduce((a,u)=>a*u);L(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),L(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),L(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);const i={x:s},o={blockShape:t,crops:n};return Z.runKernel(uy,i,o)}const XN=J({batchToSpaceND_:xRt});function bRt(e){let t;return e.rank===0||e.rank===1?t=nt(e,[1,1,1,e.size]):e.rank===2?t=nt(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=nt(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yRt(e,t,n,s,r,i){i==null&&(i=.001);const o=P(e,"x","batchNorm"),a=P(t,"mean","batchNorm"),u=P(n,"variance","batchNorm");let l;r!=null&&(l=P(r,"scale","batchNorm"));let c;s!=null&&(c=P(s,"offset","batchNorm")),L(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),L(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),L(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:bRt(o),scale:l,offset:c,mean:a,variance:u},p={varianceEpsilon:i},f=Z.runKernel(yy,d,p);return nt(f,o.shape)}const dw=J({batchNorm_:yRt});function wRt(e,t,n,s,r,i){const o=P(e,"x","batchNorm"),a=P(t,"mean","batchNorm"),u=P(n,"variance","batchNorm");let l;r!=null&&(l=P(r,"scale","batchNorm"));let c;return s!=null&&(c=P(s,"offset","batchNorm")),L(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),L(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),L(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&L(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&L(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),dw(o,a,u,c,l,i)}const vRt=J({batchNorm2d_:wRt});function kRt(e,t,n,s,r,i){const o=P(e,"x","batchNorm"),a=P(t,"mean","batchNorm"),u=P(n,"variance","batchNorm");let l;r!=null&&(l=P(r,"scale","batchNorm"));let c;return s!=null&&(c=P(s,"offset","batchNorm")),L(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),L(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),L(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&L(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&L(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),dw(o,a,u,c,l,i)}const IRt=J({batchNorm3d_:kRt});function CRt(e,t,n,s,r,i){const o=P(e,"x","batchNorm"),a=P(t,"mean","batchNorm"),u=P(n,"variance","batchNorm");let l;r!=null&&(l=P(r,"scale","batchNorm"));let c;return s!=null&&(c=P(s,"offset","batchNorm")),L(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),L(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),L(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&L(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&L(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),dw(o,a,u,c,l,i)}const $Rt=J({batchNorm4d_:CRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SRt(e,t,n){const s=P(e,"x","bincount"),r=P(t,"weights","bincount");L(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),L(n>=0,()=>`size must be non-negative, but got ${n}.`),L(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const i={x:s,weights:r},o={size:n};return Z.runKernel(zS,i,o)}const NRt=J({bincount_:SRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ERt(e,t){let n=P(e,"broadcastTo","x");const s=n.shape;if(Pa(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=nt(n,l)}const r=n.shape,i=Array.from(t);for(let l=t.length-1;l>=0;l--)if(r[l]===t[l])i[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(i.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return xc(n);const a={x:n},u={reps:i};return Z.runKernel(Ig,a,u)}const Mg=J({broadcastTo_:ERt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DRt(e){const n={x:P(e,"x","ceil","float32")};return Z.runKernel(zm,n)}const TRt=J({ceil_:DRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vd(e,t,n){Pa(e);const s={shape:e,value:t,dtype:n};return Z.runKernel(QS,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ARt(e,t,n){const s=P(e,"x","clipByValue");if(L(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return vd(s.shape,t,s.dtype);const r={x:s},i={clipValueMin:t,clipValueMax:n};return Z.runKernel(Bm,r,i)}const hi=J({clipByValue_:ARt});function FRt(e){return Hs(e,0)}const RRt=J({concat1d_:FRt});function _Rt(e,t){return Hs(e,t)}const MRt=J({concat2d_:_Rt});function ORt(e,t){return Hs(e,t)}const LRt=J({concat3d_:ORt});function zRt(e,t){return Hs(e,t)}const BRt=J({concat4d_:zRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PRt(e,t,n,s,r="NHWC",i=[1,1],o){const a=P(e,"x","conv2d","float32"),u=P(t,"filter","conv2d","float32");let l=a,c=!1;a.rank===3&&(c=!0,l=nt(a,[1,a.shape[0],a.shape[1],a.shape[2]])),L(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),L(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Ir("conv2d",s,o);const h=r==="NHWC"?l.shape[3]:l.shape[1];L(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),L(Gs(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),L(yc(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),L(yc(n),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:l,filter:u},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o},f=Z.runKernel(hy,d,p);return c?nt(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const wc=J({conv2d_:PRt});function WRt(e,t,n,s,r="NWC",i=1,o){const a=P(e,"x","conv1d"),u=P(t,"filter","conv1d");let l=a,c=!1;a.rank===2&&(c=!0,l=nt(a,[1,a.shape[0],a.shape[1]])),L(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),L(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Ir("conv1d",s,o),L(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),L(Gs(n,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`),L(yc(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),L(yc(n),()=>"Error in conv1D: Stride should be larger than 0."),L(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=nt(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=nt(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=wc(d,h,[1,n],s,"NHWC",[1,i],o);return c?nt(g,[g.shape[2],g.shape[3]]):nt(g,[g.shape[0],g.shape[2],g.shape[3]])}const QV=J({conv1d_:WRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VRt(e,t,n,s,r,i="NHWC",o){L(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,u=t,l=!1;t.rank===3&&(l=!0,u=nt(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,e[0],e[1],e[2]]),L(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),L(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),L(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c=i==="NHWC"?a[3]:a[1],h=i==="NHWC"?u.shape[3]:u.shape[1];L(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),L(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),Ir("conv2dDerInput",r,o);const d={dy:u,filter:n},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:o,inputShape:a},f=Z.runKernel(dy,d,p);return l?nt(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const YN=J({conv2DBackpropInput_:VRt});function URt(e,t,n,s,r,i){const o=P(e,"x","conv2dTranspose"),a=P(t,"filter","conv2dTranspose");return YN(n,o,a,s,r,"NHWC",i)}const tU=J({conv2dTranspose_:URt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GRt(e,t,n,s,r="NDHWC",i=[1,1,1]){const o=P(e,"x","conv3d"),a=P(t,"filter","conv3d");let u=o,l=!1;o.rank===4&&(l=!0,u=nt(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),L(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),L(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),L(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),L(Gs(n,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),L(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),L(yc(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),L(yc(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:u,filter:a},h={strides:n,pad:s,dataFormat:r,dilations:i},d=Z.runKernel(py,c,h);return l?nt(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const HRt=J({conv3d_:GRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qRt(e,t,n,s,r){L(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,o=t,a=!1;t.rank===4&&(a=!0,o=nt(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const u=i[4],l=o.shape[4];L(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),L(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),L(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),L(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),L(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c={dy:o,filter:n},h={pad:r,strides:s,inputShape:i},d=Z.runKernel(VS,c,h);return a?nt(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const eU=J({conv3DBackpropInput_:qRt});function jRt(e,t,n,s,r){const i=P(e,"x","conv3dTranspose"),o=P(t,"filter","conv3dTranspose");return eU(n,i,o,s,r)}const KRt=J({conv3dTranspose_:jRt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XRt(e){const n={x:P(e,"x","cos","float32")};return Z.runKernel(Pm,n)}const ZN=J({cos_:XRt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YRt(e){const n={x:P(e,"x","cosh","float32")};return Z.runKernel(Wm,n)}const nU=J({cosh_:YRt});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZRt(e,t=0,n=!1,s=!1){const i={x:P(e,"x","cumprod")},o={axis:t,exclusive:n,reverse:s};return Z.runKernel(US,i,o)}const JN=J({cumprod_:ZRt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JRt(e,t=0,n=!1,s=!1){const i={x:P(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:s};return Z.runKernel(fy,i,o)}const sU=J({cumsum_:JRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QRt(e,t,n,s=!1){const r=P(e,"x","denseBincount"),i=P(t,"weights","denseBincount");L(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),L(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),L(n>=0,()=>`size must be non-negative, but got ${n}.`),L(i.size===r.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`);const o={x:r,weights:i},a={size:n,binaryOutput:s};return Z.runKernel(HS,o,a)}const rU=J({denseBincount_:QRt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t_t(e,t,n="NHWC"){const s=P(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],i=n==="NHWC"?s.shape[2]:s.shape[3],o=n==="NHWC"?s.shape[3]:s.shape[1];L(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),L(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),L(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t} for depthToSpace with input shape
        ${s.shape}`),L(o%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${s.shape}`);const a={x:s},u={blockSize:t,dataFormat:n};return Z.runKernel(qS,a,u)}const e_t=J({depthToSpace_:t_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_t(e,t,n,s,r="NHWC",i=[1,1],o){const a=P(e,"x","depthwiseConv2d","float32"),u=P(t,"filter","depthwiseConv2d","float32");let l=a,c=!1;a.rank===3&&(c=!0,l=nt(a,[1,a.shape[0],a.shape[1],a.shape[2]])),L(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),L(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h=r==="NHWC"?l.shape[3]:l.shape[1];L(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),Ir("depthwiseConv2d",s,o);const d={x:l,filter:u},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o},f=Z.runKernel(my,d,p);return c?nt(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const QN=J({depthwiseConv2d_:n_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_t(e,t,n,s,r=[1,1],i="NHWC"){const o=P(e,"x","dilation2d"),a=P(t,"filter","dilation2d");L(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),L(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),L(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let u=o,l=!1;o.rank===3&&(u=nt(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0),L(u.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${a.shape[2]}`);const c={x:u,filter:a},h={strides:n,pad:s,dilations:r},d=Z.runKernel(gy,c,h);return l?nt(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const r_t=J({dilation2d_:s_t});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kd(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const i=n-1-r,o=e[i]||1;(t[t.length-1-r]||1)>1&&o===1&&s.unshift(i)}return s}function es(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],i=t.length-s-1,o=t[i];(r==null||r===1&&o>1)&&n.unshift(i)}return n}function ge(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let i=e[e.length-r-1];i==null&&(i=1);let o=t[t.length-r-1];if(o==null&&(o=1),i===1)n.unshift(o);else if(o===1)n.unshift(i);else if(i!==o){const a=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(a)}else n.unshift(i)}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i_t(e,t){let n=P(e,"a","equal","string_or_numeric"),s=P(t,"b","equal","string_or_numeric");[n,s]=_n(n,s),ge(n.shape,s.shape);const r={a:n,b:s};return Z.runKernel(xy,r)}const aa=J({equal_:i_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o_t(e,t,n){const s=P(t,"a","where"),r=P(n,"b","where"),i=P(e,"condition","where","bool"),o=ge(ge(i.shape,s.shape),r.shape),a=Mg(i,o),u=Mg(s,o),l=Mg(r,o),c={condition:a,t:u,e:l};return Z.runKernel(jy,c)}const Hr=J({where_:o_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a_t(e){const n={x:P(e,"x","zerosLike")};return Z.runKernel(ew,n)}const Fe=J({zerosLike_:a_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_t(e,t){let n=P(e,"a","div"),s=P(t,"b","div");[n,s]=_n(n,s);const r=ne(n,s),i=Fe(r),o=aa(s,i);return Hr(o,i,r)}const l_t=J({divNoNan_:u_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c_t(e,t){const n=P(e,"t1","dot"),s=P(t,"t2","dot");L((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);const r=n.rank===1?n.size:n.shape[1],i=s.rank===1?s.size:s.shape[0];if(L(r===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`),n.rank===1&&s.rank===1){const o=nt(n,[1,-1]),a=nt(s,[-1,1]),u=Ve(o,a);return nt(u,[])}else if(n.rank===1&&s.rank===2){const o=nt(n,[1,-1]),a=nt(s,[s.shape[0],s.shape[1]]),u=Ve(o,a);return nt(u,[u.size])}else if(n.rank===2&&s.rank===1){const o=nt(s,[-1,1]),a=Ve(n,o);return nt(a,[a.size])}else{const o=nt(s,[s.shape[0],s.shape[1]]);return Ve(n,o)}}const h_t=J({dot_:c_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_t(e){const n={x:P(e,"x","elu","float32")};return Z.runKernel(Um,n)}const pw=J({elu_:d_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p_t(e){let t=P(e,"x","erf");L(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=Wt(t,"float32"));const n={x:t};return Z.runKernel(Gm,n)}const f_t=J({erf_:p_t});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function iU(e,t,n){const s=e.length+t.length,r=[];let i=0,o=0;for(let a=0;a<s;a++)n.indexOf(a)===-1?r.push(e[i++]):r.push(t[o++]);return r}function xs(e,t){const n=[],s=e.length;for(let i=0;i<s;i++)t.indexOf(i)===-1&&n.push(e[i]);const r=t.map(i=>e[i]);return[n,r]}function Mn(e,t){const n=t.map(s=>1);return iU(e,n,t)}function Rs(e,t,n){L(tE(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function Sn(e,t){if(tE(e,t))return null;const n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function zu(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function On(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m_t(e,t=null,n=!1){const r={x:P(e,"x","max")},i={reductionIndices:t,keepDims:n};return Z.runKernel(Dy,r,i)}const Co=J({max_:m_t});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_t(e,t=null,n=!1){const r={x:P(e,"x","min")},i={axis:t,keepDims:n};return Z.runKernel(Ry,r,i)}const fw=J({min_:g_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x_t(e,t){let n=P(e,"base","pow"),s=P(t,"exp","pow");[n,s]=_n(n,s);const r={a:n,b:s};return Z.runKernel(og,r)}const Id=J({pow_:x_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ce(e,t){if((ko(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&ko(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Dg(e,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b_t(e){const n={x:P(e,"x","sqrt","float32")};return Z.runKernel(bg,n)}const or=J({sqrt_:b_t});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y_t(e){const t=P(e,"x","square"),n={};return Z.runKernel("Square",{x:t},n)}const on=J({square_:y_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w_t(e,t=null,n=!1){let s=P(e,"x","sum");s.dtype==="bool"&&(s=Wt(s,"int32"));const r={x:s},i={axis:t,keepDims:n};return Z.runKernel(Xy,r,i)}const Yt=J({sum_:w_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v_t(e,t="euclidean",n=null,s=!1){e=P(e,"x","norm");const r=oU(e,t,n);let i=r.shape;if(s){const o=ve(n,e.shape);i=Mn(r.shape,o)}return nt(r,i)}function oU(e,t,n=null){if(e.rank===0)return gs(e);if(e.rank!==1&&n===null)return oU(nt(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return Yt(gs(e),n);if(t===1/0)return Co(gs(e),n);if(t===-1/0)return fw(gs(e),n);if(t==="euclidean"||t===2)return or(Yt(Id(gs(e),ce(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return Co(Yt(gs(e),n[0]),n[1]-1);if(t===1/0)return Co(Yt(gs(e),n[1]),n[0]);if(t===-1/0)return fw(Yt(gs(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return or(Yt(on(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const mw=J({norm_:v_t});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k_t(e,t=null,n=!1){return mw(e,"euclidean",t,n)}const I_t=J({euclideanNorm_:k_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C_t(e){const n={x:P(e,"x","exp")};return Z.runKernel(Hm,n)}const Li=J({exp_:C_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $_t(e,t=0){const n=P(e,"x","expandDims","string_or_numeric");L(t<=n.rank,()=>"Axis must be <= rank of the tensor");const s={input:n},r={dim:t};return Z.runKernel(by,s,r)}const qr=J({expandDims_:$_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S_t(e){const n={x:P(e,"x","expm1")};return Z.runKernel(qm,n)}const N_t=J({expm1_:S_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E_t(e,t){const n=P(e,"x","tile","string_or_numeric");L(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const s={x:n},r={reps:t};return Z.runKernel(Ig,s,r)}const $o=J({tile_:E_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D_t(e,t,n,s="float32"){t==null&&(t=e);const r=ke([e,t],s),i=e<=t?e:t;for(let a=0;a<i;++a)r.set(1,a,a);const o=nt(r.toTensor(),[e,t]);if(n==null)return o;if(n.length===1)return $o(qr(o,0),[n[0],1,1]);if(n.length===2)return $o(qr(qr(o,0),0),[n[0],n[1],1,1]);if(n.length===3)return $o(qr(qr(qr(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const aU=J({eye_:D_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T_t(e){const n={x:P(e,"x","floor","float32")};return Z.runKernel(jm,n)}const gw=J({floor_:T_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_t(e,t,n=0,s=0){const r=P(e,"x","gather"),i=P(t,"indices","gather","int32"),o={x:r,indices:i},a={axis:n,batchDims:s};return Z.runKernel(wy,o,a)}const eE=J({gather_:A_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_t(e,t){let n=P(e,"a","greater","string_or_numeric"),s=P(t,"b","greater","string_or_numeric");[n,s]=_n(n,s),ge(n.shape,s.shape);const r={a:n,b:s};return Z.runKernel(vy,r)}const di=J({greater_:F_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R_t(e,t){let n=P(e,"a","greaterEqual","string_or_numeric"),s=P(t,"b","greaterEqual","string_or_numeric");[n,s]=_n(n,s),ge(n.shape,s.shape);const r={a:n,b:s};return Z.runKernel(Xm,r)}const vc=J({greaterEqual_:R_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function __t(e){const n={input:P(e,"input","imag")};return Z.runKernel(nN,n)}const nE=J({imag_:__t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_t(e){const n={x:P(e,"x","isFinite")};return Z.runKernel(Zm,n)}const O_t=J({isFinite_:M_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L_t(e){const n={x:P(e,"x","isInf")};return Z.runKernel(Jm,n)}const z_t=J({isInf_:L_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_t(e){const n={x:P(e,"x","isNaN")};return Z.runKernel(Qm,n)}const P_t=J({isNaN_:B_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_t(e,t=.2){const s={x:P(e,"x","leakyRelu")},r={alpha:t};return Z.runKernel(ky,s,r)}const sE=J({leakyRelu_:W_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V_t(e,t){let n=P(e,"a","less","string_or_numeric"),s=P(t,"b","less","string_or_numeric");[n,s]=_n(n,s),ge(n.shape,s.shape);const r={a:n,b:s};return Z.runKernel(Iy,r)}const uU=J({less_:V_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_t(e,t){let n=P(e,"a","lessEqual","string_or_numeric"),s=P(t,"b","lessEqual","string_or_numeric");[n,s]=_n(n,s),ge(n.shape,s.shape);const r={a:n,b:s};return Z.runKernel(Cy,r)}const Cd=J({lessEqual_:U_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G_t(e,t=5,n=1,s=1,r=.5){const i=P(e,"x","localResponseNormalization");L(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),L(ld(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=i,a=!1;i.rank===3&&(a=!0,o=nt(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:s,beta:r},c=Z.runKernel(Ey,u,l);return a?nt(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const H_t=J({localResponseNormalization_:G_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q_t(e){const n={x:P(e,"x","log","float32")};return Z.runKernel(tg,n)}const zi=J({log_:q_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_t(e){const n={x:P(e,"x","log1p")};return Z.runKernel(eg,n)}const rE=J({log1p_:j_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_t(e,t){L(NS(e),()=>"The f passed in variableGrads(f) must be a function"),L(t==null||Array.isArray(t)&&t.every(l=>l instanceof lw),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=t!=null;if(!n){t=[];for(const l in Z.registeredVariables)t.push(Z.registeredVariables[l])}const s=n?t.filter(l=>!l.trainable):null,r=t.length;t=t.filter(l=>l.trainable),L(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const i=!0,{value:o,grads:a}=Z.gradients(e,t,null,i);L(a.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),L(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const u={};return t.forEach((l,c)=>{a[c]!=null&&(u[l.name]=a[c])}),s!=null&&s.forEach(l=>u[l.name]=null),{value:o,grads:u}}function kc(e){return Z.customGrad(e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_t(e){const n={x:P(e,"x","neg")};return Z.runKernel(My,n)}const Nn=J({neg_:X_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y_t(e){const n={x:P(e,"x","softplus")};return Z.runKernel(xg,n)}const Og=J({softplus_:Y_t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_t(e){const t=P(e,"x","logSigmoid");return kc(s=>({value:Nn(Og(Nn(s))),gradFunc:o=>q(o,wd(Nn(s)))}))(t)}const J_t=J({logSigmoid_:Z_t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_t(e,t){let n=P(e,"a","sub"),s=P(t,"b","sub");[n,s]=_n(n,s);const r={a:n,b:s};return Z.runKernel(wg,r)}const Zt=J({sub_:Q_t});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t3t(e,t=-1){const n=P(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return kc((r,i)=>{const a=Co(r,t,!0),u=Zt(r,a),l=Zt(Wt(u,"float32"),zi(Yt(Li(u),t,!0)));return i([l]),{value:l,gradFunc:(h,d)=>{const[p]=d,f=!0,m=Li(p);return Zt(h,q(Yt(h,t,f),m))}}})(n)}const lU=J({logSoftmax_:t3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3t(e,t=null,n=!1){const s=P(e,"x","logSumExp"),r=ve(t,s.shape),i=Co(s,r,!0),o=Zt(s,i),a=Li(o),u=Yt(a,r),l=zi(u),c=Dt(nt(i,l.shape),l);if(n){const h=Mn(c.shape,r);return nt(c,h)}return c}const cU=J({logSumExp_:e3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n3t(e,t){const n=P(e,"a","logicalAnd","bool"),s=P(t,"b","logicalAnd","bool");ge(n.shape,s.shape);const r={a:n,b:s};return Z.runKernel($y,r)}const Ga=J({logicalAnd_:n3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s3t(e){const n={x:P(e,"x","logicalNot","bool")};return Z.runKernel(Sy,n)}const iE=J({logicalNot_:s3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r3t(e,t){const n=P(e,"a","logicalOr","bool"),s=P(t,"b","logicalOr","bool");ge(n.shape,s.shape);const r={a:n,b:s};return Z.runKernel(Ny,r)}const hU=J({logicalOr_:r3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i3t(e,t){const n=P(e,"a","logicalXor","bool"),s=P(t,"b","logicalXor","bool");return ge(n.shape,s.shape),Ga(hU(e,t),iE(Ga(e,t)))}const o3t=J({logicalXor_:i3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a3t(e,t,n,s,r){const i=P(e,"x","maxPool"),o=1;let a=i,u=!1;i.rank===3&&(u=!0,a=nt(i,[1,i.shape[0],i.shape[1],i.shape[2]])),L(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),L(Gs(n,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),Ir("maxPool",s,r);const l={x:a},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},h=Z.runKernel(Ty,l,c);return u?nt(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const oE=J({maxPool_:a3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u3t(e,t=[1,1,1],n,s,r,i="NDHWC"){const o=P(e,"x","maxPool3d");let a=o,u=!1;o.rank===4&&(u=!0,a=nt(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),L(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),L(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Ir("maxPool3d",s,r);const l={x:a},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:i},h=Z.runKernel(Ay,l,c);return u?nt(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const l3t=J({maxPool3d_:u3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c3t(e,t){let n=P(e,"a","maximum"),s=P(t,"b","maximum");[n,s]=_n(n,s),n.dtype==="bool"&&(n=Wt(n,"int32"),s=Wt(s,"int32")),ge(n.shape,s.shape);const r={a:n,b:s};return Z.runKernel(ng,r)}const Bu=J({maximum_:c3t});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h3t(e,t=null,n=!1){const r={x:P(e,"x","mean")},i={axis:t,keepDims:n};return Z.runKernel(Fy,r,i)}const Ln=J({mean_:h3t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bs(e,t="float32"){if(Pa(e),t==="complex64"){const s=bs(e,"float32"),r=bs(e,"float32");return pc(s,r)}const n=Vs(xt(e),t);return Z.makeTensor(n,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pu(e,t="float32"){if(Pa(e),t==="complex64"){const s=Pu(e,"float32"),r=bs(e,"float32");return pc(s,r)}const n=DS(xt(e),t);return Z.makeTensor(n,e,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d3t(e,t){let n=P(e,"a","minimum"),s=P(t,"b","minimum");[n,s]=_n(n,s),n.dtype==="bool"&&(n=Wt(n,"int32"),s=Wt(s,"int32")),ge(n.shape,s.shape);const r={a:n,b:s};return Z.runKernel(sg,r)}const xw=J({minimum_:d3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3t(e,t,n){L(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const s=P(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");L(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r=n==="reflect"?1:0;for(let a=0;a<s.rank;a++)L(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),L(t[a][0]>=0&&t[a][0]<=s.shape[a]-r&&t[a][1]>=0&&t[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const i={paddings:t,mode:n},o={x:s};return Z.runKernel(_y,o,i)}const f3t=J({mirrorPad_:p3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m3t(e,t){let n=P(e,"a","mod"),s=P(t,"b","mod");[n,s]=_n(n,s);const r={a:n,b:s};return Z.runKernel(rg,r)}const g3t=J({mod_:m3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x3t(e,t=null,n=!1){e=P(e,"x","moments");const s=ve(t,e.shape),r=Ln(e,s,n);let i=r.shape;n||(i=Mn(r.shape,s));const o=on(Zt(Wt(e,"float32"),nt(r,i))),a=Ln(o,s,n);return{mean:r,variance:a}}const aE=J({moments_:x3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b3t(e,t){let n=P(e,"a","notEqual","string_or_numeric"),s=P(t,"b","notEqual","string_or_numeric");[n,s]=_n(n,s),ge(n.shape,s.shape);const r={a:n,b:s};return Z.runKernel(Oy,r)}const Lg=J({notEqual_:b3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y3t(e,t,n=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:P(e,"indices","oneHot","int32")},a={dtype:r,depth:t,onValue:n,offValue:s};return Z.runKernel(zy,o,a)}const dU=J({oneHot_:y3t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w3t(e){const n={x:P(e,"x","onesLike")};return Z.runKernel(Ly,n)}const Bi=J({onesLike_:w3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v3t(e,t,n=0){const s=P(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},i={x:s};return Z.runKernel(Py,i,r)}const uE=J({pad_:v3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k3t(e,t,n){const s=P(e,"x","spaceToBatchND");L(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),L(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),L(s.shape.reduce((o,a,u)=>u>0&&u<=t.length?o&&(a+n[u-1][0]+n[u-1][1])%t[u-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const r={x:s},i={blockShape:t,paddings:n};return Z.runKernel(Yy,r,i)}const lE=J({spaceToBatchND_:k3t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3t(e,t,n,s,r,i,o){r==null&&(r=[1,1]),i==null&&(i=1),s===0&&(s="valid");const a=P(e,"x","maxPool");let u=a,l=!1;a.rank===3&&(l=!0,u=nt(a,[1,a.shape[0],a.shape[1],a.shape[2]])),L(Gs(i,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`);const c=Oi(u.shape,t,i,r,s),h=[c.dilationHeight,c.dilationWidth];let d;s==="same"?d=$3t([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=C3t([c.inHeight,c.inWidth],h,d),g=p?s:"valid",x=p?u:lE(u,h,f),w=(n==="avg"?()=>jN(x,t,i,g,o):()=>oE(x,t,i,g,o))(),y=p?w:XN(w,h,m);return l?nt(y,[y.shape[1],y.shape[2],y.shape[3]]):y}function C3t(e,t,n){const s=n.map(c=>c[0]),r=n.map(c=>c[1]),i=e.concat(s,r),o=t.map((c,h)=>(c-i[h]%c)%c),a=r.map((c,h)=>c+o[h]),u=t.map((c,h)=>[s[h],a[h]]),l=t.map((c,h)=>[0,o[h]]);return[u,l]}function $3t(e,t){const s=e.map((o,a)=>o+(o-1)*(t[a]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),i=s.map((o,a)=>o-r[a]);return s.map((o,a)=>[r[a],i[a]])}const S3t=J({pool_:I3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N3t(e,t){const n=P(e,"x","prelu"),s=P(t,"alpha","prelu"),r={x:n,alpha:s};return Z.runKernel(Wy,r)}const cE=J({prelu_:N3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E3t(e,t=null,n=!1){let s=P(e,"x","prod");s.dtype==="bool"&&(s=Wt(s,"int32"));const r={x:s},i={axis:t,keepDims:n};return Z.runKernel(Vy,r,i)}const D3t=J({prod_:E3t});var hE={},T3t={get exports(){return hE},set exports(e){hE=e}};(function(e){(function(t,n,s){function r(u){var l=this,c=a();l.next=function(){var h=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=h-(l.c=h|0)},l.c=1,l.s0=c(" "),l.s1=c(" "),l.s2=c(" "),l.s0-=c(u),l.s0<0&&(l.s0+=1),l.s1-=c(u),l.s1<0&&(l.s1+=1),l.s2-=c(u),l.s2<0&&(l.s2+=1),c=null}function i(u,l){return l.c=u.c,l.s0=u.s0,l.s1=u.s1,l.s2=u.s2,l}function o(u,l){var c=new r(u),h=l&&l.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&i(h,c),d.state=function(){return i(c,{})}),d}function a(){var u=4022871197,l=function(c){c=String(c);for(var h=0;h<c.length;h++){u+=c.charCodeAt(h);var d=.02519603282416938*u;u=d>>>0,d-=u,d*=u,u=d>>>0,d-=u,u+=d*4294967296}return(u>>>0)*23283064365386963e-26};return l}n&&n.exports?n.exports=o:s&&s.amd?s(function(){return o}):this.alea=o})(oc,e,!1)})(T3t);var dE={},A3t={get exports(){return dE},set exports(e){dE=e}};(function(e){(function(t,n,s){function r(a){var u=this,l="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var h=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^h^h>>>8},a===(a|0)?u.x=a:l+=a;for(var c=0;c<l.length+64;c++)u.x^=l.charCodeAt(c)|0,u.next()}function i(a,u){return u.x=a.x,u.y=a.y,u.z=a.z,u.w=a.w,u}function o(a,u){var l=new r(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,c&&(typeof c=="object"&&i(c,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:s&&s.amd?s(function(){return o}):this.xor128=o})(oc,e,!1)})(A3t);var pE={},F3t={get exports(){return pE},set exports(e){pE=e}};(function(e){(function(t,n,s){function r(a){var u=this,l="";u.next=function(){var h=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(h^h<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,a===(a|0)?u.x=a:l+=a;for(var c=0;c<l.length+64;c++)u.x^=l.charCodeAt(c)|0,c==l.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(a,u){return u.x=a.x,u.y=a.y,u.z=a.z,u.w=a.w,u.v=a.v,u.d=a.d,u}function o(a,u){var l=new r(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,c&&(typeof c=="object"&&i(c,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:s&&s.amd?s(function(){return o}):this.xorwow=o})(oc,e,!1)})(F3t);var fE={},R3t={get exports(){return fE},set exports(e){fE=e}};(function(e){(function(t,n,s){function r(a){var u=this;u.next=function(){var c=u.x,h=u.i,d,p;return d=c[h],d^=d>>>7,p=d^d<<24,d=c[h+1&7],p^=d^d>>>10,d=c[h+3&7],p^=d^d>>>3,d=c[h+4&7],p^=d^d<<7,d=c[h+7&7],d=d^d<<13,p^=d^d<<9,c[h]=p,u.i=h+1&7,p};function l(c,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],c.x=p,c.i=0,d=256;d>0;--d)c.next()}l(u,a)}function i(a,u){return u.x=a.x.slice(),u.i=a.i,u}function o(a,u){a==null&&(a=+new Date);var l=new r(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,c&&(c.x&&i(c,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:s&&s.amd?s(function(){return o}):this.xorshift7=o})(oc,e,!1)})(R3t);var mE={},_3t={get exports(){return mE},set exports(e){mE=e}};(function(e){(function(t,n,s){function r(a){var u=this;u.next=function(){var c=u.w,h=u.X,d=u.i,p,f;return u.w=c=c+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,u.i=d,f+(c^c>>>16)|0};function l(c,h){var d,p,f,m,g,x=[],b=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,b=Math.max(b,h.length)),f=0,m=-32;m<b;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=x[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(x[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=x[f+34&127],d=x[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,x[f]=p^d;c.w=g,c.X=x,c.i=f}l(u,a)}function i(a,u){return u.i=a.i,u.w=a.w,u.X=a.X.slice(),u}function o(a,u){a==null&&(a=+new Date);var l=new r(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,c&&(c.X&&i(c,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:s&&s.amd?s(function(){return o}):this.xor4096=o})(oc,e,!1)})(_3t);var gE={},M3t={get exports(){return gE},set exports(e){gE=e}};(function(e){(function(t,n,s){function r(a){var u=this,l="";u.next=function(){var h=u.b,d=u.c,p=u.d,f=u.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,u.b=h=h<<20^h>>>12^d,u.c=d=d-p|0,u.d=p<<16^d>>>16^f,u.a=f-h|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,a===Math.floor(a)?(u.a=a/4294967296|0,u.b=a|0):l+=a;for(var c=0;c<l.length+20;c++)u.b^=l.charCodeAt(c)|0,u.next()}function i(a,u){return u.a=a.a,u.b=a.b,u.c=a.c,u.d=a.d,u}function o(a,u){var l=new r(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,c&&(typeof c=="object"&&i(c,l),h.state=function(){return i(l,{})}),h}n&&n.exports?n.exports=o:s&&s.amd?s(function(){return o}):this.tychei=o})(oc,e,!1)})(M3t);var xE={},O3t={get exports(){return xE},set exports(e){xE=e}},L3t={},z3t=Object.freeze({__proto__:null,default:L3t}),B3t=FAt(z3t);(function(e){(function(t,n,s){var r=256,i=6,o=52,a="random",u=s.pow(r,i),l=s.pow(2,o),c=l*2,h=r-1,d;function p(y,v,k){var C=[];v=v==!0?{entropy:!0}:v||{};var I=x(g(v.entropy?[y,w(n)]:y??b(),3),C),$=new f(C),S=function(){for(var N=$.g(i),F=u,D=0;N<l;)N=(N+D)*r,F*=r,D=$.g(1);for(;N>=c;)N/=2,F/=2,D>>>=1;return(N+D)/F};return S.int32=function(){return $.g(4)|0},S.quick=function(){return $.g(4)/4294967296},S.double=S,x(w($.S),n),(v.pass||k||function(N,F,D,E){return E&&(E.S&&m(E,$),N.state=function(){return m($,{})}),D?(s[a]=N,F):N})(S,I,"global"in v?v.global:this==s,v.state)}function f(y){var v,k=y.length,C=this,I=0,$=C.i=C.j=0,S=C.S=[];for(k||(y=[k++]);I<r;)S[I]=I++;for(I=0;I<r;I++)S[I]=S[$=h&$+y[I%k]+(v=S[I])],S[$]=v;(C.g=function(N){for(var F,D=0,E=C.i,A=C.j,T=C.S;N--;)F=T[E=h&E+1],D=D*r+T[h&(T[E]=T[A=h&A+F])+(T[A]=F)];return C.i=E,C.j=A,D})(r)}function m(y,v){return v.i=y.i,v.j=y.j,v.S=y.S.slice(),v}function g(y,v){var k=[],C=typeof y,I;if(v&&C=="object")for(I in y)try{k.push(g(y[I],v-1))}catch{}return k.length?k:C=="string"?y:y+"\0"}function x(y,v){for(var k=y+"",C,I=0;I<k.length;)v[h&I]=h&(C^=v[h&I]*19)+k.charCodeAt(I++);return w(v)}function b(){try{var y;return d&&(y=d.randomBytes)?y=y(r):(y=new Uint8Array(r),(t.crypto||t.msCrypto).getRandomValues(y)),w(y)}catch{var v=t.navigator,k=v&&v.plugins;return[+new Date,t,k,t.screen,w(n)]}}function w(y){return String.fromCharCode.apply(0,y)}if(x(s.random(),n),e.exports){e.exports=p;try{d=B3t}catch{}}else s["seed"+a]=p})(typeof self<"u"?self:oc,[],Math)})(O3t);var P3t=hE,W3t=dE,V3t=pE,U3t=fE,G3t=mE,H3t=gE,Ic=xE;Ic.alea=P3t,Ic.xor128=W3t,Ic.xorwow=V3t,Ic.xorshift7=U3t,Ic.xor4096=G3t,Ic.tychei=H3t;var bE=Ic;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pU{constructor(t,n,s,r,i){this.mean=t,this.stdDev=n,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=i||Math.random();this.random=bE.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,n,s=!1;for(;!s;){let r,i,o;do r=2*this.random()-1,i=2*this.random()-1,o=r*r+i*i;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*r*a,n=this.mean+this.stdDev*i*a,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class q3t{constructor(t=0,n=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=n-t,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${n} <= 1 and dtype is not float`);this.random=bE.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3t(e,t=0,n=1,s,r){if(Pa(e),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const i=new pU(t,n,s,!1,r),o=ke(e,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const K3t=J({randomNormal_:j3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3t(e,t=0,n=1,s="float32",r){Pa(e);const i=ke(e,s),o=new q3t(t,n,null,r);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const bw=J({randomUniform_:X3t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zg(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return Z.runKernel(lN,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3t(e){const n={input:P(e,"input","real")};return Z.runKernel(cN,n)}const yw=J({real_:Y3t});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3t(e){const n={x:P(e,"x","reciprocal")};return Z.runKernel(ag,n)}const J3t=J({reciprocal_:Z3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q3t(e){const n={x:P(e,"x","relu")};return Z.runKernel(ug,n)}const Ha=J({relu_:Q3t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tMt(e){const n={x:P(e,"x","relu6")};return Z.runKernel(lg,n)}const fU=J({relu6_:tMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eMt(e,t){const s={x:P(e,"x","reverse")},r={dims:t};return Z.runKernel(qy,s,r)}const Cc=J({reverse_:eMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nMt(e){const n={x:P(e,"x","round")};return Z.runKernel(cg,n)}const mU=J({round_:nMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sMt(e){const n={x:P(e,"x","rsqrt","float32")};return Z.runKernel(hg,n)}const gU=J({rsqrt_:sMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rMt(e){const n={x:P(e,"x","selu")};return Z.runKernel(dg,n)}const xU=J({selu_:rMt});function iMt(e,t,n,s,r,i=[1,1],o="NHWC"){const a=P(e,"x","separableConv2d"),u=P(t,"depthwiseFilter","separableConv2d"),l=P(n,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(a.rank===3&&(h=!0,c=nt(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");L(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),L(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),L(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),L(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),L(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=u.shape[2],p=u.shape[3];L(l.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`);const f=QN(c,u,s,r,o,i),g=wc(f,l,1,"valid",o);return h?nt(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const bU=J({separableConv2d_:iMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oMt(e){const n={x:P(e,"x","sign")};return Z.runKernel(mg,n)}const aMt=J({sign_:oMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uMt(e){const n={x:P(e,"x","sin","float32")};return Z.runKernel(pg,n)}const yU=J({sin_:uMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lMt(e){const n={x:P(e,"x","sinh")};return Z.runKernel(fg,n)}const wU=J({sinh_:lMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cMt(e,t,n){const s=P(e,"x","slice1d");return L(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Ke(s,[t],[n])}const yE=J({slice1d_:cMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hMt(e,t,n){const s=P(e,"x","slice2d");return L(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Ke(s,t,n)}const vU=J({slice2d_:hMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dMt(e,t,n){const s=P(e,"x","slice3d");return L(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Ke(s,t,n)}const wE=J({slice3d_:dMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pMt(e,t,n){const s=P(e,"x","slice4d");return L(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Ke(s,t,n)}const ww=J({slice4d_:pMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fMt(e,t=-1){const n=P(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return Z.runKernel(Jy,s,r)}const vE=J({softmax_:fMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mMt(e){L(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return Z.runKernel(JS,t)}const kU=J({fft_:mMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gMt(e){L(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return Z.runKernel(eN,t)}const kE=J({ifft_:gMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xMt(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=nt(e,[n,t]);s=kE(r)}else{const r=[n,2*(t-1)],i=nt(yw(e),[n,t]),o=nt(nE(e),[n,t]),a=Cc(Ke(i,[0,1],[n,t-2]),1),u=q(Cc(Ke(o,[0,1],[n,t-2]),1),ce(-1)),l=Hs([i,a],1),c=Hs([o,u],1),h=nt(pc(l,c),[r[0],r[1]]);s=kE(h)}if(s=yw(s),e.rank===3&&e.shape[0]!==0){const r=s,i=e.shape[0];s=nt(s,[i,s.shape[0]/i,s.shape[1]]),r.dispose()}return s}const bMt=J({irfft_:xMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yMt(e,t,n=0){const r={x:P(e,"x","split")},i={numOrSizeSplits:t,axis:n};return Z.runKernel(Zy,r,i)}const pi=J({split_:yMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wMt(e,t){L(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(t!=null&&t<n){const f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=Ke(e,f,m),n=t}else if(t!=null&&t>n){const f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=Hs([e,bs(f)],e.shape.length-1),n=t}else r=e;const i=Fe(r),o=nt(pc(r,i),[s,n]),a=kU(o),u=Math.floor(n/2)+1,l=yw(a),c=nE(a),h=pi(l,[u,n-u],l.shape.length-1),d=pi(c,[u,n-u],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=u,nt(pc(h[0],d[0]),p)}const IU=J({rfft_:wMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vMt(e,t){let n=P(e,"a","squaredDifference"),s=P(t,"b","squaredDifference");[n,s]=_n(n,s),ge(n.shape,s.shape);const r={a:n,b:s},i={};return Z.runKernel(yg,r,i)}const CU=J({squaredDifference_:vMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kMt(e,t){const n=P(e,"x","squeeze","string_or_numeric");return nt(n,Au(n.shape,t).newShape)}const Bg=J({squeeze_:kMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IMt(e,t=0){const n=LV(e,"tensors","stack","string_or_numeric");L(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&L(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const s=n,r={axis:t};return Z.runKernel(By,s,r)}const ua=J({stack_:IMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CMt(e,t=0){const s={x:P(e,"x","step")},r={alpha:t};return Z.runKernel(Cg,s,r)}const Pg=J({step_:CMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Mt(e,t,n,s,r=0,i=0,o=0,a=0,u=0){const c={x:P(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:s,beginMask:r,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:u};return Z.runKernel(bN,c,h)}const SMt=J({stridedSlice_:$Mt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NMt(e){const n={x:P(e,"x","tan","float32")};return Z.runKernel(vg,n)}const EMt=J({tan_:NMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jr(e,t){CS(e);const n=Eg(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Dg(e,null,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vw(e,t,n){if(CS(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Eg(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Dg(e,t,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DMt(e,t,n){if(CS(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=Eg(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Dg(e,t,s,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TMt(e,t=1,n=!0){const s=P(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const i={x:s},o={k:t,sorted:n},[a,u]=Z.runKernel(kN,i,o);return{values:a,indices:u}}const AMt=J({topk_:TMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FMt(e,t=0,n=1,s,r){if(Pa(e),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new pU(t,n,s,!0,r),o=ke(e,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const $U=J({truncatedNormal_:FMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RMt(e,t=0){const n=P(e,"x","unique","string_or_numeric");L(n.rank>0,()=>"The input tensor must be at least 1D");const s={x:n},r={axis:t},[i,o]=Z.runKernel(CN,s,r);return{values:i,indices:o}}const _Mt=J({unique_:RMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MMt(e,t,n){const s=P(e,"x","unsortedSegmentSum"),r=P(t,"segmentIds","unsortedSegmentSum","int32");L(ld(n),()=>"numSegments must be of dtype int");const i={x:s,segmentIds:r},o={numSegments:n};return Z.runKernel(tw,i,o)}const SU=J({unsortedSegmentSum_:MMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OMt(e,t=0){const n=P(e,"x","unstack","string_or_numeric");L(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const s={value:n},r={axis:t};return Z.runKernel(Qy,s,r)}const $c=J({unstack_:OMt});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LMt(e,t=!0,n,s){return Z.makeVariable(e,t,n,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NU(e,t){const n=[];for(let i=0;i<t.length;i++)t[i]&&n.push(i);const s=ke(e,"int32"),r=ke([n.length,e.length],"int32");for(let i=0;i<n.length;i++){const o=s.indexToLoc(n[i]),a=i*e.length;r.values.set(o,a)}return r.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zMt(e,t,n){const s=P(e,"x","transpose");if(t==null&&(t=s.shape.map((o,a)=>a).reverse()),L(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(o=>{L(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const r={x:s},i={perm:t};return s.dtype==="complex64"?ht(()=>{let o=yw(s),a=nE(s);return o=Z.runKernel(pd,{x:o},i),a=Z.runKernel(pd,{x:a},i),n&&(a=Nn(a)),pc(o,a)}):Z.runKernel(pd,r,i)}const De=J({transpose_:zMt});function EU(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(i+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(i+` update.rank != ${r+e.length-s}`);for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(i+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+s])throw new Error(i+` updates.shape[${o+r}] (${n.shape[o+r]}) != shape[${o+r}] (${e[o+r]})`)}function BMt(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}EU(n,t,e)}function Wg(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,i=n.length;let o=1;for(let h=r;h<i;++h)o*=n[h];const a=r<1?1:r,u=xt(t.shape)/a,l=[...ee(n.slice(0,r)),1],c=xt(n);return{sliceRank:r,numUpdates:u,sliceSize:o,strides:l,outputSize:c}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PMt(e,t){if(t==null)return e.shape.slice();if(We(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WMt(e,t,n,s){const r=P(e,"x","dropout");if(L(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),L(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof qn?r.clone():r;const i=PMt(r,n),o=1-t,a=ne(gw(Dt(bw(i,0,1,"float32",s),o)),o);return q(r,a)}const VMt=J({dropout_:WMt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UMt(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function DU(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let i=0;i<e;++i){const o=2*Math.PI*i/(e+s-1);r[i]=t-n*Math.cos(o)}return jr(r,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GMt(e,t,n,s,r,i="NHWC",o){let a=e;e.rank===3&&(a=nt(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=nt(t,[1,t.shape[0],t.shape[1],t.shape[2]])),L(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),L(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),L(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const l=i==="NHWC"?a.shape[3]:a.shape[1],c=i==="NHWC"?u.shape[3]:u.shape[1];L(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),L(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),Ir("conv2dDerFilter",r,o);const h={x:a,dy:u},d={strides:s,pad:r,dataFormat:i,dimRoundingMode:o,filterShape:n};return Z.runKernel(PS,h,d)}const IE=J({conv2DBackpropFilter_:GMt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CE(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return q(e,Pg(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function $E(e,t){let n=t;const s=es(e.shape,t.shape);return s.length>0&&(n=Yt(n,s)),nt(n,e.shape)}function SE(e,t,n,s){if(t==="linear")return e;if(t==="relu")return Ha(e);if(t==="elu")return pw(e);if(t==="relu6")return fU(e);if(t==="prelu")return cE(e,n);if(t==="leakyrelu")return sE(e,s);if(t==="sigmoid")return wd(e);throw new Error(`Unknown fused activation ${t}.`)}const NE=(e,t)=>!(e>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HMt({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",NE(Z.state.gradientDepth,u)===!1){L(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let k=wc(e,t,n,s,r,i,o);return a!=null&&(k=Dt(k,a)),SE(k,u,l,c)}const h=P(e,"x","conv2d","float32"),d=P(t,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=nt(h,[1,h.shape[0],h.shape[1],h.shape[2]])),L(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),L(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),Ir("fused conv2d",s,o);const m=r==="NHWC"?p.shape[3]:p.shape[1];L(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),L(Gs(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);const g=Fs(p.shape,d.shape,n,i,s,o);let x;a!=null&&(x=P(a,"bias","fused conv2d"),[x]=_n(x,h),r==="NHWC"?ge(g.outShape,x.shape):(L(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),L(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(l!=null){const k=l.shape;if(L(k.length<=1||k.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${k.length}.`),k.length===1)L(k[0]===1||k[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the number of output channels (${g.outChannels}).`);else if(k.length===3)try{ge(k,g.outShape)}catch{const I=`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(I)}b=P(l,"prelu weights","fused conv2d")}const w=(k,C)=>{L(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[I,$,S,N]=C,F=CE(k,S,u);L(bc(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const D=YN($.shape,F,I,n,s),E=IE($,F,I.shape,n,s),A=[D,E];if(N!=null){const T=$E(N,F);A.push(T)}return A},y={x:p,filter:d,bias:x,preluActivationWeights:b},v={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:c};return a==null?kc((C,I,$)=>{let S=Z.runKernel(sw,y,v);return $([I,C,S]),f&&(S=nt(S,[S.shape[1],S.shape[2],S.shape[3]])),{value:S,gradFunc:w}})(p,d):kc((C,I,$,S)=>{let N=Z.runKernel(sw,y,v);return S([I,C,N,$]),f&&(N=nt(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:w}})(p,d,x)}const qMt=J({fusedConv2d_:HMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jMt(e,t,n,s,r,i=[1,1],o){let a=e;e.rank===3&&(a=nt(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=nt(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:a,dy:u},c={strides:s,pad:r,dimRoundingMode:o,dilations:i,filterShape:n};return Z.runKernel(jS,l,c)}const KMt=J({depthwiseConv2dNativeBackpropFilter_:jMt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XMt(e,t,n,s,r,i=[1,1],o){let a=t,u=!1;t.rank===3&&(u=!0,a=nt(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:a,filter:n},c={strides:s,pad:r,dimRoundingMode:o,dilations:i,inputShape:e},h=Z.runKernel(KS,l,c);return u?nt(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const YMt=J({depthwiseConv2dNativeBackpropInput_:XMt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZMt({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(NE(Z.state.gradientDepth,i)===!1){let N=Ve(e,t,n,s);return r!=null&&(N=Dt(N,r)),SE(N,i,o,a)}let u=P(e,"a","fused matMul"),l=P(t,"b","fused matMul");[u,l]=_n(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=s?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=s?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=xt(f),x=xt(m);L(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${s} must match.`);const w=ge(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),y=n?nt(u,[g,c,d]):nt(u,[g,d,c]),v=s?nt(l,[x,p,h]):nt(l,[x,h,p]);let k;r!=null&&(k=P(r,"bias","fused matMul"),[k]=_n(k,u),ge(w,k.shape));let C;o!=null&&(C=P(o,"prelu weights","fused matMul"));const I=(N,F)=>{const[D,E,A,T]=F,R=CE(nt(N,A.shape),A,i);let _,M;if(!n&&!s?(_=Ve(R,E,!1,!0),M=Ve(D,R,!0,!1)):!n&&s?(_=Ve(R,E,!1,!1),M=Ve(R,D,!0,!1)):n&&!s?(_=Ve(E,R,!1,!0),M=Ve(D,R,!1,!1)):(_=Ve(E,R,!0,!0),M=Ve(R,D,!0,!0)),r!=null){const z=$E(T,R);return[_,M,z]}else return[_,M]},$={a:y,b:v,bias:k,preluActivationWeights:C},S={transposeA:n,transposeB:s,activation:i,leakyreluAlpha:a};return r==null?kc((F,D,E)=>{const A=Z.runKernel(nw,$,S);return E([F,D,A]),{value:nt(A,w),gradFunc:I}})(y,v):kc((F,D,E,A)=>{const T=Z.runKernel(nw,$,S);return A([F,D,T,E]),{value:nt(T,w),gradFunc:I}})(y,v,k)}const TU=J({fusedMatMul_:ZMt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JMt(e){return DU(e,.54,.46)}const QMt=J({hammingWindow_:JMt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tOt(e){return DU(e,.5,.5)}const AU=J({hannWindow_:tOt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eOt(e,t,n,s=!1,r=0){let i=0;const o=[];for(;i+t<=e.size;)o.push(Ke(e,i,t)),i+=n;if(s)for(;i<e.size;){const a=i+t-e.size,u=Hs([Ke(e,i,t-a),vd([a],r)]);o.push(u),i+=n}return o.length===0?vw([],[0,t]):nt(Hs(o),[o.length,t])}const FU=J({frame_:eOt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nOt(e,t,n,s,r=AU){s==null&&(s=UMt(t));const i=FU(e,t,n),o=q(i,r(t));return IU(o,s)}const sOt=J({stft_:nOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rOt(e,t,n,s,r="bilinear",i=0){const o=P(e,"image","cropAndResize"),a=P(t,"boxes","cropAndResize","float32"),u=P(n,"boxInd","cropAndResize","int32"),l=a.shape[0];L(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),L(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${a.shape}.`),L(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${a.shape}.`),L(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),L(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),L(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const c={image:o,boxes:a,boxInd:u},h={method:r,extrapolationValue:i,cropSize:s};return Z.runKernel(GS,c,h)}const iOt=J({cropAndResize_:rOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oOt(e){const t=P(e,"image","flipLeftRight","float32");L(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return Z.runKernel(tN,n,{})}const aOt=J({flipLeftRight_:oOt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uOt(e){const t=P(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];L(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),L(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,$o(t,r)}const lOt=J({grayscaleToRGB_:uOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cOt(e,t,n=0,s=.5){const r=P(e,"image","rotateWithOffset","float32");L(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const i={image:r},o={radians:t,fillValue:n,center:s};return Z.runKernel($N,i,o)}const hOt=J({rotateWithOffset_:cOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $d(e,t,n,s,r,i){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),i==null&&(i=0);const o=e.shape[0];return n=Math.min(n,o),L(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),L(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),L(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),L(t.rank===1,()=>"scores must be a 1D tensor"),L(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),L(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dOt(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=P(e,"boxes","nonMaxSuppression","float32"),o=P(t,"scores","nonMaxSuppression","float32"),a=$d(i,o,n,s,r);n=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return Z.runKernel(oN,{boxes:i,scores:o},u)}const pOt=J({nonMaxSuppression_:dOt});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fOt(e,t,n){const s=mOt(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function mOt(e,t,n){return xOt(e,t,n||gOt)}function gOt(e,t){return e>t?1:e<t?-1:0}function xOt(e,t,n){let s=0,r=e.length,i=0,o=!1;for(;s<r;){i=s+(r-s>>>1);const a=n(t,e[i]);a>0?s=i+1:(r=i,o=!a)}return o?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EE(e,t,n,s,r){return AE(e,t,n,s,r,0)}function DE(e,t,n,s,r,i){return AE(e,t,n,s,r,0,!1,i,!0)}function TE(e,t,n,s,r,i){return AE(e,t,n,s,r,i,!0)}function AE(e,t,n,s,r,i,o=!1,a=!1,u=!1){const l=[];for(let g=0;g<t.length;g++)t[g]>r&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(RU);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<n&&l.length>0;){const g=l.pop(),{score:x,boxIndex:b,suppressBeginIndex:w}=g;if(x<r)break;let y=!1;for(let v=h.length-1;v>=w;--v){const k=bOt(e,b,h[v]);if(k>=s){y=!0;break}if(g.score=g.score*yOt(s,c,k),g.score<=r)break}g.suppressBeginIndex=h.length,y||(g.score===x?(h.push(b),d.push(g.score)):g.score>r&&fOt(l,g,RU))}const p=h.length,f=n-p;a&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return o&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function bOt(e,t,n){const s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),i=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(a-i)*(u-o),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(i,l),g=Math.max(o,c),x=Math.min(a,h),b=Math.min(u,d),w=Math.max(x-m,0)*Math.max(b-g,0);return w/(p+f-w)}function yOt(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function RU(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function wOt(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=P(e,"boxes","nonMaxSuppressionAsync"),o=P(t,"scores","nonMaxSuppressionAsync"),a=$d(i,o,n,s,r);n=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const u=await Promise.all([i.data(),o.data()]),l=u[0],c=u[1],{selectedIndices:h}=EE(l,c,n,s,r);return i!==e&&i.dispose(),o!==t&&o.dispose(),jr(h,"int32")}const vOt=wOt;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kOt(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const o=P(e,"boxes","nonMaxSuppression"),a=P(t,"scores","nonMaxSuppression"),u=$d(o,a,n,s,r,i);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,i=u.softNmsSigma;const l={boxes:o,scores:a},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i},h=Z.runKernel(uN,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}const IOt=J({nonMaxSuppressionWithScore_:kOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function COt(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const o=P(e,"boxes","nonMaxSuppressionAsync"),a=P(t,"scores","nonMaxSuppressionAsync"),u=$d(o,a,n,s,r,i);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,i=u.softNmsSigma;const l=await Promise.all([o.data(),a.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=TE(c,h,n,s,r,i);return o!==e&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:jr(d,"int32"),selectedScores:jr(p)}}const $Ot=COt;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SOt(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const o=P(e,"boxes","nonMaxSuppression"),a=P(t,"scores","nonMaxSuppression"),u=$d(o,a,n,s,r,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,d={boxes:o,scores:a},p={maxOutputSize:l,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:i},f=Z.runKernel(aN,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const NOt=J({nonMaxSuppressionPadded_:SOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function EOt(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const o=P(e,"boxes","nonMaxSuppressionAsync"),a=P(t,"scores","nonMaxSuppressionAsync"),u=$d(o,a,n,s,r,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([o.data(),a.data()]),{selectedIndices:f,validOutputs:m}=DE(d,p,l,c,h,i);return o!==e&&o.dispose(),a!==t&&a.dispose(),{selectedIndices:jr(f,"int32"),validOutputs:ce(m,"int32")}}const DOt=EOt;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TOt(e,t,n=!1,s=!1){const r=P(e,"images","resizeBilinear");L(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),L(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),L(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=r,o=!1;r.rank===3&&(o=!0,i=nt(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:i},u={alignCorners:n,halfPixelCenters:s,size:t},l=Z.runKernel(Hy,a,u);return o?nt(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const _U=J({resizeBilinear_:TOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AOt(e,t,n=!1,s=!1){const r=P(e,"images","resizeNearestNeighbor");L(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),L(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),L(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),L(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=r,o=!1;r.rank===3&&(o=!0,i=nt(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:i},u={alignCorners:n,halfPixelCenters:s,size:t},l=Z.runKernel(Gy,a,u);return o?nt(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const MU=J({resizeNearestNeighbor_:AOt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FOt(e,t="binary",n=!1,s=.5){const r=P(e,"image","threshold"),i=.2989,o=.587,a=.114,u=r.shape[0]*r.shape[1];let l=q(jr([s]),255),c,h,d,p;if(L(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),L(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),L(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),L(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[c,h,d]=pi(r,[1,1,1],-1);const g=q(c,i),x=q(h,o),b=q(d,a);p=Dt(Dt(g,x),b)}else p=e;if(t==="otsu"){const g=NRt(Wt(mU(p),"int32"),Tg([]),256);l=ROt(g,u)}const f=n?Cd(p,l):di(p,l);return Wt(q(f,255),"int32")}function ROt(e,t){let n=jr([-1]),s=jr([0]),r=jr([0]),i,o,a,u,l,c;for(let h=0;h<e.size-1;h++){i=Ke(e,0,h+1),o=Ke(e,h+1),l=ne(Yt(i),t),c=ne(Yt(o),t);const d=Yt(q(i,zg(0,i.size)));a=ne(d,Yt(i));const p=vd(o.shape,i.size),f=Dt(zg(0,o.size),p),m=q(o,f);u=ne(Yt(m),Yt(o));const g=Zt(a,u),x=Zt(a,u),b=q(l,c);r=q(q(b,g),x);const w=di(r,s);s=Hr(w,r,s),n=Hr(w,jr([h]),n)}return n}const _Ot=J({threshold_:FOt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MOt(e,t,n="nearest",s="constant",r=0,i){const o=P(e,"image","transform","float32"),a=P(t,"transforms","transform","float32");L(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),L(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),L(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const u={image:o,transforms:a},l={interpolation:n,fillMode:s,fillValue:r,outputShape:i};return Z.runKernel(IN,u,l)}const OOt=J({transform_:MOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LOt(e,t,n){L(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),L(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const s=P(e,"a","bandPart");L(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[i,o]=s.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=i),n<0&&(n=o);const a=nt(zg(0,i,1,"int32"),[-1,1]),u=zg(0,o,1,"int32"),l=Zt(a,u),c=Ga(Cd(l,ce(+t,"int32")),vc(l,ce(-n,"int32"))),h=bs([i,o],s.dtype);return nt(ua($c(nt(s,[-1,i,o])).map(d=>Hr(c,d,h))),r)}const zOt=J({bandPart_:LOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BOt(e){let t;if(Array.isArray(e)){t=!1,L(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=e[0].shape[0];for(let i=1;i<e.length;++i)L(e[i].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[i].shape[0]} vs. ${r})`)}else t=!0,e=pi(e,e.shape[0],0).map(r=>Bg(r,[0]));L(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],s=e;for(let r=0;r<e.length;++r)n.push(Z.tidy(()=>{let i=s[r];if(r>0)for(let o=0;o<r;++o){const a=q(Yt(q(n[o],i)),n[o]);i=Zt(i,a)}return ne(i,mw(i,"euclidean"))}));return t?ua(n,0):n}const POt=J({gramSchmidt_:BOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WOt(e,t=!1){if(L(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return OU(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((u,l)=>u*l),s=$c(nt(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],i=[];s.forEach(u=>{const[l,c]=OU(u,t);r.push(l),i.push(c)});const o=nt(ua(r,0),e.shape),a=nt(ua(i,0),e.shape);return[o,a]}}function OU(e,t=!1){return Z.tidy(()=>{L(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],s=e.shape[1];let r=aU(n),i=xc(e);const o=vw([[1]],[1,1]);let a=xc(o);const u=n>=s?s:n;for(let l=0;l<u;++l){const c=i,h=a,d=r;[a,i,r]=Z.tidy(()=>{const p=Ke(i,[l,l],[n-l,1]),f=mw(p),m=Ke(i,[l,l],[1,1]),g=Hr(di(m,0),vw([[-1]]),vw([[1]])),x=Zt(m,q(g,f)),b=ne(p,x);b.shape[0]===1?a=xc(o):a=Hs([o,Ke(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const w=Nn(ne(Ve(g,x),f)),y=Ke(i,[l,0],[n-l,s]),v=q(w,a),k=De(a);if(l===0)i=Zt(y,Ve(v,Ve(k,y)));else{const $=Zt(y,Ve(v,Ve(k,y)));i=Hs([Ke(i,[0,0],[l,s]),$],0)}const C=De(v),I=Ke(r,[0,l],[n,r.shape[1]-l]);if(l===0)r=Zt(I,Ve(Ve(I,a),C));else{const $=Zt(I,Ve(Ve(I,a),C));r=Hs([Ke(r,[0,0],[n,l]),$],1)}return[a,i,r]}),be([c,h,d])}return!t&&n>s&&(r=Ke(r,[0,0],[n,s]),i=Ke(i,[0,0],[s,s])),[r,i]})}const VOt=J({qr_:WOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Cr;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Cr||(Cr={}));function UOt(e,t,n=Cr.SUM_BY_NONZERO_WEIGHTS){const s=P(e,"losses","computeWeightedLoss");let r=null;t!=null&&(r=P(t,"weights","computeWeightedLoss"));const i=r==null?s:q(s,r);if(n===Cr.NONE)return i;if(n===Cr.SUM)return Yt(i);if(n===Cr.MEAN){if(r==null)return Ln(i);{const o=s.size/r.size,a=ne(Yt(i),Yt(r));return o>1?ne(a,ce(o)):a}}if(n===Cr.SUM_BY_NONZERO_WEIGHTS){if(r==null)return ne(Yt(i),ce(s.size));{const o=q(r,Pu(s.shape)),a=Wt(Yt(Lg(o,ce(0))),"float32");return ne(Yt(i),a)}}throw Error(`Unknown reduction: ${n}`)}const qa=J({computeWeightedLoss_:UOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GOt(e,t,n,s=Cr.SUM_BY_NONZERO_WEIGHTS){const r=P(e,"labels","absoluteDifference"),i=P(t,"predictions","absoluteDifference");let o=null;n!=null&&(o=P(n,"weights","absoluteDifference")),Fi(r.shape,i.shape,"Error in absoluteDifference: ");const a=gs(Zt(r,i));return qa(a,o,s)}const HOt=J({absoluteDifference_:GOt});function qOt(e,t,n,s,r=Cr.SUM_BY_NONZERO_WEIGHTS){const i=P(e,"labels","cosineDistance"),o=P(t,"predictions","cosineDistance");let a=null;s!=null&&(a=P(s,"weights","cosineDistance")),Fi(i.shape,o.shape,"Error in cosineDistance: ");const u=ce(1),l=Zt(u,Yt(q(i,o),n,!0));return qa(l,a,r)}const jOt=J({cosineDistance_:qOt});function KOt(e,t,n,s=Cr.SUM_BY_NONZERO_WEIGHTS){let r=P(e,"labels","hingeLoss");const i=P(t,"predictions","hingeLoss");let o=null;n!=null&&(o=P(n,"weights","hingeLoss")),Fi(r.shape,i.shape,"Error in hingeLoss: ");const a=ce(1);r=Zt(q(ce(2),r),a);const u=Ha(Zt(a,q(r,i)));return qa(u,o,s)}const XOt=J({hingeLoss_:KOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YOt(e,t,n,s=1,r=Cr.SUM_BY_NONZERO_WEIGHTS){const i=P(e,"labels","huberLoss"),o=P(t,"predictions","huberLoss");let a=null;n!=null&&(a=P(n,"weights","huberLoss")),Fi(i.shape,o.shape,"Error in huberLoss: ");const u=ce(s),l=gs(Zt(o,i)),c=xw(l,u),h=Zt(l,c),d=Dt(q(ce(.5),on(c)),q(u,h));return qa(d,a,r)}const ZOt=J({huberLoss_:YOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JOt(e,t,n,s=1e-7,r=Cr.SUM_BY_NONZERO_WEIGHTS){const i=P(e,"labels","logLoss"),o=P(t,"predictions","logLoss");let a=null;n!=null&&(a=P(n,"weights","logLoss")),Fi(i.shape,o.shape,"Error in logLoss: ");const u=ce(1),l=ce(s),c=Nn(q(i,zi(Dt(o,l)))),h=q(Zt(u,i),zi(Dt(Zt(u,o),l))),d=Zt(c,h);return qa(d,a,r)}const QOt=J({logLoss_:JOt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tLt(e,t,n,s=Cr.SUM_BY_NONZERO_WEIGHTS){const r=P(e,"labels","meanSquaredError"),i=P(t,"predictions","meanSquaredError");let o=null;n!=null&&(o=P(n,"weights","meanSquaredError")),Fi(r.shape,i.shape,"Error in meanSquaredError: ");const a=CU(r,i);return qa(a,o,s)}const eLt=J({meanSquaredError_:tLt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nLt(e,t){const n=P(e,"labels","sigmoidCrossEntropyWithLogits"),s=P(t,"logits","sigmoidCrossEntropyWithLogits");Fi(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Ha(s),i=q(s,n),o=rE(Li(Nn(gs(s))));return Dt(Zt(r,i),o)}function sLt(e,t,n,s=0,r=Cr.SUM_BY_NONZERO_WEIGHTS){let i=P(e,"multiClassLabels","sigmoidCrossEntropy");const o=P(t,"logits","sigmoidCrossEntropy");let a=null;if(n!=null&&(a=P(n,"weights","sigmoidCrossEntropy")),Fi(i.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){const l=ce(s),c=ce(1),h=ce(.5);i=Dt(q(i,Zt(c,l)),q(h,l))}const u=nLt(i,o);return qa(u,a,r)}const rLt=J({sigmoidCrossEntropy_:sLt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iLt(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return kc((r,i,o)=>{const u=cU(i,[n],!0),l=Zt(Wt(i,"float32"),u);o([r,l]);const c=Nn(q(l,r));return{value:Yt(c,[n]),gradFunc:(p,f)=>{const[m,g]=f,x=Mn(p.shape,[n]);return[q(nt(p,x),Zt(Wt(m,"float32"),Li(g))),q(nt(p,x),Zt(Li(g),Wt(m,"float32")))]}}})(e,t)}function oLt(e,t,n,s=0,r=Cr.SUM_BY_NONZERO_WEIGHTS){let i=P(e,"onehotLabels","softmaxCrossEntropy");const o=P(t,"logits","softmaxCrossEntropy");let a=null;if(n!=null&&(a=P(n,"weights","softmaxCrossEntropy")),Fi(i.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){const l=ce(s),c=ce(1),h=ce(i.shape[1]);i=Dt(q(i,Zt(c,l)),ne(l,h))}const u=iLt(i,o);return qa(u,a,r)}const aLt=J({softmaxCrossEntropy_:oLt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uLt(e,t,n,s){const r=P(e,"indices","sparseFillEmptyRows","int32"),i=P(t,"values","sparseFillEmptyRows"),o=P(n,"denseShape","sparseFillEmptyRows","int32"),a=P(s,"defaultValue","sparseFillEmptyRows",i.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const u={indices:r,values:i,denseShape:o,defaultValue:a},l=Z.runKernel(pN,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}const lLt=J({sparseFillEmptyRows_:uLt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cLt(e,t,n){const s=P(e,"inputIndices","sparseReshape","int32"),r=P(t,"inputShape","sparseReshape","int32"),i=P(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const o={inputIndices:s,inputShape:r,newShape:i},a=Z.runKernel(fN,o);return{outputIndices:a[0],outputShape:a[1]}}const hLt=J({sparseReshape_:cLt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dLt(e,t,n){const s=P(e,"data","sparseSegmentMean"),r=P(t,"indices","sparseSegmentMean","int32"),i=P(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);const o={data:s,indices:r,segmentIds:i};return Z.runKernel(mN,o)}const pLt=J({sparseSegmentMean_:dLt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fLt(e,t,n){const s=P(e,"data","sparseSegmentSum"),r=P(t,"indices","sparseSegmentSum","int32"),i=P(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);const o={data:s,indices:r,segmentIds:i};return Z.runKernel(gN,o)}const mLt=J({sparseSegmentSum_:fLt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gLt(e,t,n,s,r,i,o,a){const u=P(e,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=P(t,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:r,rightPad:i,padWidth:o,preserveShortSequences:a},h={data:u,dataSplits:l},d=Z.runKernel(yN,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}const xLt=J({stringNGrams_:gLt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bLt(e,t,n=!0){const s=P(e,"input","stringSplit","string"),r=P(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const i={skipEmpty:n},o={input:s,delimiter:r},a=Z.runKernel(wN,o,i);return{indices:a[0],values:a[1],shape:a[2]}}const yLt=J({stringSplit_:bLt});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wLt(e,t){const n=P(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return Z.runKernel(vN,r,s)}const vLt=J({stringToHashBucketFast_:wLt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sc={flipLeftRight:aOt,grayscaleToRGB:lOt,resizeNearestNeighbor:MU,resizeBilinear:_U,rotateWithOffset:hOt,cropAndResize:iOt,nonMaxSuppression:pOt,nonMaxSuppressionAsync:vOt,nonMaxSuppressionWithScore:IOt,nonMaxSuppressionWithScoreAsync:$Ot,nonMaxSuppressionPadded:NOt,nonMaxSuppressionPaddedAsync:DOt,threshold:_Ot,transform:OOt},kLt={bandPart:zOt,gramSchmidt:POt,qr:VOt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sd{getClassName(){return this.constructor.className}static fromConfig(t,n){return new t(n)}}class Pi{constructor(){this.classNameMap={}}static getMap(){return Pi.instance==null&&(Pi.instance=new Pi),Pi.instance}static register(t){Pi.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Nt(e){L(e.className!=null,()=>"Class being registered does not have the static className property defined."),L(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),L(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Pi.register(e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wu extends Sd{minimize(t,n=!1,s){const{value:r,grads:i}=this.computeGradients(t,s);if(s!=null){const o=s.map(a=>({name:a.name,tensor:i[a.name]}));this.applyGradients(o)}else this.applyGradients(i);return be(i),n?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,n){return K_t(t,n)}dispose(){this.iterations_!=null&&be(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ce(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Wu,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LU extends Wu{constructor(t,n,s=null){super(),this.learningRate=t,this.rho=n,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=Z.backend.epsilon())}static get className(){return"Adadelta"}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=Z.registeredVariables[s],o=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:ht(()=>Fe(i).variable(o))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:ht(()=>Fe(i).variable(o))});const a=Array.isArray(t)?t[r].tensor:t[s];if(a==null)return;const u=this.accumulatedGrads[r].variable,l=this.accumulatedUpdates[r].variable;ht(()=>{const c=Dt(q(u,this.rho),q(on(a),1-this.rho)),h=q(ne(or(Dt(l,this.epsilon)),or(Dt(u,this.epsilon))),a),d=Dt(q(l,this.rho),q(on(h),1-this.rho));u.assign(c),l.assign(d);const p=Dt(q(h,-this.learningRate),i);i.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(be(this.accumulatedGrads.map(t=>t.variable)),be(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=t.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,n){return new t(n.learningRate,n.rho,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zU extends Wu{constructor(t,n=.1){super(),this.learningRate=t,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}static get className(){return"Adagrad"}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=Z.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:ht(()=>vd(i.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(t)?t[r].tensor:t[s];if(o==null)return;const a=this.accumulatedGrads[r].variable;ht(()=>{const u=Dt(a,on(o));a.assign(u);const l=Dt(q(ne(o,or(Dt(u,Z.backend.epsilon()))),-this.learningRate),i);i.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&be(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,n){return new t(n.learningRate,n.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BU extends Wu{constructor(t,n,s,r=null){super(),this.learningRate=t,this.beta1=n,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ht(()=>{this.accBeta1=ce(n).variable(),this.accBeta2=ce(s).variable()}),r==null&&(this.epsilon=Z.backend.epsilon())}static get className(){return"Adam"}applyGradients(t){const n=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);ht(()=>{const s=Zt(1,this.accBeta1),r=Zt(1,this.accBeta2);n.forEach((i,o)=>{const a=Z.registeredVariables[i],u=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:ht(()=>Fe(a).variable(u))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${i}/v`,variable:ht(()=>Fe(a).variable(u))});const l=Array.isArray(t)?t[o].tensor:t[i];if(l==null)return;const c=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=Dt(q(c,this.beta1),q(l,1-this.beta1)),p=Dt(q(h,this.beta2),q(on(l),1-this.beta2)),f=ne(d,s),m=ne(p,r);c.assign(d),h.assign(p);const g=Dt(q(ne(f,Dt(or(m),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(q(this.accBeta1,this.beta1)),this.accBeta2.assign(q(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&be(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&be(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t),ht(()=>{this.accBeta1.assign(Id(this.beta1,this.iterations_+1)),this.accBeta2.assign(Id(this.beta2,this.iterations_+1))});const n=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,n){return new t(n.learningRate,n.beta1,n.beta2,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PU extends Wu{constructor(t,n,s,r=null,i=0){super(),this.learningRate=t,this.beta1=n,this.beta2=s,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ht(()=>{this.iteration=ce(0).variable(),this.accBeta1=ce(n).variable()}),r==null&&(this.epsilon=Z.backend.epsilon())}static get className(){return"Adamax"}applyGradients(t){const n=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);ht(()=>{const s=Zt(1,this.accBeta1),r=ne(-this.learningRate,Dt(q(this.iteration,this.decay),1));n.forEach((i,o)=>{const a=Z.registeredVariables[i],u=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:Fe(a).variable(u)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${i}/v`,variable:Fe(a).variable(u)});const l=Array.isArray(t)?t[o].tensor:t[i];if(l==null)return;const c=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=Dt(q(c,this.beta1),q(l,1-this.beta1)),p=q(h,this.beta2),f=gs(l),m=Bu(p,f);c.assign(d),h.assign(m);const g=Dt(q(ne(r,s),ne(d,Dt(m,this.epsilon))),a);a.assign(g)}),this.iteration.assign(Dt(this.iteration,1)),this.accBeta1.assign(q(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&be(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&be(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,n){return new t(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FE extends Wu{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}static get className(){return"SGD"}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=Array.isArray(t)?t[r].tensor:t[s];if(i==null)return;const o=Z.registeredVariables[s];ht(()=>{const a=Dt(q(this.c,i),o);o.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=oa(ce(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,n){return new t(n.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WU extends FE{constructor(t,n,s=!1){super(t),this.learningRate=t,this.momentum=n,this.useNesterov=s,this.accumulations=[],this.m=ce(this.momentum)}static get className(){return"Momentum"}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=Z.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:ht(()=>Fe(i).variable(!1))});const o=this.accumulations[r].variable,a=Array.isArray(t)?t[r].tensor:t[s];a!=null&&ht(()=>{let u;const l=Dt(q(this.m,o),a);this.useNesterov?u=Dt(q(this.c,Dt(a,q(l,this.m))),i):u=Dt(q(this.c,l),i),o.assign(l),i.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&be(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,n){return new t(n.learningRate,n.momentum,n.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VU extends Wu{constructor(t,n=.9,s=0,r=null,i=!1){if(super(),this.learningRate=t,this.decay=n,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,r==null&&(this.epsilon=Z.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}static get className(){return"RMSProp"}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const i=Z.registeredVariables[s],o=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:ht(()=>Fe(i).variable(o))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:ht(()=>Fe(i).variable(o))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:ht(()=>Fe(i).variable(o))});const a=Array.isArray(t)?t[r].tensor:t[s];if(a==null)return;const u=this.accumulatedMeanSquares[r].variable,l=this.accumulatedMoments[r].variable;ht(()=>{const c=Dt(q(u,this.decay),q(on(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=Dt(q(h,this.decay),q(a,1-this.decay)),p=ne(q(a,this.learningRate),or(Zt(c,Dt(on(d),this.epsilon)))),f=Dt(q(l,this.momentum),p);u.assign(c),h.assign(d),l.assign(f);const m=Zt(i,f);i.assign(m)}else{const h=Dt(q(u,this.decay),q(on(a),1-this.decay)),d=Dt(q(l,this.momentum),ne(q(a,this.learningRate),or(Dt(h,this.epsilon))));u.assign(h),l.assign(d);const p=Zt(i,d);i.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&be(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&be(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&be(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(t){t=await this.extractIterations(t);const n=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,n).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=t.slice(n,n*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(n*2,n*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,n){return new t(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ILt=[LU,zU,BU,PU,WU,VU,FE];function CLt(){for(const e of ILt)Nt(e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Lt="model",SLt=".json",NLt=".weights.bin";function UU(e){return new Promise(t=>setTimeout(t)).then(e)}class Nc{constructor(t){if(!pt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Nc.URL_SCHEME)&&(t=t.slice(Nc.URL_SCHEME.length)),(t==null||t.length===0)&&(t=$Lt),this.modelJsonFileName=t+SLt,this.weightDataFileName=t+NLt}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r=VV(t,s),i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=i,await UU(()=>o.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=n,await UU(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:hw(t)}}}}Nc.URL_SCHEME="downloads://";const ELt=e=>pt().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Nc.URL_SCHEME)?DLt(e.slice(Nc.URL_SCHEME.length)):null;ts.registerSaveRouter(ELt);function DLt(e="model"){return new Nc(e)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(e,t,n,s){o(e),n=n??0,s=s??1,a(n,s);let r=0;const i=u=>(u.then(l=>{const c=n+ ++r/e.length*(s-n);return t(c),l}),u);function o(u){L(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function a(u,l){L(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),L(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),L(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(e.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function TLt(e,t){t==null&&(t={});const n=t.fetchFunc==null?pt().platform.fetch:t.fetchFunc,s=e.map(h=>n(h,t.requestInit,{isBinary:!0})),r=0,i=.5,a=(t.onProgress==null?await Promise.all(s):await GU(s,t.onProgress,r,i)).map(h=>h.arrayBuffer()),u=.5,l=1;return t.onProgress==null?await Promise.all(a):await GU(a,t.onProgress,u,l)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ALt="application/octet-stream",FLt="application/json";class RE{constructor(t,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.onProgress=n.onProgress,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(L(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=pt().platform.fetch,L(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&L(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r=VV(t,s);n.body.append("model.json",new Blob([JSON.stringify(r)],{type:FLt}),"model.json"),t.weightData!=null&&n.body.append("model.weights.bin",new Blob([t.weightData],{type:ALt}),"model.weights.bin");const i=await this.fetch(this.path,n);if(i.ok)return{modelArtifactsInfo:hw(t),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await t.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const s=n.modelTopology,r=n.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return uFt(n,i=>this.loadWeights(i))}async loadWeights(t){const n=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=RLt(n),i=this.weightPathPrefix||s,o=lFt(t),a=[],u=[];for(const c of t)for(const h of c.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(h)):a.push(i+h+r);this.weightUrlConverter&&a.push(...await Promise.all(u));const l=await TLt(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,WV(l)]}}RE.URL_SCHEME_REGEX=/^https?:\/\//;function RLt(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function HU(e){return e.match(RE.URL_SCHEME_REGEX)!=null}const qU=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>HU(s)):n=HU(e),n)return jU(e,t)}return null};ts.registerSaveRouter(qU),ts.registerLoadRouter(qU);function jU(e,t){return new RE(e,t)}function _Lt(e,t){return jU(e,t)}function _E(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(xt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,i=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const a=e.shape,u=r.slice();u.pop();let l=1;for(let h=i;h<n;++h)l*=a[h],u.push(a[h]);const c=[...ee(e.shape).map(h=>h/l),1].slice(0,i);return[u,o,l,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ME=-2,MLt=-1;function OE(e,t,n){const s=e.shape.length;L(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),L(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)L(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function OLt(e){const t=[];let n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function LE(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function KU(e,t,n,s){const r=[...e];for(let i=r.length;i<s.length;i++)r.push(1);for(let i=0;i<n;i++)i===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function XU(e,t,n){return n<=e?n:n-(t-1)}function YU(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function LLt(e,t,n,s,r,i,o,a,u){const l=e.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const p=t[0],f=n+1;c=ZU(o,p,f,s,e),h=JU(a,p,f,r,e),d=KU(i,p,f,e)}else for(let p=0;p<l;p++)c[p]=t5(o,s,i,e,p,u),h[p]=e5(a,r,i,e,p,u),d[p]=QU(i,p,u);return{begin:c,end:h,strides:d}}function ZU(e,t,n,s,r){const i=[...r],o=YU(n,t);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=0;else{const u=XU(t,n,a);let l=s[u];e&1<<u&&(l=0),i[a]=l}return i}function JU(e,t,n,s,r){const i=[...r],o=YU(n,t);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const u=XU(t,n,a);let l=s[u];e&1<<u&&(l=Number.MAX_SAFE_INTEGER),i[a]=l}for(let a=0;a<i.length;a++){const u=r[a];i[a]<0&&(i[a]+=u),i[a]=ic(0,i[a],r[a])}return i}function QU(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function t5(e,t,n,s,r,i){let o=t[r];const a=n[r]||1;(e&1<<r||i&1<<r||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const u=s[r];return o<0&&(o+=u),o=ic(0,o,u-1),o}function e5(e,t,n,s,r,i){let o=t[r];const a=n[r]||1;(e&1<<r||i&1<<r||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const u=s[r];return o<0&&(o+=u),a>0?o=ic(0,o,u):o=ic(-1,o,u-1),o}function zE(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function BE(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function kw(e,t,n){let s;const r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(o=>{L(o!==-1,()=>"slice() does not support negative begin indexing.")});let i;return n==null?i=new Array(r).fill(-1):typeof n=="number"?i=[n,...new Array(r-1).fill(-1)]:n.length<r?i=n.concat(new Array(r-n.length).fill(-1)):i=n,i=i.map((o,a)=>o>=0?o:(L(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),e.shape[a]-s[a])),[s,i]}function PE(e,t,n,s,r,i,o,a,u){let l;if(s==null?(l=new Array(t.length),l.fill(1)):l=s,o!=null&&o&o-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:u};for(let w=0;w<h.dims;w++)c&&1<<w&a&&h.numAddAxisAfterEllipsis++,1<<w&o&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};zLt(h,d);let p=!0,f=!0,m=!0;const g=[],x=[];for(let w=0;w<e.length;++w){if(d.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const y=!!(d.shrinkAxisMask&1<<w),v=e[w];if(v===-1){g.push(y?1:-1);continue}const k=[d.beginMask&1<<w,d.endMask&1<<w],C=[d.strides[w]>0?0:-1,d.strides[w]>0?v:v-1];if(y&&d.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[w]===1;const I=!!(d.beginMask&1<<w&&d.endMask&1<<w);if(d.beginValid&&d.endValid){if(y){const F=d.begin[w]<0?v+d.begin[w]:d.begin[w];if(d.begin[w]=F,d.end[w]=d.begin[w]+1,F<0||F>=v)throw Error(`slice index ${d.begin[w]} of dimension ${w} out of bounds.`)}else d.begin[w]=n5(d.begin[w],0,d.strides[w],v,k,C),d.end[w]=n5(d.end[w],1,d.strides[w],v,k,C);const N=d.strides[w]===1&&d.begin[w]===0&&d.end[w]===v;p=p&&N,f=f&&(w===0&&d.strides[w]===1||N)}else p=p&&d.strides[w]===1&&I,f=f&&(w===0&&d.strides[w]===1||I);let $,S=!1;if(d.beginValid&&d.endValid?($=d.end[w]-d.begin[w],S=!0):y?($=1,S=!0):I&&v>=0&&(d.strides[w]<0?$=-v:$=v,S=!0),S){let N;$===0||$<0!=d.strides[w]<0?N=0:N=Math.trunc($/d.strides[w])+($%d.strides[w]!==0?1:0),g.push(N)}else g.push(-1)}for(let w=0;w<d.finalShapeGatherIndices.length;++w){const y=d.finalShapeGatherIndices[w];y>=0?x.push(g[y]):y===ME&&x.push(1)}return{finalShapeSparse:x.filter((w,y)=>d.finalShapeGatherIndices[y]!==ME),finalShape:x,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function zLt(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(ME),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(MLt),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function n5(e,t,n,s,r,i){if(r[t])return n>0?i[t]:i[t+1&1];{const o=e<0?s+e:e;return o<i[0]?i[0]:o>i[1]?i[1]:o}}var BLt=Object.freeze({__proto__:null,assertParamsValid:OE,computeFlatOffset:BE,computeOutShape:LE,getNormalizedAxes:LLt,isSliceContinous:zE,maskToAxes:OLt,parseSliceParams:kw,sliceInfo:PE,startForAxis:t5,startIndicesWithElidedDims:ZU,stopForAxis:e5,stopIndicesWithElidedDims:JU,stridesForAxis:QU,stridesWithElidedDims:KU});/** @license See the LICENSE file. */const PLt="4.2.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WLt{static sgd(t){return new FE(t)}static momentum(t,n,s=!1){return new WU(t,n,s)}static rmsprop(t,n=.9,s=0,r=null,i=!1){return new VU(t,n,s,r,i)}static adam(t=.001,n=.9,s=.999,r=null){return new BU(t,n,s,r)}static adadelta(t=.001,n=.95,s=null){return new LU(t,n,s)}static adamax(t=.002,n=.9,s=.999,r=null,i=0){return new PU(t,n,s,r,i)}static adagrad(t,n=.1){return new zU(t,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nd=WLt;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VLt=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e())();function s5(){return new Promise(e=>VLt(()=>e()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WE(e,t){const n=e[0].length;e.forEach((r,i)=>{L(r.length===n,()=>`Error in concat${n}D: rank of tensors[${i}] must be the same as the rank of the rest (${n})`)}),L(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const s=e[0];e.forEach((r,i)=>{for(let o=0;o<n;o++)L(o===t||r[o]===s[o],()=>`Error in concat${n}D: Shape of tensors[${i}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${i}.`)})}function la(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var So;(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(So||(So={}));function r5(e,t,n){let s=new Array;if(n==null&&t==null)return s;if(t==null)for(;s.length<e+n.length;)s.push(-1);else s=t.slice();if(n==null)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const i=n[r],o=s[s.length-n.length+r],a=s[o];if(i>=0)if(a>=0){if(a!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${i} but shape[${r+e}] = ${a}`)}else s[o]=i}return s}function i5(e){const t={FIRST_DIM_SIZE:So.FIRST_DIM_SIZE,VALUE_ROWIDS:So.VALUE_ROWIDS,ROW_LENGTHS:So.ROW_LENGTHS,ROW_SPLITS:So.ROW_SPLITS,ROW_LIMITS:So.ROW_LIMITS,ROW_STARTS:So.ROW_STARTS},n=[];for(const s of e)if(s in t)n.push(t[s]);else break;return n}function o5(e){return e.length===0?0:e[0]===So.FIRST_DIM_SIZE?e.length-1:e.length}function a5(e,t){if(e==null||t==null)return;const n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const i=e[r],o=t[r+1];if(i>=0&&o>=0&&i!==1&&i!==o)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${i} but ragged tensor input.flatValues.shape[${r-e.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VE=30;function Iw(e){return e<=VE?e:ES(e,Math.floor(Math.sqrt(e)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(e,t,n){const s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vg(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const i=t.length;for(let o=0;o<i;++o)r=r.concat([e[o+1]/t[o],t[o]]);r=r.concat(e.slice(i+1))}return r}function Ug(e,t,n=!0){const s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{const r=[],i=[];for(let o=1;o<e;++o)o>=t*2+1||o%2===1?i.push(o):r.push(o);s.push(...r),s.push(0),s.push(...i)}return s}function Gg(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let i=1;i<e.length;++i)i<=t.length?s?r.push(t[i-1]*e[i]):r.push(e[i]/t[i-1]):r.push(e[i]);return r}function GE(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function HE(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cw=1.7580993408473768,$w=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qE=.3275911,jE=.254829592,KE=-.284496736,XE=1.421413741,YE=-1.453152027,ZE=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ja(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function u5(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function l5(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function c5(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function JE(e,t){const n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function h5(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function d5(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const i=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:n,imag:s}}function p5(e,t,n){const s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),i=Math.sin(s);return{real:r,imag:i}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QE="->",ULt=/->/g,f5=",",m5="...";function tD(e,t){e=e.replace(/\s/g,"");const n=(e.length-e.replace(ULt,"").length)/QE.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${QE}").`);const[s,r]=e.split(QE);L(s.indexOf(m5)===-1,()=>`The ellipsis notation ("${m5}") is not supported yet.`);const i=s.split(f5),o=i.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<r.length;++d){const p=r[d];if(!i.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let d=0;d<s.length;++d){const p=s[d];a.indexOf(p)===-1&&p!==f5&&a.push(p)}const u=new Array(i.length);for(let d=0;d<o;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let p=0;p<i[d].length;++p)u[d].push(a.indexOf(i[d][p]))}const l=a.length,c=r.length,h=[];for(let d=c;d<l;++d)h.push(d);return{allDims:a,summedDims:h,idDims:u}}function eD(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function nD(e,t,n){const s=new Array(e);for(let r=0;r<n.length;++r){const i=n[r].shape;for(let o=0;o<t[r].length;++o)s[t[r][o]]===void 0?s[t[r][o]]=i[o]:L(s[t[r][o]]===i[o],()=>`Expected dimension ${s[t[r][o]]} at axis ${o} of input shaped ${JSON.stringify(i)}, but got dimension ${i[o]}`)}}function sD(e,t){const n=e,s=[];let r=0;e.length===0&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)s.push([]);const i=[];for(let o=0;o<n.length;++o){const a=n[o],u=GLt(t,a);for(const l of u)i.indexOf(l)===-1&&(s[o].push(l),i.push(l))}return{path:n,steps:s}}function rD(e){return e.every((t,n)=>t===n)}function GLt(e,t){const n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function iD(e,t,n=0){let s=[];if(typeof t=="number")L(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce((o,a)=>(a===-1&&(o+=1),o),0);L(r<=1,()=>"There should be only one negative value in split array.");const i=t.indexOf(-1);if(i!==-1){const o=t.reduce((a,u)=>u>0?a+u:a);t[i]=e.shape[n]-o}L(e.shape[n]===t.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g5(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function x5(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function b5(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y5(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function w5(e,t){return`size ${e} must be non-negative, not ${t}`}function v5(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function k5(e,t){const n=xt(e),s=xt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function I5(e,t){const n=xt(e),s=xt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(){return"segment ids must be >= 0"}function C5(){return"segment ids are not increasing"}function $5(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function S5(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N5(e,t){let n=!1,s;for(e<=VE?(s=e,n=!0):s=ES(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=ES(e,s+1);return s}function E5(e,t,n){const s=[],r=e.length;for(let i=0;i<r;i++)i!==t?s.push(e[i]):s.push(n);return s}function aD(e,t,n,s){const r=t.shape.length,i=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${i}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const o=e.shape[n],a=[];let u=1,l=1,c=1;for(let h=0;h<s;++h)a.push(e.shape[h]),u*=e.shape[h];for(let h=s;h<n;h++)a.push(e.shape[h]),l*=e.shape[h];for(let h=s;h<r;h++)a.push(t.shape[h]);for(let h=n+1;h<i;h++)a.push(e.shape[h]),c*=e.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:a}}var HLt=Object.freeze({__proto__:null,collectGatherOpShapeInfo:aD,computeOutShape:E5,segOpComputeOptimalWindowSize:N5});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ec(e){try{return e.map(t=>Mu(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function D5(e){return e.map(t=>_u(t))}var qLt=Object.freeze({__proto__:null,ERF_A1:jE,ERF_A2:KE,ERF_A3:XE,ERF_A4:YE,ERF_A5:ZE,ERF_P:qE,PARALLELIZE_THRESHOLD:VE,get RowPartitionType(){return So},SELU_SCALE:$w,SELU_SCALEALPHA:Cw,applyActivation:SE,assertAndGetBroadcastShape:ge,assertAxesAreInnerMostDims:Rs,assertParamsConsistent:WE,assignToTypedArray:h5,axesAreInnerMostDims:tE,calculateShapes:Wg,checkEinsumDimSizes:nD,checkPadOnDimRoundingMode:Ir,combineLocations:iU,combineRaggedTensorToTensorShapes:r5,complexWithEvenIndex:l5,complexWithOddIndex:c5,computeConv2DInfo:Fs,computeConv3DInfo:Lu,computeDefaultPad:HN,computeDilation2DInfo:Fg,computeOptimalWindowSize:Iw,computeOutAndReduceShapes:xs,computeOutShape:la,computePool2DInfo:Oi,computePool3DInfo:Va,convertConv2DDataFormat:Ua,decodeEinsumEquation:tD,eitherStridesOrDilationsAreOne:Gs,expandShapeToKeepDim:Mn,exponent:p5,exponents:d5,fromStringArrayToUint8:D5,fromUint8ToStringArray:Ec,getAxesPermutation:Sn,getBroadcastDims:kd,getComplexWithIndex:JE,getEinsumComputePath:sD,getEinsumPermutation:eD,getFusedBiasGradient:$E,getFusedDyActivation:CE,getImageCenter:UE,getInnerMostAxes:On,getPermuted:Ug,getRaggedRank:o5,getReductionAxes:es,getReshaped:Vg,getReshapedPermuted:Gg,getRowPartitionTypesHelper:i5,getSliceBeginCoords:GE,getSliceSize:HE,getSparseFillEmptyRowsIndicesDenseShapeMismatch:g5,getSparseFillEmptyRowsNegativeIndexErrorMessage:x5,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:b5,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:v5,getSparseReshapeInputOutputMismatchErrorMessage:I5,getSparseReshapeInputOutputMultipleErrorMessage:k5,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:y5,getSparseReshapeNegativeOutputDimErrorMessage:w5,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:S5,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:oD,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:C5,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:$5,getUndoAxesPermutation:zu,isIdentityPermutation:rD,log:TAt,mergeRealAndImagArrays:ja,prepareAndValidate:_E,prepareSplitSize:iD,segment_util:HLt,shouldFuse:NE,slice_util:BLt,splitRealAndImagArrays:u5,stridesOrDilationsArePositive:yc,tupleValuesAreOne:bc,upcastType:Gr,validateDefaultValueShape:a5,validateInput:BMt,validateUpdateShape:EU,warn:li});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */CLt();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T5={kernelName:ny,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>q(e,Pg(Wt(n,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jLt={kernelName:Tm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const s=on(Wt(n,"float32")),r=or(Zt(ce(1),s));return Nn(ne(e,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KLt={kernelName:Am,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const s=or(Zt(on(Wt(n,"float32")),1));return ne(e,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XLt={kernelName:dd,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ge(n.shape,s.shape);return{a:()=>{let a=e;const u=es(n.shape,r);return u.length>0&&(a=Yt(a,u)),nt(a,n.shape)},b:()=>{let a=e;const u=es(s.shape,r);return u.length>0&&(a=Yt(a,u)),nt(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YLt={kernelName:RS,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZLt={kernelName:sy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fe(n)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JLt={kernelName:ry,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fe(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QLt={kernelName:Fm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ne(e,or(Zt(ce(1),on(Wt(n,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t4t={kernelName:Rm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const s=or(Dt(ce(1),on(Wt(n,"float32"))));return ne(e,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e4t={kernelName:Om,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ge(n.shape,s.shape);return{a:()=>{const a=Dt(on(n),on(s));let u=q(e,ne(s,a));const l=es(n.shape,r);return l.length>0&&(u=Yt(u,l)),nt(u,n.shape)},b:()=>{const a=Dt(on(n),on(s));let u=Nn(q(e,ne(n,a)));const l=es(s.shape,r);return l.length>0&&(u=Yt(u,l)),nt(u,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n4t={kernelName:_m,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ne(e,Dt(on(Wt(n,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s4t={kernelName:Mm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ne(e,Zt(ce(1),on(Wt(n,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4t(e,t,n,s,r,i){const o=P(e,"dy","avgPool3dGrad"),a=P(t,"input","avgPool3dGrad");let u=o,l=a,c=!1;a.rank===4&&(c=!0,u=nt(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=nt(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),L(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),L(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),Ir("avgPool3dGrad",r,i);const h={dy:u,input:l},d={filterSize:n,strides:s,pad:r,dimRoundingMode:i},p=Z.runKernel(LS,h,d);return c?nt(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const i4t=J({avgPool3dGrad_:r4t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o4t={kernelName:oy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:i,pad:o,dimRoundingMode:a}=n;return{x:()=>i4t(e,s,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4t(e,t,n,s,r){const i=P(e,"dy","avgPoolGrad"),o=P(t,"input","avgPoolGrad");L(o.rank===i.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`);let a=o,u=i,l=!1;o.rank===3&&(l=!0,a=nt(o,[1,o.shape[0],o.shape[1],o.shape[2]]),u=nt(i,[1,i.shape[0],i.shape[1],i.shape[2]])),L(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),L(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const c={dy:u,input:a},h={filterSize:n,strides:s,pad:r},d=Z.runKernel(OS,c,h);return l?nt(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const u4t=J({avgPoolGrad_:a4t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l4t={kernelName:iy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:i,pad:o}=n;return{x:()=>u4t(e,s,r,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c4t={kernelName:ay,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:i,transposeB:o}=n;return!i&&!o?{a:()=>Ve(e,r,!1,!0),b:()=>Ve(s,e,!0,!1)}:!i&&o?{a:()=>Ve(e,r,!1,!1),b:()=>Ve(e,s,!0,!1)}:i&&!o?{a:()=>Ve(r,e,!1,!0),b:()=>Ve(s,e,!1,!1)}:{a:()=>Ve(r,e,!0,!0),b:()=>Ve(e,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h4t={kernelName:uy,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>lE(e,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d4t={kernelName:NAt,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,i=s.shape,o=Array.from(i);for(let u=r.length-1;u>=0;u--)if(r[u]===i[u])o[u]=1;else if(r[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const a=[];for(let u=0;u<o.length;u++)o[u]>1&&a.push(u);return{x:()=>Yt(e,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p4t={kernelName:Lm,gradFunc:e=>({x:()=>e.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f4t={kernelName:zm,gradFunc:e=>({x:()=>Fe(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m4t={kernelName:Bm,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:i}=n;return{x:()=>Hr(Ga(vc(s,r),Cd(s,i)),e,Fe(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g4t={kernelName:ly,inputsToSave:["x"],gradFunc:T5.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x4t={kernelName:cy,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map(u=>u.shape),{axis:r}=n,i=ve(r,t[0].shape)[0],o=s.map(u=>u[i]);return pi(e,o,i).map(u=>()=>u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b4t={kernelName:hy,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:i,strides:o,pad:a,dataFormat:u}=n;return L(bc(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>YN(s.shape,e,r,o,a,u),filter:()=>IE(s,e,r.shape,o,a,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y4t={kernelName:dy,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:i,pad:o,dataFormat:a,dimRoundingMode:u}=n;return{dy:()=>wc(e,r,i,o,a,1,u),filter:()=>IE(e,s,r.shape,i,o,a,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4t(e,t,n,s,r){let i=e;e.rank===4&&(i=nt(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;o.rank===4&&(o=nt(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),L(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),L(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),L(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),L(i.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`),L(o.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`);const a={x:i,dy:o},u={strides:s,pad:r,filterShape:n};return Z.runKernel(WS,a,u)}const v4t=J({conv3DBackpropFilter_:w4t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k4t={kernelName:py,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:i}=n;L(bc(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[o,a]=t;return{x:()=>eU(o.shape,e,a,r,i),filter:()=>v4t(o,e,a.shape,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I4t={kernelName:Pm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>q(Nn(yU(Wt(n,"float32"))),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C4t={kernelName:Wm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>q(wU(Wt(n,"float32")),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $4t={kernelName:fy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:i,reverse:o}=n;return{x:()=>{const a=Sn([r],s.rank);let u=sU(e,r,i,!o);return a!=null&&(u=De(u,a)),u}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S4t={kernelName:my,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:o}=n,a=s??[1,1];L(bc(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[u,l]=t;return L(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),L(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),L(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),L(Gs(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),Ir("depthwiseConv2d",i,o),{x:()=>YMt(u.shape,e,l,r,i,a,o),filter:()=>KMt(u,e,l.shape,r,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N4t={kernelName:gy,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,i={x:s,filter:r,dy:e},o={x:s,filter:r,dy:e};return{x:()=>Z.runKernel(XS,i,n),filter:()=>Z.runKernel(YS,o,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E4t={kernelName:Um,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>Z.runKernel(ZS,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D4t={kernelName:Gm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=q(Li(Nn(on(n))),2/Math.sqrt(Math.PI));return{x:()=>q(e,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T4t={kernelName:Hm,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>q(e,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A4t={kernelName:by,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>nt(e,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F4t={kernelName:qm,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>q(e,Li(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R4t={kernelName:jm,gradFunc:e=>({x:()=>Fe(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _4t={kernelName:Km,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ge(n.shape,s.shape);return{a:()=>{const a=ne(e,Wt(s,"float32")),u=es(n.shape,r);return u.length>0?nt(Yt(a,u),n.shape):a},b:()=>{let a=q(e,Wt(n,"float32"));const u=es(s.shape,r);u.length>0&&(a=nt(Yt(a,u),s.shape));const l=on(s);return Nn(ne(a,Wt(l,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M4t={kernelName:yy,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,i,o,a]=t,u=a??ce(1),l=es(i.shape,r.shape),c=[];if(i.rank===1){for(let y=0;y<r.shape.length-1;++y)c.push(r.shape[y]);c.push(1)}const h=Zt(r,i),d=q(e,u),p=gU(Dt(o,ce(s))),f=q(q(q(p,p),p),ce(-.5));return{x:()=>i.rank===1?nt(q(q(e,$o(nt(p,[1,1,1,i.shape[0]]),c)),u),r.shape):nt(q(q(e,p),u),r.shape),mean:()=>{let y=q(q(p,ce(-1)),d);return i.rank===1&&(y=Yt(y,l)),nt(y,i.shape)},variance:()=>{let y=q(q(f,h),d);return i.rank===1&&(y=Yt(y,l)),nt(y,i.shape)},scale:()=>{const y=q(h,p);let v=q(e,y);return i.rank===1&&(v=Yt(v,l)),nt(v,i.shape)},offset:()=>{let y=e;return i.rank===1&&(y=Yt(y,l)),nt(y,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O4t={kernelName:wy,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:i}=n,o=ve(i,s.shape)[0];return{x:()=>{const u=s.shape,l=r.size,c=u.slice(0,o),h=c.length,d=u.slice(i,u.length).slice(1),p=d.length,f=A5(0,h),m=A5(h+1,h+1+p),g=F5([c,[l],d]),x=nt(e,g),b=nt(r,[l]),w=F5([[h],f,m]),y=De(x,w);let v=SU(y,b,s.shape[o]);const k=zu(w);return v=De(v,k),v},indices:()=>r}}};function A5(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function F5(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L4t={kernelName:Xm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>Fe(n),b:()=>Fe(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z4t={kernelName:Ym,gradFunc:e=>({x:()=>Wt(e,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B4t={kernelName:Zm,gradFunc:e=>({x:()=>Fe(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P4t={kernelName:Jm,gradFunc:e=>({x:()=>Fe(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4t={kernelName:Qm,gradFunc:e=>({x:()=>Fe(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V4t={kernelName:ky,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,i=di(s,0);return{x:()=>Hr(i,e,q(e,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U4t={kernelName:eg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ne(e,Dt(n,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G4t={kernelName:tg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ne(e,Wt(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H4t={kernelName:EAt,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const o=Li(s);return Zt(e,q(Yt(e,r,!0),o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q4t(e,t,n,s=5,r=1,i=1,o=.5){const a={x:e,y:t,dy:n},u={depthRadius:s,bias:r,alpha:i,beta:o};return Z.runKernel(sN,a,u)}const j4t=J({localResponseNormalizationBackprop_:q4t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K4t={kernelName:Ey,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:i,bias:o,alpha:a,beta:u}=n;return{x:()=>j4t(s,r,e,i,o,a,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(e,t,n,s){return t.rank<n.rank&&(t=nt(t,Mn(t.shape,s))),e.rank<n.rank&&(e=nt(e,Mn(e.shape,s))),{x:()=>q(e,Wt(aa(n,t),e.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _5={kernelName:Dy,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,i=t[0],o=t[1],a=ve(r,i.shape),u=R5(e,o,i,a);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X4t={kernelName:ng,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>q(e,Wt(vc(n,s),"float32")),b:()=>q(e,Wt(uU(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4t(e,t,n,s,r,i,o){const a=P(e,"dy","maxPool3dGrad"),u=P(t,"input","maxPool3dGrad"),l=P(n,"output","maxPool3dGrad");let c=a,h=u,d=l,p=!1;u.rank===4&&(p=!0,c=nt(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=nt(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=nt(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),L(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),L(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),L(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),Ir("maxPool3dGrad",i,o);const f={dy:c,input:h,output:d},m={filterSize:s,strides:r,pad:i,dimRoundingMode:o},g=Z.runKernel(iN,f,m);return p?nt(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const Z4t=J({maxPool3dGrad_:Y4t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J4t={kernelName:Ay,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=n;return{x:()=>Z4t(e,s,r,i,o,a,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q4t(e,t,n,s,r,i,o){const a=P(e,"dy","maxPoolGrad"),u=P(t,"input","maxPoolGrad"),l=P(n,"output","maxPoolGrad");L(u.rank===a.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${a.rank})`),L(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),L(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Ir("maxPoolGrad",i,o);const c={dy:a,input:u,output:l},h={filterSize:s,strides:r,pad:i,dimRoundingMode:o};return Z.runKernel(rN,c,h)}const tzt=J({maxPoolGrad_:Q4t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ezt={kernelName:Ty,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:i,strides:o,pad:a}=n;return{x:()=>tzt(e,s,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nzt={kernelName:Fy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,i=ve(r,s.shape),a=xs(s.shape,i)[1],u=xt(a);return{x:()=>{const c=s.shape.slice();i.forEach(p=>{c[p]=1});const h=nt(e,c);return ne(q(h,Pu(s.shape,"float32")),u)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const szt={kernelName:Ry,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[i,o]=t,a=ve(r,i.shape),u=R5(e,o,i,a);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rzt={kernelName:sg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>q(e,Wt(Cd(n,s),"float32")),b:()=>q(e,Wt(di(n,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const izt={kernelName:_y,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,i=r.map(o=>o[0]);return{x:()=>Ke(e,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ozt={kernelName:rg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ge(n.shape,s.shape);return{a:()=>{const a=es(n.shape,r);return a.length>0?nt(Yt(e,a),n.shape):e},b:()=>{const a=q(e,Nn(gw(ne(n,s)))),u=es(s.shape,r);return u.length>0?nt(Yt(a,u),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const azt={kernelName:ig,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ge(n.shape,s.shape);return{a:()=>{const a=q(e,Wt(s,"float32")),u=es(n.shape,r);return u.length>0?nt(Yt(a,u),n.shape):a},b:()=>{const a=q(e,Wt(n,"float32")),u=es(s.shape,r);return u.length>0?nt(Yt(a,u),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uzt={kernelName:My,gradFunc:e=>({x:()=>Nn(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lzt={kernelName:zy,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>bs(n.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const czt={kernelName:Ly,gradFunc:e=>({x:()=>Fe(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hzt={kernelName:By,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return $c(e,s).map(i=>()=>i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5={kernelName:Py,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,i=r.map(o=>o[0]);return{x:()=>Ke(e,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dzt={kernelName:og,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,i=n,o=s,a=ge(i.shape,o.shape);return{a:()=>{const c=Wt(o,"float32");let h=q(e,q(c,Id(i,Zt(c,ce(1)))));const d=es(i.shape,a);return d.length>0&&(h=Yt(h,d)),nt(h,i.shape)},b:()=>{const c=di(i,0),h=Hr(c,zi(i),Fe(i));let d=q(e,q(r,h));const p=es(o.shape,a);return p.length>0&&(d=Yt(d,p)),nt(d,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pzt={kernelName:Wy,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=di(n,0);return{x:()=>Hr(r,e,q(e,s)),alpha:()=>{let i=Hr(r,Fe(e),q(e,n));const o=es(s.shape,e.shape);return o.length>0&&(i=Yt(i,o)),nt(i,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fzt(e,t,n){const s=e.shape.slice();s[n]=1;const r=nt(t,s),i=JN(e,n,!0,!1),o=JN(e,n,!0,!0),a=q(i,o);return q(r,a)}function mzt(e,t,n){const s=e.shape.length,r=s-n.length,i=Sn(n,s);let o=e;i!=null&&(o=De(e,i));const a=o.shape.slice(),l=a.splice(s-n.length,n.length).reduce((d,p)=>d*p,1);a.push(l);const c=o.reshape(a);let h=fzt(c,t,r);if(h=h.reshape(o.shape),i!=null){const d=zu(i);h=De(h,d)}return h}const gzt={kernelName:Vy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let i=[];return r==null?i=s.shape.map((o,a)=>a):typeof r=="number"?i=[r]:i=r,{x:()=>mzt(s,e,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xzt={kernelName:Vm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ge(n.shape,s.shape);return{a:()=>{const a=ne(e,Wt(s,"float32")),u=es(n.shape,r);return u.length>0?nt(Yt(a,u),n.shape):a},b:()=>{let a=q(e,Wt(n,"float32"));const u=es(s.shape,r);u.length>0&&(a=nt(Yt(a,u),s.shape));const l=on(s);return Nn(ne(a,Wt(l,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bzt={kernelName:ag,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ne(e,Nn(on(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yzt={kernelName:lg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=q(Cd(n,6),Pg(n));return{x:()=>q(e,Wt(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wzt={kernelName:ug,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>q(e,Wt(Pg(n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vzt={kernelName:Uy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nt(e,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kzt={kernelName:Hy,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>Z.runKernel(dN,r,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Izt={kernelName:Gy,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>Z.runKernel(hN,r,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Czt={kernelName:qy,gradFunc:(e,t,n)=>{const{dims:s}=n,r=ve(s,e.shape);return{x:()=>Cc(e,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $zt={kernelName:cg,gradFunc:e=>({x:()=>Fe(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Szt={kernelName:hg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nn(ne(e,q(Id(n,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nzt={kernelName:jy,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Wt(Fe(n),"float32"),t:()=>q(e,Wt(n,e.dtype)),e:()=>q(e,Wt(iE(n),e.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ezt={kernelName:dg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const s=di(n,ce(0)),r=ce(Cw),i=ce($w),o=q(e,i),a=q(q(e,r),Li(Wt(n,"float32")));return Hr(s,o,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dzt={kernelName:gg,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>q(e,q(n,Zt(ce(1),n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tzt={kernelName:mg,gradFunc:e=>({x:()=>Fe(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Azt={kernelName:pg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>q(ZN(Wt(n,"float32")),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fzt={kernelName:fg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>q(nU(Wt(n,"float32")),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rzt={kernelName:Ky,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:i}=n,o=s.shape,[a,u]=kw(s,r,i),l=[];for(let c=0;c<e.rank;c++)l.push([a[c],o[c]-a[c]-u[c]]);return{x:()=>uE(e,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _zt={kernelName:Jy,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,i=!0,o=q(e,s);return{logits:()=>Zt(o,q(Yt(o,[r],i),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mzt={kernelName:xg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>q(e,wd(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5={kernelName:Yy,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>XN(e,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5={kernelName:Zy,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>Hs(e,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ozt={kernelName:bg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ne(e,q(or(Wt(n,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lzt={kernelName:xN,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>q(e,q(Wt(n,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zzt={kernelName:yg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ce(2);return{a:()=>q(e,q(r,Zt(n,s))),b:()=>q(e,q(r,Zt(s,n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bzt={kernelName:Cg,gradFunc:e=>({x:()=>Fe(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pzt={kernelName:wg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=ge(n.shape,s.shape);return{a:()=>{let a=e;const u=es(n.shape,r);return u.length>0&&(a=Yt(a,u)),nt(a,n.shape)},b:()=>{let a=e;const u=es(s.shape,r);return u.length>0&&(a=Yt(a,u)),nt(Nn(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wzt={kernelName:Xy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:i}=n;ve(i,s.shape).forEach(l=>{r[l]=1});const a=nt(e,r),u=q(a,Pu(s.shape,"float32"));return{x:()=>u}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vzt={kernelName:vg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ne(e,on(ZN(n)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uzt={kernelName:kg,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>q(Zt(ce(1),on(n)),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gzt={kernelName:Ig,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let o=Fe(s);if(s.rank===1)for(let a=0;a<r[0];++a)o=Dt(o,Ke(e,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<r[0];++a)for(let u=0;u<r[1];++u)o=Dt(o,Ke(e,[a*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<r[0];++a)for(let u=0;u<r[1];++u)for(let l=0;l<r[2];++l)o=Dt(o,Ke(e,[a*s.shape[0],u*s.shape[1],l*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<r[0];++a)for(let u=0;u<r[1];++u)for(let l=0;l<r[2];++l)for(let c=0;c<r[3];++c)o=Dt(o,Ke(e,[a*s.shape[0],u*s.shape[1],l*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hzt={kernelName:pd,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,i=zu(r);return{x:()=>De(e,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qzt={kernelName:Qy,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>ua(e,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jzt={kernelName:tw,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Kzt(e,n)}}};function Kzt(e,t){const n=Bu(t,Fe(t)),s=eE(e,n);let r=vc(t,ce(0,"int32"));const i=s.rank-r.rank;for(let a=0;a<i;++a)r=qr(r,a+1);r=Ga(r,Pu(s.shape,"bool"));const o=Fe(s);return Hr(r,s,o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xzt={kernelName:ew,gradFunc:e=>({x:()=>Fe(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yzt=[T5,jLt,KLt,XLt,YLt,ZLt,JLt,QLt,t4t,e4t,n4t,s4t,o4t,l4t,c4t,h4t,d4t,p4t,f4t,m4t,g4t,x4t,y4t,b4t,k4t,I4t,C4t,$4t,S4t,N4t,xzt,E4t,D4t,T4t,A4t,F4t,_4t,R4t,M4t,O4t,L4t,z4t,B4t,P4t,W4t,V4t,U4t,G4t,H4t,K4t,_5,_5,X4t,J4t,ezt,nzt,szt,rzt,izt,ozt,azt,uzt,lzt,czt,hzt,M5,M5,dzt,pzt,gzt,bzt,yzt,wzt,vzt,kzt,Izt,Czt,$zt,Szt,Nzt,Ezt,Dzt,Tzt,Azt,Fzt,Rzt,_zt,Mzt,O5,O5,L5,L5,Ozt,zzt,Lzt,Bzt,Pzt,Wzt,Vzt,Uzt,Gzt,Hzt,qzt,jzt,Xzt];for(const e of Yzt)AAt(e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.abs=function(){return this.throwIfDisposed(),gs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.acos=function(){return this.throwIfDisposed(),PFt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.acosh=function(){return this.throwIfDisposed(),VFt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.add=function(e){return this.throwIfDisposed(),Dt(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.all=function(e,t){return this.throwIfDisposed(),JV(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.any=function(e,t){return this.throwIfDisposed(),GN(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.argMax=function(e){return this.throwIfDisposed(),Ag(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.argMin=function(e){return this.throwIfDisposed(),jFt(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.asScalar=function(){return this.throwIfDisposed(),L(this.size===1,()=>"The array must have only 1 element."),nt(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.asType=function(e){return this.throwIfDisposed(),Wt(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.as1D=function(){return this.throwIfDisposed(),nt(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.as2D=function(e,t){return this.throwIfDisposed(),nt(this,[e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),nt(this,[e,t,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),nt(this,[e,t,n,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),nt(this,[e,t,n,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.asin=function(){return this.throwIfDisposed(),XFt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.asinh=function(){return this.throwIfDisposed(),ZFt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.atan=function(){return this.throwIfDisposed(),QFt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.atan2=function(e){return this.throwIfDisposed(),eRt(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.atanh=function(){return this.throwIfDisposed(),sRt(this)},gt().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),jN(this,e,t,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),XN(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),dw(this,e,t,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Mg(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.cast=function(e){return this.throwIfDisposed(),Wt(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.ceil=function(){return this.throwIfDisposed(),TRt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),hi(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof qn&&(e=[e]),Hs([this,...e],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.conv1d=function(e,t,n,s,r,i){return this.throwIfDisposed(),QV(this,e,t,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),tU(this,e,t,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.conv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),wc(this,e,t,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.cos=function(){return this.throwIfDisposed(),ZN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.cosh=function(){return this.throwIfDisposed(),nU(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),JN(this,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),sU(this,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),e_t(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.depthwiseConv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),QN(this,e,t,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),r_t(this,e,t,n,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.divNoNan=function(e){return this.throwIfDisposed(),l_t(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.div=function(e){return this.throwIfDisposed(),ne(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.dot=function(e){return this.throwIfDisposed(),h_t(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.elu=function(){return this.throwIfDisposed(),pw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.equal=function(e){return this.throwIfDisposed(),aa(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.erf=function(){return this.throwIfDisposed(),f_t(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),I_t(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.exp=function(){return this.throwIfDisposed(),Li(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.expandDims=function(e){return this.throwIfDisposed(),qr(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.expm1=function(){return this.throwIfDisposed(),N_t(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.fft=function(){return this.throwIfDisposed(),kU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.flatten=function(){return this.throwIfDisposed(),nt(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.floor=function(){return this.throwIfDisposed(),gw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.floorDiv=function(e){return this.throwIfDisposed(),ZV(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.gather=function(e,t){return this.throwIfDisposed(),eE(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.greaterEqual=function(e){return this.throwIfDisposed(),vc(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.greater=function(e){return this.throwIfDisposed(),di(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.ifft=function(){return this.throwIfDisposed(),kE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.irfft=function(){return this.throwIfDisposed(),bMt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.isFinite=function(){return this.throwIfDisposed(),O_t(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.isInf=function(){return this.throwIfDisposed(),z_t(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.isNaN=function(){return this.throwIfDisposed(),P_t(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.leakyRelu=function(e){return this.throwIfDisposed(),sE(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.lessEqual=function(e){return this.throwIfDisposed(),Cd(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.less=function(e){return this.throwIfDisposed(),uU(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),H_t(this,e,t,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.logSigmoid=function(){return this.throwIfDisposed(),J_t(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.logSoftmax=function(e){return this.throwIfDisposed(),lU(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),cU(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.log=function(){return this.throwIfDisposed(),zi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.log1p=function(){return this.throwIfDisposed(),rE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Ga(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.logicalNot=function(){return this.throwIfDisposed(),iE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.logicalOr=function(e){return this.throwIfDisposed(),hU(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.logicalXor=function(e){return this.throwIfDisposed(),o3t(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Ve(this,e,t,n)},gt().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),oE(this,e,t,n,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.max=function(e,t){return this.throwIfDisposed(),Co(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.maximum=function(e){return this.throwIfDisposed(),Bu(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.mean=function(e,t){return this.throwIfDisposed(),Ln(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.min=function(e,t){return this.throwIfDisposed(),fw(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.minimum=function(e){return this.throwIfDisposed(),xw(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),f3t(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.mod=function(e){return this.throwIfDisposed(),g3t(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.mul=function(e){return this.throwIfDisposed(),q(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.neg=function(){return this.throwIfDisposed(),Nn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.norm=function(e,t,n){return this.throwIfDisposed(),mw(this,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.notEqual=function(e){return this.throwIfDisposed(),Lg(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),dU(this,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.onesLike=function(){return this.throwIfDisposed(),Bi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.pad=function(e,t){return this.throwIfDisposed(),uE(this,e,t)},gt().prototype.pool=function(e,t,n,s,r,i){return this.throwIfDisposed(),S3t(this,e,t,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.pow=function(e){return this.throwIfDisposed(),Id(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.prelu=function(e){return this.throwIfDisposed(),cE(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.prod=function(e,t){return this.throwIfDisposed(),D3t(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.reciprocal=function(){return this.throwIfDisposed(),J3t(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.relu=function(){return this.throwIfDisposed(),Ha(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.relu6=function(){return this.throwIfDisposed(),fU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.reshapeAs=function(e){return this.throwIfDisposed(),nt(this,e.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.reshape=function(e){return this.throwIfDisposed(),nt(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),_U(this,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),MU(this,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.reverse=function(e){return this.throwIfDisposed(),Cc(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.rfft=function(){return this.throwIfDisposed(),IU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.round=function(){return this.throwIfDisposed(),mU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.rsqrt=function(){return this.throwIfDisposed(),gU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.selu=function(){return this.throwIfDisposed(),xU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.separableConv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),bU(this,e,t,n,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.sigmoid=function(){return this.throwIfDisposed(),wd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.sign=function(){return this.throwIfDisposed(),aMt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.sin=function(){return this.throwIfDisposed(),yU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.sinh=function(){return this.throwIfDisposed(),wU(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.slice=function(e,t){return this.throwIfDisposed(),Ke(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.softmax=function(e){return this.throwIfDisposed(),vE(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.softplus=function(){return this.throwIfDisposed(),Og(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),lE(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.split=function(e,t){return this.throwIfDisposed(),pi(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.sqrt=function(){return this.throwIfDisposed(),or(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.square=function(){return this.throwIfDisposed(),on(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.squaredDifference=function(e){return this.throwIfDisposed(),CU(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.squeeze=function(e){return this.throwIfDisposed(),Bg(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof qn?[this,e]:[this,...e];return ua(n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.step=function(e){return this.throwIfDisposed(),Pg(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.stridedSlice=function(e,t,n,s,r,i,o,a){return this.throwIfDisposed(),SMt(this,e,t,n,s,r,i,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.sub=function(e){return this.throwIfDisposed(),Zt(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.sum=function(e,t){return this.throwIfDisposed(),Yt(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.tan=function(){return this.throwIfDisposed(),EMt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.tanh=function(){return this.throwIfDisposed(),KN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.tile=function(e){return this.throwIfDisposed(),$o(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.toBool=function(){return this.throwIfDisposed(),Wt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.toFloat=function(){return this.throwIfDisposed(),Wt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.toInt=function(){return this.throwIfDisposed(),Wt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.topk=function(e,t){return this.throwIfDisposed(),AMt(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.transpose=function(e){return this.throwIfDisposed(),De(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.unique=function(e){return this.throwIfDisposed(),_Mt(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),SU(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.unstack=function(e){return this.throwIfDisposed(),$c(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.where=function(e,t){return this.throwIfDisposed(),Hr(e,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gt().prototype.zerosLike=function(){return this.throwIfDisposed(),Fe(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ca extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ca.prototype)}}class Wi extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Wi.prototype)}}class K extends Error{constructor(t){super(t),Object.setPrototypeOf(this,K.prototype)}}class xe extends Error{constructor(t){super(t),Object.setPrototypeOf(this,xe.prototype)}}class uD extends Error{constructor(t){super(t),Object.setPrototypeOf(this,uD.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class z5{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let n;return this.cache.has(t)&&(n=this.cache.get(t),this.cache.delete(t),this.cache.set(t,n)),n}put(t,n){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,n)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let n=0;n<this.maxEntries-t;n++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dc(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{const n=new Array(t);return n.fill(e),n}}function ha(e,t){if(!e)throw new uD(t)}function B5(e,t){let n=0;for(const s of e)s===t&&n++;return n}function $r(e){return e.length===1?e[0]:e}function xn(e){return Array.isArray(e)?e:[e]}function Ka(e){const n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function Tc(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}let Vi={};function lD(e){if(e==null)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function cD(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>cD(t));else{const t=Object.keys(e);for(const n of t){const s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:cD(s))}}}function Hg(e,t={},n={},s="object",r=!1){if(typeof e=="string"){const i=e;let o;if(i in n)o=n[i];else if(i in Vi)o=Vi[i];else if(o=t[i],o==null)throw new K(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{const i=e;if(i.className==null||i.config==null)throw new K(`${s}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const o=i.className;let a,u;if(o in n?[a,u]=n[o]:o in Vi?[a,u]=Vi.className:o in t&&([a,u]=t[o]),a==null)throw new K(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){const l={};for(const p of Object.keys(Vi))l[p]=Vi[p];for(const p of Object.keys(n))l[p]=n[p];const c=i.config;c.customObjects=l;const h=Object.assign({},Vi);for(const p of Object.keys(n))Vi[p]=n[p];cD(i.config);const d=u(a,i.config,n,r);return Vi=Object.assign({},h),d}else{const l=Object.assign({},Vi);for(const h of Object.keys(n))Vi[h]=n[h];const c=new a(i.config);return Vi=Object.assign({},l),c}}}function Zzt(e,t){return e<t?-1:e>t?1:0}function Sw(e,t){return-1*Zzt(e,t)}function Vu(e){if(e==null)return e;const t=[];for(const n of e)t.indexOf(n)===-1&&t.push(n);return t}function Jzt(e){if(e==null)throw new K(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ac(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new K(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function hD(e,t,n=0,s=1/0){return ha(n>=0),ha(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function ys(e,t){Array.isArray(e)?(L(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>ys(n,`element ${s+1} of ${t}`))):L(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${P5(e)}.`)}function P5(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>P5(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function Qzt(e,t,n){let s=n!=null?n():kr(),r;return(...o)=>{const a=n!=null?n():kr();return a-s<t||(s=a,r=e(...o)),r}}function W5(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let tBt=0;function V5(){return tBt++}const Nw={};function Ew(e=""){return e in Nw||(Nw[e]=0),Nw[e]+=1,e+Nw[e].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const eBt=["channelsFirst","channelsLast"],nBt=["nearest","bilinear"],sBt=["valid","same","causal"],rBt=["max","avg"],iBt=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ed=new Map;function zn(e){Ac(eBt,"DataFormat",e)}function oBt(e){Ac(nBt,"InterpolationFormat",e)}function fi(e){Ac(sBt,"PaddingMode",e)}function U5(e){Ac(rBt,"PoolMode",e)}const qg=[],G5="/";function Fc(e,t){qg.push(e);try{const n=t();return qg.pop(),n}catch(n){throw qg.pop(),n}}function aBt(){return qg.length===0?"":qg.join(G5)+G5}function H5(e){if(!j5(e))throw new Error("Not a valid tensor name: '"+e+"'");return aBt()+e}function q5(e){if(!j5(e))throw new Error("Not a valid tensor name: '"+e+"'");Ed.has(e)||Ed.set(e,0);const t=Ed.get(e);if(Ed.set(e,Ed.get(e)+1),t>0){const n=`${e}_${t}`;return Ed.set(n,1),n}else return e}const uBt=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function j5(e){return!!e.match(uBt)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lBt(e){return e===parseInt(e.toString(),10)}function Uu(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Dd(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function Gu(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function No(e,t){if(t<e)throw new K(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let dD;function ns(){return dD==null&&(dD=RFt().epsilon()),dD}function Eo(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function da(e,t){return Wt(e,t)}function jg(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),nt(e,n)}function cBt(e,t){return ht(()=>{if(e.shape.length!==2)throw new K(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);const n=jg(e,1);return mD(n,[1,t,1])})}function hBt(e){const t=[Uu(e.shape)];return nt(e,t)}function dBt(e){if(e.rank<=1)throw new K(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Uu(e.shape,1)];return nt(e,t)}function Rc(e,t,n){return ht(()=>{switch(e.rank){case 1:return yE(e,t,n);case 2:return vU(e,[t,0],[n,e.shape[1]]);case 3:return wE(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return ww(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ke(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ke(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new K(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function pD(e,t,n){return ht(()=>{switch(e.rank){case 1:return yE(e,t,n);case 2:return vU(e,[0,t],[e.shape[0],n]);case 3:return wE(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return ww(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Dw(e,t,n,s){return ht(()=>{switch(e.rank){case 1:return yE(e,t,n);case 2:switch(s){case 1:return Rc(e,t,n);case 2:return pD(e,t,n);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Rc(e,t,n);case 2:return wE(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return pD(e,t,n);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Rc(e,t,n);case 2:return ww(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return ww(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return pD(e,t,n);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function fD(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),Hs(e,t)}function K5(e,t){switch(e.rank){case 1:return RRt([e,t]);case 2:return MRt([e,t],0);case 3:return LRt([e,t],0);case 4:return BRt([e,t],0);default:throw new K(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function mD(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new K(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return $o(e,t)}function Tw(e,t=0,n=1,s,r){return K3t(e,t,n,s,r)}function pa(e,t,n,s){if(e.rank<2||t.rank<2)throw new xe(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){const r=e.shape.slice(-1)[0],i=t.shape.slice(-2)[0];if(r!==i)throw new xe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return TU({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?gD(e.rank,s,Eo()):null,activation:n});{const r=e.shape.slice(),i=r.pop();e=nt(e,[-1,i]);const o=t.shape.slice(),a=o.pop(),u=o.pop(),l=[...o,a],c=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=nt(De(t,c),[u,-1]);const h=[...r,...l];return nt(TU({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?gD(e.rank,s,Eo()):null,activation:n}),h)}}function X5(e,t,n){return ht(()=>(Array.isArray(t)?t=jr(t,"int32"):t=Wt(t,"int32"),eE(e,t,n)))}function Kg(e){return q(e,e)}function gD(e,t,n){const s=t.shape;if(t.rank!==1&&t.rank!==e)throw new K(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?nt(t,[1,s[0],1,1,1]):nt(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?nt(t,[1,1,1,1,s[0]]):nt(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?nt(t,[1,s[0],1,1]):nt(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?nt(t,[1,1,1,s[0]]):nt(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?nt(t,[1,s[0],1]):nt(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?nt(t,[1,1,s[0]]):nt(t,[1].concat(s))}else if(e<3)return t;throw new K(`Unsupported input rank by biasAdd: ${t.rank}`)}function Do(e,t,n){return ht(()=>(n==null&&(n=Eo()),zn(n),Dt(e,gD(e.rank,t,n))))}function pBt(e,t=1){if(t!==1)throw new xe(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return pw(e)}function fBt(e){return ht(()=>ne(e,Dt(gs(e),1)))}function Y5(e,t,n,s){return ht(()=>VMt(e,t,n,s))}function mBt(e){return ht(()=>{const t=Dt(.5,q(.2,e));return hi(t,0,1)})}function Xg(e,t,n=!1){return n?e():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const gBt=["fanIn","fanOut","fanAvg"],xBt=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bBt(e){Ac(gBt,"FanMode",e)}function yBt(e){Ac(xBt,"Distribution",e)}class Ui extends Sd{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Z5 extends Ui{apply(t,n){return bs(t,n)}}Z5.className="Zeros",Nt(Z5);class xD extends Ui{apply(t,n){return Pu(t,n)}}xD.className="Ones",Nt(xD);class J5 extends Ui{constructor(t){if(super(),typeof t!="object")throw new K(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new K(`config must have value set but got ${t}`);this.value=t.value}apply(t,n){return ht(()=>q(ce(this.value),Pu(t,n)))}getConfig(){return{value:this.value}}}J5.className="Constant",Nt(J5);class Q5 extends Ui{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,n){return bw(t,this.minval,this.maxval,n,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Q5.className="RandomUniform",Nt(Q5);class t6 extends Ui{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new xe(`randomNormal does not support dType ${n}.`);return Tw(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}t6.className="RandomNormal",Nt(t6);class e6 extends Ui{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new xe(`truncatedNormal does not support dType ${n}.`);return $U(t,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}e6.className="TruncatedNormal",Nt(e6);class n6 extends Ui{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,n){return ht(()=>{if(t.length!==2||t[0]!==t[1])throw new K("Identity matrix initializer can only be used for 2D square matrices.");return q(this.gain,aU(t[0]))})}getConfig(){return{gain:this.gain}}}n6.className="Identity",Nt(n6);function wBt(e,t="channelsLast"){let n,s;if(zn(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){const r=Uu(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){const r=Uu(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{const r=Uu(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}class Kr extends Ui{constructor(t){if(super(),t.scale<0)throw new K(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,bBt(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,yBt(this.distribution),this.seed=t.seed}apply(t,n){const s=wBt(t),r=s[0],i=s[1];let o=this.scale;if(this.mode==="fanIn"?o/=Math.max(1,r):this.mode==="fanOut"?o/=Math.max(1,i):o/=Math.max(1,(r+i)/2),this.distribution==="normal"){const a=Math.sqrt(o);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new xe(`${this.getClassName()} does not support dType ${n}.`);return $U(t,0,a,n,this.seed)}else{const a=Math.sqrt(3*o);return bw(t,-a,a,n,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Kr.className="VarianceScaling",Nt(Kr);class bD extends Kr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Kr.className}}bD.className="GlorotUniform",Nt(bD);class yD extends Kr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Kr.className}}yD.className="GlorotNormal",Nt(yD);class wD extends Kr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Kr.className}}wD.className="HeNormal",Nt(wD);class vD extends Kr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Kr.className}}vD.className="HeUniform",Nt(vD);class kD extends Kr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Kr.className}}kD.className="LeCunNormal",Nt(kD);class ID extends Kr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Kr.className}}ID.className="LeCunUniform",Nt(ID);class s6 extends Ui{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,this.seed!=null)throw new xe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,n){return ht(()=>{if(t.length<2)throw new xe("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const s=t[0]>t[1]?[t[1],t[0]]:t,r=Tw(s,0,1,"float32");let i=kLt.gramSchmidt(r);return t[0]>t[1]&&(i=De(i)),q(this.gain,i)})}getConfig(){return{gain:this.gain,seed:this.seed}}}s6.className="Orthogonal",Nt(s6);const r6={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function i6(e,t={}){return Hg(e,Pi.getMap().classNameMap,t,"initializer")}function En(e){return lD(e)}function vn(e){if(typeof e=="string"){const t=e in r6?r6[e]:e;if(t==="GlorotNormal")return new yD;if(t==="GlorotUniform")return new bD;if(t==="HeNormal")return new wD;if(t==="HeUniform")return new vD;if(t==="LeCunNormal")return new kD;if(t==="LeCunUniform")return new ID;{const n={};return n.className=t,n.config={},i6(n)}}else return e instanceof Ui?e:i6(e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function CD(e){return Array.isArray(e)&&Array.isArray(e[0])}function Aw(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function le(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new K(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Oe(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new K(`Expected exactly 1 Shape; got ${e.length}`)}else return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fw(e){let t=0;for(const n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const o6="Variable";class vBt{constructor(t,n="float32",s=o6,r=!0,i=null){this.dtype=n??"float32",this.shape=t.shape,this.id=V5(),s=s??o6,this.originalName=H5(s),this.name=q5(this.originalName),this.trainable_=r,this.constraint=i,this.val=LMt(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),kBt(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function kBt(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function $D(e){return e.map(t=>t.read())}function SD(e){e.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ss{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class fa{constructor(t,n,s,r,i,o,a){this.dtype=t,this.shape=n,this.sourceLayer=s,this.inputs=r,this.callArgs=i,this.outputTensorIndex=a,this.id=V5(),o!=null&&(this.originalName=H5(o),this.name=q5(this.originalName)),this.rank=n.length}}let IBt=0;class Rw{constructor(t,n){this.callArgs=n,this.id=IBt++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s!=null&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const n of this.inboundLayers)n!=null?t.push(n.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let CBt=0;class $e extends Sd{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=CBt++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let n=t.name;if(!n){const s=this.getClassName();n=Ka(s)+"_"+Ew(s)}if(this.name=n,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let i=null;t.batchSize!=null&&(i=t.batchSize),s=[i].concat(t.inputShape)}this.batchInputShape=s;let r=t.dtype;r==null&&(r=t.inputDType),r==null&&(r="float32"),this.dtype=r}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,n){return t.name+"_ib-"+n.toString()}getNodeAtIndex(t,n){if(this.inboundNodes.length===0)throw new Wi(`The layer has never been called and thus has no defined ${n}.`);if(this.inboundNodes.length<=t)throw new K(`Asked to get ${n} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return $r(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return $r(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ca(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new ca(`Layer ${this.name} is not connected, no input to return.`);return $r(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new ca(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ca(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return $r(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(n=>n.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=xn(t),this.inputSpec==null||this.inputSpec.length===0)return;const n=xn(this.inputSpec);if(t.length!==n.length)throw new K(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let s=0;s<t.length;s++){const r=t[s],i=n[s];if(i==null)continue;const o=r.rank;if(i.ndim!=null&&o!==i.ndim)throw new K(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${o}`);if(i.maxNDim!=null&&o>i.maxNDim)throw new K(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${o}`);if(i.minNDim!=null&&o<i.minNDim)throw new K(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${o}.`);if(i.dtype!=null&&r.dtype!==i.dtype)throw new K(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const a=r.shape;for(const u in i.axes){const l=Number(u),c=i.axes[u],h=l>=0?a[l]:a[a.length+l];if(c!=null&&[c,null].indexOf(h)===-1)throw new K(`Input ${s} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${c} but got shape ${a}.`)}}if(i.shape!=null)for(let a=0;a<i.shape.length;++a){const u=i.shape[a],l=r.shape[a];if(u!=null&&l!=null&&u!==l)throw new K(`Input ${s} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(t,n){return t}invokeCallHook(t,n){this._callHook!=null&&this._callHook(t,n)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,n){n=n||{},this.assertNotDisposed();const s=xn(t);let r=!0;for(const o of s)if(!(o instanceof fa)){r=!1;break}let i=!0;for(const o of s)if(o instanceof fa){i=!1;break}if(r===i)throw new K("Arguments to apply() must be all SymbolicTensors or all Tensors");return Fc(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const o=[];for(const a of xn(t))o.push(a.shape);this.build($r(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(t),i){let o=this.call(t,n);const a=xn(o),u=[];for(let l of a)s.indexOf(l)!==-1&&(l=l.clone()),u.push(l);if(o=$r(u),this.activityRegularizer!=null)throw new xe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}else{const o=$Bt(t),a=this.computeOutputShape(o);let u;const l=SBt(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?o[0]:o),a!=null&&a.length>0&&Array.isArray(a[0])?u=a.map((c,h)=>new fa(l,c,this,xn(t),n,this.name,h)):u=new fa(l,a,this,xn(t),n,this.name),this.addInboundNode(t,u,null,null,o,a,n),this._refCount++,this.activityRegularizer!=null)throw new xe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let n=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&t[r]!=null&&t[r]!==s&&(n=!0)}),n&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new ca(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const n of this.inboundNodes){const s=JSON.stringify(n.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const n=this.inboundNodes[0].outputShapes;return Array.isArray(n)&&Array.isArray(n[0])&&n.length===1?n[0]:n}else throw new ca(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Wi(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Fw(this.weights)}build(t){this.built=!0}getWeights(t=!1){return $D(t?this.trainableWeights:this.weights)}setWeights(t){ht(()=>{const n=this.weights;if(n.length!==t.length)throw new K(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${n.length} weights. Provided weights: ${t}...`);if(n.length===0)return;const s=[],r=$D(n);for(let i=0;i<r.length;++i){const o=r[i],a=n[i],u=t[i];if(!We(o.shape,u.shape))throw new K(`Layer weight shape ${o.shape} not compatible with provided weight shape ${u.shape}`);s.push([a,u])}SD(s)})}addWeight(t,n,s,r,i,o,a,u){if(this._addedWeightNames.indexOf(t)!==-1)throw new K(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=u!=null?u():vn("zeros"));const l=r.apply(n,s),c=new vBt(l,s,t,o,a);return l.dispose(),i!=null&&this.addLoss(()=>i.apply(c.read())),o==null&&(o=!0),o?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=xn(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,n){if(!this.supportsMasking){if(n!=null)if(Array.isArray(n))n.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return n}addInboundNode(t,n,s,r,i,o,a=null){const u=xn(t);n=xn(n),s=xn(s),r=xn(r),i=Aw(i),o=Aw(o);const l=[],c=[],h=[];for(const d of u)l.push(d.sourceLayer),c.push(d.nodeIndex),h.push(d.tensorIndex);new Rw({outboundLayer:this,inboundLayers:l,nodeIndices:c,tensorIndices:h,inputTensors:u,outputTensors:n,inputMasks:s,outputMasks:r,inputShapes:i,outputShapes:o},a);for(let d=0;d<n.length;d++)n[d].sourceLayer=this,n[d].nodeIndex=this.inboundNodes.length-1,n[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function $Bt(e){e=xn(e);const t=[];for(const n of e)t.push(n.shape);return $r(t)}function SBt(e){return"float32"}function a6(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{const s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let i=0;i<s.inboundLayers.length;i++){const o=s.inputTensors[i],a=s.inboundLayers[i],u=s.nodeIndices[i],l=a6(o,a,u);for(const c of l)r.indexOf(c)===-1&&r.push(c)}return r}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Yg extends $e{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Ew("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new K("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=t.batchInputShape;if(n==null){if(t.inputShape==null)throw new K("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new K("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=n,this.dtype=s,this.inputSpec=[{shape:n}];const r=new fa(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Rw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(t,n){throw new K(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Yg.className="InputLayer",Nt(Yg);function NBt(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new K("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new Yg({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function EBt(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return Wt(t,e.dtype)}catch{throw new K(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}class Hu{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Hu)for(const n in t.id2Value)this.id2Value[n]=t.id2Value[n],n in t.id2Mask&&(this.id2Mask[n]=t.id2Mask[n]);else{if(t==null)return;for(const n of t)this.add(n.key,n.value)}}add(t,n,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=EBt(t,n),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new K(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof fa){if(this.id2Value[t.id]==null)throw new K(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const n=this.name2Id[t];if(n==null)throw new K(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[n]}}getMask(t){if(t instanceof fa){if(this.id2Value[t.id]==null)throw new K(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const n=this.name2Id[t];if(n==null)throw new K(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[n]}}disposeMasks(){this.id2Mask!=null&&be(this.id2Mask)}}const _w=new z5,Mw=new z5;function DBt(e){_w!=null&&_w.setMaxEntries(e),Mw!=null&&Mw.setMaxEntries(e)}function Zg(e,t,n,s){const r=n==null?!1:n.training,i=Array.isArray(e),o=i?e:[e],a=o.map(f=>f.name),u=[],l=t.names();for(const f of a)l.indexOf(f)!==-1?u.push(t.getValue(f)):u.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=a.join(",")+"|"+t.names().sort().join(",");let h=_w.get(c),d;if(h==null){const f=TBt(o,t);h=f.sorted,d=f.recipientCounts,_w.put(c,h),Mw.put(c,d)}d={},r||Object.assign(d,Mw.get(c));const p=new Hu(t);for(let f=0;f<h.length;++f){if(s!=null){const $=UN().numTensors;$>s.maxNumTensors&&(s.maxNumTensors=$),$<s.minNumTensors&&(s.minNumTensors=$)}const m=h[f],g=m.sourceLayer;if(g instanceof Yg)continue;const x=[],b=[],w=[];let y=!1;for(const $ of m.inputs){const S=p.getValue($),N=p.getMask($);x.push(S),b.push(N),N!=null&&(y=!0),r||(d[$.name]--,d[$.name]===0&&!t.hasKey($)&&a.indexOf($.name)===-1&&!S.isDisposed&&$.sourceLayer.stateful!==!0&&w.push(S))}y&&(n=n||{},n.mask=b[0]);const v=xn(g.apply(x,n));let k=null;g.supportsMasking&&(k=g.computeMask(x,b));const C=FBt(m),I=Array.isArray(C)?C:[C];for(let $=0;$<I.length;++$){p.hasKey(I[$])||p.add(I[$],v[$],Array.isArray(k)?k[0]:k);const S=a.indexOf(I[$].name);S!==-1&&(u[S]=v[$])}r||be(w)}return p.disposeMasks(),i?u:u[0]}function TBt(e,t){L(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){const r=u6(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of e){const{sorted:o,recipientMap:a}=u6(i,t);for(const u of o)r.has(u.name)||(n.push(u),r.add(u.name));for(const u in a)s[u]==null&&(s[u]=new Set),a[u].forEach(l=>s[u].add(l))}}return{sorted:n,recipientCounts:ABt(s)}}function ABt(e){const t={};for(const n in e)t[n]=e[n].size;return t}function u6(e,t){const n=new Set,s=[],r={};for(const a of t.names())n.add(a);const i=[],o=[];for(i.push(e);i.length>0;){const a=i[i.length-1];if(n.has(a.name)){i.pop();continue}const u=o[o.length-1]===i.length-1;if(a.inputs.length===0||u)i.pop(),s.push(a),n.add(a.name),u&&o.pop();else{o.push(i.length-1);for(const l of a.inputs)r[l.name]==null&&(r[l.name]=new Set),r[l.name].add(a.name),!n.has(l.name)&&i.push(l)}}return{sorted:s,recipientMap:r}}function FBt(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(const r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,DBt);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ND(e,t){return ht(()=>or(Yt(q(e,e),t,!0)))}class Jg extends Sd{getConfig(){return{}}}class l6 extends Jg{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return ht(()=>{const n=ND(t,this.axis),s=hi(n,0,this.maxValue);return q(t,ne(s,Dt(ns(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}l6.className="MaxNorm",Nt(l6);class c6 extends Jg{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return ht(()=>ne(t,Dt(ns(),ND(t,this.axis))))}getConfig(){return{axis:this.axis}}}c6.className="UnitNorm",Nt(c6);class h6 extends Jg{apply(t){return Ha(t)}}h6.className="NonNeg",Nt(h6);class d6 extends Jg{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return ht(()=>{const n=ND(t,this.axis),s=Dt(q(this.rate,hi(n,this.minValue,this.maxValue)),q(1-this.rate,n));return q(t,ne(s,Dt(ns(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}d6.className="MinMaxNorm",Nt(d6);const p6={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function rs(e){return lD(e)}function f6(e,t={}){return Hg(e,Pi.getMap().classNameMap,t,"constraint")}function is(e){if(e==null)return null;if(typeof e=="string"){const n={className:e in p6?p6[e]:e,config:{}};return f6(n)}else return e instanceof Jg?e:f6(e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function _c(e){if(e==null)return;const t=[],n=[],s=[];for(const r in e){const i=e[r];if(typeof i!="number"){const o=i;t.push(o.data()),n.push(r),s.push(o)}}if(t.length>0){const r=await Promise.all(t);for(let i=0;i<r.length;++i)e[n[i]]=r[i][0];be(s)}}function m6(e){if(e!=null)for(const t in e){const n=e[t];typeof n!="number"&&n.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var g6;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(g6||(g6={}));const RBt=125;class Qg{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,n){}async onEpochEnd(t,n){}async onBatchBegin(t,n){}async onBatchEnd(t,n){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class _Bt{constructor(t,n=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=n}append(t){this.callbacks.push(t)}setParams(t){for(const n of this.callbacks)n.setParams(t)}setModel(t){for(const n of this.callbacks)n.setModel(t)}async onEpochBegin(t,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochBegin(t,n)}async onEpochEnd(t,n){n==null&&(n={});for(const s of this.callbacks)await s.onEpochEnd(t,n)}async onBatchBegin(t,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchBegin(t,n)}async onBatchEnd(t,n){n==null&&(n={});for(const s of this.callbacks)await s.onBatchEnd(t,n)}async onTrainBegin(t){t==null&&(t={});for(const n of this.callbacks)await n.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const n of this.callbacks)await n.onTrainEnd(t)}}class MBt extends Qg{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,n){n==null&&(n={});const s=n.size==null?0:n.size;this.seen+=s;for(const r in n){const i=n[r];if(typeof i=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+i*s;else{let o;r in this.totals?o=this.totals[r]:this.totals[r]=0;const a=ht(()=>Dt(this.totals[r],q(i,s)));this.totals[r]=a,o!=null&&o.dispose()}}}async onEpochEnd(t,n){if(n!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?n[s]=this.totals[s]/this.seen:ht(()=>{const r=q(ne(1,this.seen),this.totals[s]);n[s]=r,this.totals[s].dispose(),oa(n[s])}))}}class OBt extends Qg{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,n){n==null&&(n={}),this.epoch.push(t);for(const s in n)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(n[s])}async syncData(){const t=[],n=[],s=[];for(const i in this.history){const o=this.history[i];for(let a=0;a<o.length;++a)if(typeof o[a]!="number"){const u=o[a];t.push(u.data()),n.push(i),s.push(a)}}const r=await Promise.all(t);for(let i=0;i<r.length;++i)this.history[n[i]][s[i]].dispose(),this.history[n[i]][s[i]]=r[i][0]}}class LBt extends Qg{constructor(t,n){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||s5,this.yieldEvery=n||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=RBt),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");SS(this.yieldEvery)&&(this.maybeWait=Qzt(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,n,s){const r=[];this.yield!=null&&(await _c(s),r.push(this.yield(t,n,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,n){this.currentEpoch=t,this.epochBegin!=null&&(await _c(n),await this.epochBegin(t,n))}async onEpochEnd(t,n){const s=[];this.epochEnd!=null&&(await _c(n),s.push(this.epochEnd(t,n))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,n){this.batchBegin!=null&&(await _c(n),await this.batchBegin(t,n))}async onBatchEnd(t,n){const s=[];this.batchEnd!=null&&(await _c(n),s.push(this.batchEnd(t,n))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):SS(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,n)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await _c(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await _c(t),await this.trainEnd(t))}}function x6(e,t){return e==null&&(e={}),e instanceof Qg?[e]:Array.isArray(e)&&e[0]instanceof Qg?e:xn(e).map(s=>new LBt(s,t))}class Gi{constructor(){}static registerCallbackConstructor(t,n){L(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Gi.checkForDuplicate(n),Gi.constructors[t]==null&&(Gi.constructors[t]=[]),Gi.constructors[t].push(n)}static checkForDuplicate(t){for(const n in Gi.constructors)Gi.constructors[+n].forEach(r=>{if(r===t)throw new K("Duplicate callback constructor.")})}static clear(){Gi.constructors={}}static createCallbacks(t){const n=[];for(const s in Gi.constructors){const r=+s;t>=r&&n.push(...Gi.constructors[r])}return n.map(s=>new s)}}Gi.constructors={};function b6(e,t,n,s,r,i,o,a,u){const l=new OBt,c=[new MBt,...Gi.createCallbacks(t)];e!=null&&c.push(...e),c.push(l);const h=new _Bt(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:i,batchSize:o,verbose:t,doValidation:a,metrics:u}),{callbackList:h,history:l}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ma(e,t={},n=!1){return Hg(e,Pi.getMap().classNameMap,t,"layer",n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ow(e,t){return ht(()=>{e.dtype!=="float32"&&(e=Wt(e,"float32"));const n=Yt(Kg(e),t,!0),s=vd(n.shape,ns()),r=or(Bu(n,s));return ne(e,r)})}function Lw(e,t){return ht(()=>Ln(Kg(Zt(t,e)),-1))}function ED(e,t){return ht(()=>Ln(gs(Zt(t,e)),-1))}function DD(e,t){return ht(()=>{const n=Zt(e,t),s=hi(gs(e),ns(),Number.MAX_VALUE),r=gs(ne(n,s));return q(100,Ln(r,-1))})}function zBt(e,t){return ht(()=>{const n=hi(t,ns(),Number.MAX_VALUE),s=zi(Dt(1,n)),r=hi(e,ns(),Number.MAX_VALUE),i=zi(Dt(1,r));return Ln(Kg(Zt(s,i)),-1)})}function BBt(e,t){return ht(()=>{const n=Bu(0,Zt(1,q(e,t)));return Ln(Kg(n),-1)})}function PBt(e,t){return ht(()=>{const n=Bu(0,Zt(1,q(e,t)));return Ln(n,-1)})}function WBt(e,t){return ht(()=>{const n=Yt(q(e,t),-1),s=Co(q(Zt(1,e),t),-1);return Bu(0,Dt(1,Zt(s,n)))})}function VBt(e,t){return ht(()=>{const n=Math.log(2),s=Zt(t,e),r=Zt(Dt(s,Og(q(-2,s))),n);return Ln(r,-1)})}function t0(e,t,n=!1){return ht(()=>{if(n)t=vE(t);else{const s=Yt(t,t.shape.length-1,!0);t=ne(t,s)}return t=hi(t,ns(),1-ns()),Nn(Yt(q(Wt(e,"float32"),zi(t)),t.shape.length-1))})}function zw(e,t,n=!1){return ht(()=>{const s=Wt(gw(hBt(e)),"int32");t=hi(t,ns(),1-ns());const r=t.shape,i=nt(dU(s,r[r.length-1]),r);return t0(i,t,n)})}function UBt(e,t){if(!We(e.shape,t.shape))throw new K(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return ht(()=>{const n=Ha(t),s=Nn(gs(t));return Dt(Zt(n,q(t,e)),rE(Li(s)))})}function Bw(e,t){return ht(()=>{let n;return n=hi(t,ns(),1-ns()),n=zi(ne(n,Zt(1,n))),Ln(UBt(e,n),-1)})}function GBt(e,t){return ht(()=>{const n=hi(e,ns(),1),s=hi(t,ns(),1);return Yt(q(e,zi(ne(n,s))),-1)})}function HBt(e,t){return ht(()=>{const n=zi(Dt(ns(),t));return Ln(Zt(t,q(e,n)),-1)})}function y6(e,t){return ht(()=>{const n=Ow(e,-1),s=Ow(t,-1),r=q(n,s);return Nn(Yt(r,-1))})}const Pw={meanSquaredError:Lw,meanAbsoluteError:ED,meanAbsolutePercentageError:DD,meanSquaredLogarithmicError:zBt,squaredHinge:BBt,hinge:PBt,categoricalHinge:WBt,logcosh:VBt,categoricalCrossentropy:t0,sparseCategoricalCrossentropy:zw,binaryCrossentropy:Bw,kullbackLeiblerDivergence:GBt,poisson:HBt,cosineProximity:y6};function TD(e){if(typeof e=="string"){if(e in Pw)return Pw[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new K(t)}else return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function w6(e,t){return ht(()=>{const n=q(.5,Bi(t)),s=da(di(t,n),e.dtype);return Ln(aa(e,s),-1)})}function v6(e,t){return ht(()=>da(aa(Ag(e,-1),Ag(t,-1)),"float32"))}function qBt(e,t){return ht(()=>Wt(Yt(Ga(aa(e,1),aa(t,1))),"float32"))}function jBt(e,t){return ht(()=>Wt(Yt(Ga(aa(e,0),aa(t,1))),"float32"))}function KBt(e,t){return ht(()=>{const n=qBt(e,t),s=jBt(e,t),r=Dt(n,s);return Wt(Hr(di(r,0),ne(n,r),0),"float32")})}function XBt(e,t){return Bw(e,t)}function YBt(e,t){return e.rank===t.rank&&(e=Bg(e,[e.rank-1])),t=Ag(t,-1),t.dtype!==e.dtype&&(t=Wt(t,e.dtype)),Wt(aa(e,t),"float32")}const ZBt=Lw,JBt=Lw,QBt=ED,tPt=ED,ePt=DD,nPt=DD,k6=t0,sPt=y6,I6=zw,Ww={binaryAccuracy:w6,categoricalAccuracy:v6,precision:KBt,categoricalCrossentropy:k6,sparseCategoricalCrossentropy:I6,mse:ZBt,MSE:JBt,mae:QBt,MAE:tPt,mape:ePt,MAPE:nPt,cosine:sPt};function rPt(e){if(typeof e=="string"&&e in Ww)return Ww[e];if(typeof e!="string"&&e!=null)return e;throw new K(`Unknown metric ${e}`)}function Vw(e){if(ha(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(const n of Object.keys(Pw))if(Pw[n]===e){t=n;break}if(t!==void 0)return t;for(const n of Object.keys(Ww))if(Ww[n]===e){t=n;break}return t!==void 0?t:e.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iPt(e){const t={Adagrad:()=>Nd.adagrad(.01),Adadelta:()=>Nd.adadelta(1,.95,ns()),Adam:()=>Nd.adam(.001,.9,.999,ns()),Adamax:()=>Nd.adamax(.002,.9,.999,ns(),0),RMSProp:()=>Nd.rmsprop(.001,.9,0,ns()),SGD:()=>Nd.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new K(`Unknown Optimizer ${e}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const C6=1*1024*1024;function $6(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!AD(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const s=JSON.stringify(e);s.length>C6&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${C6}.`)}}function AD(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t)if(typeof n!="string"||!AD(e[n]))return!1;return!0}else if(Array.isArray(e)){for(const t of e)if(!AD(t))return!1;return!0}else return!1;else{const t=typeof e;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function oPt(e,t,n,s=console.log){const r=uPt(e),i=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(t*c)));let o;if(!r){i.push("Receives inputs"),o=[];for(const c in e.nodesByDepth)o.push(...e.nodesByDepth[c])}s("_".repeat(t)),Uw(i,n,s),s("=".repeat(t));const a=e.layers;for(let c=0;c<a.length;++c)r?lPt(a[c],n,s):cPt(a[c],n,o,s),s((c===a.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=aPt(e),l=Fw(e.nonTrainableWeights);s(`Total params: ${u+l}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${l}`),s("_".repeat(t))}function aPt(e){let t;return e.collectedTrainableWeights!=null?t=Fw(e.collectedTrainableWeights):t=Fw(e.trainableWeights),t}function uPt(e){let t=!0;const n=[],s=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of e.layers){let i=!1;for(const o of r.inboundNodes)if(s.indexOf(o)!==-1)if(i){t=!1;break}else i=!0;if(!t)break}return t}function Uw(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function lPt(e,t,n){let s,r;try{r=e.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(e.outputShape)}catch{s="multiple"}const i=e.name,o=e.getClassName(),a=[`${i} (${o})`,r,s,e.countParams().toString()];Uw(a,t,n)}function cPt(e,t,n,s){let r,i;try{i=e.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{i="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}const o=[];for(const h of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];o.push(`${p}[${f}][${m}]`)}const a=e.name,u=e.getClassName(),l=o.length===0?"":o[0],c=[`${a} (${u})`,i,r,e.countParams().toString(),l];Uw(c,t,s);for(let h=1;h<o.length;++h)Uw(["","","","",o[h]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function S6(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function Gw(e,t){if(e===null)return null;if(typeof e=="string")return Tc(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const i=e[r];S6(t,r,i)?n.push(i):n.push(Gw(i,t))}return n}else{const n={};for(const s of Object.keys(e)){const r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{const i=Tc(s);n[i]=Gw(r,i)}}return n}}function FD(e,t){if(e==null)return null;if(typeof e=="string")return Ka(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const i=e[r];S6(t,r,i)?n.push(i):n.push(FD(i,t))}return n}else{const n={};for(const s of Object.keys(e)){const r=e[s],i=Ka(s);(s==="name"||s==="className")&&typeof r=="string"?n[i]=r:n[i]=FD(r,s)}return n}}/** @license See the LICENSE file. */const RD="4.2.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class To extends $e{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const b=this.getClassName().toLowerCase();this.name=Ew(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],Vu(this.inputs).length!==this.inputs.length)throw new K(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);Vu(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const w=b.sourceLayer,y=b.nodeIndex,v=b.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(y),this.outputLayersTensorIndices.push(v)}for(const b of this.inputs){const w=b.sourceLayer,y=b.nodeIndex,v=b.tensorIndex;ha(y===0,"input layer has >1 nodes"),ha(v===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(y),this.inputLayersTensorIndices.push(v)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const w=this.inputLayers[b];if(!(w instanceof Yg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const n={},s={},r={},i={},o={},a=[],u=(b,w,y,v,k,C)=>{(v==null||k==null||C==null)&&(v=b.sourceLayer,k=b.nodeIndex,C=b.tensorIndex);const I=v.inboundNodes[k];if(y.indexOf(I)!==-1)throw new Wi(`The tensor ${b.name} at layer "${v.name}" is part of a cycle.`);if(w.indexOf(I)!==-1)return;this.containerNodes.add(To.nodeKey(v,k)),v.id in o||(o[v.id]=Object.keys(o).length),y.indexOf(I)===-1&&y.push(I);const $=I.inboundLayers.length;for(let S=0;S<$;S++){const N=I.inputTensors[S],F=I.inboundLayers[S],D=I.nodeIndices[S],E=I.tensorIndices[S];u(N,w,y,F,D,E)}for(w.push(I);y.indexOf(I)>=0;)y.splice(y.indexOf(I),1);a.push(I)},l=[],c=[];for(const b of this.outputs)u(b,l,c);const h=a.slice().reverse();for(const b of h){s[b.id]=b,b.id in n||(n[b.id]=0);let w=n[b.id];const y=r[b.outboundLayer.id]==null?0:r[b.outboundLayer.id];w=Math.max(w,y),r[b.outboundLayer.id]=w,i[b.outboundLayer.id]=b.outboundLayer,n[b.id]=w;for(let v=0;v<b.inboundLayers.length;v++){const k=b.inboundLayers[v],C=b.nodeIndices[v],I=k.inboundNodes[C],$=n[I.id]==null?0:n[I.id];n[I.id]=Math.max(w+1,$),s[I.id]=I}}const d={};for(const b in n){const w=n[b];w in d||(d[w]=[]),d[w].push(s[b])}const p={};for(const b in r){const w=r[b];w in p||(p[w]=[]),p[w].push(i[b])}let f=Object.keys(p).map(b=>parseInt(b,10)).sort(Sw);this.layers=[];for(const b of f){const w=p[b];w.sort((y,v)=>{const k=o[y.id],C=o[v.id];return k<C?-1:k>C?1:0});for(const y of w)y instanceof To&&this.internalContainerRefs.push(y),this.layers.push(y)}this.layersByDepth=p,f=Object.keys(d).map(b=>parseInt(b,10)).sort(Sw);const m=this.inputs.slice(),g=[];for(const b of f)for(const w of d[b]){const y=w.outboundLayer;if(y!=null){for(const v of w.inputTensors)if(m.indexOf(v)===-1)throw new Wi(`Graph disconnected: cannot obtain value for tensor ${v} at layer "${y.name}". The following previous layers were accessed without issue: ${g}`);for(const v of w.outputTensors)m.push(v);g.push(y.name)}}this.nodesByDepth=d;const x=this.layers.map(b=>b.name);for(const b of x){const w=x.filter(y=>y===b).length;if(w!==1)throw new Wi(`The name "${b}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Rw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const n of this.layers)t.numDisposedVariables+=n.dispose().numDisposedVariables;for(const n of this.internalContainerRefs)t.numDisposedVariables+=n.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(n=>{n._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new K("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const n of this.layers)t=t.concat(n.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const n of this.layers)t.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.layers)n.push(...s.trainableWeights);return n.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,n=!0){const s={};let r=0;for(const o of this.layers)for(const a of o.weights){if(s[a.originalName]!=null)throw new K(`Duplicate weight name: ${a.originalName}`);s[a.originalName]=a,r++}const i=[];for(const o in t){let a=o;if(s[o]==null){const u=o.split("/");a=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(s[a]!=null)i.push([s[a],t[o]]);else if(n)throw new K(`Provided weight data has no target variable: ${o}`);delete s[a]}if(n){const o=[];for(const a in s)o.push(a);if(o.length>0)throw new K(`${o.length} of ${r} weights are not set: ${o}`)}SD(i)}updatedConfig(){const t=this.getConfig(),n={};return n.className=this.getClassName(),n.config=t,n.kerasVersion=`tfjs-layers ${RD}`,n.backend="TensorFlow.js",n}toJSON(t,n=!0){const s=FD(this.updatedConfig());return n?JSON.stringify(s):s}call(t,n){return ht(()=>{t=xn(t);const s=new Hu;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],t[r]);return Zg(this.outputs,s,n)})}computeMask(t,n){return ht(()=>{t=xn(t);let s;return n==null?s=Dc(null,t.length):s=xn(n),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const n=Aw(t);if(n.length!==this.inputLayers.length)throw new K(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<n.length;a++){const u=this.inputLayers[a],l=n[a],c=u.name+"_0_0";s[c]=l}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Sw);if(r.length>1)for(const a of r){const u=this.nodesByDepth[a];for(const l of u){const c=l.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(c.id)!==-1)continue;const h=[];for(let m=0;m<l.inboundLayers.length;m++){const g=l.inboundLayers[m],x=l.nodeIndices[m],b=l.tensorIndices[m],w=`${g.name}_${x}_${b}`,y=s[w];h.push(y)}const d=c.computeOutputShape($r(h)),p=Aw(d),f=c.inboundNodes.indexOf(l);for(let m=0;m<p.length;m++){const g=`${c.name}_${f}_${m}`;s[g]=p[m]}}}const i=[],o=[];for(let a=0;a<this.outputLayers.length;a++){const u=this.outputLayers[a],l=this.outputLayersNodeIndices[a],c=this.outputLayersTensorIndices[a],h=`${u.name}_${l}_${c}`;o.push(h)}for(let a=0;a<o.length;a++){const u=o[a];ha(u in s),i.push(s[u])}return $r(i)}runInternalGraph(t,n){n==null&&(n=Dc(null,t.length));const s={};for(let u=0;u<this.inputs.length;++u){const l=this.inputs[u],c=t[u],h=n[u];s[l.id]=[c,h]}const r=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(Sw);for(const u of r){const l=this.nodesByDepth[u];for(const c of l){const h=c.outboundLayer,d=c.inputTensors,p=c.outputTensors,f=new Array;for(const m of d)m.id in s&&f.push(s[m.id]);if(f.length===d.length){let m={},g,x,b,w;if(c.callArgs!=null&&(m=c.callArgs),f.length===1){const[y,v]=f[0];m.mask==null&&(m.mask=v),b=xn(h.call(y,m)),w=xn(h.computeMask(y,v)),g=[y],x=[v]}else g=f.map(y=>y[0]),x=f.map(y=>y[1]),m.mask==null&&(m.mask=x),b=xn(h.call(g,m)),w=xn(h.computeMask(g,x));if(h.activityRegularizer)throw new xe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let y=0;y<p.length;++y){const v=p[y],k=b[y],C=w[y];s[v.id]=[k,C]}}}}const i=[],o=[],a=[];for(const u of this.outputs){ha(u.id in s,`Could not compute output ${u.name} : ${u.id}`);const[l,c]=s[u.id];a.push(l.shape),i.push(l),o.push(c)}return[i,o,a]}buildNodeConversionMap(t){const n={};let s;for(const r of this.layers){s=r instanceof To?1:0;for(let i=0;i<r.inboundNodes.length;i++){const o=To.nodeKey(r,i);this.containerNodes.has(o)&&(n[o]=s,s+=1)}}return n}getLayer(t,n){if(n!=null){if(this.layers.length<=n)throw new K(`Was asked to retrieve layer at index ${n}, but model only has ${this.layers.length} layer(s).`);return this.layers[n]}else if(t==null)throw new K("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===t)return s;throw new K(`No such layer: ${t}`)}calculateLosses(){return ht(()=>{const t=[];for(const n of this.layers)for(let s=0;s<n.inboundNodes.length;++s){const r=To.nodeKey(n,s);this.containerNodes.has(r)&&t.push(...n.calculateLosses())}return t})}getConfig(){const t={name:this.name},n=this.buildNodeConversionMap(this.layers),s=[];for(const o of this.layers){const a=o.getClassName(),u=o.getConfig(),l=[];for(let h=0;h<o.inboundNodes.length;h++){const d=o.inboundNodes[h],p=To.nodeKey(o,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const x=d.inboundLayers[g],b=d.nodeIndices[g],w=d.tensorIndices[g],y=To.nodeKey(x,b);let v=n[y];v==null&&(v=0),m.push([x.name,v,w,f])}l.push(m)}}}const c={};c.name=o.name,c.className=a,c.config=u,c.inboundNodes=l,s.push(c)}t.layers=s;const r=[];for(let o=0;o<this.inputLayers.length;o++){const a=this.inputLayers[o],u=this.inputLayersNodeIndices[o],l=To.nodeKey(a,u);if(!this.containerNodes.has(l))continue;let c=n[l];c==null&&(c=0);const h=this.inputLayersTensorIndices[o];r.push([a.name,c,h])}t.inputLayers=r;const i=[];for(let o=0;o<this.outputLayers.length;o++){const a=this.outputLayers[o],u=this.outputLayersNodeIndices[o],l=To.nodeKey(a,u);if(!this.containerNodes.has(l))continue;let c=n[l];c==null&&(c=0);const h=this.outputLayersTensorIndices[o];i.push([a.name,c,h])}return t.outputLayers=i,t}static fromConfig(t,n,s={},r=!1){const i={},o={};function a(g,x){g.name in o?o[g.name].push(x):o[g.name]=[x]}function u(g,x){const b=[];let w;for(const y of x){const v=y[0],k=y[1],C=y[2];if(w=y[3]==null?{}:y[3],!(v in i)){a(g,x);return}const I=i[v];if(I.inboundNodes.length<=k){a(g,x);return}const $=I.inboundNodes[k];b.push($.outputTensors[C])}b.length>0&&g.apply($r(b),w)}function l(g){const x=g.name,b=ma(g,n.customObjects!=null?n.customObjects:{});b.setFastWeightInitDuringBuild(r),i[x]=b,g.inboundNodes.forEach(y=>{if(!(y instanceof Array))throw new K(`Corrupted configuration, expected array for nodeData: ${y}`);a(b,y)})}const c=n.name,h=n.layers;for(const g of h)l(g);for(;!Jzt(o);)for(const g of h){const x=i[g.name];if(x.name in o){const b=o[x.name];delete o[x.name];for(const w of b)u(x,w)}}const d=[],p=[],f=n.inputLayers;for(const g of f){const x=g[0],b=g[1],w=g[2];ha(x in i);const v=i[x].inboundNodes[b].outputTensors;d.push(v[w])}const m=n.outputLayers;for(const g of m){const x=g[0],b=g[1],w=g[2];ha(x in i);const v=i[x].inboundNodes[b].outputTensors;p.push(v[w])}return new t({inputs:d,outputs:p,name:c})}get stateful(){if(this._stateful)throw new K("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){ht(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hPt(e,t,n){const s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){const r=[];return t.forEach(i=>{i in e?r.push(e[i]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function N6(e,t){return hPt(e,t,"classWeight")}async function E6(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){const r=ht(()=>{if(e.shape.length===1)return xc(e);if(e.shape.length===2){if(e.shape[1]>1)return Ag(e,1);if(e.shape[1]===1)return nt(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await r.data());be(r);const o=[];return i.forEach(a=>{if(n[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);o.push(n[a])}),jr(o,"float32")}else return null}function dPt(e,t){return q(e,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const pPt=32;function D6(e,t){let n,s;const r=t;n=r.xs,s=r.ys,L(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const i=T6("input",e.inputNames,n),o=T6("output",e.outputNames,s),a=i[0].shape[0];L(i.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),L(o.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let u=0;u<i.length;u++)L(i[u].shape[0]===a,()=>`Batch size mismatch: input ${e.inputNames[u]} has ${i[u].shape[0]}; expected  ${a} based on input ${e.inputNames[0]}.`);for(let u=0;u<o.length;u++)L(o[u].shape[0]===a,()=>`Batch size mismatch: output ${e.outputNames[u]} has ${o[u].shape[0]}; expected  ${a} based on input ${e.inputNames[0]}.`);return{xs:i,ys:o}}function T6(e,t,n){if(n instanceof qn)return[n];if(Array.isArray(n))return L(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const s=[];for(const r of t){if(n[r]==null)throw new K(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function fPt(e){if(e.length===3)throw new xe("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function mPt(e,t,n){const s=n.batchesPerEpoch!=null;if(L(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),L(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),L(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),L(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),L(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=n.validationData!=null;let i,o;if(r)if(A6(n.validationData))L(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const g=fPt(n.validationData);i=g.xs,o=g.ys}const a=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;r?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();const c=x6(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:d,history:p}=b6(c,h,n.epochs,null,null,gPt(t,n),null,r,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const g={};await d.onEpochBegin(f);let x=0,b=0;for(s||(m=await t.iterator());!s||x<n.batchesPerEpoch;){const w=await m.next();if(s&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:y,ys:v}=D6(e,w.value),k={};k.batch=b,k.size=y[0].shape[0],await d.onBatchBegin(b,k);const C=[];if(n.classWeight!=null){const S=N6(n.classWeight,e.outputNames);for(let N=0;N<S.length;++N)C.push(await E6(v[N],null,S[N]))}const I=y.concat(v).concat(C),$=a(I);be(I);for(let S=0;S<u.length;++S){const N=u[S],F=$[S];k[N]=F,oa(F)}await d.onBatchEnd(b,k),m6(k),b++,x++}if(s?x>=n.batchesPerEpoch:w.done){if(r){let y;A6(n.validationData)?y=xn(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):y=xn(e.evaluate(i,o,{batchSize:n.validationBatchSize==null?pPt:n.validationBatchSize,verbose:0}));for(let v=0;v<e.metricsNames.length;++v)g[`val_${e.metricsNames[v]}`]=y[v]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function gPt(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function A6(e){return typeof e.iterator=="function"}function xPt(e){return typeof e.next=="function"}async function bPt(e,t,n){n=n||{};const s=n.batches!=null,r=e.testFunction;let i=[];if(n.verbose>0)throw new xe("Verbose mode is not implemented yet.");L(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const o=xPt(t)?t:await t.iterator();let a=0,u=0;for(;!s||u<n.batches;){const l=await o.next();if(i=ht(()=>{if(l.value){const{xs:c,ys:h}=D6(e,l.value),d=c.concat(h),p=ht(()=>r(d));if(be(d),u===0)for(let m=0;m<p.length;++m)i.push(ce(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],x=i[m];i[m]=ht(()=>Dt(i[m],q(f,g))),u>0&&be(x)}be(p),a+=f,++u}return i}),l.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<i.length;++l){const c=i[l];i[l]=ne(i[l],a),be(c)}return $r(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _D(e){L(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function e0(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>Rc(s,t,n-t)):Rc(e,t,n-t)}function MD(e,t){return ht(()=>e==null?null:Array.isArray(e)?e.map(n=>MD(n,t)):X5(e,t.dtype==="int32"?t:Wt(t,"int32")))}function OD(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function F6(e){const t=[];e instanceof qn&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(s.rank===1)t.push(jg(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Ao(e,t){if(e==null)return;const n=[];if(t instanceof qn)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(const r in t){const i=t[r];n.push(i.id)}const s=[];if(e instanceof qn)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(const r in e){const i=e[r];n.indexOf(i.id)===-1&&s.push(i)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yPt(e){return e instanceof qn}function LD(e){return Array.isArray(e)}function R6(e){return!yPt(e)&&!LD(e)}function _6(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let o=!1;if(LD(e)&&e.length>0)o=!0;else if(R6(e)){for(const a in e)if(e.hasOwnProperty(a)){o=!0;break}}else o=!0;if(o)throw new K(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(o=>null);let i;if(R6(e)){e=e,i=[];for(const o of t){if(e[o]==null)throw new K(`No data provided for "${o}". Need data for each key in: ${t}`);i.push(e[o])}}else if(LD(e)){if(e=e,e.length!==t.length)throw new K(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(e=e,t.length>1)throw new K(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=F6(i),n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;const a=i[o];if(a.shape.length!==n[o].length)throw new K(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s). but got array with shape ${a.shape}`);for(let u=0;u<n[o].length;++u){if(u===0&&!s)continue;const l=a.shape[u],c=n[o][u];if(c!=null&&c>=0&&l!==c)throw new K(`${r} expected a batch of elements where each example has shape [${n[o].slice(1,n[o].length)}] (i.e.,tensor shape [*,${n[o].slice(1,n[o].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function wPt(e,t,n){const s=Vu(e.map(i=>i.shape[0]));s.sort();const r=Vu(t.map(i=>i.shape[0]));if(r.sort(),s.length>1)throw new K(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(i=>i.shape))}`);if(r.length>1)throw new K(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(i=>i.shape))}`);if(s.length>0&&r.length>0&&!We(s,r))throw new K(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function vPt(e,t,n){const s=[Lw,Bw,t0];for(let r=0;r<e.length;++r){const i=e[r],o=t[r],a=n[r];if(o!=null){if(o===t0&&i.shape[i.shape.length-1]===1)throw new K(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){const u=i.shape.slice(1),l=a.slice(1);for(let c=0;c<u.length;++c){const h=u[c],d=l[c];if(d!=null&&h!==d)throw new K(`A target Tensor with shape ${i.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function M6(e,t,n,s=!0,r=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new K(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new K(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(n!=null)for(let o=0;o<t.length;++o){if(n[o]==null)continue;const a=i[o];if(a.shape.length!==n[o].length)throw new K(`Error when checking ${r}: expected ${t[o]} to have ${n[o].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let u=0;u<n[o].length;++u){if(u===0&&!s)continue;const l=a.shape[u],c=n[o][u];if(c!=null&&c!==l)throw new K(`Error when checking ${r}: expected ${t[o]} to have shape ${JSON.stringify(n[o])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function kPt(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{const s=[];for(const r of t){let i=n.hasOwnProperty(r)?n[r]:[];Array.isArray(i)||(i=[i]),s.push(i)}return s}}const IPt="layers-model";class Td extends To{constructor(t){super(t),this.isTraining=!1}summary(t,n,s=console.log){if(!this.built)throw new K("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");oPt(this,t,n,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=iPt(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Wu))throw new K("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const o in t.loss)if(this.outputNames.indexOf(o)===-1)throw new K(`Unknown entry in loss dictionary: "${o}". Only expected the following keys: ${this.outputNames}`);for(const o of this.outputNames)t.loss[o]==null&&console.warn(`Output "${o}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${o} during training`),n.push(TD(t.loss[o]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new K(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);n=t.loss.map(a=>TD(a))}else{const o=TD(t.loss);this.outputs.forEach(a=>{n.push(o)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const a=this.internalOutputShapes[o],u=this.outputNames[o];this.feedOutputNames.push(u),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[o])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Fc("loss",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const a=this.lossFunctions[o];this.outputs.length>1&&(this.metricsTensors.push([a,o]),this.metricsNames.push(this.outputNames[o]+"_loss"))}});const r=kPt(t.metrics,this.outputNames),i=(o,a,u)=>{this.outputNames.length>1&&(a=this.outputNames[o]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([u,o])};Fc("metric",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const a=r[o];(l=>{const c="";let h,d,p;for(const f of l){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[o];g[g.length-1]===1||this.lossFunctions[o]===Bw?["accuracy","acc"].indexOf(f)!==-1?d=w6:["crossentropy","ce"].indexOf(f)!==-1&&(d=XBt):this.lossFunctions[o]===zw?["accuracy","acc"].indexOf(f)!==-1?d=YBt:["crossentropy","ce"].indexOf(f)!==-1&&(d=I6):["accuracy","acc"].indexOf(f)!==-1?d=v6:["crossentropy","ce"].indexOf(f)!==-1&&(d=k6);let x;["accuracy","acc"].indexOf(f)!==-1?x="acc":["crossentropy","ce"].indexOf(f)!==-1&&(x="ce"),p=d,h=c+x}else p=rPt(f),h=c+Vw(f);let m;Fc(h,()=>{m=p}),i(o,h,m)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,n,s={}){const r=s.batchSize==null?32:s.batchSize;_D(r);const i=!0,o=this.standardizeUserDataXY(t,n,i,r);try{const a=o[0].concat(o[1]);this.makeTestFunction();const u=this.testFunction,l=this.testLoop(u,a,r,s.verbose,s.steps);return $r(l)}finally{Ao(o[0],t),Ao(o[1],n)}}async evaluateDataset(t,n){return this.makeTestFunction(),bPt(this,t,n)}checkNumSamples(t,n,s,r="steps"){let i;if(s!=null){if(i=null,n!=null)throw new K(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(t!=null)Array.isArray(t)?i=t[0].shape[0]:i=t.shape[0];else throw new K(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return i}execute(t,n){if(Array.isArray(n)&&n.length===0)throw new K("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(n),r=s?n:[n],i=this.retrieveSymbolicTensors(r),o=new Hu;if(t instanceof qn&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new K(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)o.add(this.inputs[u],t[u])}else for(const u of this.inputs){const l=t[u.name];if(l==null)throw new K(`No value is provided for the model's input ${u.name}`);o.add(u,l)}const a=Zg(i,o);return s?a:a[0]}retrieveSymbolicTensors(t){const n=Dc(null,t.length);let s=t.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],o=i.map(a=>a.name);for(let a=0;a<t.length;++a){const u=o.indexOf(t[a]);if(u!==-1&&(n[a]=i[u],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw n.forEach((i,o)=>{i==null&&r.push(t[o])}),new K(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return n}predictLoop(t,n=32,s=!1){return ht(()=>{const r=this.checkNumSamples(t);if(s)throw new xe("Verbose predictLoop() is not implemented yet.");const i=OD(r,n),o=this.outputs.map(a=>[]);for(let a=0;a<i.length;++a)ht(()=>{const l=i[a][0],c=i[a][1],h=e0(t,l,c),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new Hu(d);return Zg(this.outputs,p)}).forEach((l,c)=>o[c].push(l));return $r(o.map(a=>Hs(a,0)))})}predict(t,n={}){const s=F6(t);M6(s,this.inputNames,this.feedInputShapes,!1);try{const r=n.batchSize==null?32:n.batchSize;return _D(r),this.predictLoop(s,r)}finally{Ao(s,t)}}predictOnBatch(t){M6(t,this.inputNames,this.feedInputShapes,!0);const n=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,n)}standardizeUserDataXY(t,n,s=!0,r){if(this.optimizer_==null)throw new Wi("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let o=0;o<this.feedOutputShapes.length;++o){const a=this.feedOutputShapes[o];this.feedLossFns[o]===zw?i.push(a.slice(0,a.length-1).concat([1])):i.push(a)}if(t=_6(t,this.feedInputNames,this.feedInputShapes,!1,"input"),n=_6(n,this.feedOutputNames,i,!1,"target"),wPt(t,n),vPt(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&t[0].shape[0]%r!==0)throw new K(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,n]}async standardizeUserData(t,n,s,r,i=!0,o){const[a,u]=this.standardizeUserDataXY(t,n,i,o);if(s!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){const c=N6(r,this.outputNames);l=[];for(let h=0;h<c.length;++h)l.push(await E6(u[h],null,c[h]))}return[a,u,l]}testLoop(t,n,s,r=0,i){return ht(()=>{const o=this.checkNumSamples(n,s,i,"steps"),a=[];if(r>0)throw new xe("Verbose mode is not implemented yet.");if(i!=null)throw new xe("steps mode in testLoop() is not implemented yet");{const u=OD(o,s),l=jr(No(0,o));for(let c=0;c<u.length;++c){const h=u[c][0],d=u[c][1],p=Rc(l,h,d-h),f=MD(n,p),m=t(f);if(c===0)for(let g=0;g<m.length;++g)a.push(ce(0));for(let g=0;g<m.length;++g){const x=m[g];a[g]=Dt(a[g],q(d-h,x))}}for(let c=0;c<a.length;++c)a[c]=ne(a[c],o)}return a})}getDedupedMetricsNames(){const t=this.metricsNames,n=[];for(let s=0;s<t.length;++s){const r=t[s];let i=r;if(B5(t,r)>1){const o=B5(t.slice(0,s),r);i+=`_${o}`}n.push(i)}return n}makeTrainFunction(){return t=>{const n=[],s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),o=[],a=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:s[m]});const d=new Hu(h),p=Zg(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let x=g(r[m],p[m]);i[m]!=null&&(x=dPt(x,i[m]));const b=Ln(x);n.push(b),m===0?f=x:f=Dt(f,x)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=n[m];else{const x=this.metricsTensors[m][0],b=this.metricsTensors[m][1];g=Ln(x(r[b],p[b]))}oa(g),o.push(g)}return f=Ln(f),this.calculateLosses().forEach(m=>{f=Dt(f,m)}),f},u=this.collectedTrainableWeights.map(h=>h.read()),l=!0;return[this.optimizer_.minimize(a,l,u)].concat(o)}}makeTestFunction(){this.testFunction=t=>ht(()=>{const n=[];let s;const r=t.slice(0,this.inputs.length),i=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let l=0;l<this.inputs.length;++l)o.push({key:this.inputs[l],value:r[l]});const a=new Hu(o),u=Zg(this.outputs,a);for(let l=0;l<this.lossFunctions.length;++l){const c=this.lossFunctions[l],h=Ln(c(i[l],u[l]));l===0?s=h:s=Dt(s,h),n.push(s)}for(let l=0;l<this.metricsTensors.length;++l){const c=this.metricsTensors[l][0],h=this.metricsTensors[l][1],d=Ln(c(i[h],u[h]));n.push(d)}return n})}async fit(t,n,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,i,o,a,u,l,c,h,d;try{const p=s.batchSize==null?32:s.batchSize;_D(p);const f=!1,m=await this.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,p);r=m[0],i=m[1],d=m[2];let g=!1,x;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)u=s.validationData[0],l=s.validationData[1];else throw s.validationData.length===3?new xe("validationData including sample weights is not supported yet."):new K(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const $=!0,S=await this.standardizeUserData(u,l,null,null,$,p);c=S[0],h=S[1],x=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const $=Math.floor(r[0].shape[0]*(1-s.validationSplit)),S=r[0].shape[0];c=e0(r,$,S),o=r,r=e0(r,0,$),h=e0(i,$,S),a=i,i=e0(i,0,$),x=c.concat(h)}else s.validationSteps!=null&&(g=!0);const b=r.concat(i).concat(d);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let v,k;g?(this.makeTestFunction(),v=this.testFunction,k=y.slice().concat(y.map($=>"val_"+$))):(v=null,x=[],k=y.slice());const C=x6(s.callbacks,s.yieldEvery);return await this.fitLoop(w,b,y,p,s.epochs,s.verbose,C,v,x,s.shuffle,k,s.initialEpoch,null,null)}finally{this.isTraining=!1,Ao(r,t),Ao(i,n),Ao(o,t),Ao(a,n),Ao(c,u),Ao(h,l),d!=null&&be(d)}}async fitLoop(t,n,s,r,i,o,a,u,l,c,h,d,p,f){r==null&&(r=32),i==null&&(i=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(u!=null&&l!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new K("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(n,r,p,"steps_per_epoch");let x;g!=null&&(x=No(0,g)),o==null&&(o=1);const{callbackList:b,history:w}=b6(a,o,i,d,g,p,r,m,h);b.setModel(this),this.history=w,await b.onTrainBegin(),this.stopTraining_=!1;for(let y=d;y<i;++y){await b.onEpochBegin(y);const v={};if(p!=null)throw new xe("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new xe("batch shuffling is not implemneted yet");c&&fAt(x);const k=jr(x),C=OD(g,r);for(let I=0;I<C.length;++I){const $={};if(await b.onBatchBegin(I,$),ht(()=>{const S=C[I][0],N=C[I][1],F=Rc(k,S,N-S);$.batch=I,$.size=N-S;const D=MD(n,F),E=t(D);for(let A=0;A<s.length;++A){const T=s[A],R=E[A];$[T]=R,oa(R)}if(I===C.length-1&&m){const A=this.testLoop(u,l,r);for(let T=0;T<s.length;++T){const R=s[T],_=A[T];oa(_),v["val_"+R]=_}}}),await b.onBatchEnd(I,$),m6($),this.stopTraining_)break}k.dispose()}if(await b.onEpochEnd(y,v),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,n){return mPt(this,t,n)}async trainOnBatch(t,n){const s=await this.standardizeUserData(t,n),r=s[0],i=s[1],a=this.makeTrainFunction()(r.concat(i)),u=[];for(const l of a){const c=await l.data();u.push(c[0])}return be(a),Ao(s[0],t),Ao(s[1],n),$r(u)}getNamedWeights(t){const n=[],s=t!=null&&t.trainableOnly,r=s?this.trainableWeights:this.weights,i=this.getWeights(s);for(let o=0;o<r.length;++o)s&&!r[o].trainable||n.push({name:r[o].originalName,tensor:i[o]});return n}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const n=UN().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=n-UN().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Ka(this.loss);else if(Array.isArray(this.loss)){for(const n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(n=>Ka(n))}else{const n=Object.keys(this.loss);t={};const s=this.loss;for(const r of n)if(typeof s[r]=="string")t[r]=Ka(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Ka(Vw(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Ka(Vw(t)));{const t={};for(const n in this.metrics)t[n]=Ka(Vw(this.metrics[n]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const n=Gw(t.optimizer_config),s=ma(n);let r;if(typeof t.loss=="string")r=Tc(t.loss);else if(Array.isArray(t.loss))r=t.loss.map(o=>Tc(o));else if(t.loss!=null){r={};for(const o in t.loss)r[o]=Tc(t.loss[o])}let i;if(Array.isArray(t.metrics))i=t.metrics.map(o=>Tc(o));else if(t.metrics!=null){i={};for(const o in t.metrics)i[o]=Tc(t.metrics[o])}this.compile({loss:r,metrics:i,optimizer:s})}async save(t,n){if(typeof t=="string"){const l=fFt(t);if(l.length===0)throw new K(`Cannot find any save handlers for URL '${t}'`);if(l.length>1)throw new K(`Found more than one (${l.length}) save handlers for URL '${t}'`);t=l[0]}if(t.save==null)throw new K("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await BV(this.getNamedWeights(n)),r=!1,i=null,a={modelTopology:this.toJSON(i,r),format:IPt,generatedBy:`TensorFlow.js tfjs-layers v${RD}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const l="optimizer",{data:c,specs:h}=await BV(await this.optimizer.getWeights(),l);s.specs.push(...h),s.data=WV([s.data,c])}return this.userDefinedMetadata!=null&&($6(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,t.save(a)}setUserDefinedMetadata(t){$6(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Td.className="Model",Nt(Td);class O6 extends Td{}O6.className="Functional",Nt(O6);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function CPt(e,t){if(t==null&&(t={}),typeof e=="string"){const n=mFt(e,t);if(n.length===0)n.push(_Lt(e,t));else if(n.length>1)throw new K(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return $Pt(e,void 0,t)}async function $Pt(e,t,n){if(n==null&&(n={}),e.load==null)throw new K("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;r.model_config!=null&&(r=r.model_config);const i=n.strict==null?!0:n.strict,o=s.weightData!=null&&s.weightSpecs!=null&&i,a=ma(Gw(r),t,o),u=s.trainingConfig;if(u!=null&&a.loadTrainingConfig(u),s.userDefinedMetadata!=null&&a.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new K("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:l,optimizerWeights:c}=SPt(s.weightData,s.weightSpecs);a.loadWeights(l,i),a.optimizer!=null&&c.length>0&&await a.optimizer.setWeights(c),be(l),be(c.map(h=>h.tensor))}return a}function SPt(e,t){const n=sFt(e,t),s={},r=[];return t.forEach(i=>{i.group==="optimizer"?r.push({name:i.name,tensor:n[i.name]}):s[i.name]=n[i.name]}),{modelWeights:s,optimizerWeights:r}}class n0 extends Td{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Ew("sequential_"),t.layers!=null)for(const n of t.layers)this.add(n)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new K(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const n=t instanceof n0||t instanceof Td;let s;if(n){if(s=t,s.outputs.length!==1)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new K("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new K("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=NBt({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(r)}if(n)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new K(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=a6(this.outputs[0])}this.inboundNodes=[],new Rw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Dc(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=t.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,n){return this.model==null&&this.build(),this.model.call(t,n)}build(t){if(Oe(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Td({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,n,s=console.log){this.built||this.build(),super.summary(t,n,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,n,s={}){if(!this.built)throw new Wi("The model needs to be compiled before being used.");return this.model.evaluate(t,n,s)}async evaluateDataset(t,n){if(!this.built)throw new Wi("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,n)}predict(t,n={}){return this.model==null&&this.build(),this.model.predict(t,n)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,n,s={}){if(!this.built)throw new Wi("The model needs to be compiled before being used.");return this.model.fit(t,n,s)}async fitDataset(t,n){if(!this.built)throw new Wi("The model needs to be compiled before being used.");return this.model.fitDataset(t,n)}async trainOnBatch(t,n){return this.model.trainOnBatch(t,n)}static fromConfig(t,n,s={},r=!1){let i,o={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new K("Legacy serialization format not supported yet.");i=n}else L(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=n.layers,delete n.layers,o=n;const a=new t(o);if(!(a instanceof n0))throw new xe(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const u of i){const c=ma(u,void 0,r);r&&c.setFastWeightInitDuringBuild(!0),a.add(c)}return a}set stopTraining(t){if(this.model==null)throw new K("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new K("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const n of this.layers){const s={};s.className=n.getClassName(),s.config=n.getConfig(),t.push(s)}return{name:this.name,layers:t}}}n0.className="Sequential",Nt(n0);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Sr=class extends Sd{getConfig(){return{}}};class L6 extends Sr{apply(t,n=1){return pBt(t,n)}}L6.className="elu",Nt(L6);class z6 extends Sr{apply(t){return xU(t)}}z6.className="selu",Nt(z6);class B6 extends Sr{apply(t){return Ha(t)}}B6.className="relu",Nt(B6);class P6 extends Sr{apply(t){return ht(()=>xw(6,Ha(t)))}}P6.className="relu6",Nt(P6);class W6 extends Sr{apply(t){return t}}W6.className="linear",Nt(W6);class V6 extends Sr{apply(t){return wd(t)}}V6.className="sigmoid",Nt(V6);class U6 extends Sr{apply(t){return mBt(t)}}U6.className="hardSigmoid",Nt(U6);class G6 extends Sr{apply(t){return Og(t)}}G6.className="softplus",Nt(G6);class H6 extends Sr{apply(t){return fBt(t)}}H6.className="softsign",Nt(H6);class q6 extends Sr{apply(t){return KN(t)}}q6.className="tanh",Nt(q6);let zD=class extends Sr{apply(t,n=-1){return vE(t,n)}};zD.className="softmax",Nt(zD);class j6 extends Sr{apply(t,n=-1){return lU(t,n)}}j6.className="logSoftmax",Nt(j6);class K6 extends Sr{apply(t,n=1){return ht(()=>q(wd(q(t,n)),t))}}K6.className="swish",Nt(K6);class X6 extends Sr{apply(t){return ht(()=>q(t,KN(Og(t))))}}X6.className="mish",Nt(X6);function qu(e){return e.getClassName()}function BD(e,t={}){return Hg(e,Pi.getMap().classNameMap,t,"activation")}function ju(e){if(e==null){const t={};return t.className="linear",t.config={},BD(t)}if(typeof e=="string"){const t={};return t.className=e,t.config={},BD(t)}else return e instanceof Sr?e:BD(e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function NPt(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}class Y6 extends Sd{}class Z6 extends Y6{constructor(t){super(),NPt(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return ht(()=>{let n=bs([1]);return this.hasL1&&(n=Dt(n,Yt(q(this.l1,gs(t))))),this.hasL2&&(n=Dt(n,Yt(q(this.l2,Kg(t))))),nt(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,n){return new t({l1:n.l1,l2:n.l2})}}Z6.className="L1L2",Nt(Z6);const J6={l1l2:"L1L2"};function Ye(e){return lD(e)}function Q6(e,t={}){return Hg(e,Pi.getMap().classNameMap,t,"regularizer")}function kn(e){if(e==null)return null;if(typeof e=="string"){const n={className:e in J6?J6[e]:e,config:{}};return Q6(n)}else return e instanceof Y6?e:Q6(e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class tG extends $e{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,n){t=le(t);let s=Ha(t);return this.maxValue!=null&&(s=hi(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},n=super.getConfig();return Object.assign(t,n),t}}tG.className="ReLU",Nt(tG);class eG extends $e{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){const s=le(t);return sE(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}}eG.className="LeakyReLU",Nt(eG);class nG extends $e{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=vn(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=kn(t.alphaRegularizer),this.alphaConstraint=is(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new K(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Oe(t);const n=t.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)n[r-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<t.length;++r)s[r]=t[r];this.inputSpec=[new ss({ndim:t.length,axes:s})],this.built=!0}call(t,n){return t=le(t),cE(t,this.alpha.read())}getConfig(){const t={alphaInitializer:En(this.alphaInitializer),alphaRegularizer:Ye(this.alphaRegularizer),alphaConstraint:rs(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(t,n),t}}nG.className="PReLU",Nt(nG);let sG=class extends $e{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new xe(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,n){const s=le(t);return pw(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},n=super.getConfig();return Object.assign(t,n),t}};sG.className="ELU",Nt(sG);class rG extends $e{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,n){const s=le(t);return q(s,Wt(di(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},n=super.getConfig();return Object.assign(t,n),t}}rG.className="ThresholdedReLU",Nt(rG);class iG extends $e{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new zD().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,n){const s=le(t);return this.softmax(s,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}}iG.className="Softmax",Nt(iG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ad(e,t,n){if(typeof e=="number")return Dc(e,t);if(e.length!==t)throw new K(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const r=e[s];if(!lBt(r))throw new K(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function Fo(e,t,n,s,r=1){if(e==null)return e;const i=t+(t-1)*(r-1);let o;return n==="same"?o=e:o=e-i+1,Math.floor((o+s-1)/s)}function ga(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+Gu([n-t,0]);else if(s==="same")e=e*t;else throw new K(`Unsupport padding mode: ${s}.`);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function PD(e,t){return ht(()=>(zn(t),t==="channelsFirst"?De(e,[0,2,3,1]):e))}function oG(e,t){return ht(()=>(zn(t),t==="channelsFirst"?De(e,[0,2,3,4,1]):e))}function EPt(e,t,n,s=1,r="valid",i,o=1){return ht(()=>{if(i==null&&(i=Eo()),zn(i),e.shape.length!==3)throw new K(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new K(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new K(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(i==="channelsFirst"&&(e=De(e,[0,2,1])),r==="causal")throw new xe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=QV(e,t,s,r==="same"?"same":"valid","NWC",o);return n!=null&&(a=Do(a,n)),a})}function aG(e,t,n,s=[1,1],r="valid",i,o,a=null){return ht(()=>{if(i==null&&(i=Eo()),zn(i),e.rank!==3&&e.rank!==4)throw new K(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new K(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=PD(e,i);if(r==="causal")throw new xe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=qMt({x:u,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:a}),i==="channelsFirst"&&(u=De(u,[0,3,1,2])),u})}function DPt(e,t,n,s=[1,1,1],r="valid",i,o){return ht(()=>{if(i==null&&(i=Eo()),zn(i),e.rank!==4&&e.rank!==5)throw new K(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new K(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let a=oG(e,i);if(r==="causal")throw new xe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=HRt(a,t,s,r==="same"?"same":"valid","NDHWC",o),n!=null&&(a=Do(a,n)),i==="channelsFirst"&&(a=De(a,[0,4,1,2,3])),a})}class Hw extends $e{constructor(t,n){if(super(n),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Hw.verifyArgs(n),this.rank=t,ys(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new xe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ad(n.kernelSize,t,"kernelSize"),this.strides=Ad(n.strides==null?1:n.strides,t,"strides"),this.padding=n.padding==null?"valid":n.padding,fi(this.padding),this.dataFormat=n.dataFormat==null?"channelsLast":n.dataFormat,zn(this.dataFormat),this.activation=ju(n.activation),this.useBias=n.useBias==null?!0:n.useBias,this.biasInitializer=vn(n.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=is(n.biasConstraint),this.biasRegularizer=kn(n.biasRegularizer),this.activityRegularizer=kn(n.activityRegularizer),this.dilationRate=Ad(n.dilationRate==null?1:n.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new K(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new K(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new K(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(ha("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!hD(t.kernelSize,"number",1,3))throw new K(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:qu(this.activation),useBias:this.useBias,biasInitializer:En(this.biasInitializer),biasRegularizer:Ye(this.biasRegularizer),activityRegularizer:Ye(this.activityRegularizer),biasConstraint:rs(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}}class Fd extends Hw{constructor(t,n){super(t,n),this.kernel=null,Fd.verifyArgs(n),this.filters=n.filters,ys(this.filters,"filters"),this.kernelInitializer=vn(n.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=is(n.kernelConstraint),this.kernelRegularizer=kn(n.kernelRegularizer)}build(t){t=Oe(t);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new K(`The channel dimension of the input should be defined. Found ${t[n]}`);const s=t[n],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[n]:s}}],this.built=!0}call(t,n){return ht(()=>{t=le(t);let s;const r=this.bias==null?null:this.bias.read(),i=W5(this.activation.getClassName());if(i!=null&&this.rank===2)s=aG(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)s=EPt(t,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=aG(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=DPt(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new xe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=Oe(t);const n=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let i=0;i<s.length;++i){const o=Fo(s[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);n.push(o)}let r=[t[0]];return this.dataFormat==="channelsLast"?(r=r.concat(n),r.push(this.filters)):(r.push(this.filters),r=r.concat(n)),r}getConfig(){const t={filters:this.filters,kernelInitializer:En(this.kernelInitializer),kernelRegularizer:Ye(this.kernelRegularizer),kernelConstraint:rs(this.kernelConstraint)},n=super.getConfig();return Object.assign(t,n),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new K(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class s0 extends Fd{constructor(t){super(2,t),s0.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!hD(t.kernelSize,"number",1,2))throw new K(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}s0.className="Conv2D",Nt(s0);class r0 extends Fd{constructor(t){super(3,t),r0.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new K(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}r0.className="Conv3D",Nt(r0);class uG extends s0{constructor(t){if(super(t),this.inputSpec=[new ss({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new K(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Oe(t),t.length!==4)throw new K("Input should have rank 4; Received input shape: "+JSON.stringify(t));const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new K("The channel dimension of the inputs should be defined. Found `None`.");const s=t[n],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ss({ndim:4,axes:{[n]:s}})],this.built=!0}call(t,n){return ht(()=>{let s=le(t);if(s.shape.length!==4)throw new K(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let o,a;this.dataFormat==="channelsFirst"?(o=2,a=3):(o=1,a=2);const u=r[o],l=r[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=ga(u,d,c,this.padding),m=ga(l,p,h,this.padding),g=[i,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=De(s,[0,2,3,1]));let x=tU(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=De(x,[0,3,1,2])),this.bias!=null&&(x=Do(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(t){t=Oe(t);const n=t.slice();let s,r,i;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3):(s=3,r=1,i=2);const o=this.kernelSize[0],a=this.kernelSize[1],u=this.strides[0],l=this.strides[1];return n[s]=this.filters,n[r]=ga(n[r],u,o,this.padding),n[i]=ga(n[i],l,a,this.padding),n}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}uG.className="Conv2DTranspose",Nt(uG);class lG extends r0{constructor(t){if(super(t),this.inputSpec=[new ss({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new K(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Oe(t),t.length!==5)throw new K("Input should have rank 5; Received input shape: "+JSON.stringify(t));const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null)throw new K("The channel dimension of the inputs should be defined. Found `None`.");const s=t[n],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ss({ndim:5,axes:{[n]:s}})],this.built=!0}call(t,n){return ht(()=>{let s=le(t);if(s.shape.length!==5)throw new K(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let o,a,u;this.dataFormat==="channelsFirst"?(u=2,o=3,a=4):(u=1,o=2,a=3);const l=r[u],c=r[o],h=r[a],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],x=this.strides[2],b=ga(l,m,d,this.padding),w=ga(c,g,p,this.padding),y=ga(h,x,f,this.padding),v=[i,b,w,y,this.filters];this.dataFormat!=="channelsLast"&&(s=De(s,[0,2,3,4,1]));let k=KRt(s,this.kernel.read(),v,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=De(k,[0,4,1,2,3])),this.bias!==null&&(k=Do(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(t){t=Oe(t);const n=t.slice();let s,r,i,o;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3,o=4):(s=4,r=1,i=2,o=3);const a=this.kernelSize[0],u=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[0],h=this.strides[1],d=this.strides[2];return n[s]=this.filters,n[r]=ga(n[r],c,a,this.padding),n[i]=ga(n[i],h,u,this.padding),n[o]=ga(n[o],d,l,this.padding),n}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}lG.className="Conv3DTranspose",Nt(lG);class cG extends Fd{constructor(t,n){if(super(t,n),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new K("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new K("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new K(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=vn(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=kn(n.depthwiseRegularizer),this.depthwiseConstraint=is(n.depthwiseConstraint),this.pointwiseInitializer=vn(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=kn(n.pointwiseRegularizer),this.pointwiseConstraint=is(n.pointwiseConstraint)}build(t){if(t=Oe(t),t.length<this.rank+2)throw new K(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const n=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[n]==null||t[n]<0)throw new K(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[n])}`);const s=t[n],r=this.kernelSize.concat([s,this.depthMultiplier]),i=[];for(let a=0;a<this.rank;++a)i.push(1);i.push(s*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new ss({ndim:this.rank+2,axes:{[n]:s}})],this.built=!0}call(t,n){return ht(()=>{t=le(t);let s;if(this.rank===1)throw new xe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=De(t,[0,2,3,1])),s=bU(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Do(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=De(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=En(this.depthwiseInitializer),t.pointwiseInitializer=En(this.pointwiseInitializer),t.depthwiseRegularizer=Ye(this.depthwiseRegularizer),t.pointwiseRegularizer=Ye(this.pointwiseRegularizer),t.depthwiseConstraint=rs(this.depthwiseConstraint),t.pointwiseConstraint=rs(this.pointwiseConstraint),t}}cG.className="SeparableConv";class hG extends cG{constructor(t){super(2,t)}}hG.className="SeparableConv2D",Nt(hG);class qw extends Fd{constructor(t){super(1,t),qw.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!hD(t.kernelSize,"number",1,1))throw new K(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}qw.className="Conv1D",Nt(qw);class dG extends $e{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,n){return ht(()=>{if(t=le(t),this.dataFormat==="channelsLast"){const s=Dw(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Dw(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Dw(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Dw(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}dG.className="Cropping2D",Nt(dG);class pG extends $e{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,zn(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,oBt(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const n=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],n,s]}else{const n=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],n,s,t[3]]}}call(t,n){return ht(()=>{let s=le(t);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=De(s,[0,2,3,1]);const i=this.size[0]*r[2],o=this.size[1]*r[3],a=this.interpolation==="nearest"?Sc.resizeNearestNeighbor(s,[i,o]):Sc.resizeBilinear(s,[i,o]);return De(a,[0,3,1,2])}else{const i=this.size[0]*r[1],o=this.size[1]*r[2];return this.interpolation==="nearest"?Sc.resizeNearestNeighbor(s,[i,o]):Sc.resizeBilinear(s,[i,o])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(t,n),t}}pG.className="UpSampling2D",Nt(pG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function TPt(e,t,n=[1,1],s="valid",r,i){return ht(()=>{r==null&&(r=Eo()),zn(r);let o=PD(e,r);if(e.rank!==4)throw new K(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new K(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=QN(o,t,n,s==="same"?"same":"valid","NHWC",i),r==="channelsFirst"&&(o=De(o,[0,3,1,2])),o})}class fG extends Hw{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=vn(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=is(t.depthwiseConstraint),this.depthwiseRegularizer=kn(t.depthwiseRegularizer)}build(t){if(t=Oe(t),t.length<4)throw new K(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const n=this.dataFormat==="channelsFirst"?1:3;if(t[n]==null||t[n]<0)throw new K(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[n]}).`);const s=t[n],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return ht(()=>{t=le(t);let s=TPt(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Do(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=Oe(t);const n=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,i=Fo(n,this.kernelSize[0],this.padding,this.strides[0]),o=Fo(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],r,i,o]:[t[0],i,o,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=En(this.depthwiseInitializer),t.depthwiseRegularizer=Ye(this.depthwiseRegularizer),t.depthwiseConstraint=rs(this.depthwiseRegularizer),t}}fG.className="DepthwiseConv2D",Nt(fG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mG(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new K("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(i){return i==null||Array.isArray(i)?i:[i]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function gG(e,t,n,s=!1,r,i,o=!1,a=!1){return ht(()=>{const u=t.shape.length;if(u<3)throw new K(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(No(2,u));if(t=De(t,l),i!=null)throw new xe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=Wt(Wt(r,"bool"),"float32"),r.rank===u-1&&(r=qr(r,-1)),r=De(r,l)),s&&(t=Cc(t,0),r!=null&&(r=Cc(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=$c(t);let m;r!=null&&(m=$c(r));for(let x=0;x<p;++x){const b=f[x],w=ht(()=>e(b,d));if(r==null)h=w[0],d=w[1];else{const y=ht(()=>{const v=m[x],k=Zt(Bi(v),v),C=Dt(q(w[0],v),q(d[0],k)),I=d.map(($,S)=>Dt(q(w[1][S],v),q($,k)));return{output:C,newStates:I}});h=y.output,d=y.newStates}a&&c.push(h)}let g;return a&&(g=ua(c,1)),[h,g,d]})}class Ku extends $e{constructor(t){super(t);let n;if(t.cell==null)throw new K("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?n=new UD({cells:t.cell}):n=t.cell,n.stateSize==null)throw new K("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new ss({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return No(0,t).map(n=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){CD(t)&&(t=t[0]),t=t;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);const s=n[0];let r;if(this.returnSequences?r=[t[0],t[1],s]:r=[t[0],s],this.returnState){const i=[];for(const o of n)i.push([t[0],o]);return[r].concat(i)}else return r}computeMask(t,n){return ht(()=>{Array.isArray(n)&&(n=n[0]);const s=this.returnSequences?n:null;if(this.returnState){const r=this.states.map(i=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let s=0;s<t;++s)n.push(null);return n}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new xe("Constants support is not implemented in RNN yet.");CD(t)&&(t=t[0]),t=t;const n=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new ss({shape:[n,null,...s]});const r=[t[0]].concat(t.slice(2));this.cell.build(r);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!We(this.stateSpec.map(o=>o.shape[o.shape.length-1]),i))throw new K(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(o=>new ss({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(t,n=!1){ht(()=>{if(!this.stateful)throw new ca("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>bs([s,r])):this.states_=[bs([s,this.cell.stateSize])];else if(t==null)be(this.states_),this.keptStates!=null&&(be(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>bs([s,r])):this.states_[0]=bs([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);n===!0?this.keptStates.push(this.states_.slice()):be(this.states_);for(let r=0;r<this.states_.length;++r){const i=t[r],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,o];if(!We(i.shape,a))throw new K(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${i.shape}`);this.states_[r]=i}}this.states_=this.states_.map(r=>oa(r.clone()))})}apply(t,n){let s=n==null?null:n.initialState,r=n==null?null:n.constants;n==null&&(n={});const i=mG(t,s,r,this.numConstants);t=i.inputs,s=i.initialState,r=i.constants;let o=[],a=[];if(s!=null){n.initialState=s,o=o.concat(s),this.stateSpec=[];for(const l of s)this.stateSpec.push(new ss({shape:l.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(n.constants=r,o=o.concat(r),this.numConstants=r.length),o[0]instanceof fa){const l=[t].concat(o),c=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=c;const d=super.apply(l,n);return this.inputSpec=h,d}else return super.apply(t,n)}call(t,n){return ht(()=>{const s=n==null?null:n.mask,r=n==null?null:n.training;let i=n==null?null:n.initialState;t=le(t),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==o)throw new K(`RNN Layer has ${o} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},l=gG((f,m)=>{const g=this.cell.call([f].concat(m),a);return[g[0],g.slice(1)]},t,i,this.goBackwards,s,null,this.unroll,this.returnSequences),c=l[0],h=l[1],d=l[2];this.stateful&&this.resetStates(d,r);const p=this.returnSequences?h:c;return this.returnState?[p].concat(d):p})}getInitialState(t){return ht(()=>{let n=bs(t.shape);return n=Yt(n,[1,2]),n=jg(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?mD(n,[1,s]):n):this.cell.stateSize>1?[mD(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Ku.className&&(n.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),n)}static fromConfig(t,n,s={}){const r=n.cell,i=ma(r,s);return new t(Object.assign(n,{cell:i}))}}Ku.className="RNN",Nt(Ku);class jw extends $e{}class WD extends jw{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,ys(this.units,"units"),this.activation=ju(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=vn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=vn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=vn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kn(t.kernelRegularizer),this.recurrentRegularizer=kn(t.recurrentRegularizer),this.biasRegularizer=kn(t.biasRegularizer),this.kernelConstraint=is(t.kernelConstraint),this.recurrentConstraint=is(t.recurrentConstraint),this.biasConstraint=is(t.biasConstraint),this.dropout=Dd([1,Gu([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Dd([1,Gu([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Oe(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return ht(()=>{if(t=t,t.length!==2)throw new K(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const r=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Xu({ones:()=>Bi(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Xu({ones:()=>Bi(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let i;const o=this.dropoutMask,a=this.recurrentDropoutMask;o!=null?i=pa(q(t,o),this.kernel.read()):i=pa(t,this.kernel.read()),this.bias!=null&&(i=Do(i,this.bias.read())),a!=null&&(s=q(s,a));let u=Dt(i,pa(s,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t=super.getConfig(),n={units:this.units,activation:qu(this.activation),useBias:this.useBias,kernelInitializer:En(this.kernelInitializer),recurrentInitializer:En(this.recurrentInitializer),biasInitializer:En(this.biasInitializer),kernelRegularizer:Ye(this.kernelRegularizer),recurrentRegularizer:Ye(this.recurrentRegularizer),biasRegularizer:Ye(this.biasRegularizer),activityRegularizer:Ye(this.activityRegularizer),kernelConstraint:rs(this.kernelConstraint),recurrentConstraint:rs(this.recurrentConstraint),biasConstraint:rs(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),n)}}WD.className="SimpleRNNCell",Nt(WD);class xG extends Ku{constructor(t){t.cell=new WD(t),super(t)}call(t,n){return ht(()=>{this.cell.dropoutMask!=null&&(be(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(be(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}static fromConfig(t,n){return new t(n)}}xG.className="SimpleRNN",Nt(xG);class VD extends jw{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new K("GRUCell does not support reset_after parameter set to true.");this.units=t.units,ys(this.units,"units"),this.activation=ju(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=ju(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=vn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=vn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=vn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kn(t.kernelRegularizer),this.recurrentRegularizer=kn(t.recurrentRegularizer),this.biasRegularizer=kn(t.biasRegularizer),this.kernelConstraint=is(t.kernelConstraint),this.recurrentConstraint=is(t.recurrentConstraint),this.biasConstraint=is(t.biasConstraint),this.dropout=Dd([1,Gu([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Dd([1,Gu([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Oe(t);const n=t[t.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,n){return ht(()=>{if(t=t,t.length!==2)throw new K(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=n.training==null?!1:n.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Xu({ones:()=>Bi(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Xu({ones:()=>Bi(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let a,u,l;0<this.dropout&&this.dropout<1&&(t=q(t,i[0]));let c=pa(t,this.kernel.read());this.useBias&&(c=Do(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=q(r,o[0]));const h=this.recurrentKernel.read(),[d,p]=pi(h,[2*this.units,this.units],h.rank-1),f=pa(r,d),[m,g,x]=pi(c,3,c.rank-1),[b,w]=pi(f,2,f.rank-1);a=this.recurrentActivation.apply(Dt(m,b)),u=this.recurrentActivation.apply(Dt(g,w));const y=pa(q(u,r),p);l=this.activation.apply(Dt(x,y));const v=Dt(q(a,r),q(Dt(1,Nn(a)),l));return[v,v]})}getConfig(){const t=super.getConfig(),n={units:this.units,activation:qu(this.activation),recurrentActivation:qu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:En(this.kernelInitializer),recurrentInitializer:En(this.recurrentInitializer),biasInitializer:En(this.biasInitializer),kernelRegularizer:Ye(this.kernelRegularizer),recurrentRegularizer:Ye(this.recurrentRegularizer),biasRegularizer:Ye(this.biasRegularizer),activityRegularizer:Ye(this.activityRegularizer),kernelConstraint:rs(this.kernelConstraint),recurrentConstraint:rs(this.recurrentConstraint),biasConstraint:rs(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),n)}}VD.className="GRUCell",Nt(VD);class bG extends Ku{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new VD(t),super(t)}call(t,n){return ht(()=>{this.cell.dropoutMask!=null&&(be(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(be(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}}bG.className="GRU",Nt(bG);class Kw extends jw{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,ys(this.units,"units"),this.activation=ju(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=ju(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=vn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=vn(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=vn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=kn(t.kernelRegularizer),this.recurrentRegularizer=kn(t.recurrentRegularizer),this.biasRegularizer=kn(t.biasRegularizer),this.kernelConstraint=is(t.kernelConstraint),this.recurrentConstraint=is(t.recurrentConstraint),this.biasConstraint=is(t.biasConstraint),this.dropout=Dd([1,Gu([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Dd([1,Gu([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var n;t=Oe(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,o=this.units;r=new(n=class extends Ui{apply(u,l){const c=i.apply([o]),h=new xD().apply([o]),d=i.apply([o*2]);return K5(K5(c,h),d)}},n.className="CustomInit",n)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,n){return ht(()=>{const s=n.training==null?!1:n.training;if(t=t,t.length!==3)throw new K(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const i=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Xu({ones:()=>Bi(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Xu({ones:()=>Bi(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let u,l,c,h;0<this.dropout&&this.dropout<1&&(t=q(t,o[0]));let d=pa(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=q(r,a[0])),d=Dt(d,pa(r,this.recurrentKernel.read())),this.useBias&&(d=Do(d,this.bias.read()));const[p,f,m,g]=pi(d,4,d.rank-1);u=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(f),c=Dt(q(l,i),q(u,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const x=q(h,this.activation.apply(c));return[x,x,c]})}getConfig(){const t=super.getConfig(),n={units:this.units,activation:qu(this.activation),recurrentActivation:qu(this.recurrentActivation),useBias:this.useBias,kernelInitializer:En(this.kernelInitializer),recurrentInitializer:En(this.recurrentInitializer),biasInitializer:En(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ye(this.kernelRegularizer),recurrentRegularizer:Ye(this.recurrentRegularizer),biasRegularizer:Ye(this.biasRegularizer),activityRegularizer:Ye(this.activityRegularizer),kernelConstraint:rs(this.kernelConstraint),recurrentConstraint:rs(this.recurrentConstraint),biasConstraint:rs(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),n)}}Kw.className="LSTMCell",Nt(Kw);class yG extends Ku{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Kw(t),super(t)}call(t,n){return ht(()=>{this.cell.dropoutMask!=null&&(be(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(be(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=n==null?null:n.mask,r=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}static fromConfig(t,n){return n.implmentation===0&&(n.implementation=1),new t(n)}}yG.className="LSTM",Nt(yG);class UD extends jw{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const n of this.cells.slice().reverse())Array.isArray(n.stateSize)?t.push(...n.stateSize):t.push(n.stateSize);return t}call(t,n){return ht(()=>{t=t;let s=t.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const i=[];let o;for(let a=0;a<this.cells.length;++a){const u=this.cells[a];s=r[a],a===0?o=[t[0]].concat(s):o=[o[0]].concat(s),o=u.call(o,n),i.push(o.slice(1))}s=[];for(const a of i.slice().reverse())s.push(...a);return[o[0]].concat(s)})}build(t){CD(t)&&(t=t[0]),t=t;let n;this.cells.forEach((s,r)=>{Fc(`RNNCell_${r}`,()=>{s.build(t),Array.isArray(s.stateSize)?n=s.stateSize[0]:n=s.stateSize,t=[t[0],n]})}),this.built=!0}getConfig(){const t=super.getConfig(),n=i=>({className:i.getClassName(),config:i.getConfig()}),r={cells:this.cells.map(n)};return Object.assign(Object.assign({},t),r)}static fromConfig(t,n,s={}){const r=[];for(const i of n.cells)r.push(ma(i,s));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const n of this.cells)t.push(...n.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const n of this.cells)t.push(...n.nonTrainableWeights);if(!this.trainable){const n=[];for(const s of this.cells)n.push(...s.trainableWeights);return n.concat(t)}return t}getWeights(){const t=[];for(const n of this.cells)t.push(...n.weights);return $D(t)}setWeights(t){const n=[];for(const s of this.cells){const r=s.weights.length,i=t.splice(r);for(let o=0;o<s.weights.length;++o)n.push([s.weights[o],i[o]])}SD(n)}}UD.className="StackedRNNCells",Nt(UD);function Xu(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:i}=e,o=()=>i!=null?i(t(),n):Y5(t(),n),a=()=>Xg(o,t,s);return!r||r<=1?oa(a().clone()):Array(r).fill(void 0).map(a).map(l=>oa(l.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var APt=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]]);return n};class wG extends Ku{constructor(t){if(t.unroll)throw new xe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new xe("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new ss({ndim:5})]}call(t,n){return ht(()=>{if(this.cell.dropoutMask!=null&&(be(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(be(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new K("ConvRNN2D cell does not support constants");const s=n==null?null:n.mask,r=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(t,{mask:s,training:r,initialState:i})})}computeOutputShape(t){let n=this.computeSingleOutputShape(t);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([t[0],...n.slice(-3)])]),n}getInitialState(t){return ht(()=>{const{stateSize:n}=this.cell,s=t.shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)],o=bs(i);return Array.isArray(n)?Array(n.length).fill(o):[o]})}resetStates(t,n=!1){ht(()=>{if(!this.stateful)throw new ca("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)];if(s[0]==null)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bs(i)):this.states_=[bs(i)];else if(t==null)be(this.states_),this.keptStates!=null&&(be(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>bs(i)):this.states_[0]=bs(i);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);n?this.keptStates.push(this.states_.slice()):be(this.states_);for(let a=0;a<this.states_.length;++a){const u=t[a],l=i;if(!We(u.shape,l))throw new K(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${u.shape}`);this.states_[a]=u}}this.states_=this.states_.map(a=>oa(a.clone()))})}computeSingleOutputShape(t){const{dataFormat:n,filters:s,kernelSize:r,padding:i,strides:o,dilationRate:a}=this.cell,u=n==="channelsFirst",l=t[u?3:2],c=t[u?4:3],h=Fo(l,r[0],i,o[0],a[0]),d=Fo(c,r[1],i,o[1],a[1]);return[...t.slice(0,2),...u?[s,h,d]:[h,d,s]]}}wG.className="ConvRNN2D";class GD extends Kw{constructor(t){const{filters:n,kernelSize:s,strides:r,padding:i,dataFormat:o,dilationRate:a}=t;super(Object.assign(Object.assign({},t),{units:n})),this.filters=n,ys(this.filters,"filters"),this.kernelSize=Ad(s,2,"kernelSize"),this.kernelSize.forEach(u=>ys(u,"kernelSize")),this.strides=Ad(r||1,2,"strides"),this.strides.forEach(u=>ys(u,"strides")),this.padding=i||"valid",fi(this.padding),this.dataFormat=o||"channelsLast",zn(this.dataFormat),this.dilationRate=Ad(a||1,2,"dilationRate"),this.dilationRate.forEach(u=>ys(u,"dilationRate"))}build(t){var n;t=Oe(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new K(`The channel dimension of the input should be defined. Found ${t[s]}`);const r=t[s],i=4,o=this.kernelSize.concat([r,this.filters*i]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const l=this.biasInitializer,c=this.filters;u=new(n=class extends Ui{apply(d,p){const f=l.apply([c]),m=Pu([c]),g=l.apply([c*2]);return fD([f,m,g])}},n.className="CustomInit",n)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,n){return ht(()=>{if(t.length!==3)throw new K(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=n.training||!1,r=t[0],i=t[1],o=t[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Xu({ones:()=>Bi(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,l=(z,B,V)=>!B||!B[V]?z:q(B[V],z);let c=l(r,u,0),h=l(r,u,1),d=l(r,u,2),p=l(r,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Xu({ones:()=>Bi(i),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=l(i,f,0),g=l(i,f,1),x=l(i,f,2),b=l(i,f,3);const w=3,[y,v,k,C]=pi(this.kernel.read(),a,w),[I,$,S,N]=this.useBias?pi(this.bias.read(),a):[null,null,null,null];c=this.inputConv(c,y,I,this.padding),h=this.inputConv(h,v,$,this.padding),d=this.inputConv(d,k,S,this.padding),p=this.inputConv(p,C,N,this.padding);const[F,D,E,A]=pi(this.recurrentKernel.read(),a,w);m=this.recurrentConv(m,F),g=this.recurrentConv(g,D),x=this.recurrentConv(x,E),b=this.recurrentConv(b,A);const T=this.recurrentActivation.apply(Dt(c,m)),R=this.recurrentActivation.apply(Dt(h,g)),_=Dt(q(R,o),q(T,this.activation.apply(Dt(d,x)))),M=q(this.recurrentActivation.apply(Dt(p,b)),this.activation.apply(_));return[M,M,_]})}getConfig(){const t=super.getConfig(),n=APt(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(t,n,s,r){const i=wc(t,n,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Do(i,s,this.dataFormat):i}recurrentConv(t,n){return wc(t,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}GD.className="ConvLSTM2DCell",Nt(GD);class vG extends wG{constructor(t){const n=new GD(t);super(Object.assign(Object.assign({},t),{cell:n}))}static fromConfig(t,n){return new t(n)}}vG.className="ConvLSTM2D",Nt(vG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class HD extends $e{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const n=t.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?n[r]:this.noiseShape[r]);return s}call(t,n){return ht(()=>{this.invokeCallHook(t,n);const s=le(t);if(0<this.rate&&this.rate<1){const r=n.training==null?!1:n.training,i=this.getNoiseShape(s);return Xg(()=>Y5(s,this.rate,i,this.seed),()=>s,r)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(t,n),t}dispose(){return super.dispose()}}HD.className="Dropout",Nt(HD);class kG extends HD{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const n=t.shape;return[n[0],1,n[2]]}}kG.className="SpatialDropout1D",Nt(kG);class IG extends $e{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let n=null;t.batchSize!=null&&(n=t.batchSize),this.batchInputShape=[n,t.inputDim]}this.units=t.units,ys(this.units,"units"),this.activation=ju(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=vn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=vn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=is(t.kernelConstraint),this.biasConstraint=is(t.biasConstraint),this.kernelRegularizer=kn(t.kernelRegularizer),this.biasRegularizer=kn(t.biasRegularizer),this.activityRegularizer=kn(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Oe(t);const n=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(t){t=Oe(t);const n=t.slice();return n[n.length-1]=this.units,n}call(t,n){return ht(()=>{this.invokeCallHook(t,n);const s=le(t),r=W5(this.activation.getClassName());let i;return r!=null?i=pa(s,this.kernel.read(),r,this.bias?this.bias.read():null):(i=pa(s,this.kernel.read()),this.bias!=null&&(i=Do(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const t={units:this.units,activation:qu(this.activation),useBias:this.useBias,kernelInitializer:En(this.kernelInitializer),biasInitializer:En(this.biasInitializer),kernelRegularizer:Ye(this.kernelRegularizer),biasRegularizer:Ye(this.biasRegularizer),activityRegularizer:Ye(this.activityRegularizer),kernelConstraint:rs(this.kernelConstraint),biasConstraint:rs(this.biasConstraint)},n=super.getConfig();return Object.assign(t,n),t}}IG.className="Dense",Nt(IG);class CG extends $e{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Oe(t);for(const n of t.slice(1))if(n==null)throw new K(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Uu(t,1)]}call(t,n){return ht(()=>{this.invokeCallHook(t,n);let s=le(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let i=2;i<s.rank;++i)r.push(i);r.push(1),s=De(s,r)}return dBt(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const n=super.getConfig();return Object.assign(t,n),t}}CG.className="Flatten",Nt(CG);class $G extends $e{constructor(t){super(t),this.supportsMasking=!0,this.activation=ju(t.activation)}call(t,n){return ht(()=>{this.invokeCallHook(t,n);const s=le(t);return this.activation.apply(s)})}getConfig(){const t={activation:qu(this.activation)},n=super.getConfig();return Object.assign(t,n),t}}$G.className="Activation",Nt($G);class SG extends $e{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,n){return ht(()=>(t=le(t),cBt(t,this.n)))}getConfig(){const t={n:this.n},n=super.getConfig();return Object.assign(t,n),t}}SG.className="RepeatVector",Nt(SG);class NG extends $e{constructor(t){super(t),this.targetShape=t.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,n){const s="Total size of new array must be unchanged.",r=n.slice();let i=1,o=null;for(let u=0;u<r.length;++u){const l=r[u];if(this.isUnknown(l))if(o===null)o=u;else throw new K("Can only specifiy one unknown dimension.");else i*=l}const a=Uu(t);if(o!==null){if(i===0||a%i!==0)throw new K(s);r[o]=a/i}else if(a!==i)throw new K(s);return r}computeOutputShape(t){let n=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){n=!0;break}return n?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,n){return ht(()=>{this.invokeCallHook(t,n);const s=le(t),r=s.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return nt(s,i)})}getConfig(){const t={targetShape:this.targetShape},n=super.getConfig();return Object.assign(t,n),t}}NG.className="Reshape",Nt(NG);class EG extends $e{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const n=No(1,t.dims.length+1);if(!We(t.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ss({ndim:this.dims.length+1})]}computeOutputShape(t){t=Oe(t);const n=t.slice();return this.dims.forEach((s,r)=>{n[r+1]=t[s]}),n}call(t,n){return De(le(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},n=super.getConfig();return Object.assign(t,n),t}}EG.className="Permute",Nt(EG);class DG extends $e{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,t),n}computeMask(t,n){const s=le(t),r=-1;return GN(Lg(s,this.maskValue),r)}call(t,n){return ht(()=>{this.invokeCallHook(t,n);const s=le(t),r=-1,i=!0,o=GN(Lg(s,this.maskValue),r,i);return q(s,Wt(o,s.dtype))})}}DG.className="Masking",Nt(DG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class TG extends $e{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let n=null;t.batchSize!=null&&(n=t.batchSize),t.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(xn(t.inputLength))}this.inputDim=t.inputDim,ys(this.inputDim,"inputDim"),this.outputDim=t.outputDim,ys(this.outputDim,"outputDim"),this.embeddingsInitializer=vn(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=kn(t.embeddingsRegularizer),this.activityRegularizer=kn(t.activityRegularizer),this.embeddingsConstraint=is(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,n){return ht(()=>this.maskZero?(t=le(t),Lg(t,Fe(t))):null)}computeOutputShape(t){if(t=Oe(t),this.inputLength==null)return[...t,this.outputDim];const n=xn(this.inputLength);if(n.length!==t.length-1)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let r=0;r<n.length;++r){const i=n[r],o=t[r+1];if(i!=null&&o!=null&&i!==o)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);i==null&&(n[s]=o),s++}}return[t[0],...n,this.outputDim]}call(t,n){return ht(()=>{this.invokeCallHook(t,n);let s=le(t);s.dtype!=="int32"&&(s=da(s,"int32"));const r=X5(this.embeddings.read(),nt(s,[s.size]));return nt(r,Oe(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:En(this.embeddingsInitializer),embeddingsRegularizer:Ye(this.embeddingsRegularizer),activityRegularizer:Ye(this.activityRegularizer),embeddingsConstraint:rs(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(t,n),t}}TG.className="Embedding",Nt(TG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Mc extends $e{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new xe}computeElementwiseOpOutputShape(t,n){if(t==null||n==null)return null;if(t.length<n.length)return this.computeElementwiseOpOutputShape(n,t);if(n.length===0)return t;const s=t.slice(0,t.length-n.length);for(let r=0;r<n.length;++r){const i=t[t.length-n.length+r],o=n[r];if(i==null||o==null||i<0||o<0)s.push(null);else if(i===1)s.push(o);else if(o===1)s.push(i);else{if(i!==o)throw new K("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(n));s.push(i)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Oe(t)]),t=t,t.length<2)throw new K(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let n=[];for(const i of t)i!=null&&i[0]!==null&&n.push(i[0]);if(n=Vu(n),n.length>1)throw new K(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let i=1;i<t.length;++i){const o=t[i]==null?null:t[i].slice(1);s=this.computeElementwiseOpOutputShape(s,o)}const r=t.map(i=>i.length);t.indexOf(null)===-1&&Vu(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,n){return ht(()=>{if(t=t,this.reshapeRequired){const s=[],r=t.map(i=>i.rank);if(r.indexOf(null)===-1){const i=Gu(r);for(let o of t){const a=o.rank;for(let u=0;u<i-a;++u)o=jg(o,1);s.push(o)}return this.mergeFunction(s)}else{let i=!1;for(const u of t){const l=u.rank;if(l==null){const c=u.shape,h=c[0],d=c.slice(1).concat([h]);let p=nt(u,[h].concat(Uu(c.slice(1))));p=De(p,[1,0]),p=nt(p,d),s.push(p),i=!0}else if(l>1){const c=No(1,l).concat([0]);s.push(De(u,c)),i=!0}else s.push(u)}let o=this.mergeFunction(s);const a=o.rank;if(i){if(a==null){const u=o.shape,l=u.length,c=u[l-1],h=[c].concat(u.slice(0,u.length-1));o=nt(De(nt(o,[-1,c]),[1,0]),h)}else if(a>1){const u=[a-1].concat(No(0,a-1));o=De(o,u)}}return o}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let n;t[0]==null?n=null:n=t[0].slice(1);for(let r=1;r<t.length;++r){const i=t[r]==null?null:t[r].slice(1);n=this.computeElementwiseOpOutputShape(n,i)}let s=[];for(const r of t)r!=null&&r[0]!==null&&s.push(r[0]);return s=Vu(s),s.length===1?n=s.concat(n):n=[null].concat(n),n}computeMask(t,n){return ht(()=>{if(n==null)return null;if(!Array.isArray(n))throw new K("`mask` should be an Array");if(!Array.isArray(t))throw new K("`inputs` should be an Array");if(n.length!==t.length)throw new K(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${n.length})`);if(n.every(r=>r==null))return null;n=n.map(r=>r==null?r:qr(r,0));let s=n[0];for(let r=1;r<n.length-1;++r)s=Ga(s,n[r]);return s})}}class AG extends Mc{constructor(t){super(t)}mergeFunction(t){return ht(()=>{let n=t[0].clone();for(let s=1;s<t.length;++s)n=Dt(n,t[s]);return n})}}AG.className="Add",Nt(AG);class FG extends Mc{constructor(t){super(t)}mergeFunction(t){return ht(()=>{let n=t[0].clone();for(let s=1;s<t.length;++s)n=q(n,t[s]);return n})}}FG.className="Multiply",Nt(FG);class RG extends Mc{constructor(t){super(t)}mergeFunction(t){return ht(()=>{let n=t[0].clone();for(let s=1;s<t.length;++s)n=Dt(n,t[s]);return q(1/t.length,n)})}}RG.className="Average",Nt(RG);class _G extends Mc{constructor(t){super(t)}mergeFunction(t){return ht(()=>{let n=t[0];for(let s=1;s<t.length;++s)n=Bu(n,t[s]);return n})}}_G.className="Maximum",Nt(_G);class MG extends Mc{constructor(t){super(t)}mergeFunction(t){return ht(()=>{let n=t[0];for(let s=1;s<t.length;++s)n=xw(n,t[s]);return n})}}MG.className="Minimum",Nt(MG);class OG extends Mc{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new K("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let n=!0;for(const r of t)if(r!=null){n=!1;break}if(n)return;const s=[];for(let r=0;r<t.length;++r){const i=t[r].slice();i.splice(this.axis,1);let o=!1;for(const a of s)if(We(a,i)){o=!0;break}o||s.push(i)}if(s.length>1)throw new K("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return ht(()=>fD(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new K("A `Concatenate` layer should be called on a list of inputs.");const n=t,s=n[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const i of n.slice(1)){if(s[r]==null||i[r]==null){s[r]=null;break}s[r]+=i[r]}return s}computeMask(t,n){if(n==null)return null;if(!Array.isArray(n))throw new K("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new K("`inputs` should be an array for Concatenate");if(n.length!==t.length)throw new K(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${t.length})`);return ht(()=>{let s=!0;if(n.forEach(o=>{if(o!=null){s=!1;return}}),s)return null;const r=[];for(let o=0;o<t.length;++o)n[o]==null?r.push(Wt(Bi(t[o]),"bool")):n[o].rank<t[o].rank?r.push(qr(n[o],-1)):r.push(n[o]);const i=Hs(r,this.axis);return JV(i,-1,!1)})}getConfig(){const t={axis:this.axis},n=super.getConfig();return Object.assign(t,n),t}}OG.className="Concatenate",Nt(OG);function i0(e,t){for(;e<0;)e+=t;return e}function FPt(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new xe("batchDot is not implemented for tensors of 4D or higher rank yet");if(L(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),L(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new xe("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);const i=n;return ht(()=>{let o;if(s>r){o=s-r;const u=[];for(let l=0;l<o;++l)u.push(1);t=nt(t,t.shape.concat(u))}else if(r>s){o=r-s;const u=[];for(let l=0;l<o;++l)u.push(1);e=nt(e,e.shape.concat(u))}else o=0;let a;if(e.shape.length===2&&t.shape.length===2)i[0]===i[1]?a=Yt(q(e,t),i[0]):a=Yt(q(De(e,[1,0]),t),i[1]);else{const u=i[0]!==e.shape.length-1,l=i[1]===t.shape.length-1;a=Ve(e,t,u,l)}if(o>0){let u;s>r?u=s+r-3:u=s-1;const l=[];for(let c=u;c<u+o;++c)l.push(c);a=Bg(a,l)}return a.shape.length===1&&(a=qr(a,1)),a})}class LG extends Mc{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){L(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=t[0],s=t[1];if(n.length>3||s.length>3)throw new xe("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(n,s);if(n[r[0]]!==s[r[1]])throw new K(`Dimension incompatibility: ${n[r[0]]} !== ${s[r[1]]}`)}mergeFunction(t){if(t.length!==2)throw new K(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let n=t[0],s=t[1],r;return Array.isArray(this.axes)?r=this.axes.map((i,o)=>i0(i,t[o].shape.length)):r=[i0(this.axes,n.shape.length),i0(this.axes,s.shape.length)],this.normalize&&(n=Ow(n,r[0]),s=Ow(s,r[1])),FPt(n,s,r)}interpretAxes(t,n){let s;return Array.isArray(this.axes)?s=this.axes:s=[i0(this.axes,t.length),i0(this.axes,n.length)],s}computeOutputShape(t){L(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const n=t[0].slice(),s=t[1].slice();if(n.length>3||s.length>3)throw new xe("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(n,s);n.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const i=n.concat(s);return i.length===1&&i.push(1),i}computeMask(t,n){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(t,n),t}}LG.className="Dot",Nt(LG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class zG extends $e{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,t),n}call(t,n){return ht(()=>{this.invokeCallHook(t,n);const s=le(t);return Xg(()=>Dt(Tw(s.shape,0,this.stddev),s),()=>s,n.training||!1)})}}zG.className="GaussianNoise",Nt(zG);class BG extends $e{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return ht(()=>{this.invokeCallHook(t,n);const s=le(t);return this.rate>0&&this.rate<1?Xg(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return q(s,Tw(s.shape,1,i))},()=>s,n.training||!1):s})}}BG.className="GaussianDropout",Nt(BG);class PG extends $e{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||le(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),n={rate:this.rate};return Object.assign(n,t),n}call(t,n){return ht(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return Xg(()=>{const i=le(t),o=1.6732632423543772,a=1.0507009873554805,u=-o*a;let l=vc(bw(s),this.rate);l=da(l,"float32");const c=((1-this.rate)*(1+this.rate*u**2))**-.5,h=-c*u*this.rate,d=Dt(q(i,l),q(Dt(l,-1),u));return Dt(q(d,c),h)},()=>le(t),n.training||!1)}return t})}}PG.className="AlphaDropout",Nt(PG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function o0(e,t,n,s,r,i=.001){let o;if(e.rank===2)o=vRt(e,t,n,s,r,i);else if(e.rank===3)o=IRt(e,t,n,s,r,i);else if(e.rank===4)o=$Rt(e,t,n,s,r,i);else throw new xe(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return o}function RPt(e,t,n,s,r=.001){return ht(()=>{const i=aE(e,s),o=i.mean,a=i.variance;return[o0(e,o,a,n,t,r),o,a]})}function _Pt(e,t,n,s,r=.001){return ht(()=>{const i=aE(e,s),o=i.mean,a=i.variance,u=[];for(const f of No(0,e.rank))s.indexOf(f)!==-1?u.push(1):u.push(e.shape[f]);const l=nt(o,u),c=nt(a,u),h=t==null?null:nt(t,u),d=n==null?null:nt(n,u);return[o0(e,l,c,d,h,r),o,a]})}function MPt(e,t,n,s,r=.001){return We(s.slice().sort(),No(0,e.rank-1))?RPt(e,t,n,s,r):_Pt(e,t,n,s,r)}class WG extends $e{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=vn(t.betaInitializer||"zeros"),this.gammaInitializer=vn(t.gammaInitializer||"ones"),this.movingMeanInitializer=vn(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=vn(t.movingVarianceInitializer||"ones"),this.betaConstraint=is(t.betaConstraint),this.gammaConstraint=is(t.gammaConstraint),this.betaRegularizer=kn(t.betaRegularizer),this.gammaRegularizer=kn(t.gammaRegularizer)}build(t){t=Oe(t);const n=this.axis>=0?this.axis:this.axis+t.length,s=t[n];if(s==null)throw new K(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new ss({ndim:t.length,axes:{[n]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,n){return ht(()=>{const s=n.training==null?!1:n.training,r=le(t),i=r.shape,o=i.length,a=No(0,o),u=this.axis>=0?this.axis:this.axis+o;a.splice(u,1);const l=Dc(1,o);l[u]=i[u];const c=a.slice();c.sort();const h=!We(c,No(0,o).slice(0,o-1)),d=()=>{if(h){const b=nt(this.movingMean.read(),l),w=nt(this.movingVariance.read(),l),y=this.center?nt(this.beta.read(),l):null,v=this.scale?nt(this.gamma.read(),l):null;return o0(r,b,w,y,v,this.epsilon)}else return o0(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[p,f,m]=MPt(r,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(b,w,y)=>{ht(()=>{const v=1-y,k=b.read(),C=q(Zt(k,w),v);b.write(Zt(k,C))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:En(this.betaInitializer),gammaInitializer:En(this.gammaInitializer),movingMeanInitializer:En(this.movingMeanInitializer),movingVarianceInitializer:En(this.movingVarianceInitializer),betaRegularizer:Ye(this.betaRegularizer),gammaRegularizer:Ye(this.gammaRegularizer),betaConstraint:rs(this.betaConstraint),gammaConstraint:rs(this.gammaConstraint)},n=super.getConfig();return Object.assign(t,n),t}}WG.className="BatchNormalization",Nt(WG);class VG extends $e{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=vn(t.betaInitializer||"zeros"),this.gammaInitializer=vn(t.gammaInitializer||"ones"),this.betaRegularizer=kn(t.betaRegularizer),this.gammaRegularizer=kn(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Oe(t);const n=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=n);for(const i of this.axis)if(i<0||i>=n)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==Vu(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>t[i]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,n){const s=le(t),r=s.shape,i=r.length;return ht(()=>{let{mean:a,variance:u}=aE(s,this.axis,!0);const l=Dc(1,i);for(const m of this.axis)l[m]=r[m];const c=m=>m!=null&&m.shape.length!==i?nt(m,l):m;let h=this.scale?c(this.gamma.read()):null,d=this.center?c(this.beta.read()):null;const p=[],f=[];for(let m=0;m<i;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return a=$o(a,p),u=$o(u,p),h!=null&&(h=$o(h,f)),d!=null&&(d=$o(d,f)),o0(s,a,u,d,h,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:En(this.betaInitializer),gammaInitializer:En(this.gammaInitializer),betaRegularizer:Ye(this.betaRegularizer),gammaRegularizer:Ye(this.gammaRegularizer)},n=super.getConfig();return Object.assign(t,n),t}}VG.className="LayerNormalization",Nt(VG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function OPt(e,t,n){return ht(()=>{if(e.rank!==4)throw new K(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new K("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Eo()),n!=="channelsLast"&&n!=="channelsFirst")throw new K(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],uE(e,s)})}class UG extends $e{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?Eo():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new K(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let n,s;if(typeof t.padding[0]=="number")n=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new K(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(n=t.padding[0],t.padding[1].length!==2)throw new K(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[n,s]}this.inputSpec=[new ss({ndim:4})]}computeOutputShape(t){t=Oe(t);let n,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?n=t[2]+this.padding[0][0]+this.padding[0][1]:n=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],n,s]):(t[1]!=null&&t[1]>=0?n=t[1]+this.padding[0][0]+this.padding[0][1]:n=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],n,s,t[3]])}call(t,n){return ht(()=>OPt(le(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}UG.className="ZeroPadding2D",Nt(UG);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xw(e,t,n,s,r,i){return ht(()=>{zn(r),U5(i),fi(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=Eo()),i==null&&(i="max"),e=PD(e,r);let o;const a=s==="same"?"same":"valid";return i==="max"?o=oE(e,t,n,a):o=jN(e,t,n,a),r==="channelsFirst"&&(o=De(o,[0,3,1,2])),o})}function GG(e,t,n,s,r,i){return ht(()=>{zn(r),U5(i),fi(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Eo()),i==null&&(i="max"),e=oG(e,r);let o;const a=s==="same"?"same":"valid";return i==="max"?o=l3t(e,t,n,a):o=hRt(e,t,n,a),r==="channelsFirst"&&(o=De(o,[0,4,1,2,3])),o})}class HG extends $e{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new K(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(ys(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new K(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);ys(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,fi(this.padding),this.inputSpec=[new ss({ndim:3})]}computeOutputShape(t){t=Oe(t);const n=Fo(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],n,t[2]]}call(t,n){return ht(()=>{this.invokeCallHook(t,n),t=jg(le(t),2);const s=this.poolingFunction(le(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Bg(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},n=super.getConfig();return Object.assign(t,n),t}}class qG extends HG{constructor(t){super(t)}poolingFunction(t,n,s,r,i){return zn(i),fi(r),Xw(t,n,s,r,i,"max")}}qG.className="MaxPooling1D",Nt(qG);class jG extends HG{constructor(t){super(t)}poolingFunction(t,n,s,r,i){return zn(i),fi(r),Xw(t,n,s,r,i,"avg")}}jG.className="AveragePooling1D",Nt(jG);class KG extends $e{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new K(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];ys(this.poolSize,"poolSize"),ys(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,zn(this.dataFormat),fi(this.padding),this.inputSpec=[new ss({ndim:4})]}computeOutputShape(t){t=Oe(t);let n=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return n=Fo(n,this.poolSize[0],this.padding,this.strides[0]),s=Fo(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],n,s]:[t[0],n,s,t[3]]}call(t,n){return ht(()=>(this.invokeCallHook(t,n),this.poolingFunction(le(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}class XG extends KG{constructor(t){super(t)}poolingFunction(t,n,s,r,i){return zn(i),fi(r),Xw(t,n,s,r,i,"max")}}XG.className="MaxPooling2D",Nt(XG);class YG extends KG{constructor(t){super(t)}poolingFunction(t,n,s,r,i){return zn(i),fi(r),Xw(t,n,s,r,i,"avg")}}YG.className="AveragePooling2D",Nt(YG);class ZG extends $e{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new K(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];ys(this.poolSize,"poolSize"),ys(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,zn(this.dataFormat),fi(this.padding),this.inputSpec=[new ss({ndim:5})]}computeOutputShape(t){t=Oe(t);let n=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[4]:t[3];return n=Fo(n,this.poolSize[0],this.padding,this.strides[0]),s=Fo(s,this.poolSize[1],this.padding,this.strides[1]),r=Fo(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],n,s,r]:[t[0],n,s,r,t[4]]}call(t,n){return ht(()=>(this.invokeCallHook(t,n),this.poolingFunction(le(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}class JG extends ZG{constructor(t){super(t)}poolingFunction(t,n,s,r,i){return zn(i),fi(r),GG(t,n,s,r,i,"max")}}JG.className="MaxPooling3D",Nt(JG);class QG extends ZG{constructor(t){super(t)}poolingFunction(t,n,s,r,i){return zn(i),fi(r),GG(t,n,s,r,i,"avg")}}QG.className="AveragePooling3D",Nt(QG);class t8 extends $e{constructor(t){super(t),this.inputSpec=[new ss({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,n){throw new xe}}class e8 extends t8{constructor(t){super(t||{})}call(t,n){return ht(()=>{const s=le(t);return Ln(s,1)})}}e8.className="GlobalAveragePooling1D",Nt(e8);class n8 extends t8{constructor(t){super(t||{})}call(t,n){return ht(()=>{const s=le(t);return Co(s,1)})}}n8.className="GlobalMaxPooling1D",Nt(n8);class s8 extends $e{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,zn(this.dataFormat),this.inputSpec=[new ss({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,n){throw new xe}getConfig(){const t={dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(t,n),t}}class r8 extends s8{call(t,n){return ht(()=>{const s=le(t);return this.dataFormat==="channelsLast"?Ln(s,[1,2]):Ln(s,[2,3])})}}r8.className="GlobalAveragePooling2D",Nt(r8);class i8 extends s8{call(t,n){return ht(()=>{const s=le(t);return this.dataFormat==="channelsLast"?Co(s,[1,2]):Co(s,[2,3])})}}i8.className="GlobalMaxPooling2D",Nt(i8);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class o8 extends $e{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},n=super.getConfig();return Object.assign(t,n),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,n,s={}){const r=n.layer,i=ma(r,s);delete n.layer;const o={layer:i};return Object.assign(o,n),new t(o)}}class a8 extends o8{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Oe(t),t.length<3)throw new K(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const n=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Oe(t);const n=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(n),r=t[1];return[s[0],r].concat(s.slice(1))}call(t,n){return ht(()=>(t=le(t),gG((o,a)=>[le(this.layer.call(o,n)),[]],t,[],!1,null,null,!1,!0)[1]))}}a8.className="TimeDistributed",Nt(a8);function LPt(e){Ac(iBt,"BidirectionalMergeMode",e)}const zPt="concat";class u8 extends o8{constructor(t){super(t);const n=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=n,this.forwardLayer=ma(s),n.goBackwards=n.goBackwards!==!0;const r={};if(r.className=t.layer.getClassName(),r.config=n,this.backwardLayer=ma(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?zPt:t.mergeMode,LPt(this.mergeMode),t.weights)throw new xe("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const n=t.length,s=Math.floor(n/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let n=this.forwardLayer.computeOutputShape(t);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let s,r,i;return this.returnState&&(i=n.slice(1)),s=n[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(i).concat(i.slice()):[s].concat(i).concat(i.slice()):$r(r)}apply(t,n){let s=n==null?null:n.initialState,r=n==null?null:n.constants;n==null&&(n={});const i=mG(t,s,r,this.numConstants);if(t=i.inputs,s=i.initialState,r=i.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&r==null)return super.apply(t,n);const o=[],a=[];if(s!=null){const l=s.length;if(l%2>0)throw new K("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=s,o.push(...s);const c=s.map(h=>new ss({shape:h.shape}));this.forwardLayer.stateSpec=c.slice(0,l/2),this.backwardLayer.stateSpec=c.slice(l/2),a.push(...c)}if(r!=null)throw new xe("Support for constants in Bidirectional layers is not implemented yet.");const u=o[0]instanceof fa;for(const l of o)if(l instanceof fa!==u)throw new K("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const l=[t].concat(o),c=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=c;const d=super.apply(l,n);return this.inputSpec=h,d}else return super.apply(t,n)}call(t,n){return ht(()=>{const s=n.initialState;let r,i;if(s==null)r=this.forwardLayer.call(t,n),i=this.backwardLayer.call(t,n);else{const u=s.slice(0,s.length/2),l=s.slice(s.length/2);r=this.forwardLayer.call(t,Object.assign(n,{initialState:u})),i=this.backwardLayer.call(t,Object.assign(n,{initialState:l}))}let o;this.returnState&&(Array.isArray(r)&&(o=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=Cc(i,1));let a;return this.mergeMode==="concat"?a=fD([r,i]):this.mergeMode==="sum"?a=Dt(r,i):this.mergeMode==="ave"?a=q(.5,Dt(r,i)):this.mergeMode==="mul"?a=q(r,i):this.mergeMode==null&&(a=[r,i]),this.returnState?this.mergeMode==null?a.concat(o):[a].concat(o):a})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Fc(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Fc(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,n){Array.isArray(n)&&(n=n[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[n,n]:s=n:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const i=this.forwardLayer.states.map(o=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(t,n),t}static fromConfig(t,n){const s=ma(n.layer);if(delete n.layer,n.numConstants!=null)throw new xe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=n;return r.layer=s,new t(r)}}u8.className="Bidirectional",Nt(u8);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class l8 extends $e{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(t,n),t}call(t,n){return ht(()=>(t=le(t),t.dtype!=="float32"&&(t=da(t,"float32")),Dt(q(t,this.scale),this.offset)))}}l8.className="Rescaling",Nt(l8);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:BPt,cropAndResize:PPt}=Sc;class c8 extends $e{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,n,s,r,i,o,a,u){return ht(()=>{let l,c=!1;const h=n/o,d=s/a,p=(r+n)/o,f=(i+s)/a,m=[h,d,p,f],g=[];t.rank===3?(c=!0,l=ua([t])):l=t;for(let v=0;v<l.shape[0];v++)g.push(m);const x=Tg(g,[g.length,4]),b=zg(0,g.length,1,"int32"),y=PPt(l,x,b,[r,i],"nearest");return da(c?le($c(y)):y,u)})}upsize(t,n,s,r){return ht(()=>{const i=BPt(t,[n,s]);return da(i,r)})}call(t,n){return ht(()=>{const s=le(t),r=s.dtype,i=s.shape,o=i[i.length-3],a=i[i.length-2];let u=0;o!==this.height&&(u=Math.floor((o-this.height)/2));let l=0;return a!==this.width&&(l=Math.floor((a-this.width)/2),l===0&&(l=1)),u>=0&&l>=0?this.centerCrop(s,u,l,this.height,this.width,o,a,r):this.upsize(t,this.height,this.width,r)})}getConfig(){const t={height:this.height,width:this.width},n=super.getConfig();return Object.assign(t,n),t}computeOutputShape(t){t=Oe(t);const n=t.length-3,s=t.length-2;return t[n]=this.height,t[s]=this.width,t}}c8.className="CenterCrop",Nt(c8);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function WPt(e,t,n,s){let r=le(e);if(r.dtype!=="int32"&&(r=da(r,"int32")),t==="int")return r;const i=r.shape;if(r.rank===0&&(r=qr(r,-1)),t==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=qr(r,-1)),r.rank>2)throw new K(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${r.rank}.`);const o=["multiHot","oneHot"].includes(t),a=r;let u;if(typeof s<"u"&&t==="count"?u=rU(a,s,n,o):u=rU(a,[],n,o),t!=="tfIdf")return u;if(s)return q(u,s);throw new K("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class h8 extends $e{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},n=super.getConfig();return Object.assign(t,n),t}computeOutputShape(t){return t=Oe(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,n){return ht(()=>{t=le(t),t.dtype!=="int32"&&(t=da(t,"int32"));let s;if(typeof n.countWeights<"u"){if(this.outputMode!=="count")throw new K(`countWeights is not used when outputMode !== count.
              Received countWeights=${n.countWeights}`);s=le(n.countWeights)}const r=Co(t),i=fw(t),o=di(this.numTokens,r).bufferSync().get(0),a=vc(i,0).bufferSync().get(0);if(!(o&&a))throw new K(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return WPt(t,this.outputMode,this.numTokens,s)})}}h8.className="CategoryEncoding",Nt(h8);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VPt=["bilinear","nearest"],d8=new Set(VPt);class p8 extends $e{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(d8.has(t.interpolation))this.interpolation=t.interpolation;else throw new K(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(t.cropToAspectRatio)}computeOutputShape(t){t=Oe(t);const n=t[2];return[this.height,this.width,n]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},n=super.getConfig();return Object.assign(t,n),t}call(t,n){return ht(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Sc.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Sc.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...d8]} are supported`)})}}p8.className="Resizing",Nt(p8);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */pt().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var f8;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(f8||(f8={}));var m8;(function(e){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(m8||(m8={}));/** @license See the LICENSE file. */const UPt="4.2.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var g8;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(g8||(g8={}));/** @license See the LICENSE file. */const GPt="4.2.0";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xt(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&L(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HPt=NU;class Yw extends kS{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new PW(this,ia())}nextDataId(){return Yw.nextDataId++}write(t,n,s){this.firstUse&&(this.firstUse=!1,pt().get("IS_NODE")&&li(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:s,refCount:1}),r}makeTensorInfo(t,n,s){let r;if(n==="string"&&s!=null&&s.length>0&&Em(s[0])){const i=s.map(o=>_u(o));r=this.write(i,t,n)}else r=this.write(s,t,n);return{dataId:r,shape:t,dtype:n}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const n=this.data.get(t);n.refCount++}decRef(t){if(this.data.has(t)){const n=this.data.get(t);n.refCount--}}move(t,n,s,r,i){this.data.set(t,{values:n,dtype:r,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:n,complexTensorInfos:s}=this.data.get(t);if(n==="complex64"){const r=this.readSync(s.real.dataId),i=this.readSync(s.imag.dataId);return ja(r,i)}return wAt(this.data.get(t).values,n)}bufferSync(t){const n=this.readSync(t.dataId);if(t.dtype==="string")try{const s=n.map(r=>Mu(r));return ke(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(t.shape,t.dtype,n)}makeOutput(t,n,s){return ia().makeTensorFromTensorInfo(this.makeTensorInfo(n,s,t),this)}disposeData(t,n=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!n&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const n=kr();return t(),{kernelMs:kr()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Xt([t],"where");const n=this.readSync(t.dataId);return HPt(t.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Yw.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x8(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const qPt={kernelName:ny,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Xt(t,"abs");let s=new Float32Array(xt(t.shape));const r=n.data.get(t.dataId).values;return s=x8(r),n.makeOutput(s,t.shape,t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(e){return(t,n,s,r,i)=>{const o=ge(t,n),a=o.length,u=ee(o),l=xt(o),c=As(i,l),h=t.length,d=n.length,p=ee(t),f=ee(n),m=kd(t,o),g=kd(n,o);if(m.length+g.length===0)for(let x=0;x<c.length;++x)c[x]=e(s[x%s.length],r[x%r.length]);else for(let x=0;x<c.length;++x){const b=hd(x,a,u),w=b.slice(-h);m.forEach(C=>w[C]=0);const y=sa(w,h,p),v=b.slice(-d);g.forEach(C=>v[C]=0);const k=sa(v,d,f);c[x]=e(s[y],r[k])}return[c,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xr(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,a=n.makeTensorInfo(s.shape,"complex64"),u=n.data.get(a.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",i),imag:n.makeTensorInfo(r.shape,"float32",o)},a}const jPt={kernelName:BS,backendName:"cpu",kernelFunc:Xr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zw(e,t,n="float32"){if(n==="complex64"){const r=Zw(e,t,"float32"),i=Zw(e,t,"float32");return Xr({inputs:{real:r,imag:i},backend:e})}const s=Vs(xt(t),n);return e.makeTensorInfo(t,n,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xa(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const KPt={kernelName:Ym,backendName:"cpu",kernelFunc:xa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oc(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const XPt={kernelName:cN,backendName:"cpu",kernelFunc:Oc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b8(e,t,n,s){if(s==="int32"){const r=Int32Array.from(e);return[t,"int32",r]}if(s==="bool"){const r=hc([0],n),[i,o]=jn((a,u)=>a!==u?1:0)(t,[],e,r,"bool");return[o,"bool",i]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function Yu(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return xa({inputs:{x:r},backend:n});const c=Zw(n,r.shape,r.dtype),h=Yu({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),d=Xr({inputs:{real:h,imag:c},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){const c=Oc({inputs:{input:r},backend:n}),h=Yu({inputs:{x:c},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(c),h}if(!UW(r.dtype,i)){const c=xa({inputs:{x:r},backend:n});return{dataId:c.dataId,shape:c.shape,dtype:i}}const o=n.data.get(r.dataId).values,[a,u,l]=b8(o,r.shape,r.dtype,i);return n.makeTensorInfo(a,u,l)}const YPt={kernelName:Lm,backendName:"cpu",kernelFunc:Yu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ws(e,t,n,s){return n==null?({inputs:r,backend:i})=>{const{a:o,b:a}=r,u=i;Xt([o,a],e);const l=u.data.get(o.dataId).values,c=u.data.get(a.dataId).values,h=o.dtype==="string"?Ec(l):l,d=o.dtype==="string"?Ec(c):c,p=s||o.dtype,[f,m]=t(o.shape,a.shape,h,d,p);return u.makeTensorInfo(m,p,f)}:({inputs:r,backend:i})=>{const{a:o,b:a}=r,u=i;if(o.dtype==="complex64"||a.dtype==="complex64"){const l=Yu({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),c=u.data.get(l.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,p=u.data.get(h.dataId).values,f=u.data.get(d.dataId).values,m=Yu({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),x=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,w=u.data.get(x.dataId).values,y=u.data.get(b.dataId).values,[v,k,C]=n(o.shape,a.shape,p,f,w,y),I=u.makeTensorInfo(C,"float32",v),$=u.makeTensorInfo(C,"float32",k),S=Xr({inputs:{real:I,imag:$},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(I),u.disposeIntermediateTensorInfo($),S}else{const l=u.data.get(o.dataId).values,c=u.data.get(a.dataId).values,h=s||o.dtype,[d,p]=t(o.shape,a.shape,l,c,h);return u.makeTensorInfo(p,h,d)}}}function qD(e){return(t,n,s,r,i,o)=>{const a=ge(t,n),u=xt(a),l=a.length,c=ee(a),h=As("float32",u),d=As("float32",u),p=kd(t,a),f=kd(n,a),m=ja(s,r),g=ja(i,o),x=t.length,b=ee(t),w=n.length,y=ee(n);if(p.length+f.length===0)for(let v=0;v<h.length;v++){const k=v%m.length,C=v%g.length,I=e(m[k*2],m[k*2+1],g[C*2],g[C*2+1]);h[v]=I.real,d[v]=I.imag}else for(let v=0;v<h.length;v++){const k=hd(v,l,c),C=k.slice(-x);p.forEach(F=>C[F]=0);const I=sa(C,x,b),$=k.slice(-w);f.forEach(F=>$[F]=0);const S=sa($,w,y),N=e(m[I*2],m[I*2+1],g[S*2],g[S*2+1]);h[v]=N.real,d[v]=N.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y8=jn((e,t)=>e+t),ZPt=qD((e,t,n,s)=>({real:e+n,imag:t+s})),Rd=ws(dd,y8,ZPt),JPt={kernelName:dd,backendName:"cpu",kernelFunc:Rd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jD(e,t,n,s,r){const i=xt(s),o=Vs(r,n);for(let a=0;a<e.length;a++){const u=e[a];if(u<0)throw new Error("Input x must be non-negative!");u>=r||(i>0?o[u]+=t[a]:o[u]+=1)}return o}function w8(e,t,n,s=!1){const r=e.shape[0],i=e.shape[1],o=ke([r,n],t.dtype);for(let a=0;a<r;a++)for(let u=0;u<i;u++){const l=e.get(a,u);if(l<0)throw new Error("Input x must be non-negative!");l>=n||(s?o.set(1,a,l):t.size>0?o.set(o.get(a,l)+t.get(a,u),a,l):o.set(o.get(a,l)+1,a,l))}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zu(e){return(t,n,s)=>{const r=As(n,t.length);for(let i=0;i<t.length;++i)r[i]=e(t[i],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qe(e,t,n){return({inputs:s,attrs:r,backend:i})=>{const{x:o}=s;if(Xt(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=i,u=a.data.get(o.dataId).values,l=xt(o.shape),c=n||o.dtype,h=Hn(c,l);for(let d=0;d<l;++d)h[d]=t(u[d],r);return a.makeTensorInfo(o.shape,c,h)}}function _d(e,t,n){return({inputs:s,attrs:r,backend:i})=>{const{x:o}=s;if(Xt(o,e),o.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");const a=i,u=a.data.get(o.dataId).values,l=n||o.dtype,c=t(u,l,r);return a.makeTensorInfo(o.shape,l,c)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v8=Zu(e=>Math.ceil(e)),QPt=_d(zm,v8),tWt={kernelName:zm,backendName:"cpu",kernelFunc:QPt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k8(e,t,n,s){const r=Hn(n,xt(t));if(s&&n!=="string"){let i=0;e.forEach(o=>{const a=xt(o.shape);r.set(o.vals,i),i+=a})}else{let i=0;e.forEach(o=>{const a=n==="string"?Ec(o.vals):o.vals;let u=0;for(let l=0;l<o.shape[0];++l){const c=l*t[1]+i;for(let h=0;h<o.shape[1];++h)r[c+h]=a[u++]}i+=o.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I8=jn((e,t)=>e===t?1:0),C8=ws(xy,I8,null,"bool"),eWt={kernelName:xy,backendName:"cpu",kernelFunc:C8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8=Zu(e=>Math.exp(e)),S8=_d(Hm,$8,"float32"),nWt={kernelName:Hm,backendName:"cpu",kernelFunc:S8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N8=Zu(e=>Math.expm1(e)),sWt=_d(qm,N8),rWt={kernelName:qm,backendName:"cpu",kernelFunc:sWt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8=Zu(e=>Math.floor(e)),iWt=_d(jm,E8),oWt={kernelName:jm,backendName:"cpu",kernelFunc:iWt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(e,t,n,s,r,i,o,a,u){const l=ke([s,i],n);for(let c=0;c<s;c++){const h=[];let d=0;for(let p=0;p<r;p++){const f=e[c*r+p];d+=f*o[p],h.push(f)}if(d<0||d>=u/i)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<i;p++)l.values[c*i+p]=t.get(...t.indexToLoc(d*i+p))}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T8(e,t,n){const s=ke(n,e.dtype);for(let r=0;r<s.size;++r){const o=s.indexToLoc(r).slice(),a=o[0],u=o[2],l=t.locToIndex([a,u]);o[2]=t.values[l];const c=e.locToIndex(o);0<=c&&c<e.values.length&&(s.values[r]=e.values[c])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A8=jn((e,t)=>e>t?1:0),aWt=ws(vy,A8,null,"bool"),uWt={kernelName:vy,backendName:"cpu",kernelFunc:aWt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F8=jn((e,t)=>e>=t?1:0),lWt=ws(Xm,F8,null,"bool"),cWt={kernelName:Xm,backendName:"cpu",kernelFunc:lWt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R8=jn((e,t)=>e<t?1:0),hWt=ws(Iy,R8,null,"bool"),dWt={kernelName:Iy,backendName:"cpu",kernelFunc:hWt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _8=jn((e,t)=>e<=t?1:0),pWt=ws(Cy,_8,null,"bool"),fWt={kernelName:Cy,backendName:"cpu",kernelFunc:pWt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M8(e,t,n){const s=(t-e)/(n-1),r=Vs(n,"float32");r[0]=e;for(let i=1;i<r.length;i++)r[i]=r[i-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O8=Zu(e=>Math.log(e)),mWt=_d(tg,O8),gWt={kernelName:tg,backendName:"cpu",kernelFunc:mWt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L8(e,t,n,s){const r=As(s,xt(n));for(let i=0;i<r.length;++i){const o=i*t;let a=e[o];for(let u=0;u<t;++u){const l=e[o+u];(Number.isNaN(l)||l>a)&&(a=l)}r[i]=a}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z8=jn((e,t)=>Math.max(e,t)),xWt=ws(ng,z8),bWt={kernelName:ng,backendName:"cpu",kernelFunc:xWt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B8=jn((e,t)=>Math.min(e,t)),yWt=ws(sg,B8),wWt={kernelName:sg,backendName:"cpu",kernelFunc:yWt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KD=jn((e,t)=>e*t),vWt=qD((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),Jw=ws(ig,KD,vWt),kWt={kernelName:ig,backendName:"cpu",kernelFunc:Jw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P8(e,t,n){const s=Ru(-1,n);return KD([],t,s,e,n)}function IWt(e){const{inputs:t,backend:n}=e,{x:s}=t;Xt(s,"neg");const r=n.data.get(s.dataId).values,[i,o]=P8(r,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}const CWt={kernelName:My,backendName:"cpu",kernelFunc:IWt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W8=jn((e,t)=>e!==t?1:0),$Wt=ws(Oy,W8,null,"bool"),SWt={kernelName:Oy,backendName:"cpu",kernelFunc:$Wt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(e,t,n,s,r){const i=t.length,o=xt(t),a=ee(t),u=ee(r),l=As(n,xt(r));for(let c=0;c<o;++c){const h=hd(c,i,a),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];const p=sa(d,i,u);l[p]=e[c]}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nr(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:i}=n;Xt(r,"transpose");const o=r.shape.length,a=new Array(o);for(let h=0;h<a.length;h++)a[h]=r.shape[i[h]];const u=s.data.get(r.dataId).values,l=XD(u,r.shape,r.dtype,i,a);return{dataId:s.write(l,a,r.dtype),shape:a,dtype:r.dtype}}const NWt={kernelName:pd,backendName:"cpu",kernelFunc:Nr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(e,t,n,s){const[r,i]=xs(e,s),o=Gr(t,"int32"),a=Vs(xt(r),o),u=xt(i);for(let l=0;l<a.length;++l){const c=l*u;let h=1;for(let d=0;d<u;++d)h*=n[c+d];a[l]=h}return{outVals:a,outShape:r,outDtype:o}}function EWt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s;Xt(r,"prod");const a=r.shape.length,u=ve(i,r.shape),l=Sn(u,a);let c=u,h=r;const d=[];l!=null&&(h=Nr({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(h),c=On(c.length,a));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=V8(h.shape,h.dtype,p,c);let x=m;return o&&(x=Mn(m,u)),d.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(x,g,f)}const DWt={kernelName:Vy,backendName:"cpu",kernelFunc:EWt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TWt(e,t,n){e.forEach((s,r)=>{if(s<0||s>=n){const i=hd(r,t.length,ee(t)).join(",");throw new Error(`indices[${i}] = ${s} is not in [0, ${n})`)}})}function AWt(e,t){for(let n=0;n<e.length;++n){const s=e[n],r=n===e.length-1?t:e[n+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let i=1;i<s.length;++i)if(s[i-1]>s[i])throw new Error("Ragged splits must be sorted in ascending order")}}function FWt(e,t,n,s){const r=[];let i=0;const o=t.length-1+n.length,a=new Array(o).fill(null).map(()=>[0]);AWt(n,s);let u=1;for(let l=0;l<t.length-1;++l){u*=t[l];const c=t[l+1];for(let h=1;h<u+1;++h)a[l].push(h*c)}for(let l=0;l<e.length;++l){let c=e[l],h=e[l]+1;for(let d=0;d<n.length;++d){const p=n[d],f=d+t.length-1;if(f>=0){const m=a[f],g=m[m.length-1]-p[c];for(let x=c;x<h;++x)a[f].push(p[x+1]+g)}c=p[c],h=p[h]}h!==c&&(r.push([c,h]),i+=h-c)}return{outSplits:a,valueSlices:r,numValues:i}}function RWt(e){const t=[];for(let n=0;n<e.length;++n){const s=e[n].length,r=Hn("int32",s);t.push(r),e[n].forEach((i,o)=>r[o]=i)}return t}function U8(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function _Wt(e,t,n,s,r,i){const o=U8(t,2)[1],a=U8(i,2)[1];let u=0;for(const l of n)for(let c=l[0];c<l[1];++c){for(let h=0;h<s;++h)r[u*a+h]=e[c*o+h];++u}}function MWt(e,t,n,s,r){const i=t.slice();i[0]=r;const o=Hn(n,xt(i)),a=e.length,u=a===0?0:a/t[0];return _Wt(e,t,s,u,o,i),[o,i]}function G8(e,t,n,s,r,i,o,a){if(e.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const u=t[0][0]-1;if(TWt(i,o,u),s.length===0)throw new Error("params.rank must be nonzero");const l=s[0],{outSplits:c,valueSlices:h,numValues:d}=FWt(i,o,e,l),p=RWt(c),f=MWt(n,s,r,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H8=2147483647;function q8(e,t,n,s,r,i,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=t.length===0,u=r.length===0,l=o.length===0,c=[];a||c.push(t[0]),u||c.push(r[0]),l||c.push(o[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=Hn("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const x=a?e[0]:e[g],b=u?s[0]:s[g],w=l?i[0]:i[g];if(w===0)throw new Error("Requires delta != 0");let y;if(w>0&&b<x||w<0&&b>x)y=0;else if(y=Math.ceil(Math.abs((b-x)/w)),y>H8)throw new Error(`Requires ((limit - start) / delta) <= ${H8}`);d[g+1]=d[g]+y}const p=d[h],f=Hn(n,p);let m=0;for(let g=0;g<h;++g){const x=d[g+1]-d[g];let b=a?e[0]:e[g];const w=l?i[0]:i[g];for(let y=0;y<x;++y)f[m++]=b,b+=w}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Hi=So;class Qw{constructor(t,n,s,r,i,o,a,u,l,c){this.shape=t,this.shapeShape=n,this.values=s,this.valuesShape=r,this.valuesDType=i,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=i5(c),this.raggedRank=o5(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Hi.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Hi.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const n=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Hi.VALUE_ROWIDS:return Qw.getMaxWidthValueRowID(n);case Hi.ROW_SPLITS:return Qw.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${Hi[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const n=t.length;if(n===0||n===1)return 0;let s=0;for(let r=0;r<n-1;++r){const i=t[r+1]-t[r];i>s&&(s=i)}return s}static getMaxWidthValueRowID(t){const n=t.length;if(n===0)return 0;let s=0,r=t[0],i=0;for(let o=1;o<n;++o){const a=t[o];a!==r&&(r=a,i=Math.max(o-s,i),s=o)}return Math.max(n-s,i)}tensorShapeFromTensor(t,n,s=!0){if(n.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return K8(t,s)}calculateOutputSize(t){const n=this.valuesShape,s=this.defaultValueShape;a5(s,n);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=r5(this.raggedRank,r,n);o[0]<0&&(o[0]=t);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(t,n,s){const r=Math.min(t,s),i=[];let o=0;for(let a=0;a<r;++a,o+=n)i.push(o);for(let a=r;a<t;++a)i.push(-1);return L(i.length===t,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(t,n,s,r){const i=t.length,o=[];for(let a=0;a<i-1;++a){const u=t[a+1]-t[a];let l=Math.min(r,u),c=n[a];c===-1&&(l=0);for(let h=0;h<l;++h)o.push(c),c+=s;for(let h=0;h<u-l;++h)o.push(-1)}if(i>0&&o.length!==t[i-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(t,n,s,r){const i=t.length,o=[];if(i===0)return[];let a=0,u=t[0];if(u>=n.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${n.length}`);let l=n[u];o.push(l);for(let c=1;c<i;++c){const h=t[c];if(h===u)l>=0&&(++a,a<r?l+=s:l=-1);else{if(a=0,u=h,h>=n.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${n.length}`);l=n[h]}o.push(l)}if(o.length!==t.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(t,n,s,r){const i=this.getRowPartitionTensor(t),o=this.getRowPartitionTypeByDimension(t);switch(o){case Hi.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,n,s,r);case Hi.ROW_SPLITS:if(i.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(i,n,s,r);default:throw new Error(`Unsupported partition type: ${Hi[o]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const n=this.rowPartitionTypes[0];switch(n){case Hi.FIRST_DIM_SIZE:return t[0];case Hi.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Hi.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Hi[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const n=this.getFirstDimensionSize(),s=this.calculateOutputSize(n),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let u=r.length-2;u>=0;--u)r[u]=r[u+1]*s[u+1];const i=K8(s,!1),o=Hn(this.valuesDType,xt(i));if(r[0]*s[0]>0){let u=this.calculateFirstParentOutputIndex(n,r[0],s[0]);for(let l=1;l<=this.raggedRank;++l)u=this.calculateOutputIndex(l-1,u,r[l],s[l]);this.setOutput(this.raggedRank,u,o,i)}return[i,o]}setOutput(t,n,s,r){if(s.length===0)return;const i=this.values,o=s;let a=r.slice();a=a.slice(t+1);const u=xt(a),l=n.length;let c=this.defaultValue;if(c.length!==u&&c.length!==1){const f=this.defaultValueShape;ht(()=>{const m=nt(c,f);c=Mg(m,a).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=l;++f){let m=f<l?n[f]:-1;if(m===p){++p;continue}if(d<p){const g=i.subarray(h*u),x=o.subarray(d*u),b=(p-d)*u;j8(x,g,b)}if(f>=l){const g=s.length;m=Math.floor(g/u)}if(m>p)if(this.defaultValue.length===1)o.subarray(p*u,m*u).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=o.slice(p*u);j8(g,c,u),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function j8(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function K8(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function X8(e,t,n,s,r,i,o,a,u,l){return new Qw(e,t,n,s,r,i,o,a,u,l).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y8(e,t,n,s){const r=e===t,i=e<t&&n<0,o=t<e&&n>1;if(r||i||o)return Vs(0,s);const a=Math.abs(Math.ceil((t-e)/n)),u=Vs(a,s);t<e&&n===1&&(n=-1),u[0]=e;for(let l=1;l<u.length;l++)u[l]=u[l-1]+n;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z8=Zu(e=>1/Math.sqrt(e)),OWt=_d(hg,Z8),LWt={kernelName:hg,backendName:"cpu",kernelFunc:OWt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Md(e,t,n,s,r,i,o,a,u,l){const c=[s/r,r],h=e.values,d=t.values;if(s===0)return ke(n,t.dtype);const p=ke(c,t.dtype);typeof u=="string"||typeof u=="number"?p.values.fill(u):typeof u=="boolean"&&p.values.fill(+u);for(let f=0;f<i;f++){const m=[];let g=0;for(let x=0;x<o;x++){const b=h[f*o+x];m.push(b),g+=b*a[x]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let x=0;x<r;x++)l?p.values[g*r+x]+=d[f*r+x]:p.values[g*r+x]=t.rank===0?d[0]:d[f*r+x]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zWt=Zu(e=>1/(1+Math.exp(-e))),J8=qe(gg,e=>1/(1+Math.exp(-e))),BWt={kernelName:gg,backendName:"cpu",kernelFunc:J8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q8(e,t,n,s,r){const i=zE(s,t,n),o=xt(n),a=ee(s);if(i){const h=BE(t,a);return r==="string"?e.slice(h,h+o):e.subarray(h,h+o)}const u=r==="string"?Ec(e):e,l=ke(s,r,u),c=ke(n,r);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((f,m)=>f+t[m]);c.set(l.get(...p),...d)}return r==="string"?D5(c.values):c.values}function Lc(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,size:o}=s;Xt(r,"slice");const[a,u]=kw(r,i,o);OE(r,a,u);const l=n.data.get(r.dataId).values,c=Q8(l,a,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,c)}const PWt={kernelName:Ky,backendName:"cpu",kernelFunc:Lc};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tH(e,t,n,s,r,i,o){const a=t[0],u=i[0],l=new Array(u),c=new Array(a),h=t[1];if(u===0){if(a!==0)throw new Error(g5(a));const g=Hn(n,0),x=Hn(r,0);return[g,[0,h],x,l,c]}let d=!0,p=0;const f=new Array(u).fill(0);for(let g=0;g<a;++g){const x=e[g*h];if(x<0)throw new Error(x5(g,x));if(x>=u)throw new Error(b5(g,x,u));++f[x],d=d&&x>=p,p=x}let m=!0;for(let g=0;g<u;++g){const x=f[g]===0;l[g]=x,m=m&&!x,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const g=e,x=s;for(let b=0;b<a;++b)c[b]=b;return[g,[a,h],x,l,c]}else{const g=f[u-1],x=Hn(n,g*h),b=Hn(r,g),w=new Array(u).fill(0);for(let y=0;y<a;++y){const v=e[y*h],k=w[v],C=(v===0?0:f[v-1])+k;w[v]++;for(let I=0;I<h;++I)x[C*h+I]=e[y*h+I];b[C]=s[y],c[y]=C}for(let y=0;y<u;++y)if(w[y]===0){const k=y===0?0:f[y-1];x[k*h+0]=y;for(let C=1;C<h;++C)x[k*h+C]=0;b[k]=o}return[x,[g,h],b,l,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eH(e,t,n,s,r){const i=xt(s),o=t[0],a=r.length,u=[];let l=1,c=-1;for(let g=0;g<a;++g){const x=r[g];if(x===-1){if(c!==-1)throw new Error(y5(c,g));c=g,u.push(1)}else{if(x<0)throw new Error(w5(g,x));l*=x,u.push(x)}}if(c!==-1){if(l<=0)throw new Error(v5());const g=Math.trunc(i/l);if(l*g!==i)throw new Error(k5(s,u));u[c]=g}if(xt(u)!==i)throw new Error(I5(s,u));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(a>0){f[a-1]=1;for(let g=a-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}const m=Hn(n,o*a);for(let g=0;g<o;++g){let x=0;for(let b=0;b<d;++b)x+=e[g*d+b]*p[b];for(let b=0;b<a;++b)m[g*a+b]=Math.trunc(x/f[b]),x%=f[b]}return[m,[o,a],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YD(e,t,n,s,r,i=!1,o=0){const a=s.length,u=[t[0],e.length/t[0]],l=u[1],h=a>0?r[a-1]+1:0;if(h<0)throw new Error(oD());const d=t.slice();d[0]=h;const p=d.reduce((w,y)=>w*y,1),f=Hn(n,p);if(a===0)return h>0&&f.fill(o),[f,d];if(h<=0)throw new Error(oD());let m=0,g=1,x=0,b=r[m];for(;;){let w=0;if(g<a){if(w=r[g],b===w){++g;continue}if(b>=w)throw new Error(C5())}if(b<0||b>=h)throw new Error($5(b,h));b>x&&f.fill(o,x*l,b*l);for(let y=m;y<g;++y){const v=s[y];if(v<0||v>=u[0])throw new Error(S5(y,s[y],u[0]));for(let k=0;k<l;k++)f[b*l+k]+=e[v*l+k]}if(i)for(let y=0;y<l;y++)f[b*l+y]/=g-m;if(m=g,++g,x=b+1,b=w,g>a)break}return x<h&&f.fill(o,x*l,h*l),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WWt=Zu(e=>Math.sqrt(e)),VWt=qe(bg,e=>Math.sqrt(e)),UWt={kernelName:bg,backendName:"cpu",kernelFunc:VWt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nH=jn((e,t)=>{const n=e-t;return n*n}),GWt=ws(yg,nH),HWt={kernelName:yg,backendName:"cpu",kernelFunc:GWt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sH(e,t,n,s){const r=ke(e,t.dtype);for(let i=0;i<r.size;i++){const o=r.indexToLoc(i),a=new Array(o.length);for(let u=0;u<a.length;u++)a[u]=o[u]*n[u]+s[u];r.set(t.get(...a),...o)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qWt{constructor(t,n,s,r,i,o){this.separator=_u(t),this.nGramWidths=n,this.leftPad=_u(s),this.rightPad=_u(r),this.padWidth=i,this.preserveShort=o}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,n){const s=this.getPadWidth(n);return Math.max(0,t+2*s-n+1)}createNGrams(t,n,s,r,i,o){for(let a=0;a<i;++a){const u=this.getPadWidth(o),l=Math.max(0,u-a),c=Math.max(0,u-(i-(a+1))),h=o-(l+c),d=n+(l>0?0:a-u);let p=0;p+=l*this.leftPad.length;for(let b=0;b<h;++b)p+=t[d+b].length;p+=c*this.rightPad.length;const f=l+c+h-1;p+=f*this.separator.length,s[r+a]=new Uint8Array(p);const m=s[r+a];let g=0;const x=b=>b.forEach(w=>m[g++]=w);for(let b=0;b<l;++b)x(this.leftPad),x(this.separator);for(let b=0;b<h-1;++b)x(t[d+b]),x(this.separator);if(h>0){x(t[d+h-1]);for(let b=0;b<c;++b)x(this.separator),x(this.rightPad)}else{for(let b=0;b<c-1;++b)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,n){const s=t.length,r=n.length;if(r>0){let u=n[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<r;++l){let c=n[l]>=u;if(c=c&&n[l]<=s,!c)throw new Error(`Invalid split value ${n[l]}, must be in [${u}, ${s}]`);u=n[l]}if(u!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${u}`)}const i=r-1,o=Hn("int32",r);if(s===0||r===0){const u=new Array(s);for(let l=0;l<=i;++l)o[l]=0;return[u,o]}o[0]=0;for(let u=1;u<=i;++u){const l=n[u]-n[u-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(l,h)}),this.preserveShort&&l>0&&c===0&&(c=1),o[u]=o[u-1]+c}const a=new Array(o[i]);for(let u=0;u<i;++u){const l=n[u];let c=o[u];if(this.nGramWidths.forEach(h=>{const d=n[u+1]-n[u],p=this.getNumNGrams(d,h);this.createNGrams(t,l,a,c,p,h),c+=p}),this.preserveShort&&c===o[u]){const h=n[u+1]-n[u];if(h===0)continue;const d=h+2*this.padWidth,p=1;this.createNGrams(t,l,a,c,p,d)}}return[a,o]}}function rH(e,t,n,s,r,i,o,a){return new qWt(n,s,r,i,o,a).compute(e,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jWt(e,t,n,s){if(!e.length)return;if(t.length===0){for(let i=0;i<e.length;++i)s.push(e.subarray(i,i+1));return}if(t.length===1){const i=t[0];let o=e.indexOf(i);for(;o!==-1;){const a=e.subarray(0,o);(!n||a.length!==0)&&s.push(a),e=e.subarray(o+1),o=e.indexOf(i)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let i=0;i<e.length+1;i++)if(i===e.length||t.indexOf(e[i])!==-1){const o=e.subarray(r,i);(!n||o.length!==0)&&s.push(o),r=i+1}}function iH(e,t,n){const s=e.length,r=[];let i=0,o=0;const a=new Array(s);for(let d=0;d<s;++d){const p=r.length;jWt(e[d],t,n,r);const f=r.length-p;a[d]=f,i+=f,o=Math.max(o,f)}const u=Hn("int32",i*2),l=new Array(i),c=[s,o];let h=0;for(let d=0;d<s;++d)for(let p=0;p<a[d];++p)u[h*2]=d,u[h*2+1]=p,l[h]=r[h],++h;return[u,l,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(e,t){const n=Hn("int32",e.length);for(let s=0;s<e.length;++s)n[s]=BAt(e[s]).modulo(t).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aH=jn((e,t)=>e-t),KWt=qD((e,t,n,s)=>({real:e-n,imag:t-s})),ZD=ws(wg,aH,KWt),XWt={kernelName:wg,backendName:"cpu",kernelFunc:ZD};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uH(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const s=ke(n,e.dtype);for(let r=0;r<s.values.length;++r){const i=s.indexToLoc(r),o=new Array(e.rank);for(let u=0;u<o.length;u++)o[u]=i[u]%e.shape[u];const a=e.locToIndex(o);s.values[r]=e.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a0=(e,t)=>{const n=t.value-e.value;return n===0?e.index-t.index:n};function lH(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const a=s-n+1,u=t-n+1,l=Math.log(a),c=.5*Math.exp(2*l/3),h=.5*Math.sqrt(l*c*(a-c)/a)*Math.sign(u-a/2),d=Math.max(n,Math.floor(t-u*c/a+h)),p=Math.min(s,Math.floor(t+(a-u)*c/a+h));lH(e,t,d,p)}const r=e[t];let i=n,o=s;for(ud(e,n,t),a0(e[s],r)>0&&ud(e,n,s);i<o;){for(ud(e,i,o),i++,o--;a0(e[i],r)<0;)i=i+1;for(;a0(e[o],r)>0;)o=o-1}a0(e[n],r)===0?ud(e,n,o):(o=o+1,ud(e,o,s)),o<=t&&(n=o+1),t<=o&&(s=o-1)}}function cH(e,t,n,s,r){const i=t[t.length-1],[o,a]=[e.length/i,i],u=As(n,o*s),l=As("int32",o*s);for(let h=0;h<o;h++){const d=h*a,p=e.subarray(d,d+a);let f=new Array(p.length);p.forEach((b,w)=>f[w]={value:b,index:w}),s<f.length&&(lH(f,s),f=f.slice(0,s)),r&&f.sort(a0);const m=h*s,g=u.subarray(m,m+s),x=l.subarray(m,m+s);for(let b=0;b<s;b++)g[b]=f[b].value,x[b]=f[b].index}const c=t.slice();return c[c.length-1]=s,[ke(c,n,u),ke(c,"int32",l)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hH(e,t,n,s){const r=ve(t,n)[0],i=[1,n[0],1];for(let f=0;f<r;f++)i[0]*=n[f];i[1]=n[r];for(let f=r+1;f<n.length;f++)i[2]*=n[f];const o={},a=new Int32Array(n[r]),u=new Us(i,s,e),l=[],c=i[0]===1&&i[2]===1;for(let f=0;f<n[r];f++){let m;if(c)m=e[f].toString();else{const g=[];for(let x=0;x<i[0];x++)for(let b=0;b<i[2];b++)g.push(u.get(x,f,b));m=g.join(",")}if(o[m]!==void 0)a[f]=o[m];else{const g=Object.keys(o).length;o[m]=g,a[f]=g,l.push(f)}}const h=i.slice();h[1]=Object.keys(o).length;const d=new Us(h,s);l.forEach((f,m)=>{for(let g=0;g<i[0];g++)for(let x=0;x<i[2];x++)d.set(u.get(g,f,x),g,m,x)});const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var YWt=Object.freeze({__proto__:null,addImpl:y8,bincountImpl:jD,bincountReduceImpl:w8,castImpl:b8,ceilImpl:v8,concatImpl:k8,equalImpl:I8,expImpl:$8,expm1Impl:N8,floorImpl:E8,gatherNdImpl:D8,gatherV2Impl:T8,greaterEqualImpl:F8,greaterImpl:A8,lessEqualImpl:_8,lessImpl:R8,linSpaceImpl:M8,logImpl:O8,maxImpl:L8,maximumImpl:z8,minimumImpl:B8,multiplyImpl:KD,negImpl:P8,notEqualImpl:W8,prodImpl:V8,raggedGatherImpl:G8,raggedRangeImpl:q8,raggedTensorToTensorImpl:X8,rangeImpl:Y8,rsqrtImpl:Z8,scatterImpl:Md,sigmoidImpl:zWt,simpleAbsImpl:x8,sliceImpl:Q8,sparseFillEmptyRowsImpl:tH,sparseReshapeImpl:eH,sparseSegmentReductionImpl:YD,sqrtImpl:WWt,squaredDifferenceImpl:nH,stridedSliceImpl:sH,stringNGramsImpl:rH,stringSplitImpl:iH,stringToHashBucketFastImpl:oH,subImpl:aH,tileImpl:uH,topKImpl:cH,transposeImpl:XD,uniqueImpl:hH});/** @license See the LICENSE file. */const ZWt="4.2.0";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */YV("cpu",()=>new Yw,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dH=qe(Um,e=>e>=0?e:Math.exp(e)-1),JWt={kernelName:Um,backendName:"cpu",kernelFunc:dH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pH(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:i}=s;Xt([r],"leakyRelu");const o=xt(r.shape),a=n.data.get(r.dataId).values,u=As("float32",o);for(let l=0;l<a.length;l++)u[l]=a[l]<0?i*a[l]:a[l];return n.makeTensorInfo(r.shape,"float32",u)}const QWt={kernelName:ky,backendName:"cpu",kernelFunc:pH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tVt=jn((e,t)=>e<0?t*e:e);function fH(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;Xt([s,r],"prelu");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,[a,u]=tVt(s.shape,r.shape,i,o,"float32");return n.makeTensorInfo(u,"float32",a)}const eVt={kernelName:Wy,backendName:"cpu",kernelFunc:fH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH=qe(ug,e=>Math.max(0,e)),nVt={kernelName:ug,backendName:"cpu",kernelFunc:mH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gH=qe(lg,e=>Math.min(Math.max(0,e),6)),sVt={kernelName:lg,backendName:"cpu",kernelFunc:gH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tv(e,t,n,s,r){if(n==="linear")return xa({inputs:{x:t},backend:e});if(n==="relu")return mH({inputs:{x:t},backend:e});if(n==="elu")return dH({inputs:{x:t},backend:e});if(n==="relu6")return gH({inputs:{x:t},backend:e});if(n==="prelu")return fH({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return pH({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return J8({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:i}=s,o=xt(r.shape),a=VW(i,o),u=xt(a);L(o===u,()=>`The new shape (${a}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(l.complexTensorInfos!=null){const c=l.complexTensorInfos.real,h=l.complexTensorInfos.imag;c.shape=a,h.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const rVt={kernelName:Uy,backendName:"cpu",kernelFunc:an};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xH(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i}=t,{transposeA:o,transposeB:a}=s;Xt([r,i],"matMul");const u=r.shape.length,l=i.shape.length,c=o?r.shape[u-2]:r.shape[u-1],h=a?i.shape[l-1]:i.shape[l-2],d=o?r.shape[u-1]:r.shape[u-2],p=a?i.shape[l-2]:i.shape[l-1],f=r.shape.slice(0,-2),m=i.shape.slice(0,-2),g=xt(f),x=xt(m),w=ge(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,p]);L(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${o} and transposeB=${a} must match.`);const y=o?[g,c,d]:[g,d,c],v=a?[x,p,h]:[x,h,p],k=an({inputs:{x:r},backend:n,attrs:{shape:y}}),C=an({inputs:{x:i},backend:n,attrs:{shape:v}}),I=o?k.shape[1]:k.shape[2],$=o?k.shape[2]:k.shape[1],S=a?C.shape[1]:C.shape[2],N=Math.max(g,x),F=n.data.get(k.dataId).values,D=n.data.get(C.dataId).values,E=ee(k.shape),A=ee(C.shape),[T,R,_]=o?[E[0],1,E[1]]:[E[0],E[1],1],[M,z,B]=a?[1,A[1],A[0]]:[A[1],1,A[0]],V=$*S,G=ke([N,$,S],k.dtype),j=G.values,H=n.blockSize;for(let at=0;at<N;at++){const it=at%g,ft=at%x;for(let X=0;X<$;X+=H){const ut=Math.min(X+H,$);for(let wt=0;wt<S;wt+=H){const ot=Math.min(wt+H,S);for(let Et=0;Et<I;Et+=H){const Tt=Math.min(Et+H,I);for(let Rt=X;Rt<ut;Rt++)for(let _t=wt;_t<ot;_t++){let kt=0;for(let Lt=Et;Lt<Tt;Lt++){const Ue=F[it*T+Rt*R+Lt*_],he=D[Lt*M+_t*z+ft*B];kt+=Ue*he}j[at*V+(Rt*S+_t)]+=kt}}}}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(C),n.makeTensorInfo(w,G.dtype,G.values)}const iVt={kernelName:ay,backendName:"cpu",kernelFunc:xH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oVt(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i,bias:o,preluActivationWeights:a}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;let d,p,f;const m=[];d=xH({inputs:{a:r,b:i},attrs:{transposeA:u,transposeB:l},backend:n}),o&&(p=Rd({inputs:{a:d,b:o},backend:n}),m.push(d),d=p),c&&(f=tv(n,d,c,a,h),m.push(d),d=f);for(const x of m)n.disposeIntermediateTensorInfo(x);return d}const aVt={kernelName:nw,backendName:"cpu",kernelFunc:oVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uVt=qe(Tm,e=>Math.acos(e)),lVt={kernelName:Tm,backendName:"cpu",kernelFunc:uVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cVt=qe(Am,e=>Math.acosh(e)),hVt={kernelName:Am,backendName:"cpu",kernelFunc:cVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dVt(e){const{inputs:t,backend:n}=e,s=t;Xt(t,"addN");const r=s.map(a=>n.data.get(a.dataId).values),i=ke(s[0].shape,s[0].dtype),o=i.values;for(let a=0;a<s.length;a++){const u=r[a];for(let l=0;l<o.length;l++)o[l]+=u[l]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}const pVt={kernelName:RS,backendName:"cpu",kernelFunc:dVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fVt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s;Xt(r,"all");const a=ve(i,r.shape);let u=a;const l=Sn(u,r.shape.length);let c=r;l!=null&&(c=Nr({inputs:{x:r},backend:n,attrs:{perm:l}}),u=On(u.length,r.shape.length)),Rs("all",u,c.shape.length);const[h,d]=xs(c.shape,u),p=xt(d),f=Vs(xt(h),c.dtype),m=n.data.get(c.dataId).values;for(let x=0;x<f.length;++x){const b=x*p;let w=m[b];for(let y=0;y<p;++y){const v=m[b+y];w=w&&v}f[x]=w}l!=null&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const x=Mn(h,a),b=an({inputs:{x:g},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(g),b}return g}const mVt={kernelName:_S,backendName:"cpu",kernelFunc:fVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gVt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s;Xt(r,"any");const a=ve(i,r.shape);let u=a;const l=Sn(u,r.shape.length);let c=r;l!=null&&(c=Nr({inputs:{x:r},backend:n,attrs:{perm:l}}),u=On(u.length,r.shape.length)),Rs("any",u,c.shape.length);const[h,d]=xs(c.shape,u),p=xt(d),f=Vs(xt(h),c.dtype),m=n.data.get(c.dataId).values;for(let x=0;x<f.length;++x){const b=x*p;let w=m[b];for(let y=0;y<p;++y){const v=m[b+y];w=w||v}f[x]=w}l!=null&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const x=Mn(h,a),b=an({inputs:{x:g},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(g),b}return g}const xVt={kernelName:MS,backendName:"cpu",kernelFunc:gVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bVt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;Xt(r,"argMax");let o=ve(i,r.shape);const a=Sn(o,r.shape.length);let u=r;const l=[];a!=null&&(u=Nr({inputs:{x:r},backend:n,attrs:{perm:a}}),l.push(u),o=On(o.length,u.shape.length)),o=[o[0]],Rs("argMax",o,u.shape.length);const[c,h]=xs(u.shape,o),d=xt(c),p=Vs(d,"int32"),f=xt(h),m=n.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let b=m[x],w=0;for(let y=0;y<f;++y){const v=m[x+y];v>b&&(b=v,w=y)}p[g]=w}return l.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",p)}const yVt={kernelName:sy,backendName:"cpu",kernelFunc:bVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wVt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;Xt(r,"argMin");let o=ve(i,r.shape);const a=Sn(o,r.shape.length);let u=r;const l=[];a!=null&&(u=Nr({inputs:{x:r},backend:n,attrs:{perm:a}}),l.push(u),o=On(o.length,u.shape.length)),o=[o[0]],Rs("argMin",o,u.shape.length);const[c,h]=xs(u.shape,o),d=xt(c),p=Vs(d,"int32"),f=xt(h),m=n.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let b=m[x],w=0;for(let y=0;y<f;++y){const v=m[x+y];v<b&&(b=v,w=y)}p[g]=w}return l.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",p)}const vVt={kernelName:ry,backendName:"cpu",kernelFunc:wVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kVt=qe(Fm,e=>Math.asin(e)),IVt={kernelName:Fm,backendName:"cpu",kernelFunc:kVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CVt=qe(Rm,e=>Math.asinh(e)),$Vt={kernelName:Rm,backendName:"cpu",kernelFunc:CVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SVt=qe(_m,e=>Math.atan(e)),NVt={kernelName:_m,backendName:"cpu",kernelFunc:SVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EVt=jn((e,t)=>Math.atan2(e,t)),DVt=ws(Om,EVt),TVt={kernelName:Om,backendName:"cpu",kernelFunc:DVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AVt=qe(Mm,e=>Math.atanh(e)),FVt={kernelName:Mm,backendName:"cpu",kernelFunc:AVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JD(e,t,n,s,r,i){const o=r.strideHeight,a=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=ke(r.outShape,n),g=m.values,x=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],w=r.outShape[3];for(let y=0;y<r.batchSize;++y){const v=y*x,k=y*s[0];for(let C=0;C<r.inChannels;++C)for(let I=0;I<r.outHeight;++I){const $=I*o-d,S=Math.max(0,$),N=Math.min(r.inHeight,c+$),F=v+I*b;for(let D=0;D<r.outWidth;++D){const E=D*a-p,A=Math.max(0,E),T=Math.min(r.inWidth,h+E);let R=f,_=0,M=0;for(let B=S;B<N;B+=u){const V=k+B*s[1];for(let G=A;G<T;G+=l){const j=V+G*s[2],H=e[j+C];i==="max"&&H>R?R=H:i==="avg"&&(_+=H,M++)}if(isNaN(R))break}const z=F+D*w+C;g[z]=i==="avg"?_/M:R}}}return m}function bH(e,t,n,s,r=!1,i=!1){const o=ke(s.outShape,"int32"),a=s.strideHeight,u=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=ke(t,n,e);for(let g=0;g<s.batchSize;++g)for(let x=0;x<s.inChannels;++x)for(let b=0;b<s.outHeight;++b){const w=b*a-p;let y=w;for(;y<0;)y+=l;const v=Math.min(s.inHeight,h+w);for(let k=0;k<s.outWidth;++k){const C=k*u-f;let I=C;for(;I<0;)I+=c;const $=Math.min(s.inWidth,d+C);let S=Number.NEGATIVE_INFINITY,N=-1;for(let F=y;F<v;F+=l){const D=F-w;for(let E=I;E<$;E+=c){const A=E-C,T=m.get(g,F,E,x);T>S&&(S=T,r?N=i?((g*s.inHeight+F)*s.inWidth+E)*s.inChannels+x:(F*s.inWidth+E)*s.inChannels+x:N=D*d+A)}}o.set(N,g,b,k,x)}}return o}function yH(e,t,n,s,r,i){const o=r.strideDepth,a=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,x=r.padInfo.left,b=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=ke(r.outShape,n),y=w.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let $=0;$<r.batchSize;++$){const S=$*v,N=$*s[0];for(let F=0;F<r.inChannels;++F)for(let D=0;D<r.outDepth;++D){const E=D*o-m;let A=E;for(;A<0;)A+=l;const T=Math.min(r.inDepth,d+E),R=S+D*k;for(let _=0;_<r.outHeight;++_){const M=_*a-g;let z=M;for(;z<0;)z+=c;const B=Math.min(r.inHeight,p+M),V=R+_*C;for(let G=0;G<r.outWidth;++G){const j=G*u-x;let H=j;for(;H<0;)H+=h;const at=Math.min(r.inWidth,f+j),it=V+G*I;let ft=b,X=0,ut=0;for(let ot=A;ot<T;ot+=l){const Et=N+ot*s[1];for(let Tt=z;Tt<B;Tt+=c){const Rt=Et+Tt*s[2];for(let _t=H;_t<at;_t+=h){const kt=Rt+_t*s[3],Lt=e[kt+F];if(i==="max"&&Lt>ft?ft=Lt:i==="avg"&&(X+=Lt,ut++),isNaN(ft))break}if(isNaN(ft))break}if(isNaN(ft))break}const wt=it+F;y[wt]=i==="avg"?X/Math.max(ut,1):ft}}}}return w}function RVt(e,t){const n=ke(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let x=0;x<t.outDepth;++x){const b=x*s-d;let w=b;for(;w<0;)w+=o;const y=Math.min(t.inDepth,l+b);for(let v=0;v<t.outHeight;++v){const k=v*r-p;let C=k;for(;C<0;)C+=a;const I=Math.min(t.inHeight,c+k);for(let $=0;$<t.outWidth;++$){const S=$*i-f;let N=S;for(;N<0;)N+=u;const F=Math.min(t.inWidth,h+S);let D=Number.NEGATIVE_INFINITY,E=-1;for(let A=w;A<y;A+=o){const T=A-b;for(let R=C;R<I;R+=a){const _=R-k;for(let M=N;M<F;M+=u){const z=M-S,B=e.get(m,A,R,M,g);B>=D&&(D=B,E=T*c*h+_*c+z)}}}n.set(E,m,x,v,$,g)}}}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Vt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Xt(r,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=s,l=1;L(Gs(o,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=Oi(r.shape,i,o,l,a,u);let h;if(c.filterWidth===1&&c.filterHeight===1&&We(c.inShape,c.outShape))h=xa({inputs:{x:r},backend:n});else{const d=n.data.get(r.dataId).values,p=ee(r.shape),f=JD(d,r.shape,r.dtype,p,c,"avg");h=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const MVt={kernelName:iy,backendName:"cpu",kernelFunc:_Vt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OVt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=s;Xt(r,"avgPool3d");const c=Va(r.shape,i,o,1,a,u,l),h=n.data.get(r.dataId).values,d=yH(h,r.shape,r.dtype,ee(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}const LVt={kernelName:oy,backendName:"cpu",kernelFunc:OVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zVt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,{filterSize:o,strides:a,pad:u,dimRoundingMode:l}=s;Xt([r,i],"avgPool3DGrad");const c=Va(i.shape,o,a,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,x=c.dilationDepth,b=c.dilationHeight,w=c.dilationWidth,y=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,C=y-1-c.padInfo.front,I=k-1-c.padInfo.left,$=v-1-c.padInfo.top,S=ke(i.shape,"float32"),N=1/(f*m*g),F=n.bufferSync(r);for(let D=0;D<c.batchSize;++D)for(let E=0;E<c.inChannels;++E)for(let A=0;A<c.inDepth;++A)for(let T=0;T<c.inHeight;++T)for(let R=0;R<c.inWidth;++R){const _=A-C,M=T-$,z=R-I;let B=0;for(let V=0;V<y;V+=x){const G=(_+V)/h;if(!(G<0||G>=c.outDepth||Math.floor(G)!==G))for(let j=0;j<v;j+=b){const H=(M+j)/d;if(!(H<0||H>=c.outHeight||Math.floor(H)!==H))for(let at=0;at<k;at+=w){const it=(z+at)/p;if(it<0||it>=c.outWidth||Math.floor(it)!==it)continue;const ft=F.get(D,G,H,it,E);B+=ft}}}S.set(B*N,D,A,T,R,E)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const BVt={kernelName:LS,backendName:"cpu",kernelFunc:zVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PVt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,o=i;Xt([r,i],"avgPoolGrad");const{filterSize:a,strides:u,pad:l}=s,c=Oi(o.shape,a,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,x=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,y=x-1-c.padInfo.top,v=ke(o.shape,"float32"),k=1/(p*f),C=n.data.get(r.dataId).values,I=ke(r.shape,"float32",C);for(let $=0;$<c.batchSize;++$)for(let S=0;S<c.inChannels;++S)for(let N=0;N<c.inHeight;++N)for(let F=0;F<c.inWidth;++F){const D=N-y,E=F-w;let A=0;for(let T=0;T<x;T+=m){const R=(D+T)/h;if(!(R<0||R>=c.outHeight||Math.floor(R)!==R))for(let _=0;_<b;_+=g){const M=(E+_)/d;if(M<0||M>=c.outWidth||Math.floor(M)!==M)continue;const z=I.get($,R,M,S);A+=z}}v.set(A*k,$,N,F,S)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const WVt={kernelName:OS,backendName:"cpu",kernelFunc:PVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VVt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:i,offset:o,mean:a,variance:u}=t;L(a.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),L(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),L(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Xt([r,a,u,i,o],"batchNorm");let{varianceEpsilon:l}=s;l==null&&(l=.001);const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,d=n.data.get(u.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,x=p.length,b=d.length,w=h.length;let y=0,v=0,k=0,C=0;for(let I=0;I<c.length;++I)m[I]=f[y++]+(c[I]-h[v++])*p[k++]/Math.sqrt(d[C++]+l),y>=g&&(y=0),v>=w&&(v=0),k>=x&&(k=0),C>=b&&(C=0);return n.makeTensorInfo(r.shape,r.dtype,m)}const UVt={kernelName:yy,backendName:"cpu",kernelFunc:VVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GVt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,crops:o}=s;Xt([r],"batchToSpaceND");const a=i.reduce((x,b)=>x*b),u=Vg(r.shape,i,a),l=Ug(u.length,i.length),c=Gg(r.shape,i,a),h=GE(o,i.length),d=HE(c,o,i.length),p=an({inputs:{x:r},backend:n,attrs:{shape:u}}),f=Nr({inputs:{x:p},backend:n,attrs:{perm:l}}),m=an({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Lc({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const HVt={kernelName:uy,backendName:"cpu",kernelFunc:GVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qVt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:o}=s,a=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,l=jD(a,u,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,l)}const jVt={kernelName:zS,backendName:"cpu",kernelFunc:qVt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KVt(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,a=ge(Array.from(i),Array.from(o));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const XVt={kernelName:XW,backendName:"cpu",kernelFunc:KVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YVt=qe(Bm,(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),ZVt={kernelName:Bm,backendName:"cpu",kernelFunc:YVt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JVt={kernelName:ly,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(xt(t.shape)),r=n.data.get(t.dataId),i=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,a=n.data.get(i.dataId).values,u=n.data.get(o.dataId).values;for(let l=0;l<a.length;l++){const c=a[l],h=u[l];s[l]=Math.hypot(c,h)}return n.makeOutput(s,t.shape,"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Od(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const QVt={kernelName:nN,backendName:"cpu",kernelFunc:Od};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ld(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,i=ve(r,t[0].shape)[0],o=t.map(m=>m.shape);WE(o,i);let a=la(t.map(m=>m.shape),i);if(xt(a)===0)return n.makeTensorInfo(a,t[0].dtype,[]);const u=t.filter(m=>xt(m.shape)>0);if(u.length===1)return xa({inputs:{x:u[0]},backend:n});if(u[0].dtype==="complex64"){const m=u.map(y=>Oc({inputs:{input:y},backend:n})),g=u.map(y=>Od({inputs:{input:y},backend:n})),x=Ld({inputs:m,backend:n,attrs:{axis:i}}),b=Ld({inputs:g,backend:n,attrs:{axis:i}}),w=Xr({inputs:{real:x,imag:b},backend:n});return m.forEach(y=>n.disposeIntermediateTensorInfo(y)),g.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),w}const l=u.map(m=>{const x=[-1,xt(m.shape.slice(i))];return an({inputs:{x:m},backend:n,attrs:{shape:x}})}),c=l.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));a=la(l.map(m=>m.shape),1);const h=l[0].shape[0]===1,d=k8(c,a,t[0].dtype,h),p=la(u.map(m=>m.shape),i),f=n.makeTensorInfo(p,t[0].dtype,d);return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const tUt={kernelName:cy,backendName:"cpu",kernelFunc:Ld};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=s;Xt([r,i],"conv2d");const h=Ua(u),d=Fs(r.shape,i.shape,o,l,a,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,b=d.padInfo.top,w=d.dataFormat==="channelsLast",y=new Us(d.outShape,r.dtype),v=ee(r.shape),k=ee(i.shape),C=v[0],I=w?v[1]:v[2],$=w?v[2]:1,S=w?1:v[1],N=y.strides[0],F=w?y.strides[1]:y.strides[2],D=w?y.strides[2]:1,E=w?1:y.strides[1],A=n.data.get(r.dataId).values,T=n.data.get(i.dataId).values,R=y.values;for(let _=0;_<d.batchSize;++_){const M=_*C,z=_*N;for(let B=0;B<d.outHeight;++B){const V=z+B*F,G=B*d.strideHeight-b;for(let j=0;j<p;++j){const H=G+j*m;if(H<0||H>=d.inHeight)continue;const at=j*k[0],it=M+H*I;for(let ft=0;ft<d.outWidth;++ft){const X=V+ft*D,ut=ft*d.strideWidth-x;for(let wt=0;wt<f;++wt){const ot=ut+wt*g;if(ot<0||ot>=d.inWidth)continue;const Et=at+wt*k[1],Tt=it+ot*$;let Rt=Et;for(let _t=0;_t<d.inChannels;++_t){const kt=A[Tt+_t*S];for(let Lt=0;Lt<d.outChannels;++Lt)R[X+Lt*E]+=kt*T[Rt+Lt];Rt+=d.outChannels}}}}}}return n.makeTensorInfo(y.shape,y.dtype,R)}const eUt={kernelName:hy,backendName:"cpu",kernelFunc:wH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nUt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:o,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=s;Xt([r,i],"conv2dBackpropFilter");const h=Ua(u),d=Fs(r.shape,c,o,1,a,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,x=d.dataFormat==="channelsLast",b=new Us(d.filterShape,"float32"),w=d.padInfo.left,y=d.padInfo.top,v=n.data.get(r.dataId).values,k=n.data.get(i.dataId).values,C=new Us(r.shape,r.dtype,v),I=new Us(i.shape,i.dtype,k);for(let $=0;$<m;++$){const S=Math.max(0,Math.ceil((y-$)/p)),N=Math.min(d.outHeight,(d.inHeight+y-$)/p);for(let F=0;F<g;++F){const D=Math.max(0,Math.ceil((w-F)/f)),E=Math.min(d.outWidth,(d.inWidth+w-F)/f);for(let A=0;A<d.inChannels;++A)for(let T=0;T<d.outChannels;++T){let R=0;for(let _=0;_<d.batchSize;++_)for(let M=S;M<N;++M){const z=$+M*p-y;for(let B=D;B<E;++B){const V=F+B*f-w;x?R+=C.get(_,z,V,A)*I.get(_,M,B,T):R+=C.get(_,A,z,V)*I.get(_,T,M,B)}}b.set(R,$,F,A,T)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const sUt={kernelName:PS,backendName:"cpu",kernelFunc:nUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rUt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{inputShape:o,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=s;Xt([r,i],"conv2dBackpropInput");const h=ee(i.shape),d=ee(r.shape);let p=Ua(l);const f=Fs(o,i.shape,a,1,u,c,!1,p),m=new Us(f.inShape,"float32"),g=m.values,x=n.data.get(r.dataId).values,b=n.data.get(i.dataId).values,[w,y,v]=h,{batchSize:k,filterHeight:C,filterWidth:I,inChannels:$,inHeight:S,inWidth:N,outChannels:F,outHeight:D,outWidth:E,strideHeight:A,strideWidth:T}=f;p=f.dataFormat;const R=C-1-f.padInfo.top,_=I-1-f.padInfo.left,M=p==="channelsLast",z=m.strides[0],B=M?m.strides[1]:m.strides[2],V=M?m.strides[2]:1,G=M?1:m.strides[1],j=d[0],H=M?d[1]:d[2],at=M?d[2]:1,it=M?1:d[1];for(let ft=0;ft<k;++ft)for(let X=0;X<$;++X)for(let ut=0;ut<S;++ut){const wt=ut-R,ot=Math.max(0,Math.ceil(wt/A)),Et=Math.min(D,(C+wt)/A);for(let Tt=0;Tt<N;++Tt){const Rt=Tt-_,_t=Math.max(0,Math.ceil(Rt/T)),kt=Math.min(E,(I+Rt)/T);let Lt=0;for(let he=ot;he<Et;++he){const os=he*A-wt;for(let je=_t;je<kt;++je){const W=je*T-Rt,Q=j*ft+H*he+at*je,lt=w*(C-1-os)+y*(I-1-W)+v*X;for(let yt=0;yt<F;++yt){const It=x[Q+it*yt],$t=b[lt+yt];Lt+=It*$t}}}const Ue=z*ft+B*ut+V*Tt+G*X;g[Ue]=Lt}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const iUt={kernelName:dy,backendName:"cpu",kernelFunc:rUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oUt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dilations:u}=s;Xt([r,i],"conv3d");const l=Lu(r.shape,i.shape,o,u,a),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,x=g.front,b=g.left,w=g.top,y=new Us(l.outShape,r.dtype),v=n.data.get(r.dataId).values,k=n.data.get(i.dataId).values,C=y.values,I=ee(r.shape),$=ee(i.shape);for(let S=0;S<l.batchSize;++S){const N=S*I[0],F=S*y.strides[0];for(let D=0;D<l.outDepth;++D){const E=F+D*y.strides[1],A=D*l.strideDepth-x;for(let T=0;T<c;++T){const R=A+T*p;if(R<0||R>=l.inDepth)continue;const _=T*$[0],M=N+R*I[1];for(let z=0;z<l.outHeight;++z){const B=E+z*y.strides[2],V=z*l.strideHeight-w;for(let G=0;G<h;++G){const j=V+G*f;if(j<0||j>=l.inHeight)continue;const H=_+G*$[1],at=M+j*I[2];for(let it=0;it<l.outWidth;++it){const ft=B+it*l.outChannels,X=it*l.strideWidth-b;for(let ut=0;ut<d;++ut){const wt=X+ut*m;if(wt<0||wt>=l.inWidth)continue;const ot=H+ut*$[2],Et=at+wt*l.inChannels;let Tt=ot;for(let Rt=0;Rt<l.inChannels;++Rt){const _t=v[Et+Rt];for(let kt=0;kt<l.outChannels;++kt)C[ft+kt]+=_t*k[Tt+kt];Tt+=l.outChannels}}}}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const aUt={kernelName:py,backendName:"cpu",kernelFunc:oUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uUt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:o,pad:a,filterShape:u}=s;Xt([r,i],"conv3dBackpropFilterV2");const l=ee(r.shape),c=ee(i.shape),h=Lu(r.shape,u,o,1,a),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,b=new Us(h.filterShape,"float32"),w=b.values,[y,v,k,C]=b.strides,I=n.data.get(i.dataId).values,[$,S,N,F]=c,D=n.data.get(r.dataId).values,[E,A,T,R]=l,_=h.padInfo.front,M=h.padInfo.left,z=h.padInfo.top;for(let B=0;B<m;++B){const V=Math.max(0,Math.ceil((_-B)/d)),G=Math.min(h.outDepth,(h.inDepth+_-B)/d),j=B*y;for(let H=0;H<g;++H){const at=Math.max(0,Math.ceil((z-H)/p)),it=Math.min(h.outHeight,(h.inHeight+z-H)/p),ft=H*v+j;for(let X=0;X<x;++X){const ut=Math.max(0,Math.ceil((M-X)/f)),wt=Math.min(h.outWidth,(h.inWidth+M-X)/f),ot=X*k+ft;for(let Et=0;Et<h.inChannels;++Et){const Tt=Et*C+ot;for(let Rt=0;Rt<h.outChannels;++Rt){let _t=0;for(let kt=0;kt<h.batchSize;++kt){const Lt=kt*E,Ue=kt*$;for(let he=V;he<G;++he){const je=(B+he*d-_)*A+Lt,W=he*S+Ue;for(let Q=at;Q<it;++Q){const yt=(H+Q*p-z)*T+je,It=Q*N+W;for(let $t=ut;$t<wt;++$t){const vt=(X+$t*f-M)*R+yt,Vt=$t*F+It;_t+=D[vt+Et]*I[Vt+Rt]}}}}w[Tt+Rt]=_t}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const lUt={kernelName:WS,backendName:"cpu",kernelFunc:uUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cUt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{pad:o,strides:a,inputShape:u}=s;Xt([r],"conv3dBackpropInputV2");const l=ee(r.shape),c=ee(i.shape),h=Lu(u,i.shape,a,1,o),d=new Us(h.inShape,"float32"),p=d.values,[f,m,g,x]=d.strides,b=n.data.get(r.dataId).values,[w,y,v,k]=l,C=n.data.get(i.dataId).values,[I,$,S,N]=c,{batchSize:F,filterDepth:D,filterHeight:E,filterWidth:A,inChannels:T,inDepth:R,inHeight:_,inWidth:M,outChannels:z,outDepth:B,outHeight:V,outWidth:G,strideDepth:j,strideHeight:H,strideWidth:at}=h,it=D-1-h.padInfo.front,ft=E-1-h.padInfo.top,X=A-1-h.padInfo.left;for(let ut=0;ut<F;++ut)for(let wt=0;wt<T;++wt)for(let ot=0;ot<R;++ot){const Et=ot-it,Tt=Math.max(0,Math.ceil(Et/j)),Rt=Math.min(B,(D+Et)/j);for(let _t=0;_t<_;++_t){const kt=_t-ft,Lt=Math.max(0,Math.ceil(kt/H)),Ue=Math.min(V,(E+kt)/H);for(let he=0;he<M;++he){const os=he-X,je=Math.max(0,Math.ceil(os/at)),W=Math.min(G,(A+os)/at);let Q=0;for(let lt=Tt;lt<Rt;++lt){const yt=lt*j-Et;for(let It=Lt;It<Ue;++It){const $t=It*H-kt;for(let At=je;At<W;++At){const vt=At*at-os,Vt=w*ut+y*lt+v*It+k*At,Ne=I*(D-1-yt)+$*(E-1-$t)+S*(A-1-vt)+N*wt;for(let Se=0;Se<z;++Se){const zt=b[Vt+Se],vs=C[Ne+Se];Q+=zt*vs}}}}p[f*ut+m*ot+g*_t+x*he+wt]=Q}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}const hUt={kernelName:VS,backendName:"cpu",kernelFunc:cUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dUt=qe(Pm,e=>Math.cos(e)),pUt={kernelName:Pm,backendName:"cpu",kernelFunc:dUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fUt=qe(Wm,e=>Math.cosh(e)),mUt={kernelName:Wm,backendName:"cpu",kernelFunc:fUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gUt(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:i,boxInd:o}=t,{cropSize:a,method:u,extrapolationValue:l}=s,[c,h,d,p]=r.shape,f=i.shape[0],[m,g]=a,x=ke([f,m,g,p],"float32"),b=n.data.get(i.dataId).values,w=n.data.get(o.dataId).values,y=n.data.get(r.dataId).values,v=ee(r.shape),k=ee(x.shape);for(let C=0;C<f;C++){const I=C*4,$=b[I],S=b[I+1],N=b[I+2],F=b[I+3],D=w[C];if(D>=c)continue;const E=m>1?(N-$)*(h-1)/(m-1):0,A=g>1?(F-S)*(d-1)/(g-1):0;for(let T=0;T<m;T++){const R=m>1?$*(h-1)+T*E:.5*($+N)*(h-1);if(R<0||R>h-1){for(let _=0;_<g;_++)for(let M=0;M<p;M++){const z=M+_*k[2]+T*k[1]+C*k[0];x.values[z]=l}continue}if(u==="bilinear"){const _=Math.floor(R),M=Math.ceil(R),z=R-_;for(let B=0;B<g;B++){const V=g>1?S*(d-1)+B*A:.5*(S+F)*(d-1);if(V<0||V>d-1){for(let at=0;at<p;at++){const it=at+B*k[2]+T*k[1]+C*k[0];x.values[it]=l}continue}const G=Math.floor(V),j=Math.ceil(V),H=V-G;for(let at=0;at<p;at++){let it=at+G*v[2]+_*v[1]+D*v[0];const ft=y[it];it=at+j*v[2]+_*v[1]+D*v[0];const X=y[it];it=at+G*v[2]+M*v[1]+D*v[0];const ut=y[it];it=at+j*v[2]+M*v[1]+D*v[0];const wt=y[it],ot=ft+(X-ft)*H,Et=ut+(wt-ut)*H;it=at+B*k[2]+T*k[1]+C*k[0],x.values[it]=ot+(Et-ot)*z}}}else for(let _=0;_<g;++_){const M=g>1?S*(d-1)+_*A:.5*(S+F)*(d-1);if(M<0||M>d-1){for(let V=0;V<p;V++){const G=V+_*k[2]+T*k[1]+C*k[0];x.values[G]=l}continue}const z=Math.round(M),B=Math.round(R);for(let V=0;V<p;V++){const G=V+z*v[2]+B*v[1]+D*v[0],j=V+_*k[2]+T*k[1]+C*k[0];x.values[j]=y[G]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const xUt={kernelName:GS,backendName:"cpu",kernelFunc:gUt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bUt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:o,reverse:a}=s;Xt(r,"cumprod");const u=Sn([i],r.shape.length);let l=r;u!=null&&(l=Nr({inputs:{x:r},backend:n,attrs:{perm:u}}));const c=On(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Gr(l.dtype,"int32"),d=DS(xt(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=a?(x,b)=>x+f-b-1:(x,b)=>x+b;for(let x=0;x<p.length;x+=f)for(let b=0;b<f;b++){const w=m(x,b);if(b===0)d[w]=o?1:p[w];else{const y=m(x,b-1);d[w]=o?p[y]*d[y]:p[w]*d[y]}}const g=n.makeTensorInfo(l.shape,h,d);if(u!=null){const x=zu(u),b=Nr({inputs:{x:g},backend:n,attrs:{perm:x}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),b}return g}const yUt={kernelName:US,backendName:"cpu",kernelFunc:bUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wUt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:o,reverse:a}=s;Xt(r,"cumsum");const u=Sn([i],r.shape.length);let l=r;u!=null&&(l=Nr({inputs:{x:r},backend:n,attrs:{perm:u}}));const c=On(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Gr(l.dtype,"int32"),d=Vs(xt(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=a?(x,b)=>x+f-b-1:(x,b)=>x+b;for(let x=0;x<p.length;x+=f)for(let b=0;b<f;b++){const w=m(x,b);if(b===0)d[w]=o?0:p[w];else{const y=m(x,b-1);d[w]=o?p[y]+d[y]:p[w]+d[y]}}const g=n.makeTensorInfo(l.shape,h,d);if(u!=null){const x=zu(u),b=Nr({inputs:{x:g},backend:n,attrs:{perm:x}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),b}return g}const vUt={kernelName:fy,backendName:"cpu",kernelFunc:wUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kUt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:o,binaryOutput:a}=s;if(r.shape.length===1){const u=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,c=jD(u,l,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,c)}else if(r.shape.length===2){const u=n.bufferSync(r),l=n.bufferSync(i),c=w8(u,l,o,a);return n.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const IUt={kernelName:HS,backendName:"cpu",kernelFunc:kUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CUt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:i,dataFormat:o}=s;L(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=r.shape[0],u=r.shape[1],l=r.shape[2],c=r.shape[3],h=u*i,d=l*i,p=c/(i*i),f=n.data.get(r.dataId).values,m=new Float32Array(a*h*d*p);let g=0;for(let x=0;x<a;++x)for(let b=0;b<h;++b){const w=Math.floor(b/i),y=b%i;for(let v=0;v<d;++v){const k=Math.floor(v/i),C=v%i,I=(y*i+C)*p;for(let $=0;$<p;++$){const N=$+I+c*(k+l*(w+u*x));m[g++]=f[N]}}}return n.makeTensorInfo([a,h,d,p],r.dtype,m)}const $Ut={kernelName:qS,backendName:"cpu",kernelFunc:CUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dilations:u,dimRoundingMode:l}=s;Xt([r,i],"depthwiseConv2DNative");const c=ee(r.shape),h=ee(i.shape);let d=u;d==null&&(d=[1,1]),L(Gs(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const p=Fs(r.shape,i.shape,o,d,a,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:b}=p,w=b.left,y=b.top,v=p.outChannels/p.inChannels,k=new Us(p.outShape,r.dtype),C=n.data.get(r.dataId).values,I=n.data.get(i.dataId).values,$=k.values;for(let S=0;S<p.batchSize;++S){const N=S*c[0],F=S*k.strides[0];for(let D=0;D<p.outHeight;++D){const E=F+D*k.strides[1],A=D*p.strideHeight-y;for(let T=0;T<f;++T){const R=A+T*g;if(R<0||R>=p.inHeight)continue;const _=T*h[0],M=N+R*c[1];for(let z=0;z<p.outWidth;++z){const B=E+z*k.strides[2],V=z*p.strideWidth-w;for(let G=0;G<m;++G){const j=V+G*x;if(j<0||j>=p.inWidth)continue;const H=_+G*h[1],at=M+j*p.inChannels;let it=B,ft=H;for(let X=0;X<p.inChannels;++X){const ut=C[at+X];for(let wt=0;wt<v;++wt)$[it+wt]+=ut*I[ft+wt];it+=v,ft+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const SUt={kernelName:my,backendName:"cpu",kernelFunc:vH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NUt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:o,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=s;Xt([r,i],"depthwiseConv2dNativeBackpropFilter");const h=Fs(r.shape,c,o,a,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Us(h.filterShape,"float32"),x=h.padInfo.left,b=h.padInfo.top,w=h.outChannels/h.inChannels,y=n.data.get(r.dataId).values,v=new Us(r.shape,r.dtype,y),k=n.data.get(i.dataId).values,C=new Us(i.shape,i.dtype,k);for(let I=0;I<f;++I){const $=Math.max(0,Math.ceil((b-I)/d)),S=Math.min(h.outHeight,(h.inHeight+b-I)/d);for(let N=0;N<m;++N){const F=Math.max(0,Math.ceil((x-N)/p)),D=Math.min(h.outWidth,(h.inWidth+x-N)/p);for(let E=0;E<h.outChannels;++E){const A=Math.trunc(E/w),T=E%w;let R=0;for(let _=0;_<h.batchSize;++_)for(let M=$;M<S;++M){const z=I+M*d-b;for(let B=F;B<D;++B){const V=N+B*p-x;R+=v.get(_,z,V,A)*C.get(_,M,B,E)}}g.set(R,I,N,A,T)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const EUt={kernelName:jS,backendName:"cpu",kernelFunc:NUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DUt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{strides:o,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=s;Xt([r,i],"depthwiseConv2DNativeBackpropInput");const h=ee(r.shape),d=ee(i.shape),p=Fs(c,i.shape,o,a,u,l,!0),f=new Us(p.inShape,"float32"),m=f.values,[g,x,b]=f.strides,w=n.data.get(r.dataId).values,[y,v,k]=h,C=n.data.get(i.dataId).values,[I,$,S]=d,{batchSize:N,filterHeight:F,filterWidth:D,inChannels:E,inHeight:A,inWidth:T,outChannels:R,outHeight:_,outWidth:M,strideHeight:z,strideWidth:B}=p,V=F-1-p.padInfo.top,G=D-1-p.padInfo.left,j=R/E;for(let H=0;H<N;++H)for(let at=0;at<E;++at)for(let it=0;it<A;++it){const ft=it-V,X=Math.max(0,Math.ceil(ft/z)),ut=Math.min(_,(F+ft)/z);for(let wt=0;wt<T;++wt){const ot=wt-G,Et=Math.max(0,Math.ceil(ot/B)),Tt=Math.min(M,(D+ot)/B);let Rt=0;for(let _t=X;_t<ut;++_t){const kt=_t*z-ft;for(let Lt=Et;Lt<Tt;++Lt){const Ue=Lt*B-ot,he=y*H+v*_t+k*Lt,os=I*(F-1-kt)+$*(D-1-Ue)+S*at;for(let je=0;je<j;++je){const W=at*j+je,Q=w[he+W],lt=C[os+je];Rt+=Q*lt}}}m[g*H+x*it+b*wt+at]=Rt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const TUt={kernelName:KS,backendName:"cpu",kernelFunc:DUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AUt(e){const{inputs:t,backend:n}=e,{x:s}=t,r=xt(s.shape),i=n.data.get(s.dataId).values,o=ke([r,r],s.dtype),a=o.values;for(let l=0;l<i.length;l++)a[l*r+l]=i[l];const u=[...s.shape,...s.shape];return n.makeTensorInfo(u,o.dtype,o.values)}const FUt={kernelName:YW,backendName:"cpu",kernelFunc:AUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RUt={kernelName:gy,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:i,pad:o,dilations:a}=n,u=t,l=u.data.get(s.dataId).values,c=s.shape.length,h=u.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:b,padInfo:w,strideHeight:y,strideWidth:v,filterHeight:k,filterWidth:C,dilationHeight:I,dilationWidth:$,outShape:S}=Fg(s.shape,r.shape,i,o,"NHWC",a),N=xt(S),F=S.length,D=Hn(s.dtype,N);for(let A=0;A<p;++A)for(let T=0;T<x;++T){const R=T*y-w.top;for(let _=0;_<b;++_){const M=_*v-w.left;for(let z=0;z<g;++z){let B=Number.MIN_SAFE_INTEGER;for(let G=0;G<k;++G){const j=R+G*I;if(j>=0&&j<f)for(let H=0;H<C;++H){const at=M+H*$;if(at>=0&&at<m){const it=sa([A,j,at,z],c,ee(s.shape)),ft=sa([G,H,z],d,ee(r.shape)),X=l[it]+h[ft];X>B&&(B=X)}}}const V=sa([A,T,_,z],F,ee(S));D[V]=B}}}return{dataId:u.write(hc(D,s.dtype),S,s.dtype),shape:S,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Ut={kernelName:YS,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:i}=e,{strides:o,pad:a,dilations:u}=n,l=t,c=wo(s.shape,l.data.get(s.dataId).values),h=wo(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:y,filterHeight:v,filterWidth:k,dilationHeight:C,dilationWidth:I,outShape:$}=Fg(s.shape,r.shape,o,a,"NHWC",u);L(i.rank===$.length,()=>`Error in ${YS}, dy must have the same rank as output ${$.length}, but got ${i.rank}`);const S=wo($,l.data.get(i.dataId).values),N=HW(r.shape,r.dtype);for(let D=0;D<d;++D)for(let E=0;E<g;++E){const A=E*w-b.top;for(let T=0;T<x;++T){const R=T*y-b.left;for(let _=0;_<m;++_){let M=Number.MIN_SAFE_INTEGER,z=0,B=0;for(let V=0;V<v;++V){const G=A+V*C;if(G>=0&&G<p)for(let j=0;j<k;++j){const H=R+j*I;if(H>=0&&H<f){const at=c[D][G][H][_]+h[V][j][_];at>M&&(M=at,z=V,B=j)}}}N[z][B][_]+=S[D][E][T][_]}}}return{dataId:l.write(hc(N,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MUt={kernelName:XS,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:i}=e,{strides:o,pad:a,dilations:u}=n,l=t,c=wo(s.shape,l.data.get(s.dataId).values),h=wo(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:b,strideHeight:w,strideWidth:y,filterHeight:v,filterWidth:k,dilationHeight:C,dilationWidth:I,outShape:$}=Fg(s.shape,r.shape,o,a,"NHWC",u);L(i.rank===$.length,()=>`Error in ${XS}, dy must have the same rank as output ${$.length}, but got ${i.rank}`);const S=wo($,l.data.get(i.dataId).values),N=HW(s.shape,s.dtype);for(let D=0;D<d;++D)for(let E=0;E<g;++E){const A=E*w-b.top;for(let T=0;T<x;++T){const R=T*y-b.left;for(let _=0;_<m;++_){let M=Number.MIN_SAFE_INTEGER,z=A<0?0:A,B=R<0?0:R;for(let V=0;V<v;++V){const G=A+V*C;if(G>=0&&G<p)for(let j=0;j<k;++j){const H=R+j*I;if(H>=0&&H<f){const at=c[D][G][H][_]+h[V][j][_];at>M&&(M=at,z=G,B=H)}}}N[D][z][B][_]+=S[D][E][T][_]}}}return{dataId:l.write(hc(N,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u0(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s;Xt(r,"sum");let a;r.dtype==="bool"?a=Yu({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):a=xa({inputs:{x:r},backend:n});const u=a.shape.length,l=ve(i,a.shape),c=Sn(l,u);let h=l,d=a;c!=null&&(d=Nr({inputs:{x:a},backend:n,attrs:{perm:c}}),h=On(h.length,u)),Rs("sum",h,d.shape.length);const[p,f]=xs(d.shape,h),m=Gr(d.dtype,"int32");let g=Zw(n,p,m);const x=xt(f),b=n.data.get(g.dataId).values,w=n.data.get(d.dataId).values;for(let y=0;y<b.length;++y){const v=y*x;let k=0;for(let C=0;C<x;++C)k+=w[v+C];b[y]=k}if(o){const y=Mn(g.shape,l),v=g;g=an({inputs:{x:g},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(v)}return n.disposeIntermediateTensorInfo(a),c!=null&&n.disposeIntermediateTensorInfo(d),g}const OUt={kernelName:Xy,backendName:"cpu",kernelFunc:u0};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LUt(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,i=t,{allDims:o,summedDims:a,idDims:u}=tD(r,i.length);nD(o.length,u,i);const{path:l,steps:c}=sD(a,u),h=c.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:x,expandDims:b}=eD(p,u[g]);let w;rD(x)?w=i[g]:(w=Nr({inputs:{x:i[g]},backend:n,attrs:{perm:x}}),f.push(w));const y=w.shape.slice();for(let v=0;v<b.length;++v)y.splice(b[v],0,1);We(w.shape,y)||(w=an({inputs:{x:w},backend:n,attrs:{shape:y}}),f.push(w)),d===null?d=w:(d=Jw({inputs:{a:w,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=u0({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const zUt={kernelName:ZW,backendName:"cpu",kernelFunc:LUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BUt(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;Xt([s,r],"eluGrad");const i=new Float32Array(xt(r.shape)),o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values;for(let u=0;u<o.length;++u){const l=o[u];l>=1?i[u]=a[u]:i[u]=a[u]*(l+1)}return n.makeTensorInfo(r.shape,"float32",i)}const PUt={kernelName:ZS,backendName:"cpu",kernelFunc:BUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WUt=qE,VUt=jE,UUt=KE,GUt=XE,HUt=YE,qUt=ZE,jUt=qe(Gm,e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+WUt*n);return t*(1-((((qUt*s+HUt)*s+GUt)*s+UUt)*s+VUt)*s*Math.exp(-n*n))}),KUt={kernelName:Gm,backendName:"cpu",kernelFunc:jUt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ev(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:i}=s,o=r.shape.length,a=r.shape.slice();let u=i;return i<0&&(L(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+i+1),a.splice(u,0,1),an({inputs:{x:r},backend:n,attrs:{shape:a}})}const XUt={kernelName:by,backendName:"cpu",kernelFunc:ev};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YUt=jn((e,t)=>e/t),QD=ws(Vm,YUt),tT={kernelName:Vm,backendName:"cpu",kernelFunc:QD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(e,t,n){const s=e.shape,r=s[0],i=s[1],o=n.data.get(e.dataId),a=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,l=[r,i],c=xt(l),h=As("float32",c),d=As("float32",c);for(let g=0;g<r;g++){const x=Lc({inputs:{x:a},backend:n,attrs:{begin:[g,0],size:[1,i]}}),b=Lc({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,i]}}),w=Xr({inputs:{real:x,imag:b},backend:n}),{real:y,imag:v}=ZUt(w,t,n),k=ja(y,v);for(let C=0;C<i;C++){const I=JE(k,C);h[g*i+C]=I.real,d[g*i+C]=I.imag}n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(w)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=Xr({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function ZUt(e,t,n){const s=xt(e.shape),r=n.data.get(e.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(JUt(s)){const a=eT(i,o,s,t,n),u=[e.shape[0],e.shape[1]];if(t){const l=n.makeTensorInfo(u,"float32",a.real),c=n.makeTensorInfo(u,"float32",a.imag),h=n.makeTensorInfo([],"float32",Ru(s,"float32")),d=xa({inputs:{x:h},backend:n}),p=tT.kernelFunc({inputs:{a:l,b:h},backend:n}),f=tT.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(p.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return a}else{const a=ja(i,o),u=QUt(a,s,t);return u5(u)}}function JUt(e){return(e&e-1)===0}function eT(e,t,n,s,r){if(n===1)return{real:e,imag:t};const i=ja(e,t),o=n/2,a=l5(i),u=a.real,l=a.imag,c=[u.length],h=r.makeTensorInfo(c,"float32",u),d=r.makeTensorInfo(c,"float32",l),p=Xr({inputs:{real:h,imag:d},backend:r}),f=c5(i),m=f.real,g=f.imag,x=[m.length],b=r.makeTensorInfo(x,"float32",m),w=r.makeTensorInfo(x,"float32",g),y=Xr({inputs:{real:b,imag:w},backend:r}),v=eT(u,l,o,s,r),k=v.real,C=v.imag,I=[k.length],$=r.makeTensorInfo(I,"float32",k),S=r.makeTensorInfo(I,"float32",C),N=Xr({inputs:{real:$,imag:S},backend:r}),F=eT(m,g,o,s,r),D=F.real,E=F.imag,A=[D.length],T=r.makeTensorInfo(A,"float32",D),R=r.makeTensorInfo(A,"float32",E),_=Xr({inputs:{real:T,imag:R},backend:r}),M=d5(n,s),z=[M.real.length],B=r.makeTensorInfo(z,"float32",M.real),V=r.makeTensorInfo(z,"float32",M.imag),G=Xr({inputs:{real:B,imag:V},backend:r}),j=Jw({inputs:{a:G,b:_},backend:r}),H=Rd({inputs:{a:N,b:j},backend:r}),at=ZD({inputs:{a:N,b:j},backend:r}),it=Oc({inputs:{input:H},backend:r}),ft=Oc({inputs:{input:at},backend:r}),X=Od({inputs:{input:H},backend:r}),ut=Od({inputs:{input:at},backend:r}),wt=Ld({inputs:[it,ft],backend:r,attrs:{axis:0}}),ot=Ld({inputs:[X,ut],backend:r,attrs:{axis:0}}),Et=r.data.get(wt.dataId).values,Tt=r.data.get(ot.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(at),r.disposeIntermediateTensorInfo(it),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(ft),r.disposeIntermediateTensorInfo(ut),r.disposeIntermediateTensorInfo(wt),r.disposeIntermediateTensorInfo(ot),{real:Et,imag:Tt}}function QUt(e,t,n){const s=new Float32Array(t*2);for(let r=0;r<t;r++){let i=0,o=0;for(let a=0;a<t;a++){const u=p5(r*a,t,n),l=JE(e,a);i+=l.real*u.real-l.imag*u.imag,o+=l.real*u.imag+l.imag*u.real}n&&(i/=t,o/=t),h5(s,i,o,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t5t(e){const{inputs:t,backend:n}=e,{input:s}=t,r=xt(s.shape),i=s.shape[s.shape.length-1],o=r/i,a=an({inputs:{x:s},backend:n,attrs:{shape:[o,i]}}),u=kH(a,!1,n),l=an({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}const e5t={kernelName:JS,backendName:"cpu",kernelFunc:t5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nT(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:i}=n,o=i||Dm(r),a=Hn(o,xt(s));return s5t(a,r,o),t.makeTensorInfo(s,o,a)}const n5t={kernelName:QS,backendName:"cpu",kernelFunc:nT};function s5t(e,t,n){e.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r5t={kernelName:tN,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,i=As(s.dtype,xt(s.shape)),[o,a,u,l]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<o;d++){const p=d*u*a*l;for(let f=0;f<a;f++){const m=f*(u*l);for(let g=0;g<u;g++){const x=g*l;for(let b=0;b<l;b++){const w=Math.round(u-g-1),y=p+m+x+b;let v=c[y];if(w>=0&&w<u){const k=w*l,C=p+m+k+b;v=c[C]}i[y]=v}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i5t=jn((e,t)=>Math.floor(e/t)),o5t=ws(Km,i5t,null,"int32"),a5t={kernelName:Km,backendName:"cpu",kernelFunc:o5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:o,preluActivationWeights:a}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=wH({inputs:{x:r,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(o){const g=m;if(c==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){const x=an({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Rd({inputs:{a:m,b:x},backend:n}),n.disposeIntermediateTensorInfo(x)}else m=Rd({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(c==="NCHW"&&p==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const x=an({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=tv(n,m,p,x,f),n.disposeIntermediateTensorInfo(x)}else m=tv(n,m,p,a,f);n.disposeIntermediateTensorInfo(g)}return m}const l5t={kernelName:sw,backendName:"cpu",kernelFunc:u5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:o,preluActivationWeights:a}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let m=vH({inputs:{x:r,filter:i},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(o){const g=m;m=Rd({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=tv(n,m,p,a,f),n.disposeIntermediateTensorInfo(g)}return m}const h5t={kernelName:uV,backendName:"cpu",kernelFunc:c5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d5t(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,i=xt(s.shape),o=r.shape,a=o[o.length-1],[u,l,c,h]=_E(s,r);if(l===0)return n.makeTensorInfo(u,s.dtype,[]);const d=n.data.get(r.dataId).values,p=n.bufferSync(s),f=D8(d,p,s.dtype,l,a,c,h,s.shape,i);return n.makeTensorInfo(u,s.dtype,f.values)}const p5t={kernelName:JW,backendName:"cpu",kernelFunc:d5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f5t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:i}=t,{axis:o,batchDims:a}=s;Xt([r,i],"gatherV2");const u=ve(o,r.shape)[0],l=n.data.get(i.dataId).values,c=r.shape[u];for(let y=0;y<l.length;++y){const v=l[y];L(v<=c-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${c-1}]`)}let h=a;a==null&&(h=0);const d=xt(i.shape),p=aD(r,i,u,h),f=an({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=an({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=n.bufferSync(m),b=n.bufferSync(f),w=T8(b,x,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,w.dtype,w.values)}const m5t={kernelName:wy,backendName:"cpu",kernelFunc:f5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g5t(e){const{inputs:t,backend:n}=e,{input:s}=t,r=xt(s.shape),i=s.shape[s.shape.length-1],o=r/i,a=an({inputs:{x:s},backend:n,attrs:{shape:[o,i]}}),u=kH(a,!0,n),l=an({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}const x5t={kernelName:eN,backendName:"cpu",kernelFunc:g5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b5t=qe(Zm,e=>Number.isFinite(e)?1:0,"bool"),y5t={kernelName:Zm,backendName:"cpu",kernelFunc:b5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5t=qe(Jm,e=>Math.abs(e)===1/0?1:0,"bool"),v5t={kernelName:Jm,backendName:"cpu",kernelFunc:w5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5t=qe(Qm,e=>Number.isNaN(e)?1:0,"bool"),I5t={kernelName:Qm,backendName:"cpu",kernelFunc:k5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5t(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:i}=n,o=M8(s,r,i);return t.makeTensorInfo([o.length],"float32",o)}const $5t={kernelName:QW,backendName:"cpu",kernelFunc:C5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5t=qe(eg,e=>Math.log1p(e)),N5t={kernelName:eg,backendName:"cpu",kernelFunc:S5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5t=jn((e,t)=>e&&t),D5t=ws($y,E5t,null,"bool"),T5t={kernelName:$y,backendName:"cpu",kernelFunc:D5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A5t=qe(Sy,e=>e?0:1,"bool"),F5t={kernelName:Sy,backendName:"cpu",kernelFunc:A5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R5t=jn((e,t)=>e||t),_5t=ws(Ny,R5t,null,"bool"),M5t={kernelName:Ny,backendName:"cpu",kernelFunc:_5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O5t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:i,bias:o,alpha:a,beta:u}=s;Xt(r,"LRN");const l=r.shape[3],c=l-1,h=n.data.get(r.dataId).values,d=xt(r.shape),p=new Float32Array(d);function f(m){const g=m%l;let x=m-g+Math.max(0,g-i);const b=m-g+Math.min(g+i,c);let w=0;for(;x<=b;x++){const y=h[x];w+=y*y}return w}for(let m=0;m<d;m++){const g=f(m),x=h[m]*Math.pow(o+a*g,-u);p[m]=x}return n.makeTensorInfo(r.shape,r.dtype,p)}const L5t={kernelName:Ey,backendName:"cpu",kernelFunc:O5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z5t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:i,dy:o}=t,{depthRadius:a,bias:u,alpha:l,beta:c}=s;Xt(o,"LRNGrad");const h=xt(o.shape),d=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(h),x=h;for(let b=0;b<x;b++){const w=b%d,y=b-w+Math.max(0,w-a),v=b-w+Math.min(d,w+a+1);let k=0;for(let C=y;C<v;C++)k+=Math.pow(f[C],2);k=l*k+u;for(let C=y;C<v;C++){let I=-2*l*c*f[C]*m[b]/k;b===C&&(I+=Math.pow(k,-c)),I*=p[b],g[C]+=I}}return n.makeTensorInfo(o.shape,r.dtype,g)}const B5t={kernelName:sN,backendName:"cpu",kernelFunc:z5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:i,keepDims:o}=s,a=n;let u=r.shape;const l=u.length,c=ve(i,u);let h=c;const d=Sn(h,l);let p=a.data.get(r.dataId).values;if(d!=null){const y=new Array(l);for(let v=0;v<y.length;v++)y[v]=u[d[v]];p=XD(p,u,r.dtype,d,y),h=On(h.length,l),u=y}Xt(r,"max"),Rs("max",h,l);const[f,m]=xs(u,h),g=xt(m),x=L8(p,g,f,r.dtype),b=a.write(x,f,r.dtype);let w=f;return o&&(w=Mn(f,c)),{dataId:b,shape:w,dtype:r.dtype}}const P5t={kernelName:Dy,backendName:"cpu",kernelFunc:IH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W5t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;Xt(r,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=s,l=1;L(Gs(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=Oi(r.shape,i,o,l,a,u);let h;if(c.filterWidth===1&&c.filterHeight===1&&We(c.inShape,c.outShape))h=xa({inputs:{x:r},backend:n});else{const d=n.data.get(r.dataId).values,p=ee(r.shape),f=JD(d,r.shape,r.dtype,p,c,"max");h=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}const V5t={kernelName:Ty,backendName:"cpu",kernelFunc:W5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U5t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=s;Xt(r,"maxPool3d");const c=Va(r.shape,i,o,1,a,u,l),h=n.data.get(r.dataId).values,d=yH(h,r.shape,r.dtype,ee(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}const G5t={kernelName:Ay,backendName:"cpu",kernelFunc:U5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H5t(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,{filterSize:o,strides:a,pad:u,dimRoundingMode:l}=s;Xt([r,i],"maxPool3DGrad");const c=Va(i.shape,o,a,1,u,l),h=n.bufferSync(i),d=RVt(h,c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,x=c.dilationHeight,b=c.dilationWidth,w=c.effectiveFilterDepth,y=c.effectiveFilterHeight,v=c.effectiveFilterWidth,k=w-1-c.padInfo.front,C=v-1-c.padInfo.left,I=y-1-c.padInfo.top,$=ke(i.shape,"float32"),S=n.bufferSync(r);for(let N=0;N<c.batchSize;++N)for(let F=0;F<c.inChannels;++F)for(let D=0;D<c.inDepth;++D)for(let E=0;E<c.inHeight;++E)for(let A=0;A<c.inWidth;++A){const T=D-k,R=E-I,_=A-C;let M=0;for(let z=0;z<w;z+=g){const B=(T+z)/p;if(!(B<0||B>=c.outDepth||Math.floor(B)!==B))for(let V=0;V<y;V+=x){const G=(R+V)/f;if(!(G<0||G>=c.outHeight||Math.floor(G)!==G))for(let j=0;j<v;j+=b){const H=(_+j)/m;if(H<0||H>=c.outWidth||Math.floor(H)!==H)continue;const at=w*y*v-1-d.get(N,B,G,H,F),it=z*y*v+V*v+j,ft=at===it?1:0;if(ft===0)continue;const X=S.get(N,B,G,H,F);M+=X*ft}}}$.set(M,N,D,E,A,F)}return n.makeTensorInfo($.shape,$.dtype,$.values)}const q5t={kernelName:iN,backendName:"cpu",kernelFunc:H5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j5t(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i,output:o}=t,a=i;Xt([i,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,d=Oi(a.shape,u,l,1,c,h),p=n.data.get(a.dataId).values,f=ke(d.outShape,a.dtype,bH(p,a.shape,a.dtype,d).values),m=d.strideHeight,g=d.strideWidth,x=d.dilationHeight,b=d.dilationWidth,w=d.effectiveFilterHeight,y=d.effectiveFilterWidth,v=y-1-d.padInfo.left,k=w-1-d.padInfo.top,C=ke(a.shape,"float32"),I=n.data.get(r.dataId).values,$=ke(r.shape,"float32",I);for(let S=0;S<d.batchSize;++S)for(let N=0;N<d.inChannels;++N)for(let F=0;F<d.inHeight;++F)for(let D=0;D<d.inWidth;++D){const E=F-k,A=D-v;let T=0;for(let R=0;R<w;R+=x){const _=(E+R)/m;if(!(_<0||_>=d.outHeight||Math.floor(_)!==_))for(let M=0;M<y;M+=b){const z=(A+M)/g;if(z<0||z>=d.outWidth||Math.floor(z)!==z)continue;const B=w*y-1-f.get(S,_,z,N),V=R*y+M,G=B===V?1:0;if(G===0)continue;const j=$.get(S,_,z,N);T+=j*G}}C.set(T,S,F,D,N)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const K5t={kernelName:rN,backendName:"cpu",kernelFunc:j5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X5t(e,t,n,s,r){const i=ee(t),o=JD(e,t,n,i,r,"max"),a=bH(e,t,n,r,!0,s);return[o.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5t={kernelName:tV,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:i,pad:o,includeBatchInIndex:a}=t,u=n;Xt(s,"MaxPoolWithArgmax");const l=u.data.get(s.dataId).values,c=Oi(s.shape,r,i,[1,1],o),[h,d]=X5t(l,s.shape,s.dtype,a,c),p=u.write(h,c.outShape,s.dtype),f=u.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z5t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s,a=ve(i,r.shape),l=xs(r.shape,a)[1],c=xt(l),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=Yu({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});h.push(p);const f=QD({inputs:{a:p,b:d},backend:n});h.push(f);const m=u0({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:o}});return h.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}const J5t={kernelName:Fy,backendName:"cpu",kernelFunc:Z5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s;Xt(r,"min");const a=ve(i,r.shape);let u=a;const l=Sn(u,r.shape.length);let c=r;l!=null&&(c=Nr({inputs:{x:r},backend:n,attrs:{perm:l}}),u=On(u.length,r.shape.length)),Rs("min",u,c.shape.length);const[h,d]=xs(c.shape,u),p=xt(d),f=Vs(xt(h),c.dtype),m=n.data.get(c.dataId).values;for(let x=0;x<f.length;++x){const b=x*p;let w=m[b];for(let y=0;y<p;++y){const v=m[b+y];(Number.isNaN(v)||v<w)&&(w=v)}f[x]=w}l!=null&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(o){const x=Mn(h,a),b=an({inputs:{x:g},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(g),b}return g}const t6t={kernelName:Ry,backendName:"cpu",kernelFunc:Q5t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e6t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,mode:o}=s;Xt(r,"mirrorPad");const a=i.map((w,y)=>w[0]+r.shape[y]+w[1]),u=i.map(w=>w[0]),l=i.map((w,y)=>w[0]+r.shape[y]),c=o==="reflect"?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=ee(r.shape),f=xt(a),m=a.length,g=ee(a),x=As(r.dtype,f);for(let w=0;w<f;w++){let y=hd(w,m,g);for(let k=0;k<m;k++)y[k]<u[k]?y[k]=u[k]*2-y[k]-c:y[k]>=l[k]&&(y[k]=(l[k]-1)*2-y[k]+c);y=y.map((k,C)=>k-u[C]);const v=sa(y,d,p);x[w]=h[v]}return{dataId:n.write(x,a,r.dtype),shape:a,dtype:r.dtype}}const n6t={kernelName:_y,backendName:"cpu",kernelFunc:e6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6t=jn((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),r6t=ws(rg,s6t),i6t={kernelName:rg,backendName:"cpu",kernelFunc:r6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:i}=s,o=r.shape.length;let a=i;if(a===-1&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const u=ve([a],r.shape),l=IH({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Mn(l.shape,u),h=an({inputs:{x:l},backend:n,attrs:{shape:c}}),d=ZD({inputs:{a:r,b:h},backend:n}),p=S8({inputs:{x:d},backend:n}),f=u0({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=an({inputs:{x:f},backend:n,attrs:{shape:c}}),g=QD({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const o6t={kernelName:Jy,backendName:"cpu",kernelFunc:CH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a6t(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:i,seed:o,normalized:a}=s;Xt(r,"multinomial");const u=a?r:CH({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,i],p=Vs(xt(d),"int32");for(let f=0;f<l;++f){const m=f*c,g=new Float32Array(c-1);g[0]=h[m];for(let w=1;w<g.length;++w)g[w]=g[w-1]+h[m+w];const x=bE.alea(o.toString()),b=f*i;for(let w=0;w<i;++w){const y=x();p[b+w]=g.length;for(let v=0;v<g.length;v++)if(y<g[v]){p[b+w]=v;break}}}return a||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}const u6t={kernelName:eV,backendName:"cpu",kernelFunc:a6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6t=EE;function c6t(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=s;Xt(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=l6t(l,c,o,a,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const h6t={kernelName:oN,backendName:"cpu",kernelFunc:c6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6t=DE;function p6t(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=s;Xt(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=d6t(c,h,o,a,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const f6t={kernelName:aN,backendName:"cpu",kernelFunc:p6t};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m6t=TE;function g6t(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=s;Xt(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=o,p=a,f=u,m=l,{selectedIndices:g,selectedScores:x}=m6t(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const x6t={kernelName:uN,backendName:"cpu",kernelFunc:g6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6t(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:i,depth:o,onValue:a,offValue:u}=s;Xt(r,"oneHot");const l=xt(r.shape),c=new Float32Array(l*o);c.fill(u);const h=n.data.get(r.dataId).values;for(let d=0;d<l;++d)h[d]>=0&&h[d]<o&&(c[d*o+h[d]]=a);return n.makeTensorInfo([...r.shape,o],i,c)}const y6t={kernelName:zy,backendName:"cpu",kernelFunc:b6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nv(e){const{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Oc({inputs:{input:s},backend:n}),i=nv({inputs:{x:r},backend:n}),o=Od({inputs:{input:s},backend:n}),a=nv({inputs:{x:o},backend:n}),u=Xr({inputs:{real:i,imag:a},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),u}else return nT({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const w6t={kernelName:ew,backendName:"cpu",kernelFunc:nv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $H(e){const{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Oc({inputs:{input:s},backend:n}),i=$H({inputs:{x:r},backend:n}),o=Od({inputs:{input:s},backend:n}),a=nv({inputs:{x:o},backend:n}),u=Xr({inputs:{real:i,imag:a},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),u}else return nT({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const v6t={kernelName:Ly,backendName:"cpu",kernelFunc:$H};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return ev({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const i=t[0].shape,o=t[0].dtype;t.forEach(c=>{Fi(i,c.shape,"All tensors passed to stack must have matching shapes"),L(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=t.map(c=>{const h=ev({inputs:{input:c},backend:n,attrs:{dim:r}});return a.push(h),h}),l=Ld({inputs:u,backend:n,attrs:{axis:r}});return a.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}const k6t={kernelName:By,backendName:"cpu",kernelFunc:SH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I6t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,constantValue:o}=s;Xt(r,"pad");const a=i.map((b,w)=>b[0]+r.shape[w]+b[1]),u=i.map(b=>b[0]),l=n.data.get(r.dataId).values,c=xt(r.shape),h=r.shape.length,d=ee(r.shape),p=xt(a),f=a.length,m=ee(a),g=As(r.dtype,p);o!==0&&g.fill(o);for(let b=0;b<c;b++){const y=hd(b,h,d).map((k,C)=>k+u[C]),v=sa(y,f,m);g[v]=l[b]}return{dataId:n.write(g,a,r.dtype),shape:a,dtype:r.dtype}}const NH={kernelName:Py,backendName:"cpu",kernelFunc:I6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C6t=jn((e,t)=>Math.pow(e,t)),$6t=ws(og,C6t),S6t={kernelName:og,backendName:"cpu",kernelFunc:$6t};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N6t(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:o}=t,a=r.map(g=>n.data.get(g.dataId).values),u=r.map(g=>g.shape),l=n.data.get(i.dataId).values,c=n.data.get(o.dataId).values,[h,d,p]=G8(a,u,l,i.shape,i.dtype,c,o.shape),f=h.map(g=>n.makeTensorInfo([g.length],"int32",g)),m=n.makeTensorInfo(p,i.dtype,d);return f.concat([m])}const E6t={kernelName:nV,backendName:"cpu",kernelFunc:N6t};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D6t(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:i}=t,o=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,[l,c]=q8(o,s.shape,s.dtype,a,r.shape,u,i.shape),h=n.makeTensorInfo([l.length],"int32",l),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const T6t={kernelName:sV,backendName:"cpu",kernelFunc:D6t};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6t(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:i,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:u}=s,l=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,d=a.map(g=>n.data.get(g.dataId).values),p=a.map(g=>g.shape),[f,m]=X8(l,r.shape,c,i.shape,i.dtype,h,o.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,m)}const F6t={kernelName:rV,backendName:"cpu",kernelFunc:A6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R6t(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:i,step:o}=n,a=Y8(s,r,o,i);return t.makeTensorInfo([a.length],i,a)}const _6t={kernelName:lN,backendName:"cpu",kernelFunc:R6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M6t=qe(ag,e=>1/e),O6t={kernelName:ag,backendName:"cpu",kernelFunc:M6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L6t(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:o,size:a}=s;Xt(r,"resizeBilinear");const u=ee(r.shape),[l,c]=a,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(xt([h,l,c,f])),x=[i&&l>1?d-1:d,i&&c>1?p-1:p],b=[i&&l>1?l-1:l,i&&c>1?c-1:c];let w=0;const y=x[0]/b[0],v=x[1]/b[1];for(let k=0;k<h;k++)for(let C=0;C<l;C++){let I;o?I=y*(C+.5)-.5:I=y*C;const $=Math.max(0,Math.floor(I)),S=I-$,N=Math.min(d-1,Math.ceil(I)),F=k*u[0]+$*u[1],D=k*u[0]+N*u[1];for(let E=0;E<c;E++){let A;o?A=v*(E+.5)-.5:A=v*E;const T=Math.max(0,Math.floor(A)),R=A-T,_=Math.min(p-1,Math.ceil(A)),M=F+T*u[2],z=D+T*u[2],B=F+_*u[2],V=D+_*u[2];for(let G=0;G<f;G++){const j=m[M+G],H=m[z+G],at=m[B+G],it=m[V+G],ft=j+(at-j)*R,X=H+(it-H)*R,ut=ft+(X-ft)*S;g[w++]=ut}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}const z6t={kernelName:Hy,backendName:"cpu",kernelFunc:L6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B6t(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:o}=s;Xt([i,r],"resizeBilinearGrad");const a=ee(r.shape),[u,l,c,h]=r.shape,[,d,p]=i.shape,f=new Float32Array(u*l*c*h),m=[o&&d>1?l-1:l,o&&p>1?c-1:c],g=[o&&d>1?d-1:d,o&&p>1?p-1:p],x=m[0]/g[0],b=m[1]/g[1],w=n.data.get(i.dataId).values;let y=0;for(let v=0;v<u;v++){const k=v*a[0];for(let C=0;C<d;C++){const I=C*x,$=Math.floor(I),S=Math.min(Math.ceil(I),l-1),N=k+$*a[1],F=k+S*a[1],D=I-$,E=1-D;for(let A=0;A<p;A++){const T=A*b,R=Math.floor(T),_=Math.min(Math.ceil(T),c-1),M=T-R,z=1-M,B=N+R*a[2],V=N+_*a[2],G=F+R*a[2],j=F+_*a[2],H=E*z,at=E*M,it=D*z,ft=D*M;for(let X=0;X<h;X++){const ut=w[y++];f[B+X]+=ut*H,f[V+X]+=ut*at,f[G+X]+=ut*it,f[j+X]+=ut*ft}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}const P6t={kernelName:dN,backendName:"cpu",kernelFunc:B6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W6t(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:o,size:a}=s;Xt(r,"resizeNearestNeighbor");const u=ee(r.shape),[l,c]=a,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*l*c*f),x=[i&&l>1?d-1:d,i&&c>1?p-1:p],b=[i&&l>1?l-1:l,i&&c>1?c-1:c],w=x[0]/b[0],y=x[1]/b[1];let v=0;for(let k=0;k<h;k++){const C=k*u[0];for(let I=0;I<l;I++){const $=o?w*(I+.5):w*I;let S=Math.min(d-1,i?Math.round($):Math.floor($));o&&(S=Math.max(0,S));const N=C+S*u[1];for(let F=0;F<c;F++){const D=o?y*(F+.5):y*F;let E=Math.min(p-1,i?Math.round(D):Math.floor(D));o&&(E=Math.max(0,E));const A=N+E*u[2];for(let T=0;T<f;T++){const R=m[A+T];g[v++]=R}}}}return n.makeTensorInfo([h,l,c,f],r.dtype,g)}const V6t={kernelName:Gy,backendName:"cpu",kernelFunc:W6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6t(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:o}=s;Xt([i,r],"resizeNearestNeighborGrad");const a=ee(r.shape),u=ee(i.shape),[l,c,h,d]=r.shape,[,p,f]=i.shape,m=new Float32Array(l*c*h*d),g=n.data.get(i.dataId).values,x=[o&&p>1?c-1:c,o&&f>1?h-1:h],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],w=x[0]/b[0],y=x[1]/b[1],v=1/w,k=1/y,C=Math.ceil(v)*2+2,I=Math.ceil(k)*2+2;for(let $=0;$<l;$++){const S=$*a[0];for(let N=0;N<c;N++){const F=S+N*a[1],D=Math.floor(N*v),E=Math.floor(D-C/2);for(let A=0;A<h;A++){const T=F+A*a[2],R=Math.floor(A*k),_=Math.floor(R-I/2);for(let M=0;M<d;M++){let z=0;for(let B=0;B<C;B++){const V=B+E;if(V<0||V>=p)continue;const G=S+V*u[1],j=V*w,H=Math.min(c-1,o?Math.round(j):Math.floor(j));if(N===H)for(let at=0;at<I;at++){const it=at+_;if(it<0||it>=f)continue;const ft=G+it*u[2],X=it*y,ut=Math.min(h-1,o?Math.round(X):Math.floor(X));A===ut&&(z+=g[ft+M])}}m[T+M]=z}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}const G6t={kernelName:hN,backendName:"cpu",kernelFunc:U6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H6t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:i}=s;Xt(r,"reverse");const o=r.shape.length,a=ve(i,r.shape);if(o===0)return xa({inputs:{x:r},backend:n});const u=new Us(r.shape,r.dtype),l=n.bufferSync(r);for(let c=0;c<u.size;c++){const h=u.indexToLoc(c),d=h.slice();a.forEach(p=>d[p]=r.shape[p]-1-d[p]),u.set(l.get(...d),...h)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}const q6t={kernelName:qy,backendName:"cpu",kernelFunc:H6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j6t={kernelName:$N,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:i,center:o}=t,a=n,u=As(s.dtype,xt(s.shape)),[l,c,h,d]=s.shape,[p,f]=UE(o,c,h),m=255,g=Math.sin(r),x=Math.cos(r),b=a.data.get(s.dataId).values;for(let y=0;y<l;y++){const v=y*h*c*d;for(let k=0;k<c;k++){const C=k*(h*d);for(let I=0;I<h;I++){const $=I*d;for(let S=0;S<d;S++){const N=[l,k,I,S],F=N[2],D=N[1];let E=(F-p)*x-(D-f)*g,A=(F-p)*g+(D-f)*x;E=Math.round(E+p),A=Math.round(A+f);let T=i;if(typeof i!="number"&&(S===3?T=m:T=i[S]),E>=0&&E<h&&A>=0&&A<c){const _=A*(h*d),M=E*d,z=v+_+M+S;T=b[z]}const R=v+C+$+S;u[R]=T}}}}return{dataId:a.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6t=qe(cg,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),X6t={kernelName:cg,backendName:"cpu",kernelFunc:K6t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6t(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:i}=t,{shape:o}=s,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Wg(i,r,o),d=!0,p=n.bufferSync(r),f=n.bufferSync(i),m=Md(p,f,o,h,l,u,a,c,0,d);return n.makeTensorInfo(o,m.dtype,m.values)}const Z6t={kernelName:iV,backendName:"cpu",kernelFunc:Y6t};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J6t(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function Q6t(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}function tGt(e,t,n,s,r,i){const o=Hn("int32",n*r);for(let a=0;a<n;++a){const u=e.slice(a*s,(a+1)*s),l=a*r;for(let c=0;c<r;++c)o[l+c]=i==="left"?J6t(u,t[c+l]):Q6t(u,t[c+l])}return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eGt(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:i}=t,{side:o}=s,a=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,l=tGt(a,u,r.shape[0],r.shape[1],i.shape[1],o);return n.makeTensorInfo(i.shape,"int32",l)}const nGt={kernelName:oV,backendName:"cpu",kernelFunc:eGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sGt(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:i}=t;Xt([s,r,i],"select");const o=s.shape.length,a=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,c=Gr(r.dtype,i.dtype),h=Vs(xt(r.shape),c);let d=0;const p=o===0||o>1||r.shape.length===1?1:xt(r.shape.slice(1));for(let f=0;f<a.length;f++)for(let m=0;m<p;m++)a[f]===1?h[d++]=u[f]:h[d++]=l[f];return n.makeTensorInfo(r.shape,c,h)}const rGt={kernelName:jy,backendName:"cpu",kernelFunc:sGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iGt=Cw,oGt=$w,aGt=qe(dg,e=>e>=0?oGt*e:iGt*(Math.exp(e)-1)),uGt={kernelName:dg,backendName:"cpu",kernelFunc:aGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lGt=qe(mg,e=>e<0?-1:e>0?1:0),cGt={kernelName:mg,backendName:"cpu",kernelFunc:lGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hGt=qe(pg,e=>Math.sin(e)),dGt={kernelName:pg,backendName:"cpu",kernelFunc:hGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pGt=qe(fg,e=>Math.sinh(e)),fGt={kernelName:fg,backendName:"cpu",kernelFunc:pGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EH=Math.log(11920928955078125e-23)+2,mGt=qe(xg,e=>{const t=e>-EH,n=e<EH,s=Math.exp(e);let r;return n?r=s:t?r=e:r=Math.log(1+s),r}),gGt={kernelName:xg,backendName:"cpu",kernelFunc:mGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xGt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,paddings:o}=s;Xt([r],"spaceToBatchND");const a=xt(i),u=[[0,0]];u.push(...o);for(let k=1+i.length;k<r.shape.length;++k)u.push([0,0]);const l=NH.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=Vg(l.shape,i,a,!1),h=Ug(c.length,i.length,!1),d=Gg(l.shape,i,a,!1),m=an({inputs:{x:l},backend:n,attrs:{shape:c}}),b=Nr({inputs:{x:m},backend:n,attrs:{perm:h}}),v=an({inputs:{x:b},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),v}const bGt={kernelName:Yy,backendName:"cpu",kernelFunc:xGt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yGt(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:i,defaultValue:o}=t;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,c=n.data.get(o.dataId).values[0],[h,d,p,f,m]=tH(a,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const wGt={kernelName:pN,backendName:"cpu",kernelFunc:yGt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vGt(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:i}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(n.data.get(r.dataId).values),a=n.data.get(s.dataId).values,u=Array.from(n.data.get(i.dataId).values),[l,c,h]=eH(a,s.shape,s.dtype,o,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const kGt={kernelName:fN,backendName:"cpu",kernelFunc:vGt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IGt(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,[l,c]=YD(o,s.shape,s.dtype,a,u,!0);return n.makeTensorInfo(c,s.dtype,l)}const CGt={kernelName:mN,backendName:"cpu",kernelFunc:IGt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Gt(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,[l,c]=YD(o,s.shape,s.dtype,a,u);return n.makeTensorInfo(c,s.dtype,l)}const SGt={kernelName:gN,backendName:"cpu",kernelFunc:$Gt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NGt(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:i,defaultValue:o}=t,{outputShape:a}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Wg(i,r,a),p=!1,f=n.bufferSync(r);let m;switch(i.dtype){case"bool":{const g=n.bufferSync(i),x=Boolean(n.data.get(o.dataId).values[0]);m=Md(f,g,a,d,c,l,u,h,x,p);break}case"float32":{const g=n.bufferSync(i),x=n.data.get(o.dataId).values[0];m=Md(f,g,a,d,c,l,u,h,x,p);break}case"int32":{const g=n.bufferSync(i),x=n.data.get(o.dataId).values[0];m=Md(f,g,a,d,c,l,u,h,x,p);break}case"string":{const g=n.bufferSync(i),x=Mu(n.data.get(o.dataId).values[0]);m=Md(f,g,a,d,c,l,u,h,x,p);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(a,m.dtype,m.values)}const EGt={kernelName:aV,backendName:"cpu",kernelFunc:NGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DGt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:i,axis:o}=s,a=ve(o,r.shape)[0],u=iD(r,i,a),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map(h=>{const d=[...c];d[a]=h;const p=Lc({inputs:{x:r},backend:n,attrs:{begin:l,size:d}});return l[a]+=h,p})}const TGt={kernelName:Zy,backendName:"cpu",kernelFunc:DGt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AGt={kernelName:xN,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;Xt(n,"square");const r=s.data.get(n.dataId).values,i=new Float32Array(r.length);for(let a=0;a<r.length;++a){const u=r[a];i[a]=u*u}return{dataId:s.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FGt=qe(Cg,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),RGt={kernelName:Cg,backendName:"cpu",kernelFunc:FGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Gt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,end:o,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;Xt(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:y}=PE(r.shape,i,o,a,u,l,c,h,d);let v;if(m)v=an({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||x){L(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const k=LE(b,w,y),C=Lc({inputs:{x:r},backend:n,attrs:{begin:b,size:k}});v=an({inputs:{x:C},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(C)}else{const k=n.bufferSync(r),C=sH(p,k,y,b);v=n.makeTensorInfo(f,C.dtype,C.values)}return v}const MGt={kernelName:bN,backendName:"cpu",kernelFunc:_Gt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OGt(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:i,leftPad:o,rightPad:a,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=rH(d,p,r,i,o,a,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const LGt={kernelName:yN,backendName:"cpu",kernelFunc:OGt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zGt(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:i,delimiter:o}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=n.data.get(i.dataId).values,u=n.data.get(o.dataId).values[0],[l,c,h]=iH(a,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const BGt={kernelName:wN,backendName:"cpu",kernelFunc:zGt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PGt(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.data.get(i.dataId).values,a=oH(o,r);return n.makeTensorInfo(i.shape,"int32",a)}const WGt={kernelName:vN,backendName:"cpu",kernelFunc:PGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VGt=qe(vg,e=>Math.tan(e)),UGt={kernelName:vg,backendName:"cpu",kernelFunc:VGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GGt=qe(kg,e=>Math.tanh(e)),HGt={kernelName:kg,backendName:"cpu",kernelFunc:GGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qGt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:i}=s;Xt(r,"tile");const o=uH(n.bufferSync(r),i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const jGt={kernelName:Ig,backendName:"cpu",kernelFunc:qGt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KGt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:i,sorted:o}=s;Xt(r,"topk");const a=n.data.get(r.dataId).values,[u,l]=cH(a,r.shape,r.dtype,i,o);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}const XGt={kernelName:kN,backendName:"cpu",kernelFunc:KGt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YGt(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:i}=t,{interpolation:o,fillMode:a,fillValue:u,outputShape:l}=n,[c,h,d,p]=r.shape,[f,m]=l??[h,d],g=[c,f,m,p],x=ee(r.shape),b=x[0],w=x[1],y=x[2],v=ee(g),k=v[0],C=v[1],I=v[2],$=As(r.dtype,xt(g));$.fill(u);const S=s.data.get(r.dataId).values,N=s.data.get(i.dataId).values;for(let D=0;D<c;++D){const E=i.shape[0]===1?N:N.subarray(D*8,D*8+8);for(let A=0;A<f;++A)for(let T=0;T<m;++T)for(let R=0;R<p;++R){let _;const M=E[6]*T+E[7]*A+1;if(M===0)continue;const z=(E[0]*T+E[1]*A+E[2])/M,B=(E[3]*T+E[4]*A+E[5])/M,V=DH(z,d,a),G=DH(B,h,a);switch(o){case"nearest":_=n8t(S,h,d,b,w,y,D,G,V,R,u);break;case"bilinear":_=s8t(S,h,d,b,w,y,D,G,V,R,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const j=D*k+A*C+T*I+R;$[j]=_}return s.makeTensorInfo(g,r.dtype,$)}return{dataId:s.write($,g,r.dtype),shape:r.shape,dtype:r.dtype}}const ZGt={kernelName:IN,backendName:"cpu",kernelFunc:YGt};function DH(e,t,n){switch(n){case"reflect":return JGt(e,t);case"wrap":return QGt(e,t);case"nearest":return e8t(e,t);case"constant":default:return t8t(e)}}function JGt(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{const s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return ic(0,n,t-1)}function QGt(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{const s=t-1;n-=t*Math.trunc(n/s)}return ic(0,n,t-1)}function t8t(e,t){return e}function e8t(e,t){return ic(0,e,t-1)}function l0(e,t,n,s,r,i,o,a,u,l,c){const h=o*s+a*r+u*i+l;return 0<=a&&a<t&&0<=u&&u<n?e[h]:c}function n8t(e,t,n,s,r,i,o,a,u,l,c){const h=Math.round(a),d=Math.round(u);return l0(e,t,n,s,r,i,o,h,d,l,c)}function s8t(e,t,n,s,r,i,o,a,u,l,c){const h=Math.floor(a),d=Math.floor(u),p=h+1,f=d+1,m=(f-u)*l0(e,t,n,s,r,i,o,h,d,l,c)+(u-d)*l0(e,t,n,s,r,i,o,h,f,l,c),g=(f-u)*l0(e,t,n,s,r,i,o,p,d,l,c)+(u-d)*l0(e,t,n,s,r,i,o,p,f,l,c);return(p-a)*m+(a-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r8t(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:i}=t;Xt(i,"unique");const o=s.data.get(i.dataId).values,{outputValues:a,outputShape:u,indices:l}=hH(o,r,i.shape,i.dtype);return[s.makeTensorInfo(u,i.dtype,a),s.makeTensorInfo([l.length],"int32",l)]}const i8t={kernelName:CN,backendName:"cpu",kernelFunc:r8t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o8t(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:i}=s;i<0&&(i+=r.shape.length);const o=r.shape.length,a=r.shape[i],u=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==i&&(u[l++]=r.shape[p]);const c=new Array(o).fill(0),h=r.shape.slice();h[i]=1;const d=new Array(a);for(let p=0;p<d.length;p++){c[i]=p;const f=Lc({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[p]=an({inputs:{x:f},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(f)}return d}const a8t={kernelName:Qy,backendName:"cpu",kernelFunc:o8t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u8t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:i}=t,{numSegments:o}=s;Xt(r,"unsortedSegmentSum");const a=r.shape.length,u=i.shape.length,l=[],c=[],h=a-u;let d=i;for(let f=0;f<h;++f){const m=ev({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<o;++f){const m=Ru(f,"int32"),g=n.makeTensorInfo([],"int32",m),x=C8({inputs:{a:g,b:d},backend:n}),b=Yu({inputs:{x},backend:n,attrs:{dtype:"float32"}}),w=Jw({inputs:{a:b,b:r},backend:n}),y=u0({inputs:{x:w},backend:n,attrs:{axis:0,keepDims:!1}});l.push(y),c.push(g),c.push(x),c.push(b),c.push(w),c.push(y)}const p=SH({inputs:l,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const l8t={kernelName:tw,backendName:"cpu",kernelFunc:u8t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c8t=[aVt,qPt,lVt,hVt,JPt,pVt,mVt,xVt,yVt,vVt,IVt,$Vt,NVt,TVt,FVt,MVt,LVt,BVt,WVt,iVt,UVt,HVt,jVt,XVt,YPt,tWt,ZVt,jPt,JVt,tUt,eUt,sUt,iUt,aUt,lUt,hUt,pUt,mUt,xUt,yUt,vUt,IUt,$Ut,SUt,EUt,TUt,FUt,RUt,_Ut,MUt,zUt,JWt,PUt,eWt,KUt,nWt,XUt,rWt,e5t,n5t,r5t,oWt,a5t,l5t,h5t,p5t,m5t,uWt,cWt,KPt,x5t,QVt,y5t,v5t,I5t,QWt,dWt,fWt,$5t,gWt,N5t,T5t,F5t,M5t,L5t,B5t,P5t,bWt,V5t,G5t,q5t,K5t,Y5t,J5t,t6t,wWt,n6t,i6t,u6t,kWt,CWt,h6t,f6t,x6t,SWt,y6t,v6t,k6t,NH,S6t,eVt,DWt,E6t,T6t,F6t,_6t,XPt,tT,O6t,nVt,sVt,rVt,z6t,P6t,V6t,G6t,q6t,j6t,X6t,LWt,Z6t,nGt,rGt,uGt,BWt,cGt,dGt,fGt,PWt,o6t,gGt,bGt,wGt,kGt,CGt,SGt,EGt,TGt,UWt,AGt,HWt,RGt,MGt,LGt,BGt,WGt,XWt,OUt,UGt,HGt,jGt,XGt,ZGt,NWt,i8t,a8t,l8t,w6t];for(const e of c8t)dV(e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zc={},sv={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function h8t(e,t){zc[e]=t}function Ro(e,t){if(!(e in zc)||t!=null){const s=p8t(e,t);if(s!==null)zc[e]=s;else return console.log("Could not get context for WebGL version",e),null}const n=zc[e];return n==null||n.isContextLost()?(delete zc[e],Ro(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),zc[e])}function d8t(e){if(typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function p8t(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=t??d8t(e);return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete zc[e]},!1),pt().getBool("SOFTWARE_WEBGL_ENABLED")&&(sv.failIfMajorPerformanceCaveat=!1),e===1?n.getContext("webgl",sv)||n.getContext("experimental-webgl",sv):n.getContext("webgl2",sv)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var c0;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(c0||(c0={}));var mi;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(mi||(mi={}));var _s;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(_s||(_s={}));function h0(e,t){return[t,e]}function f8t(e,t){return e*t}function rv(e){const t=xt(e),n=Math.ceil(t/4);return $S(n)}function zd(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function m8t(e,t){const[n,s]=zd(e,t);return n*s*4}function sT(e,t){const n=e;let s,r,i,o,a,u,l,c,h,d;return pt().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,i=n.RGBA16F,o=n.RGBA32F,a=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(s=e.RGBA,r=e.RGBA,i=e.RGBA,o=n.RGBA,a=e.RGBA,l=4,c=4,h=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gt(e,t){const n=t();return pt().getBool("DEBUG")&&g8t(e),n}function g8t(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+w8t(e,t))}const x8t=596e-10,b8t=65504;function y8t(e){return!!(pt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||x8t<Math.abs(e)&&Math.abs(e)<b8t)}function w8t(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function iv(e,t){return Xa(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function v8t(e,t){const n=Xa(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Gt(e,()=>e.shaderSource(n,t)),Gt(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function k8t(e,t){const n=Xa(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Gt(e,()=>e.shaderSource(n,t)),Gt(e,()=>e.compileShader(n)),pt().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw TH(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const I8t=/ERROR: [0-9]+:([0-9]+):/g;function TH(e,t){const n=I8t.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}const s=+n[1],r=e.split(`
`),i=r.length.toString().length+2,o=r.map((h,d)=>cd((d+1).toString(),i)+h);let a=0;for(let h=0;h<o.length;h++)a=Math.max(o[h].length,a);const u=o.slice(0,s-1),l=o.slice(s-1,s),c=o.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${cd(l[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function C8t(e){return Xa(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function $8t(e,t){if(Gt(e,()=>e.linkProgram(t)),!pt().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function rT(e,t){if(Gt(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function S8t(e,t){const n=Xa(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Gt(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Gt(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function N8t(e,t){const n=Xa(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return Gt(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),Gt(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function E8t(e){return Xa(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function D8t(e,t){const n=pt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){const s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function T8t(e){return Xa(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function AH(e,t,n,s,r,i,o){const a=e.getAttribLocation(t,n);return a===-1?!1:(Gt(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),Gt(e,()=>e.vertexAttribPointer(a,r,e.FLOAT,!1,i,o)),Gt(e,()=>e.enableVertexAttribArray(a)),!0)}function A8t(e,t,n){O8t(e,n),Gt(e,()=>e.activeTexture(e.TEXTURE0+n)),Gt(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function F8t(e,t,n){return Xa(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function R8t(e,t,n){return e.getUniformLocation(t,n)}function _8t(e,t,n,s){Gt(e,()=>A8t(e,t,s)),Gt(e,()=>e.uniform1i(n,s))}function iT(e,t,n){Gt(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),Gt(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function FH(e,t){Gt(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),Gt(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function ov(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+M8t(e,t))}function M8t(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Xa(e,t,n){const s=Gt(e,()=>t());if(s==null)throw new Error(n);return s}function O8t(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){const r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Bd(e,t=2){return xt(e.slice(0,e.length-t))}function Pd(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function av(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Bd(e),...Pd(e)]),t}function L8t(e,t=!1){let n=pt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=pt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&pt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n=n*2,s=s*2,e=e.map((a,u)=>u>=e.length-2?IS(e[u]):e[u]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=Au(e).newShape);let r=xt(e),i=null;e.length<=1&&r<=n?i=[1,r]:e.length===2&&e[0]<=n&&e[1]<=n?i=e:e.length===3&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:e.length===3&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const o=i!=null&&Math.max(...i)>s&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(i==null||o)if(t){const a=Bd(e);let u=2,l=2;e.length&&([u,l]=Pd(e)),r=a*(u/2)*(l/2),i=$S(r).map(c=>c*2)}else i=$S(r);return i}function uv(e){return e%2===0}function lv(e,t){if(e=e.slice(-2),t=t.slice(-2),We(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||uv(n)&&uv(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&uv(e[0])&&uv(t[0])}let oT,aT;function z8t(e){if(oT==null){const t=Ro(e);oT=t.getParameter(t.MAX_TEXTURE_SIZE)}return oT}function B8t(e){if(aT==null){const t=Ro(e);aT=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,aT)}function P8t(e){if(e===0)return 0;let t;const n=Ro(e);return qi(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:qi(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function qi(e,t){return e.getExtension(t)!=null}function RH(e){try{if(Ro(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function W8t(e){if(e===0)return!1;const t=Ro(e);if(e===1){if(!qi(t,"OES_texture_float"))return!1}else if(!qi(t,"EXT_color_buffer_float"))return!1;return uT(t)}function V8t(e){if(e===0)return!1;const t=Ro(e);if(e===1){if(!qi(t,"OES_texture_float")||!qi(t,"WEBGL_color_buffer_float"))return!1}else{if(qi(t,"EXT_color_buffer_float"))return uT(t);const s="EXT_color_buffer_half_float";if(qi(t,s)){const r=t.getExtension(s);return U8t(t,r)}return!1}return uT(t)}function uT(e){const t=sT(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);const s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(i),o}function U8t(e,t){const n=sT(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);const r=1,i=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,i,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(o),a}function G8t(e){return e!==2?!1:Ro(e).fenceSync!=null}function d0(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&L(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qt=pt();Qt.registerFlag("HAS_WEBGL",()=>Qt.getNumber("WEBGL_VERSION")>0),Qt.registerFlag("WEBGL_VERSION",()=>RH(2)?2:RH(1)?1:0),Qt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Qt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Qt.get("WEBGL_VERSION")===2),Qt.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Qt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Qt.registerFlag("WEBGL_PACK",()=>Qt.getBool("HAS_WEBGL")),Qt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Qt.getBool("WEBGL_PACK")),Qt.registerFlag("WEBGL_PACK_CLIP",()=>Qt.getBool("WEBGL_PACK")),Qt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Qt.getBool("WEBGL_PACK")),Qt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Qt.getBool("WEBGL_PACK")),Qt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Qt.getBool("WEBGL_PACK")),Qt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Qt.getBool("WEBGL_PACK")),Qt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Qt.getBool("WEBGL_PACK")),Qt.registerFlag("WEBGL_PACK_REDUCE",()=>Qt.getBool("WEBGL_PACK")),Qt.registerFlag("WEBGL_LAZILY_UNPACK",()=>Qt.getBool("WEBGL_PACK")),Qt.registerFlag("WEBGL_CONV_IM2COL",()=>Qt.getBool("WEBGL_PACK")),Qt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>z8t(Qt.getNumber("WEBGL_VERSION"))),Qt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>B8t(Qt.getNumber("WEBGL_VERSION"))),Qt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=Qt.getNumber("WEBGL_VERSION");return e===0?0:P8t(e)}),Qt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Qt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!RV()),Qt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>W8t(Qt.getNumber("WEBGL_VERSION"))),Qt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Qt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Qt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Qt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>V8t(Qt.getNumber("WEBGL_VERSION"))),Qt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>G8t(Qt.getNumber("WEBGL_VERSION"))),Qt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Qt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Qt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),Qt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>RV()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),Qt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),Qt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),Qt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),Qt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),Qt.registerFlag("WEBGL_EXP_CONV",()=>!1),Qt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Qt.getBool("IS_TEST")),Qt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),Qt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),Qt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),Qt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ar(){let e,t,n,s,r,i,o,a,u,l;return pt().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",i="outputColor",o="out vec4 outputColor;",a=pt().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",i="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:i,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:u,defineRound:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bc(e,t,n="index"){const s=ee(t);return s.map((r,i)=>{const o=`int ${e[i]} = ${n} / ${r}`,a=i===s.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${r}`:`index -= ${e[i]} * ${r}`;return`${o}; ${a};`}).join("")}function cv(e,t,n="index"){const s=ee(t);return s.map((r,i)=>{const o=`int ${e[i]} = ${n} / outShapeStrides[${i}]`,a=i===s.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * outShapeStrides[${i}]`:`index -= ${e[i]} * outShapeStrides[${i}]`;return`${o}; ${a};`}).join("")}function H8t(e,t){const n=e.length,s=e.map(i=>`${t}[${i}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let i=n-3;i>=0;--i)r[i]=`(${r[i+1]} * ${s[i+1]})`;return r}function q8t(e,t,n="index"){const s=e.map((i,o)=>o),r=H8t(s,t);return r.map((i,o)=>{const a=`int ${e[o]} = ${n} / ${r[o]}`,u=o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`;return`${a}; ${u};`}).join("")}function lT(e){const t=ee(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function cT(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const _H=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:MH}=qLt;function j8t(e,t,n){const s=[];if(e.forEach(p=>{const f=xt(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),n.enableShapeUniforms){const{uniformShape:m}=hT(n.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),i=e.map(p=>K8t(p,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),o=t.texShape,a=ar(),u=Z8t(a);let l,c,h=tHt(a);return t.isPacked?(l=X8t(t.logicalShape,o,n.enableShapeUniforms),c=Q8t(a)):(l=Y8t(t.logicalShape,o,n.enableShapeUniforms),c=J8t(a)),n.packedInputs&&(h+=rHt),[h,u,c,r,l,i,n.userCode].join(`
`)}function Wd(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return gHt(e,t);case 1:return bHt(e,t);case 2:return wHt(e,t);case 3:return kHt(e,t);case 4:return CHt(e,t);case 5:return $Ht(e);case 6:return SHt(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function OH(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return mHt(e);case 1:return xHt(e,t);case 2:return yHt(e,t);case 3:return vHt(e,t);default:return IHt(e,t)}}function K8t(e,t,n=!1,s){let r="";n?r+=OH(e,s):r+=Wd(e,s);const i=e.shapeInfo.logicalShape,o=t.logicalShape;return i.length<=o.length&&(n?r+=NHt(e,t):r+=EHt(e,t)),r}function X8t(e,t,n){switch(e.length){case 0:return LH();case 1:return iHt(e,t,n);case 2:return pHt(e,t,n);case 3:return aHt(e,t,n);default:return lHt(e,t,n)}}function Y8t(e,t,n){switch(e.length){case 0:return LH();case 1:return oHt(e,t,n);case 2:return fHt(e,t,n);case 3:return uHt(e,t,n);case 4:return cHt(e,t,n);case 5:return hHt(e,t);case 6:return dHt(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function Z8t(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function J8t(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function Q8t(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function tHt(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${eHt}
    ${nHt}
    ${sHt}
  `}const eHt=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,nHt=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,sHt=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,rHt=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function LH(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function iHt(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function oHt(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function aHt(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),i=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function uHt(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${cv(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;const s=Bc(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function lHt(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),i=r*Math.ceil(e[e.length-2]/2);let o=i,a="",u="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],a=`
      int b${l} = index / ${o};
      index -= b${l} * ${o};
    `+a,u=`b${l}, `+u;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${u});
    }
  `}function cHt(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${cv(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Bc(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function hHt(e,t){const n=Bc(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function dHt(e,t){const n=Bc(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function pHt(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(We(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function fHt(e,t,n){return We(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Pc(e){return`offset${e}`}function mHt(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=ar();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function gHt(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,i]=e.shapeInfo.texShape;if(r===1&&i===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const o=Pc(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});
      return sampleTexture(${n}, uv);
    }
  `;const[a,u]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${u}, ${o});
      return sampleTexture(${n}, uv);
    }
  `}function xHt(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,i=ar();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${n}, uv);
    }
  `;const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${i.texture2D}(${n}, uv);
    }
  `}function bHt(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Vd(e)}
      }
    `;const r=e.shapeInfo.texShape,i=r[0],o=r[1];if(o===1&&i===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const a=Pc(n);return o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);
        return sampleTexture(${n}, uv);
      }
    `:i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${a});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${i}, ${o}, index + ${a});
      return sampleTexture(${n}, uv);
    }
  `}function yHt(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,o=i[0],a=i[1],u=ar();if(i!=null&&We(n,i))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function wHt(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape;if(i!=null&&We(n,i)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=i[0],p=i[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:o,keptDims:a}=Au(n),u=o;if(u.length<n.length){const d=Ud(e,u),p=["row","col"];return`
      ${Wd(d,t)}
      float ${r}(int row, int col) {
        return ${r}(${Gd(p,a)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Vd(e)}
      }
    `;const l=i[0],c=i[1],h=Pc(s);return c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${s}, uv);
    }
  `:l===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function vHt(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(n[0]===1){const d=n.slice(1),p=[1,2],f=Ud(e,d),m=["b","row","col"];return`
        ${OH(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Gd(m,p)});
        }
      `}const a=ar();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const u=o[0],l=o[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${h}, ${c}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function kHt(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[1]*n[2],o=n[2],{newShape:a,keptDims:u}=Au(n),l=a;if(l.length<n.length){const m=Ud(e,l),g=["row","col","depth"];return`
        ${Wd(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Gd(g,u)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${o}, 1)));
        ${Vd(e)}
      }
    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===o&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Pc(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function IHt(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=ar();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;const i=e.shapeInfo.logicalShape,o=i.length,a=e.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=u[0],c=u[1],h=Math.ceil(i[o-1]/2);let d=h*Math.ceil(i[o-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<o-1;m++)p=`int b${m}, `+p,d*=i[o-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});
      return ${r.texture2D}(${n}, uv);
    }
  `}function CHt(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[3],o=n[2]*i,a=n[1]*o,{newShape:u,keptDims:l}=Au(n);if(u.length<n.length){const b=Ud(e,u),w=["row","col","depth","depth2"];return`
      ${Wd(b,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Gd(w,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${i}, 1)));
        ${Vd(e)}
      }
    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===a&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===i&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const x=Pc(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${x});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});
      return sampleTexture(${s}, uv);
    }
  `}function $Ht(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],i=t[3]*r,o=t[2]*i,a=t[1]*o,{newShape:u,keptDims:l}=Au(t);if(u.length<t.length){const m=Ud(e,u),g=["row","col","depth","depth2","depth3"];return`
      ${Wd(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Gd(g,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${i}, ${r})) +
          depth3;
        ${Vd(e)}
      }
    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;const f=Pc(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${i} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function SHt(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:i}=Au(t);if(r.length<t.length){const g=Ud(e,r),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Wd(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Gd(x,i)});
      }
    `}const o=t[5],a=t[4]*o,u=t[3]*a,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${l}, ${u}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${Vd(e)}
      }
    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===o&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;const m=Pc(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${l} + depth * ${u} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Vd(e){const t=e.name,n=xt(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function NHt(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,a=MH(e.shapeInfo.logicalShape,t.logicalShape),u=un(o),l=o-i;let c;const h=["x","y","z","w","u","v"];i===0?c="":o<2&&a.length>=1?c="coords = 0;":c=a.map(b=>`coords.${h[b+l]} = 0;`).join(`
`);let d="";o<2&&i>0?d="coords":d=e.shapeInfo.logicalShape.map((b,w)=>`coords.${h[w+l]}`).join(", ");let p="return outputValue;";const m=xt(e.shapeInfo.logicalShape)===1,x=xt(t.logicalShape)===1;if(i===1&&!m&&!x)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!x)o===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const b=i-2,w=i-1;a.indexOf(b)>-1&&a.indexOf(w)>-1?p="return vec4(outputValue.x);":a.indexOf(b)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(w)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${u} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function EHt(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,a=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&a===u&&e.shapeInfo.flatOffset==null&&We(o,i))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const l=un(u),c=MH(e.shapeInfo.logicalShape,t.logicalShape),h=u-a;let d;const p=["x","y","z","w","u","v"];a===0?d="":u<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return u<2&&a>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${r}() {
      ${l} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function un(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function hT(e,t,n){const{newShape:s,keptDims:r}=Au(t),i=t.length,o=e&&i===3&&t[0]===1,a=o?t.slice(1):s,u=!e&&i>1&&!We(t,n)&&s.length<i||o;return{useSqueezeShape:u,uniformShape:u?a:t,keptDims:r}}function Ud(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Gd(e,t){return t.map(n=>e[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DHt(e,t,n,s){const r=n.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),i=r.map(c=>c.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=j8t(r,o,t),u=k8t(e.gl,a),l=e.createProgram(u);return pt().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:i,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:i,outShapeInfo:o},zH(e,t,l))}function zH(e,t,n){const s={},r={},i={},o=[];let a,u,l,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),pt().getNumber("WEBGL_VERSION")===1&&(c=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let p=0;p<t.variableNames.length;p++){const f=t.variableNames[p];s[f]=e.getUniformLocation(n,f,d),s[`offset${f}`]=e.getUniformLocation(n,`offset${f}`,d),t.enableShapeUniforms&&(r[`${f}Shape`]=e.getUniformLocation(n,`${f}Shape`,d),i[`${f}TexShape`]=e.getUniformLocation(n,`${f}TexShape`,d))}return t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",d),l=e.getUniformLocation(n,"outShapeStrides",d),u=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((p,f)=>{o[f]=e.getUniformLocation(n,p.name,d)}),{uniformLocations:s,customUniformLocations:o,infLoc:c,nanLoc:h,inShapesLocations:r,inTexShapesLocations:i,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}}function BH(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{const r=n.logicalShape,i=t[s],o=i.shape;if(!We(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(n.isUniform&&i.isUniform)return;const a=n.texShape,u=i.isUniform?null:i.texData.texShape;if(!We(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)})}function THt(e,t,n,s,r){t.program.enableShapeUniforms||(BH(t.inShapeInfos,n),BH([t.outShapeInfo],[s]));const i=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):e.setOutputMatrixTexture(i.texture,o[0],o[1]),e.setProgram(t.webGLProgram),pt().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((u,l)=>{const c=t.program.variableNames[l],h=t.uniformLocations[c],d=t.uniformLocations[`offset${c}`],p=t.inShapesLocations[`${c}Shape`],f=t.inTexShapesLocations[`${c}TexShape`];if(p){const{uniformShape:m}=hT(t.program.packedInputs,u.shape,u.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(p,new Int32Array(m));break;case 2:e.gl.uniform2iv(p,new Int32Array(m));break;case 3:e.gl.uniform3iv(p,new Int32Array(m));break;case 4:e.gl.uniform4iv(p,new Int32Array(m));break}}if(f&&e.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),h!=null){if(u.isUniform){if(xt(u.shape)<2)e.gl.uniform1f(h,u.uniformValues[0]);else{let m=u.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(h,m)}return}u.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,u.texData.slice.flatOffset),e.setInputMatrixTexture(u.texData.texture.texture,h,l)}});const a=t.outShapeLocation;if(a)switch(s.shape.length){case 1:e.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(a,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const u=ee(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((u,l)=>{const c=t.customUniformLocations[l],h=r[l];if(u.type==="float")e.gl.uniform1fv(c,h);else if(u.type==="vec2")e.gl.uniform2fv(c,h);else if(u.type==="vec3")e.gl.uniform3fv(c,h);else if(u.type==="vec4")e.gl.uniform4fv(c,h);else if(u.type==="int")e.gl.uniform1iv(c,h);else if(u.type==="ivec2")e.gl.uniform2iv(c,h);else if(u.type==="ivec3")e.gl.uniform3iv(c,h);else if(u.type==="ivec4")e.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}),e.executeProgram()}function AHt(e,t,n){let s="";t.concat(n).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!o.isUniform){const u=o.texData.texShape,{useSqueezeShape:l,uniformShape:c,keptDims:h}=hT(e.packedInputs,o.shape,u);let d="",p="",f="";if(c.length===1&&e.packedInputs){const v=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];d=`${v[0]>1}_${v[1]>1}`}else if(c.length===2&&!e.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!e.packedInputs){const v=ee(c);f=`${v[0]===u[1]}_${v[v.length-1]===u[1]}`}const m=o.shape.length,g=c.length===2&&We(o.shape,u),x=xt(o.shape)===1,b=kd(o.shape,n.shape),w=!e.packedInputs&&m===n.shape.length&&We(u,n.texData.texShape),y=e.packedInputs||c.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${m}_${w}_${l?h:""}_${c.length}_${x}_${b}_${g}_${d}_${p}_${f}_${y}_${a}`}else{const u=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${u}_${a}`}});const r=e.userCode;let i=e.constructor.name;return i+="_"+s+"_"+r+`${pt().getNumber("WEBGL_VERSION")}`,i}function ur(e){return pt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FHt{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=c0.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ar();this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?cv(["r","c","d"],t):Bc(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RHt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=c0.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ar();this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?cv(["r","c","d"],t):Bc(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _Ht{constructor(t){this.variableNames=["A"],this.outTexUsage=mi.DOWNLOAD;const n=ar();this.outputShape=t,this.userCode=`
      ${_H}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MHt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=mi.DOWNLOAD;const n=ar();this.outputShape=t,this.userCode=`
      ${_H}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OHt={R:0,G:1,B:2,A:3};class PH{constructor(t,n=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=ar();this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length);let i="result";n&&(i="floor(result * 255. + 0.5)");let o="";for(let a=0;a<s.length;a++){const u=s[a];o+=`
          if(offset == ${a}) {
            result = values[${OHt[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?cT():lT(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${o}
        }
        ${r.output} = vec4(${i}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LHt{constructor(t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=ar();this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length);let r="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const u=o*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?cT():lT(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${i};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zHt(e){const t=ar(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return v8t(e,n)}function BHt(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return S8t(e,t)}function PHt(e){const t=new Uint16Array([0,1,2,2,1,3]);return N8t(e,t)}function p0(e,t,n,s,r,i){D8t(t,n);const o=E8t(e),a=e.TEXTURE_2D;return Gt(e,()=>e.bindTexture(a,o)),Gt(e,()=>e.texParameteri(a,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),Gt(e,()=>e.texParameteri(a,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),Gt(e,()=>e.texParameteri(a,e.TEXTURE_MIN_FILTER,e.NEAREST)),Gt(e,()=>e.texParameteri(a,e.TEXTURE_MAG_FILTER,e.NEAREST)),pt().getNumber("WEBGL_VERSION")===1?Gt(e,()=>e.texImage2D(a,0,s,t,n,0,r,i,null)):Gt(e,()=>e.texStorage2D(a,1,s,t,n)),Gt(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:o,texShape:[n,t]}}function WH(e){return e.internalFormatFloat}function WHt(e,t,n,s){const[r,i]=h0(t,n);return p0(e,r,i,WH(s),s.textureFormatFloat,e.FLOAT)}function VH(e){return e.internalFormatHalfFloat}function VHt(e,t,n,s){const[r,i]=h0(t,n);return p0(e,r,i,VH(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function UH(e){return e.downloadTextureFormat}function UHt(e,t,n,s){const[r,i]=h0(t,n);return p0(e,r,i,UH(s),e.RGBA,e.UNSIGNED_BYTE)}function GH(e){return e.internalFormatPackedFloat}function GHt(e,t,n,s){const[r,i]=zd(t,n);return p0(e,r,i,GH(s),e.RGBA,e.FLOAT)}function HH(e){return e.internalFormatPackedHalfFloat}function HHt(e,t,n,s){const[r,i]=zd(t,n);return p0(e,r,i,HH(s),e.RGBA,s.textureTypeHalfFloat)}function qHt(e,t,n){return Gt(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),AH(e,t,"clipSpacePos",n,3,20,0)&&AH(e,t,"uv",n,2,20,12)}function jHt(e,t,n,s,r,i){Gt(e,()=>e.bindTexture(e.TEXTURE_2D,t));let o,a,u;r instanceof Uint8Array?(o=new Uint8Array(n*s*4),a=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*s*4),a=e.FLOAT,u=i.internalFormatPackedFloat),o.set(r),pt().getNumber("WEBGL_VERSION")===2?Gt(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,a,o)):Gt(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,s,0,e.RGBA,a,o)),Gt(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function KHt(e,t,n){Gt(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?pt().getNumber("WEBGL_VERSION")===2?Gt(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):Gt(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):pt().getNumber("WEBGL_VERSION")===2?Gt(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):Gt(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),Gt(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function XHt(e,t,n,s){const r=e.createBuffer();Gt(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));const a=4*4*t*n;return Gt(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ)),Gt(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),Gt(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function YHt(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function ZHt(e,t,n,s){const[r,i]=h0(t,n),o=4,a=new Uint8Array(f8t(t*n,o));return Gt(e,()=>e.readPixels(0,0,r,i,s.downloadTextureFormat,e.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function JHt(e,t,n,s,r,i,o,a){const u=e,l=new Float32Array(m8t(i,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function QHt(e,t,n){const s=new Float32Array(t*n*4);return Gt(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dT{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const n=pt().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,h8t(n,t)):this.gl=Ro(n),t=this.gl,pt().getNumber("WEBGL_VERSION")===2){const i=t;this.createVertexArray=()=>Gt(i,()=>i.createVertexArray()),this.bindVertexArray=o=>Gt(i,()=>i.bindVertexArray(o)),this.deleteVertexArray=o=>Gt(i,()=>i.deleteVertexArray(o)),this.getVertexArray=()=>Gt(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(t!=null){const i=t.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Gt(t,()=>i.createVertexArrayOES()),this.bindVertexArray=o=>Gt(t,()=>i.bindVertexArrayOES(o)),this.deleteVertexArray=o=>Gt(t,()=>i.deleteVertexArrayOES(o)),this.getVertexArray=()=>Gt(t,()=>t.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),pt().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=iv(this.gl,i),qi(this.gl,o))this.textureHalfFloatExtension=iv(this.gl,o);else if(pt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),qi(this.gl,r))this.colorBufferHalfFloatExtension=iv(this.gl,r);else if(pt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",qi(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(qi(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=BHt(this.gl),this.indexBuffer=PHt(this.gl),this.framebuffer=T8t(this.gl),this.textureConfig=sT(this.gl,this.textureHalfFloatExtension)}get debug(){return pt().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Gt(t,()=>t.finish()),Gt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Gt(t,()=>t.deleteFramebuffer(this.framebuffer)),Gt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Gt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Gt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,n){return this.throwIfDisposed(),WHt(this.gl,t,n,this.textureConfig)}createFloat16MatrixTexture(t,n){return this.throwIfDisposed(),VHt(this.gl,t,n,this.textureConfig)}createUnsignedBytesMatrixTexture(t,n){return this.throwIfDisposed(),UHt(this.gl,t,n,this.textureConfig)}uploadPixelDataToTexture(t,n){this.throwIfDisposed(),KHt(this.gl,t,n)}uploadDenseMatrixToTexture(t,n,s,r){this.throwIfDisposed(),jHt(this.gl,t,n,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,n){return this.throwIfDisposed(),HHt(this.gl,t,n,this.textureConfig)}createPackedMatrixTexture(t,n){return this.throwIfDisposed(),GHt(this.gl,t,n,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(FH(this.gl,this.framebuffer),this.outputTexture=null),Gt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,n,s){return this.downloadMatrixDriver(t,()=>ZHt(this.gl,n,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,n,s,r,i,o){return JHt(this.gl,t,n,s,r,i,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,n){return YHt(this.gl,t,n)}createBufferFromTexture(t,n,s){this.bindTextureToFrameBuffer(t);const r=XHt(this.gl,n,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let n,s;if(pt().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const o=r.clientWaitSync(i,0,0);return o===r.ALREADY_SIGNALED||o===r.CONDITION_SATISFIED},n=i}else pt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(n,pt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:n,isFencePassed:s}}downloadMatrixFromPackedTexture(t,n,s){return this.downloadMatrixDriver(t,()=>QHt(this.gl,n,s))}createProgram(t){this.throwIfDisposed();const n=this.gl;this.vertexShader==null&&(this.vertexShader=zHt(n));const s=C8t(n);Gt(n,()=>n.attachShader(s,this.vertexShader)),Gt(n,()=>n.attachShader(s,t)),$8t(n,s);let r;return r=Object.assign(s,{vao:this.createVertexArray()}),this.bindVertexArray(r.vao),Gt(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(qHt(n,r,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&rT(n,r),this.setProgram(r),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(Gt(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&rT(this.gl,this.program)),Gt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,n,s=!0){return this.throwIfDisposed(),s?F8t(this.gl,t,n):R8t(this.gl,t,n)}getAttributeLocation(t,n){return this.throwIfDisposed(),Gt(this.gl,()=>this.gl.getAttribLocation(t,n))}getUniformLocationNoThrow(t,n){return this.throwIfDisposed(),this.gl.getUniformLocation(t,n)}setInputMatrixTexture(t,n,s){this.throwIfDisposed(),this.throwIfNoProgram(),_8t(this.gl,t,n,s)}setOutputMatrixTexture(t,n,s){this.setOutputMatrixTextureDriver(t,s,n)}setOutputPackedMatrixTexture(t,n,s){this.throwIfDisposed();const[r,i]=zd(n,s);this.setOutputMatrixTextureDriver(t,r,i)}setOutputMatrixWriteRegion(t,n,s,r){this.setOutputMatrixWriteRegionDriver(s,t,r,n)}setOutputPackedMatrixWriteRegion(t,n,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&rT(this.gl,this.program),ov(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const n=this.getVertexArray();console.assert(n===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Gt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Gt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=iv(this.gl,pt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(pt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,i),i}const t=this.getQueryTimerExtensionWebGL1(),n=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,n),n}endQuery(){if(pt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,s=this.getQueryTimerExtensionWebGL2();n.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await WW(()=>this.disposed||this.isQueryAvailable(t,pt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,pt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,n){if(n===0)return null;if(n===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,n){if(n===0)return!0;if(n===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(t){return new Promise(n=>{this.addItemToPoll(()=>t.isFencePassed(),()=>n())})}pollItems(){const t=t7t(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=t;++n){const{resolveFn:s}=this.itemsToPoll[n];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,n){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:n}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in pt().platform&&(s=pt().platform.setTimeoutCustom.bind(pt().platform)),WW(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),iT(this.gl,t,this.framebuffer),this.debug&&ov(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(iT(this.gl,this.outputTexture,this.framebuffer),this.debug&&ov(this.gl)):FH(this.gl,this.framebuffer)}downloadMatrixDriver(t,n){this.bindTextureToFrameBuffer(t);const s=n();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,n,s){this.throwIfDisposed();const r=this.gl;iT(r,t,this.framebuffer),this.debug&&ov(r),this.outputTexture=t,Gt(r,()=>r.viewport(0,0,n,s)),Gt(r,()=>r.scissor(0,0,n,s))}setOutputMatrixWriteRegionDriver(t,n,s,r){this.throwIfDisposed(),Gt(this.gl,()=>this.gl.scissor(t,n,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function t7t(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:e7t,bincountImpl:qH,bincountReduceImpl:n7t,castImpl:s7t,ceilImpl:r7t,concatImpl:i7t,equalImpl:o7t,expImpl:a7t,expm1Impl:u7t,floorImpl:l7t,gatherNdImpl:c7t,gatherV2Impl:h7t,greaterImpl:d7t,greaterEqualImpl:p7t,lessImpl:f7t,lessEqualImpl:m7t,linSpaceImpl:g7t,logImpl:x7t,maxImpl:b7t,maximumImpl:y7t,minimumImpl:w7t,multiplyImpl:v7t,negImpl:k7t,notEqualImpl:I7t,prodImpl:C7t,raggedGatherImpl:$7t,raggedRangeImpl:S7t,raggedTensorToTensorImpl:N7t,rangeImpl:E7t,rsqrtImpl:D7t,scatterImpl:T7t,sigmoidImpl:A7t,simpleAbsImpl:jH,sliceImpl:F7t,sparseFillEmptyRowsImpl:R7t,sparseReshapeImpl:_7t,sparseSegmentReductionImpl:KH,sqrtImpl:M7t,stridedSliceImpl:O7t,stringNGramsImpl:L7t,stringSplitImpl:z7t,stringToHashBucketFastImpl:B7t,subImpl:P7t,tileImpl:W7t,topKImpl:V7t,transposeImpl:pT,uniqueImpl:U7t}=YWt;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XH(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function lr(e,t){return t===1?[e]:XH(e,t)}function G7t(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H7t{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=ur(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const n=lr("rc",this.rank),s=un(this.rank),r=this.getOutOfBoundsCondition(n),i=this.getSetup(n),o=this.getOutput(n);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(t){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let i=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)i=`${t[t.length-1-o]},`+i;n.push(i)}return n}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let s=this.rank-2;s<this.rank;s++)n+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(n+="||");return n}getSetup(t){if(this.rank===1)return"";const n=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${n[0]};
      int c = ${n[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(t){const n=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),
            cEdge ? 0. : getA(${n[1]}),
            rEdge ? 0. : getA(${n[2]}),
            rEdge || cEdge ? 0. : getA(${n[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YH{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length);let s="";for(let r=0;r<4;r++){let i="thisRC = rc;";r%2===1&&(i+="thisRC.z += 1;"),r>1&&(i+="thisRC.y += 1;"),s+=`
        ${i}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${q7t(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?cT():lT(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function q7t(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?q8t(["r","c","d"],"inputShape"):Bc(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j7t{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,n,s){const r=JH(n,s),i=QH(t,r,s);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const o=ZH(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const u=this.freeTextures[i].shift();return this.usedTextures[i].push(u),u}let a;return r===_s.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===_s.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===_s.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===_s.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===_s.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(t,n,s,r){if(this.freeTextures==null)return;const i=JH(s,r),o=QH(n,i,r);o in this.freeTextures||(this.freeTextures[o]=[]);const a=ZH(n,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=pt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[o],c=l.indexOf(t);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function K7t(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function ZH(e,t,n,s,r){const i=X7t(t,s);let o;if(r){const[u,l]=zd(e[0],e[1]);o=u*l}else{const[u,l]=h0(e[0],e[1]);o=u*l}const a=K7t(n,i);return o*a}function X7t(e,t){switch(e){case _s.PACKED_2X2_FLOAT32:return GH(t);case _s.PACKED_2X2_FLOAT16:return HH(t);case _s.UNPACKED_FLOAT32:return WH(t);case _s.UNPACKED_FLOAT16:return VH(t);case _s.PACKED_4X1_UNSIGNED_BYTE:return UH(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function Y7t(e){return pt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?_s.PACKED_2X2_FLOAT32:_s.UNPACKED_FLOAT32:e?_s.PACKED_2X2_FLOAT16:_s.UNPACKED_FLOAT16}function JH(e,t){if(e===mi.UPLOAD)return _s.PACKED_2X2_FLOAT32;if(e===mi.RENDER||e==null)return Y7t(t);if(e===mi.DOWNLOAD||e===mi.PIXELS)return _s.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function QH(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ba{constructor(t,n){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const ji="if (isnan(x)) return x;",Z7t="return x;",t7="return abs(x);",J7t="return (x >= 0.0) ? x : (exp(x) - 1.0);",Q7t=ji+`
  return (x < 0.0) ? 0.0 : x;
`,t9t=ji+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ju="return x;",e9t="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9t="return x;",s9t=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,r9t=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,i9t=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,o9t="return 1.0 / (1.0 + exp(-1.0 * x));";class Qu{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a9t{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length);const n=t.length,s=lr("rc",n),r=un(n),i=G7t(n,s),o=s.slice(-2),a=n<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u9t=NU,l9t=1e-7,c9t=1e-4,hv={};function h9t(e){return e in hv||(hv[e]={}),hv[e]}const d9t=pt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),p9t=600;function f9t(){return pt().global.screen==null?1024:pt().global.screen.height*pt().global.screen.width*window.devicePixelRatio*p9t/1024/1024}class dv extends kS{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!pt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(t!=null){if(t instanceof dT)n=t;else{const s=Ro(pt().getNumber("WEBGL_VERSION"),t);n=new dT(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Ro(pt().getNumber("WEBGL_VERSION"));n=new dT(s),this.binaryCache=h9t(pt().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new j7t(this.gpgpu),this.numMBBeforeWarning=f9t(),this.texData=new PW(this,ia())}nextDataId(){return dv.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,n,s,r,i,o){const a=this.makeTensorInfo(n,s),u=this.texData.get(a.dataId);u.isPacked=!1,u.texture={texture:t,texShape:[r,i]},u.texShape=[r,i];const l=av(n),c=new PH(l,!1,o),h=this.runWebGLProgram(c,[a],s,[[r,i]]);return h.shape=n,u.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(t,n,s){if((pt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||pt().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:n,dtype:s,values:t,usage:mi.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const n=this.texData.get(t);n.refCount++}decRef(t){if(this.texData.has(t)){const n=this.texData.get(t);n.refCount--}}move(t,n,s,r,i){if(pt().getBool("DEBUG")&&this.checkNumericalProblems(n),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:r,values:n,usage:mi.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const n=this.texData.get(t),{values:s,dtype:r,complexTensorInfos:i,slice:o,shape:a,isPacked:u}=n;if(o!=null){let d;u?d=new Qu(a,Ju):d=new ba(a,Ju);const p=this.runWebGLProgram(d,[{dataId:t,shape:a,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(t);if(r==="string")return s;const l=this.activeTimers!=null;let c;l&&(c=kr());let h;if(r==="complex64"){const d=this.readSync(i.real.dataId),p=this.readSync(i.imag.dataId);h=ja(d,p)}else h=this.getValuesFromTexture(t);return l&&(this.downloadWaitMs+=kr()-c),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const f=this.pendingRead.get(t);return new Promise(m=>f.push(m))}const n=this.texData.get(t),{values:s,shape:r,slice:i,dtype:o,complexTensorInfos:a,isPacked:u}=n;if(i!=null){let f;u?f=new Qu(r,Ju):f=new ba(r,Ju);const m=this.runWebGLProgram(f,[{dataId:t,shape:r,dtype:o}],o),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(t);if(pt().getBool("DEBUG")&&!pt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&pt().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(o!=="complex64"&&pt().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);const f=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(f.texture.texture,...rv(r))}this.pendingRead.set(t,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(o==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),m=f[0],g=f[1];h=ja(m,g)}else if(l==null)h=this.getValuesFromTexture(t);else{const f=xt(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(l,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){const f=this.gpgpu.gl;Gt(f,()=>f.deleteBuffer(l))}const d=this.convertAndCacheOnCPU(t,h),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(f=>f(d)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&ia().removeDataId(t,this),this.pendingDeletes--),d}readToGPU(t,n={}){const s=this.texData.get(t),{values:r,shape:i,slice:o,dtype:a,isPacked:u,texture:l}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let p;u?p=new Qu(i,Ju):p=new ba(i,Ju);const f=this.runWebGLProgram(p,[{dataId:t,shape:i,dtype:a}],a),m=this.readToGPU(f,n);return this.disposeIntermediateTensorInfo(f),m}if(l==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(t,n.customTexShape),h=ia().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(t){const n=this.readSync(t.dataId);if(t.dtype==="string")try{const s=n.map(r=>Mu(r));return ke(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(t.shape,t.dtype,n)}checkNumericalProblems(t){if(t!=null)for(let n=0;n<t.length;n++){const s=t[n];if(!y8t(s))throw pt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:n,dtype:s,isPacked:r}=this.texData.get(t),i=xt(n);if(pt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(t),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...rv(n)).subarray(0,i);return this.disposeIntermediateTensorInfo(d),f}const o=pt().getBool("WEBGL_PACK")&&r===!0,a=o?av(n):n,u=o?new MHt(a):new _Ht(a),l=this.runWebGLProgram(u,[{shape:a,dtype:s,dataId:t}],"float32"),c=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return pt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const n=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,t();const i=dc(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),o=dc(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=n,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(pt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(i);a.kernelMs=mAt(u),a.getExtraProfileInfo=()=>u.map((l,c)=>({name:o[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return pt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:kr(),endMs:null}}endTimer(t){return pt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=kr(),t)}async getQueryTime(t){if(pt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const n=t;return n.endMs-n.startMs}disposeData(t,n=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(n?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!n&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,n),this.disposeData(s.imag.dataId,n)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:n,dtype:s,texShape:r,usage:i,isPacked:o,slice:a}=this.texData.get(t),u=a&&a.origDataId||t,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),n!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(n,r,i,o)));const c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,n=d9t){return pt().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&xt(s.shape)<n)}getGPGPUContext(){return this.gpgpu}where(t){li("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=t.dataSync();return u9t(t.shape,n)}packedUnaryOp(t,n,s){const r=new Qu(t.shape,n),i=this.compileAndRun(r,[t],s);return ia().makeTensorFromTensorInfo(i)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const r=jH(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,r)}if(pt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,t7,t.dtype);const n=new ba(t.shape,t7),s=this.compileAndRun(n,[t]);return ia().makeTensorFromTensorInfo(s)}makeTensorInfo(t,n,s){let r;if(n==="string"&&s!=null&&s.length>0&&Em(s[0])){const i=s.map(o=>_u(o));r=this.write(i,t,n)}else r=this.write(s,t,n);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:n}}makeOutput(t,n,s){return ia().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,s),this)}unpackTensor(t){const n=new a9t(t.shape);return this.runWebGLProgram(n,[t],t.dtype)}packTensor(t){const n=new H7t(t.shape),s=!0;return this.runWebGLProgram(n,[t],t.dtype,null,s)}packedReshape(t,n){const s=[Bd(t.shape),...Pd(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},i=[Bd(n),...Pd(n)],o=new YH(i,s),a=!0,u=[s],l=this.runWebGLProgram(o,[r],t.dtype,u,a);return{dataId:l.dataId,shape:n,dtype:l.dtype}}decode(t,n){const s=this.texData.get(t),{isPacked:r,shape:i,dtype:o}=s;if(n!=null){const d=xt(i),p=n[0]*n[1]*4;L(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=av(i);let u;r?u=new RHt(a):u=new FHt(a);const l=!0,c=[n??rv(a)],h=this.runWebGLProgram(u,[{shape:a,dtype:o,dataId:t}],o,c,l,n);return{dtype:o,shape:i,dataId:h.dataId}}runWebGLProgram(t,n,s,r,i=!1,o){const a=this.makeTensorInfo(t.outputShape,s),u=this.texData.get(a.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===c0.DENSE){const x=o??rv(t.outputShape);u.texShape=x.map(b=>b*2)}if(t.outTexUsage!=null&&(u.usage=t.outTexUsage),xt(a.shape)===0)return u.values=As(a.dtype,0),a;const l=[],c=n.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(x.dataId);if(b.texture==null){if(!t.packedInputs&&xt(x.shape)<=pt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!b.isPacked!=!!t.packedInputs)x=b.isPacked?this.unpackTensor(x):this.packTensor(x),l.push(x),b=this.texData.get(x.dataId);else if(b.isPacked&&!lv(b.shape,x.shape)){const w=x,y=x.shape;x.shape=b.shape,x=this.packedReshape(x,y),l.push(x),b=this.texData.get(x.dataId),w.shape=y}return{shape:x.shape,texData:b,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:u,isUniform:!1},d=AHt(t,c,h),p=this.getAndSaveBinary(d,()=>DHt(this.gpgpu,t,c,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),pt().get("ENGINE_COMPILE_ONLY")||THt(this.gpgpu,p,c,h,r),l.forEach(x=>this.disposeIntermediateTensorInfo(x)),f&&(m=this.endTimer(m),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(m)}));const g=pt().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const x=kr();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!pt().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&i===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(t,n,s,r,i=!1){return s=s||n[0].dtype,this.runWebGLProgram(t,n,s,r,i)}getAndSaveBinary(t,n){return t in this.binaryCache||(this.binaryCache[t]=n()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(pt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ht(()=>{if(!pt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=pt().getBool("DEBUG");pt().set("DEBUG",!1);const n=this.abs(ce(1e-8)).dataSync()[0];if(pt().set("DEBUG",t),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?l9t:c9t}uploadToGPU(t){const n=this.texData.get(t),{shape:s,dtype:r,values:i,texture:o,usage:a,isPacked:u}=n;if(o!=null)return;const l=this.activeTimers!=null;let c;l&&(c=kr());let h=n.texShape;if(h==null&&(h=L8t(s,u),n.texShape=h),i!=null){const d=av(s);let p,f=h[1],m=h[0];const g=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(u||!g)&&([f,m]=zd(h[0],h[1])),u?p=new LHt(d,g):p=new PH(d,g);const x=g?[m,f]:h,b=this.makeTensorInfo(x,r),w=this.texData.get(b.dataId);g?w.usage=mi.PIXELS:w.usage=mi.UPLOAD,w.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),f,m,i);const y=[[m,f]],v=!0,k=this.runWebGLProgram(p,[b],r,y,v),C=this.texData.get(k.dataId);n.texShape=C.texShape,n.isPacked=C.isPacked,n.usage=C.usage,pt().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(n.texture=C.texture,n.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(b),l&&(this.uploadWaitMs+=kr()-c)}else{const d=this.acquireTexture(h,a,r,u);n.texture=d}}convertAndCacheOnCPU(t,n){const s=this.texData.get(t),{dtype:r}=s;return n!=null&&(s.values=m9t(n,r)),s.values}acquireTexture(t,n,s,r){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,n,r)}computeBytes(t,n){return t[0]*t[1]*ey(n)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,n]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(n));return Promise.all(t)}else{for(const[,n]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(n),r(!0)}catch(i){throw i}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await s5(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(TH(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:n,customUniformLocations:s,infLoc:r,nanLoc:i,inShapesLocations:o,inTexShapesLocations:a,outShapeLocation:u,outShapeStridesLocation:l,outTexShapeLocation:c}=zH(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=n,t.customUniformLocations=s,t.infLoc=r,t.nanLoc=i,t.inShapesLocations=o,t.inTexShapesLocations=a,t.outShapeLocation=u,t.outShapeStridesLocation=l,t.outTexShapeLocation=c}}createTensorFromGPUData(t,n,s){t.channels=t.channels||"RGBA";const{texture:r,height:i,width:o,channels:a}=t,u=ia().backend;if(!u.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=u.writeTexture(r,n,s,i,o,a);return ia().makeTensorFromDataId(l,n,s,u)}}dv.nextDataId=0;function m9t(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){const n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}/** @license See the LICENSE file. */const g9t="4.2.0";/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */_V()&&YV("webgl",()=>new dv,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fT=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Hd{constructor(t,n,s){this.variableNames=["A","B"],this.outputShape=ge(n,s),this.enableShapeUniforms=ur(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f0=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class m0{constructor(t,n,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ge(n,s);const i=this.outputShape.length;this.enableShapeUniforms=ur(i);let o="";if(r)if(i===0||xt(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${un(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=lr("coords",i);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${u[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${u[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${u[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${u[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const x9t={kernelName:Ym,backendName:"webgl",kernelFunc:Yr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tl(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,i=n.makeTensorInfo(s.shape,"complex64"),o=n.texData.get(i.dataId),a=Yr({inputs:{x:s},backend:n}),u=Yr({inputs:{x:r},backend:n});return o.complexTensorInfos={real:a,imag:u},i}const b9t={kernelName:BS,backendName:"webgl",kernelFunc:tl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e7="return (a < 0.) ? b * a : a;",n7=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function y9t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:i}=s,o=n.makeTensorInfo([],"float32",Ru(i,"float32")),a=pt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new m0(n7,r.shape,o.shape):new Hd(e7,r.shape,o.shape),u=n.runWebGLProgram(a,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),u}const w9t={kernelName:ky,backendName:"webgl",kernelFunc:y9t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s7="return (a < 0.) ? b * a : a;",r7=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function v9t(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,i=pt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new m0(r7,s.shape,r.shape):new Hd(s7,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],"float32")}const k9t={kernelName:Wy,backendName:"webgl",kernelFunc:v9t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qd="if (isnan(x)) return x;";function Re({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:i})=>{const{x:o}=r,a=i,u=s||o.dtype;if(a.shouldExecuteOnCPU([o])&&n!=null){const h=a.texData.get(o.dataId),d=n(h.values,u);return a.makeTensorInfo(o.shape,u,d)}const l=pt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let c;return l?c=new Qu(o.shape,t):c=new ba(o.shape,e),a.runWebGLProgram(c,[o],u)}}function Ms({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:o,backend:a})=>{const{a:u,b:l}=o,c=a;if(s&&u.dtype==="complex64"){const f=c.texData.get(u.dataId),m=c.texData.get(l.dataId),[g,x]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[y,v]=w,k={dataId:y.dataId,dtype:y.dtype,shape:u.shape},C={dataId:v.dataId,dtype:v.dtype,shape:l.shape},I=new Hd(e,u.shape,l.shape);return c.runWebGLProgram(I,[k,C],Gr(y.dtype,v.dtype))}),b=tl({inputs:{real:g,imag:x},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(x),b}const h=i||Gr(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||c.shouldExecuteOnCPU([u,l]))&&r!=null){const f=c.texData.get(u.dataId).values,m=c.texData.get(l.dataId).values,g=u.dtype==="string"?Ec(f):f,x=u.dtype==="string"?Ec(m):m,[b,w]=r(u.shape,l.shape,g,x,h),y=c.makeTensorInfo(w,h),v=c.texData.get(y.dataId);return v.values=b,y}const d=pt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let p;return d?p=new m0(t,u.shape,l.shape,n):p=new Hd(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function g0(e,t=!1){if(e==="linear")return t?n9t:Z7t;if(e==="relu")return t?r9t:Q7t;if(e==="elu")return t?s9t:J7t;if(e==="relu6")return t?i9t:t9t;if(e==="prelu")return t?r7:s7;if(e==="leakyrelu")return t?n7:e7;if(e==="sigmoid")return t?o9t:e9t;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i7{constructor(t,n,s,r=!1,i=!1,o=!1,a=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=ur(this.outputShape.length);const c=r?t[1]:t[2],h=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=i?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",x="";a&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const b=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let w="rc.x",y="rc.x";t[0]<n[0]?w=`imod(rc.x, ${t[0]})`:n[0]<t[0]&&(y=`imod(rc.x, ${n[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${y};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o7={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class a7{constructor(t,n,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ge(n,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u7="return a * b;";function mT(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,i=Gr(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=n.texData.get(s.dataId),u=n.texData.get(r.dataId),l=new a7(o7.REAL,s.shape,r.shape),c=new a7(o7.IMAG,s.shape,r.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:r.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(l,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=tl({inputs:{real:d,imag:p},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}if(n.shouldExecuteOnCPU([s,r])){const a=n.texData.get(s.dataId),u=n.texData.get(r.dataId),[l,c]=v7t(s.shape,r.shape,a.values,u.values,i),h=n.makeTensorInfo(c,i),d=n.texData.get(h.dataId);return d.values=l,h}let o;return pt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new m0(u7,s.shape,r.shape):o=new Hd(u7,s.shape,r.shape),n.runWebGLProgram(o,[s,r],i)}const I9t={kernelName:ig,backendName:"webgl",kernelFunc:mT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C9t(e,t,n){const s=[Bd(e.shape),...Pd(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},i=[Bd(t),...Pd(t)],o=new YH(i,s),a=!0,u=[s],l=n.runWebGLProgram(o,[r],e.dtype,u,a);return{dataId:l.dataId,shape:t,dtype:l.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:i}=s,o=n,a=xt(r.shape),u=VW(i,a),l=xt(u);L(a===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=o.texData.get(r.dataId);return c.isPacked&&!lv(r.shape,u)&&!(c.texture!==null&&lv(c.shape,u))?C9t(r,u,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype})}const $9t={kernelName:Uy,backendName:"webgl",kernelFunc:Pt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l7{constructor(t,n){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:o}=t;this.outputShape=[r,o];const a=Math.floor(s/4)*4,u=s%4;let l="sumValue += dot(values, ones);";if(n!=null){const h=1/n;l=`sumValue += dot(values * ${ld(h)?h.toPrecision(2):h}, ones);`}let c="";i%s>0&&(c=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${a};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S9t{constructor(t,n){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:o}=t;this.outputShape=[r,o];let a="0.0",u="";n==="prod"?a="1.0":n==="min"?(a="1.0 / 1e-20",u="min"):n==="max"&&(a="-1.0 / 1e-20",u="max");let l=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?l="sumValue":n==="prod"?l="prodValue":n==="all"?l="allValue":n==="any"&&(l="anyValue");const c=Math.floor(s/4)*4,h=s%4;let d=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";n==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):n==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";i%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9t(e){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const n=t.length?t[t.length-1].outSize:e[1],s=Iw(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function Wc(e,t,n,s){const r=N9t(e.shape);let i=e;for(let o=0;o<r.length;o++){const{inSize:a,windowSize:u,outSize:l}=r[o];let c,h;n==="mean"?c=o===0?new l7({windowSize:u,inSize:a,batchSize:e.shape[0],outSize:l},a):new l7({windowSize:u,inSize:a,batchSize:e.shape[0],outSize:l}):c=new S9t({windowSize:u,inSize:a,batchSize:e.shape[0],outSize:l},n),h=i,i=s.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E9t{constructor(t,n){this.variableNames=["A"];const s=new Array(t.length);for(let o=0;o<s.length;o++)s[o]=t[n[o]];this.outputShape=s,this.rank=s.length;const r=un(this.rank),i=D9t(n);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}}function D9t(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T9t{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let c=0;c<s.length;c++)s[c]=t[n[c]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=un(this.rank),i=XH("rc",this.rank),o=new Array(this.rank);for(let c=0;c<n.length;c++)o[n[c]]=i[c];const a=`vec2(${o.slice(-2).join()})`,u=`++${i[this.rank-1]} < ${s[this.rank-1]}`,l=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pv(e,t,n){const s=pt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new T9t(e.shape,t):new E9t(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A9t(e,t,n,s){const r=t,i=e.shape.length,o=ve(r,e.shape);let a=o;const u=Sn(a,i),l=u!=null;let c=e;l&&(c=pv(e,u,s),a=On(a.length,i)),Rs("sum",a,i);const[h,d]=xs(c.shape,a);let p=h;n&&(p=Mn(h,o));const f=xt(d),g=xt(e.shape)/f,x=Pt({inputs:{x:c},attrs:{shape:[g,f]},backend:s}),b=ON(e.dtype),w=Wc(x,b,"sum",s),y=Pt({inputs:{x:w},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),l&&s.disposeIntermediateTensorInfo(c),y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fv(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s;return A9t(r,i,o,n)}const F9t={kernelName:Xy,backendName:"webgl",kernelFunc:fv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cr(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:i}=s,o=n,a=r.shape.length,u=new Array(a);for(let c=0;c<u.length;c++)u[c]=r.shape[i[c]];let l;if(o.shouldExecuteOnCPU([r])){const h=o.texData.get(r.dataId).values,d=pT(h,r.shape,r.dtype,i,u);l=o.makeTensorInfo(u,r.dtype);const p=o.texData.get(l.dataId);p.values=d}else l=pv(r,i,o);return l}const R9t={kernelName:pd,backendName:"webgl",kernelFunc:cr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c7=1e3;function mv({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),x=xt(m),b=xt(g),y=ge(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);L(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);const v=n?[x,h,p]:[x,p,h],k=s?[b,f,d]:[b,d,f],C=Pt({inputs:{x:e},backend:r,attrs:{shape:v}}),I=Pt({inputs:{x:t},backend:r,attrs:{shape:k}}),$=[C,I],S=Math.max(x,b),N=n?C.shape[1]:C.shape[2],F=i!=null,D=o!=null,E=u==="leakyrelu",A=u!=null?g0(u,!0):null,T=F||D||E||A!=null;let R;if((p===1||f===1)&&N>c7&&T===!1){let M=C,z=I;n&&(M=cr({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),$.push(M)),s&&(z=cr({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),$.push(z));const B=f!==1,V=f===1;let G=M;B&&(G=Pt({inputs:{x:M},backend:r,attrs:{shape:[S,N,1]}}),$.push(G));const j=f===1?2:1;let H=z;V&&(H=Pt({inputs:{x:z},backend:r,attrs:{shape:[S,1,N]}}),$.push(H));const at=mT({inputs:{a:G,b:H},backend:r});R=fv({inputs:{x:at},backend:r,attrs:{axis:j,keepDims:!0}}),$.push(at)}else{const M=Gr(e.dtype,t.dtype),z=new i7(v,k,[S,p,f],n,s,F,A,D,E),B=[C,I];if(i!=null&&B.push(i),D&&B.push(o),E){const V=r.makeTensorInfo([],"float32",Ru(a,"float32"));B.push(V),$.push(V)}R=r.runWebGLProgram(z,B,M)}const _=Pt({inputs:{x:R},backend:r,attrs:{shape:y}});$.push(R);for(const M of $)r.disposeIntermediateTensorInfo(M);return _}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _9t(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i,bias:o,preluActivationWeights:a}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;return mv({a:r,b:i,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}const M9t={kernelName:nw,backendName:"webgl",kernelFunc:_9t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h7="return abs(x);";function O9t(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const i=n.texData.get(s.dataId),o=jH(i.values);return n.makeTensorInfo(s.shape,s.dtype,o)}let r;return pt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Qu(s.shape,h7):r=new ba(s.shape,h7),n.runWebGLProgram(r,[s],s.dtype)}const L9t={kernelName:ny,backendName:"webgl",kernelFunc:O9t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z9t=ji+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,B9t=Re({opSnippet:z9t}),P9t={kernelName:Tm,backendName:"webgl",kernelFunc:B9t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W9t=ji+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,V9t=Re({opSnippet:W9t}),U9t={kernelName:Am,backendName:"webgl",kernelFunc:V9t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d7="return a + b;",G9t=Ms({opSnippet:d7,packedOpSnippet:d7,supportsComplex:!0,cpuKernelImpl:e7t}),H9t={kernelName:dd,backendName:"webgl",kernelFunc:G9t};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q9t{constructor(t,n){this.outputShape=[],this.outputShape=t,this.variableNames=n.map((i,o)=>`T${o}`);const s=[];this.variableNames.forEach(i=>{s.push(`float v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j9t{constructor(t,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=n.map((i,o)=>`T${o}`);const s=[];this.variableNames.forEach(i=>{s.push(`vec4 v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gv(e){const{inputs:t,backend:n}=e,s=t;if(s.length===1)return Yr({inputs:{x:s[0]},backend:n});if(s.length>pt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(s.length/2),l=gv({inputs:s.slice(0,u),backend:n}),c=gv({inputs:s.slice(u),backend:n});return gv({inputs:[l,c],backend:n})}const r=s.map(u=>u.dtype).reduce((u,l)=>Gr(u,l)),i=s.map(u=>u.shape),a=pt().getBool("WEBGL_PACK")?new j9t(s[0].shape,i):new q9t(s[0].shape,i);return n.runWebGLProgram(a,s,r)}const K9t={kernelName:RS,backendName:"webgl",kernelFunc:gv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X9t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s,a=r.shape.length,u=ve(i,r.shape);let l=u;const c=Sn(l,a);let h=r;c!=null&&(h=cr({inputs:{x:r},backend:n,attrs:{perm:c}}),l=On(l.length,a)),Rs("all",l,a);const[d,p]=xs(h.shape,l),f=xt(p),m=Pt({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=Wc(m,m.dtype,"all",n);let x;if(o){const b=Mn(d,u);x=Pt({inputs:{x:g},backend:n,attrs:{shape:b}})}else x=Pt({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),x}const Y9t={kernelName:_S,backendName:"webgl",kernelFunc:X9t};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z9t(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s,a=r.shape.length,u=ve(i,r.shape);let l=u;const c=Sn(l,a);let h=r;c!=null&&(h=cr({inputs:{x:r},backend:n,attrs:{perm:c}}),l=On(l.length,a)),Rs("any",l,a);const[d,p]=xs(h.shape,l),f=xt(p),m=Pt({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=Wc(m,m.dtype,"any",n);let x;if(o){const b=Mn(d,u);x=Pt({inputs:{x:g},backend:n,attrs:{shape:b}})}else x=Pt({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),x}const J9t={kernelName:MS,backendName:"webgl",kernelFunc:Z9t};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q9t{constructor(t,n,s){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:o}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[i,o];const a=n==="max"?">":"<",u=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tqt{constructor(t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,L(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const i=t[t.length-1],o=Math.ceil(i/n);this.outputShape=t.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,u=a.length,l=un(u),c=lr("coords",u);let h,d;if(o===1){d=u+1;const I=un(d);h=`
        ${I} sourceLocR = ${I}(${c.join()}, 0);
        ++${c[u-1]};
        ${I} sourceLocG = ${I}(${c.join()}, 0);
        ++${c[u-2]};
        ${I} sourceLocA = ${I}(${c.join()}, 0);
        --${c[u-1]};
        ${I} sourceLocB = ${I}(${c.join()}, 0);
        --${c[u-2]};`}else d=u,h=`
        ${l} sourceLocR = coords;
        ++${c[u-1]};
        ${l} sourceLocG = coords;
        ++${c[u-2]};
        ${l} sourceLocA = coords;
        --${c[u-1]};
        ${l} sourceLocB = coords;
        --${c[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(I=>"int "+I),g=lr("sourceLocR",d-1).concat("inIdx.r"),x=lr("sourceLocG",d-1).concat("inIdx.g"),b=lr("sourceLocB",d-1).concat("inIdx.b"),w=lr("sourceLocA",d-1).concat("inIdx.a"),y=s==="max"?"greaterThan":"lessThan",v=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${w.join()})));`,k=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,C=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[u-1]} < ${a[u-1]-1};
        bool hasNextRow = ${c[u-2]} < ${a[u-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${y}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p7(e,t,n,s=null){let r=t.shape[0],i=t.shape[1];s!=null&&(r=s.shape[0],i=s.shape[1]);const o=Iw(i),a={windowSize:o,inSize:i,batchSize:r,outSize:Math.ceil(i/o)},u=new Q9t(a,n,s==null),l=[t];s!=null&&l.push(s);const c=e.runWebGLProgram(u,l,"int32");if(c.shape[1]===1)return c;const h=p7(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function f7(e,t,n,s=null){const r=s!=null?s.shape:t.shape,i=r[r.length-1],o=Iw(i),a=new tqt(r,o,n,s==null),u=s==null?[t]:[t,s],l=e.runWebGLProgram(a,u,"int32");if(l.shape.length===t.shape.length){const c=f7(e,t,n,l);return e.disposeIntermediateTensorInfo(l),c}return l}function m7(e,t,n,s){const r=[n];if(Rs("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!pt().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const i=[],o=e.texData.get(t.dataId),a=o!==null&&o.isPacked;let u=t;a&&(u=e.unpackTensor(t),i.push(u));const[l,c]=xs(u.shape,r),h=xt(c),d=Pt({inputs:{x:u},backend:e,attrs:{shape:[-1,h]}});i.push(d);const p=p7(e,d,s);i.push(p);const f=Pt({inputs:{x:p},backend:e,attrs:{shape:l}});return i.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return f7(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eqt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;let o=ve(i,r.shape);const a=Sn(o,r.shape.length);let u=r;const l=[];a!=null&&(u=cr({inputs:{x:r},backend:n,attrs:{perm:a}}),l.push(u),o=On(o.length,u.shape.length)),Rs("argMax",[o[0]],u.shape.length);const c=m7(n,u,o[0],"max");return l.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}const nqt={kernelName:sy,backendName:"webgl",kernelFunc:eqt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sqt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;let o=ve(i,r.shape);const a=Sn(o,r.shape.length);let u=r;const l=[];a!=null&&(u=cr({inputs:{x:r},backend:n,attrs:{perm:a}}),l.push(u),o=On(o.length,u.shape.length)),Rs("argMin",[o[0]],u.shape.length);const c=m7(n,u,o[0],"min");return l.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}const rqt={kernelName:ry,backendName:"webgl",kernelFunc:sqt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iqt=ji+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,oqt=Re({opSnippet:iqt}),aqt={kernelName:Fm,backendName:"webgl",kernelFunc:oqt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uqt=ji+"return log(x + sqrt(x * x + 1.0));",lqt=Re({opSnippet:uqt}),cqt={kernelName:Rm,backendName:"webgl",kernelFunc:lqt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hqt=ji+`
  return atan(x);
`,dqt=Re({opSnippet:hqt}),pqt={kernelName:_m,backendName:"webgl",kernelFunc:dqt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fqt=fT+`
  return atan(a, b);
`,mqt=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+f0+`
  return result;
`,gqt=Ms({opSnippet:fqt,packedOpSnippet:mqt}),xqt={kernelName:Om,backendName:"webgl",kernelFunc:gqt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bqt=ji+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,yqt=Re({opSnippet:bqt}),wqt={kernelName:Mm,backendName:"webgl",kernelFunc:yqt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x0{constructor(t,n,s,r=!1,i=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideHeight,u=t.strideWidth,l=t.dilationHeight,c=t.dilationWidth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const m=n==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(m||(b="-1.0 / 1e-20"),s){const I=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${u});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${I} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?i?g:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let y=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(y="avgValue / max(count, 1.0)");const v=Math.floor(o/4)*4,k=o%4,C=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${u});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${v};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${y});
      }
    `}}class gT{constructor(t,n,s,r=!1,i=!1){if(this.variableNames=["x"],n==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,a=t.strideDepth,u=t.strideHeight,l=t.strideWidth,c=t.dilationDepth,h=t.dilationHeight,d=t.dilationWidth,p=t.effectiveFilterDepth,f=t.effectiveFilterHeight,m=t.effectiveFilterWidth,g=t.padInfo.front,x=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const w=n==="avg";let y="0.0";if(w||(y="-1.0 / 1e-20"),s){const S=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${x}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${S} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?i?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let k=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(k="avgValue / max(count, 1.0)");const C=Math.floor(o/4)*4,I=o%4,$=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${x}, ${b});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${$}
            }

            int xC = xCCorner + ${C};
            if (${I===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${$}
            } else if (${I===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${$}
            } else if (${I===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${$}
            }
          }
        }
        setOutput(${k});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vqt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;d0(r,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=s,l=1;L(Gs(o,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=Oi(r.shape,i,o,l,a,u);if(c.filterWidth===1&&c.filterHeight===1&&We(c.inShape,c.outShape))return Yr({inputs:{x:r},backend:n});const h=new x0(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}const kqt={kernelName:iy,backendName:"webgl",kernelFunc:vqt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iqt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=s,c=[1,1,1],h=Va(r.shape,i,o,c,a,u,l),d=new gT(h,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}const Cqt={kernelName:oy,backendName:"webgl",kernelFunc:Iqt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $qt{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const n=t.filterHeight,s=t.filterWidth,r=t.strideHeight,i=t.strideWidth,o=t.dilationHeight,a=t.dilationWidth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=u-1-t.padInfo.top,h=l-1-t.padInfo.left,d=1/(n*s);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Sqt{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const n=t.filterDepth,s=t.filterHeight,r=t.filterWidth,i=t.strideDepth,o=t.strideHeight,a=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,c=t.dilationWidth,h=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=h-1-t.padInfo.front,m=d-1-t.padInfo.top,g=p-1-t.padInfo.left,x=1/(n*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nqt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,o=i,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=s,h=[1,1,1],d=Va(o.shape,a,u,h,l,c),p=new Sqt(d);return n.runWebGLProgram(p,[r],o.dtype)}const Eqt={kernelName:LS,backendName:"webgl",kernelFunc:Nqt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dqt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,o=i;d0([r,i],"avgPoolGrad");const{filterSize:a,strides:u,pad:l}=s,c=Oi(o.shape,a,u,1,l),h=new $qt(c);return n.runWebGLProgram(h,[r],o.dtype)}const Tqt={kernelName:OS,backendName:"webgl",kernelFunc:Dqt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aqt(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i}=t,{transposeA:o,transposeB:a}=s;return mv({a:r,b:i,transposeA:o,transposeB:a,backend:n})}const Fqt={kernelName:ay,backendName:"webgl",kernelFunc:Aqt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rqt{constructor(t,n,s,r,i,o){this.outputShape=[],this.variableNames=["x","mean","variance"],ge(t,n),ge(t,s);let a="0.0";r!=null&&(ge(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";i!=null&&(ge(t,i),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _qt{constructor(t,n,s,r,i,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ge(t,n),ge(t,s);let a="vec4(0.0)";r!=null&&(ge(t,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";i!=null&&(ge(t,i),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mqt={kernelName:yy,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:i,offset:o,scale:a}=e;L(r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),L(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),L(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;u==null&&(u=.001);const l=[s,r,i];let c=null;o!=null&&(c=o.shape,l.push(o));let h=null;a!=null&&(h=a.shape,l.push(a));const d=pt().getBool("WEBGL_PACK_NORMALIZATION")?new _qt(s.shape,r.shape,i.shape,c,h,u):new Rqt(s.shape,r.shape,i.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oqt{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const n=un(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=Lqt(this.rank);let r;const i=t.map((o,a)=>`sourceLoc.${xT[a]} = start[${a}] + coords.${xT[a]};`);r=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const xT=["x","y","z","w","u","v"];function Lqt(e){if(e===1)return"sourceLoc";if(e<=6)return xT.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zqt{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=un(this.rank),s=lr("coords",this.rank),r=lr("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${i})`,a=`
      result.x = ${o};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${o};
        --${r[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${o};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${o};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${n}(${t.map((c,h)=>`start[${h}]`).join()});`:t.map((c,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${a}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bqt(e,t,n,s){const r=s.texData.get(e.dataId),i=s.makeTensorInfo(n,e.dtype),o=s.texData.get(i.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let a=BE(t,ee(e.shape));r.slice&&(a+=r.slice.flatOffset),o.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||e.dataId};const u=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,u+1),i}function jd(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,size:o}=s,[a,u]=kw(r,i,o);if(OE(r,a,u),xt(u)===0)return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=n.texData.get(r.dataId),d=F7t(h.values,a,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,d)}const{isPacked:l}=n.texData.get(r.dataId),c=zE(r.shape,a,u);if(l||!c){const h=pt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zqt(u):new Oqt(u),d=[a];return n.runWebGLProgram(h,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),Bqt(r,a,u,n)}const Pqt={kernelName:Ky,backendName:"webgl",kernelFunc:jd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wqt={kernelName:uy,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,crops:o}=s;L(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((b,w)=>b*w),u=Vg(r.shape,i,a),l=Ug(u.length,i.length),c=Gg(r.shape,i,a),h=GE(o,i.length),d=HE(c,o,i.length),p=[],f=Pt({inputs:{x:r},backend:n,attrs:{shape:u}}),m=cr({inputs:{x:f},backend:n,attrs:{perm:l}}),g=Pt({inputs:{x:m},backend:n,attrs:{shape:c}}),x=jd({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(b=>n.disposeIntermediateTensorInfo(b)),x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vqt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:o}=s,a=n.readSync(r.dataId),u=n.readSync(i.dataId),l=qH(a,u,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,l)}const Uqt={kernelName:zS,backendName:"webgl",kernelFunc:Vqt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gqt(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,i=n.readSync(s.dataId),o=n.readSync(r.dataId),a=ge(Array.from(i),Array.from(o));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const Hqt={kernelName:XW,backendName:"webgl",kernelFunc:Gqt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g7=Ms({opSnippet:"return float(a != b);",cpuKernelImpl:I7t,dtype:"bool"}),qqt={kernelName:Oy,backendName:"webgl",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b0(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Yr({inputs:{x:r.complexTensorInfos.real},backend:n})}const jqt={kernelName:cN,backendName:"webgl",kernelFunc:b0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kqt="return float(int(x));";function Xqt(e,t){const n=new ba(e.shape,Kqt),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return Yr({inputs:{x:r},backend:n});const o=bs(r.shape),a=bT({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=tl({inputs:{real:a,imag:o},backend:n});return o.dispose(),n.disposeIntermediateTensorInfo(a),u}if(r.dtype==="complex64"){const o=b0({inputs:{input:r},backend:n}),a=bT({inputs:{x:o},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(o),a}if(!UW(r.dtype,i)){const o=Yr({inputs:{x:r},backend:n});return{dataId:o.dataId,shape:o.shape,dtype:i}}if(n.shouldExecuteOnCPU([r])){const o=n.texData.get(r.dataId).values,[a,u,l]=s7t(o,r.shape,r.dtype,i);return n.makeTensorInfo(a,u,l)}if(i==="int32")return Xqt(r,n);if(i==="bool"){const o=n.makeTensorInfo([],"bool",As("bool",1)),u=g7({inputs:{a:r,b:o},backend:n});return n.disposeIntermediateTensorInfo(o),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const Yqt={kernelName:Lm,backendName:"webgl",kernelFunc:bT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x7="return ceil(x);",Zqt=Re({opSnippet:x7,packedOpSnippet:x7,cpuKernelImpl:r7t}),Jqt={kernelName:zm,backendName:"webgl",kernelFunc:Zqt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qqt{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tjt{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ejt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:i,clipValueMax:o}=s;let a;pt().getBool("WEBGL_PACK_CLIP")?a=new tjt(r.shape):a=new Qqt(r.shape);const u=[[i],[o]];return n.runWebGLProgram(a,[r],r.dtype,u)}const njt={kernelName:Bm,backendName:"webgl",kernelFunc:ejt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sjt{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function rjt(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),i=new sjt(s.shape),o=[b7(s,r.complexTensorInfos.real),b7(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(i,o,o[0].dtype)}const ijt={kernelName:ly,backendName:"webgl",kernelFunc:rjt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ojt{constructor(t){this.outputShape=[],this.outputShape=la(t,1),this.variableNames=t.map((o,a)=>`T${a}`);const n=new Array(t.length-1);n[0]=t[0][1];for(let o=1;o<n.length;o++)n[o]=n[o-1]+t[o][1];const s=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<n.length;o++){const a=n[o-1];s.push(`else if (yC < ${n[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const r=n.length,i=n[n.length-1];s.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ajt{constructor(t,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=la(t,n);const s=this.outputShape,r=s.length,i=un(r),o=lr("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((m,g)=>`T${g}`);const u=new Array(t.length-1);u[0]=t[0][n];for(let m=1;m<u.length;m++)u[m]=u[m-1]+t[m][n];const l=a[n],c=a.slice(-2),h=a.join();let d=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let m=1;m<u.length;m++){const g=u[m-1];d+=`
        if (${l} < ${u[m]}  && ${l} >= ${u[m-1]}) {
          return getChannel(
            getT${m}(${xv(a,l,g)}),
            vec2(${xv(c,l,g)}));
        }`}const p=u.length,f=u[u.length-1];d+=`
        return getChannel(
          getT${p}(${xv(a,l,f)}),
          vec2(${xv(c,l,f)}));`,this.userCode=`
      float getValue(${a.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[r-1]} = ${o[r-1]} + 1;
        if (${o[r-1]} < ${s[r-1]}) {
          result.g = getValue(${o});
        }

        ${o[r-2]} = ${o[r-2]} + 1;
        if (${o[r-2]} < ${s[r-2]}) {
          result.a = getValue(${o});
        }

        ${o[r-1]} = ${o[r-1]} - 1;
        if (${o[r-2]} < ${s[r-2]} &&
            ${o[r-1]} < ${s[r-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function xv(e,t,n){const s=e.indexOf(t);return e.map((i,o)=>o===s?`${i} - ${n}`:i).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bv(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Yr({inputs:{x:r.complexTensorInfos.imag},backend:n})}const ujt={kernelName:nN,backendName:"webgl",kernelFunc:bv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y0(e,t,n){const s=e[0].dtype;if(s==="complex64"){const p=e.map(b=>b0({inputs:{input:b},backend:n})),f=e.map(b=>bv({inputs:{input:b},backend:n})),m=y0(p,t,n),g=y0(f,t,n),x=tl({inputs:{real:m,imag:g},backend:n});return p.forEach(b=>n.disposeIntermediateTensorInfo(b)),f.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),x}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){const p=e.map(y=>{const k=[-1,xt(y.shape.slice(t))];return Pt({inputs:{x:y},backend:n,attrs:{shape:k}})}),f=p.map(y=>({vals:n.readSync(y.dataId),shape:y.shape})),m=la(p.map(y=>y.shape),1),g=p[0].shape[0]===1,x=i7t(f,m,s,g),b=la(e.map(y=>y.shape),t),w=n.makeTensorInfo(b,s,x);return p.forEach(y=>n.disposeIntermediateTensorInfo(y)),w}const i=e.filter(p=>xt(p.shape)>0),o=pt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){const p=o?new ba(e[0].shape,Ju):new Qu(e[0].shape,Ju);return n.runWebGLProgram(p,e,s)}const a=pt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>a){const p=[];for(let m=0;m<i.length;m+=a){const g=i.slice(m,m+a);p.push(y0(g,t,n))}const f=y0(p,t,n);for(const m of p)n.disposeIntermediateTensorInfo(m);return f}if(o){const p=new ajt(i.map(f=>f.shape),t);return n.runWebGLProgram(p,i,s)}const{tensors2D:u,outShape:l}=ljt(i,t,n),c=new ojt(u.map(p=>p.shape)),h=n.runWebGLProgram(c,u,s);u.forEach(p=>n.disposeIntermediateTensorInfo(p));const d=Pt({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function ljt(e,t,n){const s=la(e.map(i=>i.shape),t);return{tensors2D:e.map(i=>Pt({inputs:{x:i},attrs:{shape:[-1,xt(i.shape.slice(t))]},backend:n})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,i=ve(r,t[0].shape)[0],o=t.map(l=>l.shape);WE(o,i);const a=la(t.map(l=>l.shape),i);if(xt(a)===0)return n.makeTensorInfo(a,t[0].dtype,[]);const u=t.filter(l=>xt(l.shape)>0);return u.length===1?Yr({inputs:{x:u[0]},backend:n}):y0(u,i,n)}const cjt={kernelName:cy,backendName:"webgl",kernelFunc:y7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w7{constructor(t,n=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,a=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4,g=t.dataFormat==="channelsLast",x=g?1:2,b=g?2:3,w=g?3:1;let y="",v="";s&&(r?y=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?y=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:y=`
          float activation(float x) {
            ${s}
          }
        `,v="result = activation(result);");const k=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${v}
        setOutput(result);
      }
    `}}class hjt{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const n=t.padInfo.front,s=t.padInfo.top,r=t.padInfo.left,i=t.strideDepth,o=t.strideHeight,a=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,c=t.dilationWidth,h=t.filterDepth,d=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${o}, ${a});
      const ivec3 pads = ivec3(${n}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v7{constructor(t,n=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ur(this.outputShape.length);const o=t.padInfo.left,a=t.strideWidth,u=t.dilationWidth,l=t.filterHeight,c=t.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<c;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const x=g*2;if(d+=`
           xC = xCCorner + ${x*u};
           `,a===1){if(x<c&&(o%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,u===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<c)){const b=o%2===0?IS(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,u>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):b===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<c&&(o%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<c&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<c&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<c&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:i?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class djt{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=ur(this.outputShape.length);const{dataFormat:s}=n,r=ar(),i=s==="channelsLast",o=i?1:2,a=i?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let l="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)l+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yv(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function k7({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const u=e.shape,l=s.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p=n.dataFormat==="channelsLast",f=!1,m=!1;let g;const x=[];if(i!=null){const y=yv(i.shape,p);y!=null&&(i=Pt({inputs:{x:i},backend:s,attrs:{shape:y}}),x.push(i))}if(r!=null){const y=yv(r.shape,p);y!=null&&(r=Pt({inputs:{x:r},backend:s,attrs:{shape:y}}),x.push(r))}if(!((h===1||d===1)&&c>c7)&&l.isPacked&&p&&l.texture!=null&&u[2]%2!==0&&We(l.shape.slice(-3),u.slice(-3))){const y=u[0]*u[1]*(u[2]+1),v={dataId:e.dataId,shape:[1,y,n.inChannels],dtype:e.dtype},k=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,L(lv(l.shape,v.shape),()=>`packed reshape ${l.shape} to ${v.shape} isn't free`);const C=Pt({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});x.push(C);const I=mv({a:v,b:C,backend:s,transposeA:f,transposeB:m,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o}),$=s.texData.get(I.dataId);L($.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=k,$.shape=n.outShape,g=Yr({inputs:{x:I},backend:s}),g.shape=n.outShape,x.push(I)}else{const y=n.outHeight*n.outWidth,v=Pt({inputs:{x:e},backend:s,attrs:{shape:p?[n.batchSize,y,n.inChannels]:[n.batchSize,n.inChannels,y]}}),k=Pt({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),C=mv({a:p?v:k,b:p?k:v,transposeA:!p,transposeB:m,backend:s,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o});g=Pt({inputs:{x:C},backend:s,attrs:{shape:n.outShape}}),x.push(v),x.push(k),x.push(C)}for(const y of x)s.disposeIntermediateTensorInfo(y);return g}function I7({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f=p==="channelsLast",m=u*l*c,g=d*h,x=[n.batchSize,m,g],b=!0,w=!1,y=[];if(i!=null){const _=yv(i.shape,f);_!=null&&(i=Pt({inputs:{x:i},backend:s,attrs:{shape:_}}),y.push(i))}if(r!=null){const _=yv(r.shape,f);_!=null&&(r=Pt({inputs:{x:r},backend:s,attrs:{shape:_}}),y.push(r))}const v=Pt({inputs:{x:t},backend:s,attrs:{shape:[1,m,xt(t.shape)/m]}});y.push(v);const k=new djt(x,n),C=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=s.runWebGLProgram(k,[e],"float32",C),$=Pt({inputs:{x:I},backend:s,attrs:{shape:x}});y.push(I),y.push($);const S=r!=null,N=i!=null,F=a==="leakyrelu",D=a?g0(a,!0):null,E=new i7(f?$.shape:v.shape,f?v.shape:$.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,w,S,D,N,F),A=f?[$,v]:[v,$];if(r&&A.push(r),N&&A.push(i),F){const _=s.makeTensorInfo([],"float32",Ru(o,"float32"));A.push(_),y.push(_)}const T=s.runWebGLProgram(E,A,"float32"),R=Pt({inputs:{x:T},backend:s,attrs:{shape:n.outShape}});y.push(T);for(const _ of y)s.disposeIntermediateTensorInfo(_);return R}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pjt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=s,h=Ua(u),d=Fs(r.shape,i.shape,o,l,a,c,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=k7({x:r,filter:i,convInfo:d,backend:n});else if(d.strideWidth<=2&&h==="channelsLast"&&pt().getBool("WEBGL_EXP_CONV")){const m=new v7(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(m,[r,i],"float32",g)}else if(pt().getBool("WEBGL_CONV_IM2COL"))p=I7({x:r,filter:i,convInfo:d,backend:n});else{const m=new w7(d);p=n.runWebGLProgram(m,[r,i],"float32")}const f=Pt({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}const fjt={kernelName:hy,backendName:"webgl",kernelFunc:pjt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mjt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const n=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,o=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              if (${o}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class gjt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const n=t.filterHeight,s=t.filterWidth,r=t.strideHeight,i=t.strideWidth,o=t.dataFormat==="channelsLast",a=n-1-t.padInfo.top,u=s-1-t.padInfo.left,l=o?1:2,c=o?2:3,h=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xjt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const n=t.strideDepth,s=t.strideHeight,r=t.strideWidth,i=t.padInfo.front,o=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${i};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${o};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class bjt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const n=t.filterDepth,s=t.filterHeight,r=t.filterWidth,i=t.strideDepth,o=t.strideHeight,a=t.strideWidth,u=n-1-t.padInfo.front,l=s-1-t.padInfo.top,c=r-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yjt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:o,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=s,h=Ua(u),d=Fs(r.shape,c,o,1,a,l,!1,h),p=new mjt(d);return n.runWebGLProgram(p,[r,i],"float32")}const wjt={kernelName:PS,backendName:"webgl",kernelFunc:yjt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vjt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{inputShape:o,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=s,h=Ua(l),d=Fs(o,i.shape,a,1,u,c,!1,h),p=new gjt(d);return n.runWebGLProgram(p,[r,i],"float32")}const kjt={kernelName:dy,backendName:"webgl",kernelFunc:vjt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ijt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dilations:u}=s,l=Lu(r.shape,i.shape,o,u,a),c=new hjt(l);return n.runWebGLProgram(c,[r,i],"float32")}const Cjt={kernelName:py,backendName:"webgl",kernelFunc:Ijt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $jt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:o,pad:a,filterShape:u}=s,l=Lu(r.shape,u,o,1,a),c=new xjt(l);return n.runWebGLProgram(c,[r,i],"float32")}const Sjt={kernelName:WS,backendName:"webgl",kernelFunc:$jt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Njt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{pad:o,strides:a,inputShape:u}=s,l=Lu(u,i.shape,a,1,o),c=new bjt(l);return n.runWebGLProgram(c,[r,i],"float32")}const Ejt={kernelName:VS,backendName:"webgl",kernelFunc:Njt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Djt=qd+`
  return cos(x);
`,Tjt=Re({opSnippet:Djt}),Ajt={kernelName:Pm,backendName:"webgl",kernelFunc:Tjt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fjt=Re({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`}),Rjt={kernelName:Wm,backendName:"webgl",kernelFunc:Fjt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _jt{constructor(t,n,s,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,u,l]=t,[c]=n,[h,d]=s;this.outputShape=[c,h,d,l];const p=r==="bilinear"?1:0,[f,m]=[`${a-1}.0`,`${u-1}.0`],[g,x,b]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[w,y,v]=d>1?[`${(u-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${y};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mjt={kernelName:GS,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:i,boxInd:o}=t,{cropSize:a,method:u,extrapolationValue:l}=s,c=new _jt(r.shape,i.shape,a,u,l);return n.runWebGLProgram(c,[r,i,o],"float32")}};var w0;(function(e){e.Prod="*",e.Sum="+"})(w0||(w0={}));class C7{constructor(t,n,s,r){this.op=t,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,o=this.op===w0.Prod?"1.0":"0.0",a=s?o:`getX(${$7(i,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let l="",c="";s?(l=r?`end != ${u-1}`:"end != 0",c=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${u}`:"end >= pow2",c=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${un(i)} coords = getOutputCoords();
        int end = ${S7(i,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${c};
          ${S7(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${$7(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function $7(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function S7(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(e,t,n,s,r,i){const o=t.shape.length,a=Sn([s],o);let u=t;a!=null&&(u=cr({inputs:{x:t},backend:n,attrs:{perm:a}}));const l=On(1,o)[0];if(l!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=u.shape[l];let h=Yr({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new C7(e,u.shape,!1,i),f=[[d]],m=h;h=n.runWebGLProgram(p,[h],h.dtype,f),n.disposeIntermediateTensorInfo(m)}if(r){const d=new C7(e,u.shape,r,i),p=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(p)}if(a!=null){const d=zu(a),p=cr({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ojt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:o,reverse:a}=s;return N7(w0.Prod,r,n,i,o,a)}const Ljt={kernelName:US,backendName:"webgl",kernelFunc:Ojt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zjt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:o,reverse:a}=s;return N7(w0.Sum,r,n,i,o,a)}const Bjt={kernelName:fy,backendName:"webgl",kernelFunc:zjt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pjt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:o,binaryOutput:a}=s;if(r.shape.length===1){const u=n.readSync(r.dataId),l=n.readSync(i.dataId),c=qH(u,l,i.dtype,i.shape,o);return n.makeTensorInfo([o],i.dtype,c)}else if(r.shape.length===2){const u=n.bufferSync(r),l=n.bufferSync(i),c=n7t(u,l,o,a);return n.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const Wjt={kernelName:HS,backendName:"webgl",kernelFunc:Pjt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vjt{constructor(t,n,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=n,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ujt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:i,dataFormat:o}=s,a=r.shape[0],u=o==="NHWC"?r.shape[1]:r.shape[2],l=o==="NHWC"?r.shape[2]:r.shape[3],c=o==="NHWC"?r.shape[3]:r.shape[1],h=u*i,d=l*i,p=c/(i*i),f=o==="NHWC"?[a,h,d,p]:[a,p,h,d],m=new Vjt(f,i,o);return n.runWebGLProgram(m,[r],r.dtype)}const Gjt={kernelName:qS,backendName:"webgl",kernelFunc:Ujt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E7{constructor(t,n=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ur(this.outputShape.length);const o=t.filterHeight,a=t.filterWidth,u=t.outChannels/t.inChannels;let l="",c="";s&&(r?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:l=`
          float activation(float x) {
            ${s}
          }
        `,c="result = activation(result);");const h=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D7{constructor(t,n=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=ur(this.outputShape.length);const o=t.outChannels/t.inChannels,a=t.padInfo.left,u=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)p+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let x=0;x<h;x++)p+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const b=x*2;if(p+=`
          xC = xCCorner + ${b*l};
          `,u===1){if(b<h&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,l===1&&b>0?p+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<h)){const w=a%2===0?IS(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,l>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:p+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):w===1?p+=`
                    xC${b+1} = xTexelC${b};
                    `:p+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<h&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<h&&(p+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<h&&(p+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<h&&(p+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hjt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dilations:u,dimRoundingMode:l}=s;let c=u;c==null&&(c=[1,1]),L(Gs(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const h=Fs(r.shape,i.shape,o,c,a,l,!0);let d;pt().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new D7(h):d=new E7(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,i],"float32",p)}const qjt={kernelName:my,backendName:"webgl",kernelFunc:Hjt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jjt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const n=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Kjt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const n=t.filterHeight,s=t.filterWidth,r=t.strideHeight,i=t.strideWidth,o=n-1-t.padInfo.top,a=s-1-t.padInfo.left,u=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xjt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:o,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=s,h=Fs(r.shape,c,o,a,u,l,!0),d=new jjt(h);return n.runWebGLProgram(d,[r,i],"float32")}const Yjt={kernelName:jS,backendName:"webgl",kernelFunc:Xjt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zjt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{strides:o,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=s,h=Fs(c,i.shape,o,a,u,l,!0),d=new Kjt(h);return n.runWebGLProgram(d,[r,i],"float32")}const Jjt={kernelName:KS,backendName:"webgl",kernelFunc:Zjt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qjt{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tKt(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],i=xt(s.shape),o=Pt({inputs:{x:s},backend:n,attrs:{shape:[i]}}),a=new Qjt(i),u=n.runWebGLProgram(a,[o],o.dtype),l=Pt({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}const eKt={kernelName:YW,backendName:"webgl",kernelFunc:tKt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nKt{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:n,inWidth:s,padInfo:r,strideHeight:i,strideWidth:o,filterHeight:a,filterWidth:u,dilationHeight:l,dilationWidth:c}=t,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sKt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:o,pad:a,dilations:u}=s,l=Fg(r.shape,i.shape,o,a,"NHWC",u);let c;const h=new nKt(l);c=n.runWebGLProgram(h,[r,i],"float32");const d=Pt({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}const rKt={kernelName:gy,backendName:"webgl",kernelFunc:sKt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iKt(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,i=t,{allDims:o,summedDims:a,idDims:u}=tD(r,i.length);nD(o.length,u,i);const{path:l,steps:c}=sD(a,u),h=c.length;let d=null,p=o.length;const f=[];for(let m=0;m<h;++m){for(const g of c[m]){const{permutationIndices:x,expandDims:b}=eD(p,u[g]);let w;rD(x)?w=i[g]:(w=cr({inputs:{x:i[g]},backend:n,attrs:{perm:x}}),f.push(w));const y=w.shape.slice();for(let v=0;v<b.length;++v)y.splice(b[v],0,1);We(w.shape,y)||(w=Pt({inputs:{x:w},backend:n,attrs:{shape:y}}),f.push(w)),d===null?d=w:(d=mT({inputs:{a:w,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=fv({inputs:{x:d},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}const oKt={kernelName:ZW,backendName:"webgl",kernelFunc:iKt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aKt=Re({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),uKt={kernelName:Um,backendName:"webgl",kernelFunc:aKt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lKt="return (b >= 1.0) ? a : a * (b + 1.0);",cKt=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,hKt={kernelName:ZS,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,i=pt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new m0(cKt,s.shape,r.shape):new Hd(lKt,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dKt=Ms({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:o7t}),pKt={kernelName:xy,backendName:"webgl",kernelFunc:dKt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fKt=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${qE};
  float a1 = ${jE};
  float a2 = ${KE};
  float a3 = ${XE};
  float a4 = ${YE};
  float a5 = ${ZE};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,mKt=Re({opSnippet:fKt}),gKt={kernelName:Gm,backendName:"webgl",kernelFunc:mKt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xKt=qd+`
  return exp(x);
`,T7=Re({opSnippet:xKt,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:a7t,dtype:"float32"}),bKt={kernelName:Hm,backendName:"webgl",kernelFunc:T7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yT(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:i}=t,o=i.shape.length,a=i.shape.slice();let u=r;return r<0&&(L(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+r+1),a.splice(u,0,1),Pt({inputs:{x:i},backend:s,attrs:{shape:a}})}const yKt={kernelName:by,backendName:"webgl",kernelFunc:yT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A7="return exp(x) - 1.0;",wKt=Re({opSnippet:A7,packedOpSnippet:A7,cpuKernelImpl:u7t}),vKt={kernelName:qm,backendName:"webgl",kernelFunc:wKt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F7{constructor(t,n,s){this.variableNames=["real","imag"];const r=n[1];this.outputShape=n;const i=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=s?`${r}.0`:"1.0";let a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(e,t,n){const s=n.texData.get(e.dataId),r=xt(e.shape),i=e.shape[e.shape.length-1],o=r/i,a=Pt({inputs:{x:e},backend:n,attrs:{shape:[o,i]}}),u=a.shape,l=new F7("real",u,t),c=new F7("imag",u,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],d=n.runWebGLProgram(l,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=tl({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const m=Pt({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kKt(e){const{inputs:t,backend:n}=e,{input:s}=t;return R7(s,!1,n)}const IKt={kernelName:JS,backendName:"webgl",kernelFunc:kKt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CKt{constructor(t,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v0(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:i}=n;if(i=i||Dm(r),i==="string"){const o=Hn(i,xt(s));return o.fill(r),t.makeTensorInfo(s,i,o)}else{const o=new CKt(s,r),a=[[r]];return t.runWebGLProgram(o,[],i,a)}}const $Kt={kernelName:QS,backendName:"webgl",kernelFunc:v0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SKt{constructor(t){this.variableNames=["Image"],this.outputShape=[];const n=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NKt={kernelName:tN,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new SKt(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _7="return floor(x);",EKt=Re({opSnippet:_7,packedOpSnippet:_7,cpuKernelImpl:l7t}),DKt={kernelName:jm,backendName:"webgl",kernelFunc:EKt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TKt=Ms({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"}),AKt={kernelName:Km,backendName:"webgl",kernelFunc:TKt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FKt{constructor(t){this.variableNames=["A"];const n=ar(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RKt{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=ar(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Kt={kernelName:DAt,backendName:"webgl",kernelFunc:MKt};let Kd,wT=pt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function MKt(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:i}=s,o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[u,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[l,u],h=[l,u,i];if(a||o){const m=pt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Kd==null||m!==wT)&&(wT=m,Kd=document.createElement("canvas").getContext("2d",{willReadFrequently:wT})),Kd.canvas.width=u,Kd.canvas.height=l,Kd.drawImage(r,0,0,u,l),r=Kd.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=mi.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=pt().getBool("WEBGL_PACK")?new RKt(h):new FKt(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OKt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:o,preluActivationWeights:a}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=Ua(c),g=Fs(r.shape,i.shape,u,h,l,d,!1,m);let x;const b=[],w=o!=null,y=a!=null,v=p==="leakyrelu",k=()=>{const I=[r,i],$=(S,N)=>{if(N==="NCHW"&&S.shape.length===1&&S.shape[0]!==1){const F=Pt({inputs:{x:S},backend:n,attrs:{shape:[S.shape[0],1,1]}});return b.push(F),F}return S};if(w&&I.push($(o,c)),y&&I.push($(a,c)),v){const S=n.makeTensorInfo([],"float32",Ru(f,"float32"));I.push(S),b.push(S)}return I};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=k7({x:r,filter:i,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&pt().getBool("WEBGL_EXP_CONV")){const I=p?g0(p,!0):null,$=new v7(g,w,I,y,v),S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=k();x=n.runWebGLProgram($,N,"float32",S)}else if(pt().getBool("WEBGL_CONV_IM2COL"))x=I7({x:r,filter:i,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const I=p?g0(p,!1):null,$=new w7(g,w,I,y,v),S=k();x=n.runWebGLProgram($,S,"float32")}const C=Pt({inputs:{x},backend:n,attrs:{shape:g.outShape}});return b.push(x),b.forEach(I=>n.disposeIntermediateTensorInfo(I)),C}const LKt={kernelName:sw,backendName:"webgl",kernelFunc:OKt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zKt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:o,preluActivationWeights:a}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let m=c;m==null&&(m=[1,1]),L(Gs(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const g=Fs(r.shape,i.shape,u,m,l,h,!0),x=pt().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?g0(d,x):null,w=[r,i],y=o!=null,v=a!=null,k=d==="leakyrelu";if(y&&w.push(o),v&&w.push(a),k){const S=n.makeTensorInfo([],"float32",Ru(p,"float32"));w.push(S),f.push(S)}let C;x?C=new D7(g,y,b,v,k):C=new E7(g,y,b,v,k);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],$=n.runWebGLProgram(C,w,"float32",I);return f.forEach(S=>n.disposeIntermediateTensorInfo(S)),$}const BKt={kernelName:uV,backendName:"webgl",kernelFunc:zKt};class PKt{constructor(t,n,s,r){this.sliceDim=t,this.strides=n,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const i=un(s.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WKt(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,i=r.shape,o=i[i.length-1],a=xt(s.shape),[u,l,c,h]=_E(s,r),d=Pt({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),p=Pt({inputs:{x:s},backend:n,attrs:{shape:[xt(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const x=n.readSync(r.dataId),b=n.bufferSync(s),w=c7t(x,b,s.dtype,l,o,c,h,s.shape,a);return n.makeTensorInfo(u,s.dtype,w.values)}const f=new PKt(o,h,[l,c],s.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=Pt({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}const VKt={kernelName:JW,backendName:"webgl",kernelFunc:WKt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UKt{constructor(t,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const s=un(this.rank),r=GKt(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function GKt(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M7(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:i}=t,{axis:o,batchDims:a}=s,u=ve(o,r.shape)[0];if(pt().get("DEBUG")){const b=n.readSync(i.dataId),w=r.shape[u];for(let y=0;y<b.length;++y){const v=b[y];L(v<=w-1&&v>=0,()=>`GatherV2: the index value ${v} is not in [0, ${w-1}]`)}}const l=aD(r,i,u,a),c=xt(i.shape),h=[],d=Pt({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=Pt({inputs:{x:i},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,i])||r.dtype==="string"){const b=n.bufferSync(p),w=n.bufferSync(d),y=h7t(w,b,f);return h.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.makeTensorInfo(l.outputShape,y.dtype,y.values)}const m=new UKt(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const x=Pt({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach(b=>n.disposeIntermediateTensorInfo(b)),x}const HKt={kernelName:wy,backendName:"webgl",kernelFunc:M7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qKt=Ms({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:d7t,dtype:"bool"}),jKt={kernelName:vy,backendName:"webgl",kernelFunc:qKt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KKt=Ms({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:p7t}),XKt={kernelName:Xm,backendName:"webgl",kernelFunc:KKt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YKt(e){const{inputs:t,backend:n}=e,{input:s}=t;return R7(s,!0,n)}const ZKt={kernelName:eN,backendName:"webgl",kernelFunc:YKt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JKt=Re({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),QKt={kernelName:Zm,backendName:"webgl",kernelFunc:JKt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tXt=Re({opSnippet:"return float(isinf(x));",dtype:"bool"}),eXt={kernelName:Jm,backendName:"webgl",kernelFunc:tXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nXt=Re({opSnippet:"return float(isnan(x));",dtype:"bool"}),sXt={kernelName:Qm,backendName:"webgl",kernelFunc:nXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rXt=Ms({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:f7t,dtype:"bool"}),iXt={kernelName:Iy,backendName:"webgl",kernelFunc:rXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oXt=Ms({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:m7t,dtype:"bool"}),aXt={kernelName:Cy,backendName:"webgl",kernelFunc:oXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uXt(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:i}=n,o=g7t(s,r,i);return t.makeTensorInfo([o.length],"float32",o)}const lXt={kernelName:QW,backendName:"webgl",kernelFunc:uXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cXt=qd+`
  return x < 0.0 ? 0./0. : log(x);
`,hXt=Re({opSnippet:cXt,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:x7t}),dXt={kernelName:tg,backendName:"webgl",kernelFunc:hXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pXt=qd+`
  return log(1.0 + x);
`,fXt=Re({opSnippet:pXt}),mXt={kernelName:eg,backendName:"webgl",kernelFunc:fXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gXt=Ms({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),xXt={kernelName:$y,backendName:"webgl",kernelFunc:gXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bXt=Re({opSnippet:"return float(!(x >= 1.0));"}),yXt={kernelName:Sy,backendName:"webgl",kernelFunc:bXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wXt=Ms({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"}),vXt={kernelName:Ny,backendName:"webgl",kernelFunc:wXt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kXt{constructor(t,n,s,r,i){this.variableNames=["x"],this.outputShape=[];const o=n,a=t[3]-1;this.outputShape=t;let u;const l=`float(${s}) + float(${r}) * sum`;i===.5?u=`inversesqrt(${l})`:i===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IXt{constructor(t,n,s,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=n,a=t[3]-1;this.outputShape=t;let u;const l=`float(${s}) + float(${r}) * sum`;i===.5?u=`inversesqrt(${l})`:i===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CXt={kernelName:Ey,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:i,bias:o,alpha:a,beta:u}=s,l=pt().getBool("WEBGL_PACK_NORMALIZATION")?new IXt(r.shape,i,o,a,u):new kXt(r.shape,i,o,a,u);return n.runWebGLProgram(l,[r],r.dtype)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $Xt{constructor(t,n,s,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=n,this.bias=s,this.alpha=r,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SXt={kernelName:sN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:i,dy:o}=t,{depthRadius:a,bias:u,alpha:l,beta:c}=s,h=new $Xt(r.shape,a,u,l,c);return n.runWebGLProgram(h,[r,i,o],r.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NXt(e,t,n,s){const r=xt(t),o=xt(e.shape)/r,a=Pt({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),u=Wc(a,e.dtype,"max",s),l=Pt({inputs:{x:u},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(u),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O7(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:i,keepDims:o}=s,a=r.shape.length,u=ve(i,r.shape);let l=u;const c=Sn(l,a),h=c!=null,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const w=n.texData.get(p.dataId).values,y=new Array(a);for(let C=0;C<y.length;C++)y[C]=r.shape[c[C]];const v=pT(w,r.shape,r.dtype,c,y);p=n.makeTensorInfo(y,r.dtype);const k=n.texData.get(p.dataId);k.values=v}else p=pv(r,c,n);l=On(l.length,a)}Rs("max",l,a);const[f,m]=xs(p.shape,l);let g=f;o&&(g=Mn(f,u));let x;if(d){const w=n.texData.get(p.dataId).values,y=b7t(w,xt(m),g,r.dtype);x=n.makeTensorInfo(g,r.dtype);const v=n.texData.get(x.dataId);v.values=y}else x=NXt(p,m,g,n);return h&&n.disposeIntermediateTensorInfo(p),x}const EXt={kernelName:Dy,backendName:"webgl",kernelFunc:O7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DXt=fT+`
  return max(a, b);
`,TXt=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+f0+`
  return result;
`,AXt=Ms({opSnippet:DXt,packedOpSnippet:TXt,cpuKernelImpl:y7t}),FXt={kernelName:ng,backendName:"webgl",kernelFunc:AXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RXt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;d0(r,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=s,l=1;L(Gs(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=Oi(r.shape,i,o,l,a,u);if(c.filterWidth===1&&c.filterHeight===1&&We(c.inShape,c.outShape))return Yr({inputs:{x:r},backend:n});const h=new x0(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}const _Xt={kernelName:Ty,backendName:"webgl",kernelFunc:RXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MXt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:o,pad:a,dataFormat:u,dimRoundingMode:l}=s,c=[1,1,1],h=Va(r.shape,i,o,c,a,l,u),d=new gT(h,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}const OXt={kernelName:Ay,backendName:"webgl",kernelFunc:MXt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LXt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const n=t.strideHeight,s=t.strideWidth,r=t.dilationHeight,i=t.effectiveFilterHeight,o=t.effectiveFilterWidth,a=i-1-t.padInfo.top,u=o-1-t.padInfo.left,l=i*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class zXt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const n=t.strideDepth,s=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,a=t.dilationWidth,u=t.effectiveFilterDepth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,h=u-1-t.padInfo.front,d=l-1-t.padInfo.top,p=c-1-t.padInfo.left,f=u*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BXt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,o=i,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=s,h=[1,1,1],d=Va(o.shape,a,u,h,l,c),p=new gT(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new zXt(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}const PXt={kernelName:iN,backendName:"webgl",kernelFunc:BXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WXt(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i,output:o}=t,a=i;d0([i,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,d=Oi(a.shape,u,l,1,c,h),p=!0,f=new x0(d,"max",p),m=n.runWebGLProgram(f,[a],a.dtype),g=new LXt(d),x=n.runWebGLProgram(g,[r,m],a.dtype);return n.disposeIntermediateTensorInfo(m),x}const VXt={kernelName:rN,backendName:"webgl",kernelFunc:WXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UXt(e,t,n,s){let r=new x0(n,"max",!1);const i=s.runWebGLProgram(r,[e],"float32");r=new x0(n,"max",!0,!0,t);const o=s.runWebGLProgram(r,[e],"float32");return[i,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GXt={kernelName:tV,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:i,pad:o,includeBatchInIndex:a}=t,u=n;L(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const l=[1,1];L(Gs(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const c=Oi(s.shape,r,i,l,o),[h,d]=UXt(s,a,c,u);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HXt(e,t,n,s){const r=xt(t),o=xt(e.shape)/r,a=Pt({inputs:{x:e},attrs:{shape:[o,r]},backend:s}),u=Wc(a,"float32","mean",s),l=Pt({inputs:{x:u},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(u),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qXt={kernelName:Fy,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:i}=t,o=n,a=s.shape.length,u=ve(i,s.shape);let l=u;const c=Sn(l,a),h=c!=null,d=o.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const y=o.texData.get(f.dataId).values,v=new Array(a);for(let I=0;I<v.length;I++)v[I]=s.shape[c[I]];const k=pT(y,s.shape,s.dtype,c,v);f=o.makeTensorInfo(v,s.dtype);const C=o.texData.get(f.dataId);C.values=k}else f=pv(s,c,o);p.push(f),l=On(l.length,a)}Rs("sum",l,a);const[m,g]=xs(f.shape,l);let x=m;r&&(x=Mn(m,u));const b=HXt(f,g,x,o);for(const w of p)o.disposeIntermediateTensorInfo(w);return b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jXt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s,a=r.shape.length,u=ve(i,r.shape);let l=u;const c=Sn(l,a);let h=r;c!=null&&(h=cr({inputs:{x:r},backend:n,attrs:{perm:c}}),l=On(l.length,r.shape.length)),Rs("min",l,a);const[d,p]=xs(h.shape,l),f=xt(p),m=Pt({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=Wc(m,m.dtype,"min",n);let x;if(o){const b=Mn(d,u);x=Pt({inputs:{x:g},backend:n,attrs:{shape:b}})}else x=Pt({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),x}const KXt={kernelName:Ry,backendName:"webgl",kernelFunc:jXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XXt=fT+`
  return min(a, b);
`,YXt=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+f0+`
  return result;
`,ZXt=Ms({opSnippet:XXt,packedOpSnippet:YXt,cpuKernelImpl:w7t}),JXt={kernelName:sg,backendName:"webgl",kernelFunc:ZXt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QXt{constructor(t,n,s){this.variableNames=["x"],this.outputShape=n.map((c,h)=>c[0]+t[h]+c[1]);const r=t.length,i=un(r),o=n.map(c=>c[0]).join(","),a=n.map((c,h)=>c[0]+t[h]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${o});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tYt{constructor(t,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((f,m)=>f[0]+t[m]+f[1]);const r=t.length,i=un(r),o=n.map(f=>f[0]).join(","),a=n.map((f,m)=>f[0]+t[m]).join(","),u=lr("rc",r),l=lr("source",r),c=`${u[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${l.slice(-2).join()})`,d=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${u[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
      `}else{const f=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${u[r-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
        rc = outputLoc;
        ${u[r-2]} += 1;
        if(${u[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${l.join()}), ${h});
          ${u[r-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${l.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${o});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eYt={kernelName:_y,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:i}=n,o=pt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tYt(s.shape,r,i):new QXt(s.shape,r,i);return t.runWebGLProgram(o,[s],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nYt=`if (b == 0.0) return NAN;
  return mod(a, b);`,sYt=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+f0+`
  return result;
`,rYt=Ms({opSnippet:nYt,packedOpSnippet:sYt}),iYt={kernelName:rg,backendName:"webgl",kernelFunc:rYt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oYt{constructor(t,n,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L7=Ms({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),aYt={kernelName:Vm,backendName:"webgl",kernelFunc:L7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z7="return a - b;",B7=Ms({opSnippet:z7,packedOpSnippet:z7,supportsComplex:!0,cpuKernelImpl:P7t}),uYt={kernelName:wg,backendName:"webgl",kernelFunc:B7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P7(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:i}=s,o=ve([i],r.shape),a=O7({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=Mn(a.shape,o),l=Pt({inputs:{x:a},backend:n,attrs:{shape:u}}),c=B7({inputs:{a:r,b:l},backend:n}),h=T7({inputs:{x:c},backend:n}),d=fv({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),p=Pt({inputs:{x:d},backend:n,attrs:{shape:u}}),f=L7({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const lYt={kernelName:Jy,backendName:"webgl",kernelFunc:P7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cYt(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:i,seed:o,normalized:a}=s,u=a?r:P7({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new oYt(l,c,i),d=[[o]],p=n.runWebGLProgram(h,[u],"int32",d);return a||n.disposeIntermediateTensorInfo(u),p}const hYt={kernelName:eV,backendName:"webgl",kernelFunc:cYt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dYt=ji+`
  return -x;
`,pYt=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function fYt(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const i=n.texData.get(s.dataId),[o,a]=k7t(i.values,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,o)}let r;return pt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Qu(s.shape,pYt):r=new ba(s.shape,dYt),n.runWebGLProgram(r,[s],s.dtype)}const mYt={kernelName:My,backendName:"webgl",kernelFunc:fYt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gYt=EE;function xYt(e){li("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=s,l=n.readSync(r.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=gYt(l,c,o,a,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const bYt={kernelName:oN,backendName:"webgl",kernelFunc:xYt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yYt=DE;function wYt(e){li("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=yYt(c,h,o,a,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const vYt={kernelName:aN,backendName:"webgl",kernelFunc:wYt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kYt=TE;function IYt(e){li("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),d=o,p=a,f=u,m=l,{selectedIndices:g,selectedScores:x}=kYt(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const CYt={kernelName:uN,backendName:"webgl",kernelFunc:IYt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $Yt{constructor(t,n,s,r){this.variableNames=["indices"],this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SYt={kernelName:zy,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:i,depth:o,onValue:a,offValue:u}=s,l=xt(r.shape),c=new $Yt(l,o,a,u),h=Pt({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=[...r.shape,o],f=Pt({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),f}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wv(e){const{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){const r=b0({inputs:{input:s},backend:n}),i=wv({inputs:{x:r},backend:n}),o=bv({inputs:{input:s},backend:n}),a=wv({inputs:{x:o},backend:n}),u=tl({inputs:{real:i,imag:a},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),u}else return v0({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}const NYt={kernelName:ew,backendName:"webgl",kernelFunc:wv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(e){const{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=b0({inputs:{input:s},backend:n}),i=W7({inputs:{x:r},backend:n}),o=bv({inputs:{input:s},backend:n}),a=wv({inputs:{x:o},backend:n}),u=tl({inputs:{real:i,imag:a},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),u}else return v0({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const EYt={kernelName:Ly,backendName:"webgl",kernelFunc:W7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DYt(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return yT({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const i=t[0].shape,o=t[0].dtype;t.forEach(c=>{Fi(i,c.shape,"All tensors passed to stack must have matching shapes"),L(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=t.map(c=>{const h=yT({inputs:{input:c},backend:n,attrs:{dim:r}});return a.push(h),h}),l=y7({inputs:u,backend:n,attrs:{axis:r}});return a.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}const TYt={kernelName:By,backendName:"webgl",kernelFunc:DYt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AYt{constructor(t,n,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((l,c)=>l[0]+t[c]+l[1]);const r=t.length,i=un(r),o=n.map(l=>l[0]).join(","),a=n.map((l,c)=>l[0]+t[c]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${o});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FYt{constructor(t,n,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((m,g)=>m[0]+t[g]+m[1]);const r=t.length,i=un(r),o=n.map(m=>m[0]).join(","),a=n.map((m,g)=>m[0]+t[g]).join(","),u=lr("rc",r),l=lr("source",r),c=`${u[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${i} rc = outputLoc;`,`${u[r-1]} += 1;
       if(${c}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${u[r-2]} += 1;
       if(${u[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${u[r-1]} += 1;
         if(${c}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${m}] = getChannel(getX(${l.join()}), ${h});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${o});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V7=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,constantValue:o}=s;if(xt(r.shape)===0){const l=i.map((c,h)=>c[0]+r.shape[h]+c[1]);return v0({backend:n,attrs:{shape:l,value:o,dtype:r.dtype}})}const a=pt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FYt(r.shape,i,o):new AYt(r.shape,i,o),u=[[o]];return n.runWebGLProgram(a,[r],r.dtype,u)},RYt={kernelName:Py,backendName:"webgl",kernelFunc:V7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Yt=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,MYt=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+f0+`
  return result;
`,OYt=Ms({opSnippet:_Yt,packedOpSnippet:MYt}),LYt={kernelName:og,backendName:"webgl",kernelFunc:OYt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zYt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:o}=s,a=r.shape.length,u=[],l=ve(i,r.shape);let c=l;const h=Sn(c,a);let d=r;h!=null&&(d=cr({inputs:{x:r},backend:n,attrs:{perm:h}}),c=On(c.length,a),u.push(d)),Rs("prod",c,a);let p;if(n.shouldExecuteOnCPU([d])){const f=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:x}=C7t(d.shape,d.dtype,f,c);p=n.makeTensorInfo(g,x,m)}else{const[f,m]=xs(d.shape,c),g=xt(m),x=Pt({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),b=ON(r.dtype),w=Wc(x,b,"prod",n);p=Pt({inputs:{x:w},backend:n,attrs:{shape:f}}),u.push(x),u.push(w)}if(o){u.push(p);const f=Mn(p.shape,l);p=Pt({inputs:{x:p},backend:n,attrs:{shape:f}})}return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const BYt={kernelName:Vy,backendName:"webgl",kernelFunc:zYt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PYt(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:o}=t,{outputRaggedRank:a}=s,u=r.map(x=>n.readSync(x.dataId)),l=r.map(x=>x.shape),c=n.readSync(i.dataId),h=n.readSync(o.dataId),[d,p,f]=$7t(u,l,c,i.shape,i.dtype,h,o.shape,a),m=d.map(x=>n.makeTensorInfo([x.length],"int32",x)),g=n.makeTensorInfo(f,i.dtype,p);return m.concat([g])}const WYt={kernelName:nV,backendName:"webgl",kernelFunc:PYt};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VYt(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:i}=t,o=n.readSync(s.dataId),a=n.readSync(r.dataId),u=n.readSync(i.dataId),[l,c]=S7t(o,s.shape,s.dtype,a,r.shape,u,i.shape),h=n.makeTensorInfo([l.length],"int32",l),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const UYt={kernelName:sV,backendName:"webgl",kernelFunc:VYt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GYt(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:i,defaultValue:o,rowPartitionTensors:a}=t,{rowPartitionTypes:u}=s,l=n.readSync(r.dataId),c=n.readSync(i.dataId),h=n.readSync(o.dataId),d=a.map(g=>n.readSync(g.dataId)),p=a.map(g=>g.shape),[f,m]=N7t(l,r.shape,c,i.shape,i.dtype,h,o.shape,d,p,u);return n.makeTensorInfo(f,i.dtype,m)}const HYt={kernelName:rV,backendName:"webgl",kernelFunc:GYt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U7=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:i,dtype:o}=n,a=E7t(s,r,i,o);return t.makeTensorInfo([a.length],o,a)},qYt={kernelName:lN,backendName:"webgl",kernelFunc:U7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jYt=Re({opSnippet:"return 1.0 / x;"}),KYt={kernelName:ag,backendName:"webgl",kernelFunc:jYt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XYt=ji+`
  return (x < 0.0) ? 0.0 : x;
`,YYt=Re({opSnippet:XYt,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),ZYt={kernelName:ug,backendName:"webgl",kernelFunc:YYt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JYt=ji+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,QYt=Re({opSnippet:JYt,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),tZt={kernelName:lg,backendName:"webgl",kernelFunc:QYt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eZt{constructor(t,n,s,r,i){this.variableNames=["A"],this.outputShape=[];const[o,a,u,l]=t;this.outputShape=[o,n,s,l];const c=[r&&n>1?a-1:a,r&&s>1?u-1:u],h=[r&&n>1?n-1:n,r&&s>1?s-1:s];let d;i?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nZt{constructor(t,n,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,u,l]=t;this.outputShape=[o,n,s,l];const c=[r&&n>1?a-1:a,r&&s>1?u-1:u],h=[r&&n>1?n-1:n,r&&s>1?s-1:s];let d;i?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sZt(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:o,size:a}=s,[u,l]=a,c=pt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new nZt(r.shape,u,l,i,o):new eZt(r.shape,u,l,i,o);return n.runWebGLProgram(c,[r],"float32")}const rZt={kernelName:Hy,backendName:"webgl",kernelFunc:sZt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iZt{constructor(t,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,r,i]=n,[,o,a]=t,u=[s&&o>1?r-1:r,s&&a>1?i-1:i],l=[s&&o>1?o-1:o,s&&a>1?a-1:a],c=u[0]/l[0],h=u[1]/l[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oZt(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:o}=s,a=new iZt(i.shape,r.shape,o);return n.runWebGLProgram(a,[i],i.dtype)}const aZt={kernelName:dN,backendName:"webgl",kernelFunc:oZt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uZt{constructor(t,n,s,r,i){this.variableNames=["A"],this.outputShape=[];const[o,a,u,l]=t;this.outputShape=[o,n,s,l];const c=[r&&n>1?a-1:a,r&&s>1?u-1:u],h=[r&&n>1?n-1:n,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;i?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lZt{constructor(t,n,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,u,l]=t;this.outputShape=[o,n,s,l];const c=[r&&n>1?a-1:a,r&&s>1?u-1:u],h=[r&&n>1?n-1:n,r&&s>1?s-1:s],d=r?"0.5":"0.0";let p;i?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cZt(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:o,size:a}=s,[u,l]=a,c=pt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new lZt(r.shape,u,l,i,o):new uZt(r.shape,u,l,i,o);return n.runWebGLProgram(c,[r],r.dtype)}const hZt={kernelName:Gy,backendName:"webgl",kernelFunc:cZt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dZt{constructor(t,n,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,r,i]=n,[,o,a]=t,u=[s&&o>1?r-1:r,s&&a>1?i-1:i],l=[s&&o>1?o-1:o,s&&a>1?a-1:a],c=u[0]/l[0],h=u[1]/l[1],d=1/c,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pZt(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:o}=s,a=new dZt(i.shape,r.shape,o);return n.runWebGLProgram(a,[i],i.dtype)}const fZt={kernelName:hN,backendName:"webgl",kernelFunc:pZt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mZt{constructor(t,n){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const r=a=>n.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,i=t.map((a,u)=>r(u)).join(","),o=un(s);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gZt{constructor(t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const r=lr("rc",s),i=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,o=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=un(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(r.slice())};
          if(${i}){
            result.g = ${l(r.slice())};
          }
          if(${o}) {
            result.b = ${c(r.slice())};
            if(${i}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return d(f)}function l(f){return f[s-1]="("+f[s-1]+" + 1)",d(f)}function c(f){return f[s-2]="("+f[s-2]+" + 1)",d(f)}function h(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",d(f)}function d(f){const m=t.map((b,w)=>p(w,f)),g=m.join(","),x=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function p(f,m){return n.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xZt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:i}=s,o=r.shape.length,a=ve(i,r.shape);if(o===0)return Yr({inputs:{x:r},backend:n});const u=pt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gZt(r.shape,a):new mZt(r.shape,a);return n.runWebGLProgram(u,[r],r.dtype)}const bZt={kernelName:qy,backendName:"webgl",kernelFunc:xZt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yZt{constructor(t,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],r=t[2];this.outputShape=t;let i="";typeof n=="number"?i=`float outputValue = ${n.toFixed(2)};`:i=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wZt={kernelName:$N,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:i,center:o}=t,a=n,u=new yZt(s.shape,i),[l,c]=UE(o,s.shape[1],s.shape[2]),h=[[l,c,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(u,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vZt=Re({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),kZt={kernelName:cg,backendName:"webgl",kernelFunc:vZt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IZt=Re({opSnippet:"return inversesqrt(x);",cpuKernelImpl:D7t}),CZt={kernelName:hg,backendName:"webgl",kernelFunc:IZt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G7{constructor(t,n,s,r,i,o,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const u=un(i.length),l=un(o.length);let c="";s===1?c="i":s===2&&(c="i, j");const h=`getIndices(${c})`;let d="";r===1?d="i":r===2&&(d="i, coords[1]");const p=`getUpdates(${d})`,f=n>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Zt(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:i}=t,{shape:o}=s,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Wg(i,r,o),d=[h/l,l];if(h===0)return n.makeTensorInfo(o,r.dtype);const p=Pt({inputs:{x:r},backend:n,attrs:{shape:[u,a]}}),f=Pt({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new G7(u,a,p.shape.length,f.shape.length,c,d),x=n.runWebGLProgram(g,[f,p,m],f.dtype),b=Pt({inputs:{x},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(m),b}const SZt={kernelName:iV,backendName:"webgl",kernelFunc:$Zt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NZt{constructor(t,n,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const i="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,a=pt().getNumber("WEBGL_VERSION")===2?i:o,u=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EZt(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:i}=t,{side:o}=s,a=new NZt(r.shape[0],r.shape[1],i.shape[1],o),u=[[r.shape[1]]];return n.runWebGLProgram(a,[r,i],"int32",u)}const DZt={kernelName:oV,backendName:"webgl",kernelFunc:EZt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TZt{constructor(t,n,s){this.variableNames=["c","a","b"],this.outputShape=n;let r,i;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)i="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let c=0;c<n.length;c++)l.push(`${a[c]}`),c<t&&u.push(`${a[c]}`);r=u.join(),i=l.join()}const o=un(s);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AZt(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:i}=t,o=new TZt(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,i],Gr(r.dtype,i.dtype))}const FZt={kernelName:jy,backendName:"webgl",kernelFunc:AZt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RZt=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Cw};
  float scale = ${$w};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,_Zt=Re({opSnippet:RZt}),MZt={kernelName:dg,backendName:"webgl",kernelFunc:_Zt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OZt=qd+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,LZt=Re({opSnippet:OZt,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:A7t}),zZt={kernelName:gg,backendName:"webgl",kernelFunc:LZt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BZt=Re({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),PZt={kernelName:mg,backendName:"webgl",kernelFunc:BZt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WZt=qd+`
  return sin(x);
`,VZt=Re({opSnippet:WZt}),UZt={kernelName:pg,backendName:"webgl",kernelFunc:VZt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GZt=Re({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),HZt={kernelName:fg,backendName:"webgl",kernelFunc:GZt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qZt=Re({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),jZt={kernelName:xg,backendName:"webgl",kernelFunc:qZt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KZt={kernelName:Yy,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,paddings:o}=s;L(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((x,b)=>x*b),u=[[0,0]];u.push(...o);for(let x=1+i.length;x<r.shape.length;++x)u.push([0,0]);const l=[],c=V7({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),h=Vg(c.shape,i,a,!1),d=Ug(h.length,i.length,!1),p=Gg(c.shape,i,a,!1),f=Pt({inputs:{x:c},backend:n,attrs:{shape:h}}),m=cr({inputs:{x:f},backend:n,attrs:{perm:d}}),g=Pt({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach(x=>n.disposeIntermediateTensorInfo(x)),g}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XZt(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:i,defaultValue:o}=t;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=n.readSync(s.dataId),u=n.readSync(r.dataId),l=n.readSync(i.dataId),c=n.readSync(o.dataId)[0],[h,d,p,f,m]=R7t(a,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const YZt={kernelName:pN,backendName:"webgl",kernelFunc:XZt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZZt(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:i}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(n.readSync(r.dataId)),a=n.readSync(s.dataId),u=Array.from(n.readSync(i.dataId)),[l,c,h]=_7t(a,s.shape,s.dtype,o,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const JZt={kernelName:fN,backendName:"webgl",kernelFunc:ZZt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QZt(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);const o=n.readSync(s.dataId),a=n.readSync(r.dataId),u=n.readSync(i.dataId),[l,c]=KH(o,s.shape,s.dtype,a,u,!0);return n.makeTensorInfo(c,s.dtype,l)}const tJt={kernelName:mN,backendName:"webgl",kernelFunc:QZt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eJt(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);const o=n.readSync(s.dataId),a=n.readSync(r.dataId),u=n.readSync(i.dataId),[l,c]=KH(o,s.shape,s.dtype,a,u);return n.makeTensorInfo(c,s.dtype,l)}const nJt={kernelName:gN,backendName:"webgl",kernelFunc:eJt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sJt(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:i,defaultValue:o}=t,{outputShape:a}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Wg(i,r,a),p=!1;if(i.dtype==="string"){const x=n.bufferSync(r),b=n.bufferSync(i),w=Mu(n.readSync(o.dataId)[0]),y=T7t(x,b,a,d,c,l,u,h,w,p);return n.makeTensorInfo(a,y.dtype,y.values)}const f=new G7(l,u,r.shape.length,i.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[i,r,o],i.dtype),g=Pt({inputs:{x:m},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(m),g}const rJt={kernelName:aV,backendName:"webgl",kernelFunc:sJt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iJt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:i,axis:o}=s,a=ve(o,r.shape)[0],u=iD(r,i,a),l=r.shape.length,c=new Array(l).fill(0),h=r.shape.slice();return u.map(d=>{const p=[...h];p[a]=d;const f=jd({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[a]+=d,f})}const oJt={kernelName:Zy,backendName:"webgl",kernelFunc:iJt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H7="return sqrt(x);",aJt=Re({opSnippet:H7,packedOpSnippet:H7,cpuKernelImpl:M7t}),uJt={kernelName:bg,backendName:"webgl",kernelFunc:aJt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lJt=Re({opSnippet:"return x * x;"}),cJt={kernelName:xN,backendName:"webgl",kernelFunc:lJt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q7="return (a - b) * (a - b);",hJt=Ms({opSnippet:q7,packedOpSnippet:q7}),dJt={kernelName:yg,backendName:"webgl",kernelFunc:hJt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pJt({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=ji+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,i=new ba(s.shape,r);return n.runWebGLProgram(i,[s],s.dtype)}const fJt={kernelName:Cg,backendName:"webgl",kernelFunc:pJt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mJt{constructor(t,n,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,i=un(s.length),o=un(s.length);let a="";if(r===1)a="coords * strides + begin";else{let u=0;a=s.map((l,c)=>(u++,s.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${u-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${t});
      ${i} strides = ${i}(${n});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gJt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,end:o,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:b,end:w,strides:y}=PE(r.shape,i,o,a,u,l,c,h,d);let v;if(m)v=Pt({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||x){L(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const C=LE(b,w,y),I=jd({inputs:{x:r},backend:n,attrs:{begin:b,size:C}});v=Pt({inputs:{x:I},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(I)}else if(n.shouldExecuteOnCPU([r])){const I=n.readSync(r.dataId),$=ke(r.shape,r.dtype,I),S=O7t(p,$,y,b);v=n.makeTensorInfo(f,r.dtype,S.values)}else{const I=new mJt(b,y,p);v=n.runWebGLProgram(I,[r],r.dtype)}const k=Pt({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}const xJt={kernelName:bN,backendName:"webgl",kernelFunc:gJt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bJt(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:i,leftPad:o,rightPad:a,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=L7t(d,p,r,i,o,a,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}const yJt={kernelName:yN,backendName:"webgl",kernelFunc:bJt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wJt(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:i,delimiter:o}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=n.readSync(i.dataId),u=n.readSync(o.dataId)[0],[l,c,h]=z7t(a,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const vJt={kernelName:wN,backendName:"webgl",kernelFunc:wJt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kJt(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:i}=t;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(i.dataId),a=B7t(o,r);return n.makeTensorInfo(i.shape,"int32",a)}const IJt={kernelName:vN,backendName:"webgl",kernelFunc:kJt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CJt=Re({opSnippet:"return tan(x);"}),$Jt={kernelName:vg,backendName:"webgl",kernelFunc:CJt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SJt=Re({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`}),NJt={kernelName:kg,backendName:"webgl",kernelFunc:SJt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EJt{constructor(t,n){this.variableNames=["A"];const s=new Array(t.length);for(let o=0;o<s.length;o++)s[o]=t[o]*n[o];this.outputShape=s,this.rank=s.length;const r=un(this.rank),i=DJt(t);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}}function DJt(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j7(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:i}=s;if(r.dtype==="string"||r.shape.length>5){const u=n.readSync(r.dataId),l=r.dtype==="string"?u.map(d=>Mu(d)):u,c=ke(r.shape,r.dtype,l),h=W7t(c,i);return n.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new EJt(r.shape,i);return n.runWebGLProgram(o,[r],r.dtype)}const TJt={kernelName:Ig,backendName:"webgl",kernelFunc:j7};class AJt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class FJt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vc(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function K7(e){let t=1;for(;t<e;)t*=2;return t}function RJt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:i,sorted:o}=s,a=pt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=pt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([r])||c<a||i>u){const S=n.readSync(r.dataId),[N,F]=V7t(S,l,r.dtype,i,o);return[n.makeTensorInfo(N.shape,N.dtype,N.values),n.makeTensorInfo(F.shape,F.dtype,F.values)]}if(i===0)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(c===1)return[r,v0({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=h!==null&&h.isPacked,p=d?n.unpackTensor(r):r,m=xt(l)/c,g=Pt({inputs:{x:p},attrs:{shape:[m,c]},backend:n});d&&Vc(n,p);const x=K7(i),b=K7(c);let w=null;const y=()=>w===null?[g,g]:[g,w],v=(S,N,F)=>{const D=y(),E=new AJt(F),T=[[c],[w===null?1:0],[Number.NEGATIVE_INFINITY],[S],[N]],R=w;w=n.runWebGLProgram(E,D,"int32",T),Vc(n,R)};for(let S=1;S<x;S*=2){const N=S*2;for(let F=S;F>=1;F/=2)v(N,F,[m,b])}for(let S=b;S>x;S/=2){const N=y(),F=new FJt([m,S/2]),E=[[c],[w===null?1:0],[x]],A=w;w=n.runWebGLProgram(F,N,"int32",E),Vc(n,A);const T=x/2,R=T*2;for(let _=T;_>=1;_/=2)v(R,_,w.shape)}let k=w;w=jd({inputs:{x:w},backend:n,attrs:{begin:0,size:[m,i]}}),Vc(n,k);let C=M7({inputs:{x:g,indices:w},backend:n,attrs:{axis:1,batchDims:1}});Vc(n,g);const I=l.slice(0,-1);I.push(i),k=w,w=Pt({inputs:{x:w},attrs:{shape:I},backend:n}),Vc(n,k);const $=C;return C=Pt({inputs:{x:C},attrs:{shape:I},backend:n}),Vc(n,$),[C,w]}const _Jt={kernelName:kN,backendName:"webgl",kernelFunc:RJt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MJt{constructor(t,n,s,r,i,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=s==="nearest"?1:2;let u;switch(r){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OJt(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:i}=t,{interpolation:o,fillMode:a,fillValue:u,outputShape:l}=s,[c,h,d,p]=r.shape,[f,m]=l??[h,d],g=[c,f,m,p],x=new MJt(h,d,o,a,u,g);return n.runWebGLProgram(x,[r,i],"float32")}const LJt={kernelName:IN,backendName:"webgl",kernelFunc:OJt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zJt(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:i}=t;d0(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=s.readSync(i.dataId),{outputValues:a,outputShape:u,indices:l}=U7t(o,r,i.shape,i.dtype);return[s.makeTensorInfo(u,i.dtype,a),s.makeTensorInfo([l.length],"int32",l)]}const BJt={kernelName:CN,backendName:"webgl",kernelFunc:zJt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PJt(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:i}=s;i<0&&(i+=r.shape.length);const o=r,a=o.shape.length,u=r.shape[i],l=new Array(a-1);let c=0;for(let m=0;m<a;m++)m!==i&&(l[c++]=o.shape[m]);const h=[],d=new Array(a).fill(0),p=o.shape.slice();p[i]=1;const f=new Array(u);for(let m=0;m<f.length;m++){d[i]=m;const g=jd({inputs:{x:o},backend:n,attrs:{begin:d,size:p}}),x=Pt({inputs:{x:g},backend:n,attrs:{shape:l}});f[m]=x,h.push(g)}return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const WJt={kernelName:Qy,backendName:"webgl",kernelFunc:PJt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VJt{constructor(t,n){this.variableNames=["x","segmentIds"];const s=t.windowSize,r=t.batchSize,i=t.inSize,o=t.numSegments,a=o*Math.ceil(i/s);this.outputShape=[r,a];const u="0.0",l="sumValue",c=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";i%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let f="";i%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UJt(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:i}=t,{numSegments:o}=s,a=r.shape.length,u=[];let l=0;const c=Sn([l],a);let h=r;c!=null&&(h=cr({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(h),l=On(1,a)[0]);const d=E5(h.shape,l,o),p=xt([h.shape[l]]),f=Pt({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=ON(r.dtype),g=(y,v,k,C,I)=>{const $=y.shape[0],S=y.shape[1],N=N5(S,I),F={windowSize:N,inSize:S,batchSize:$,numSegments:I},D=new VJt(F,v),E=n.compileAndRun(D,[y,k],C);if(u.push(E),E.shape[1]===I)return E;const A=U7({backend:n,attrs:{start:0,stop:I,step:1,dtype:"float32"}}),T=j7({inputs:{x:A},backend:n,attrs:{reps:[S/N]}});return u.push(A),u.push(T),g(E,v,T,C,I)},x=g(f,"unsortedSegmentSum",i,m,o),b=Pt({inputs:{x},backend:n,attrs:{shape:d}});let w=b;if(c!=null){u.push(b);const y=zu(c);w=cr({inputs:{x:w},backend:n,attrs:{perm:y}})}return u.forEach(y=>n.disposeIntermediateTensorInfo(y)),w}const GJt={kernelName:tw,backendName:"webgl",kernelFunc:UJt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HJt=[M9t,L9t,P9t,U9t,H9t,K9t,Y9t,J9t,nqt,rqt,aqt,cqt,pqt,xqt,wqt,kqt,Cqt,Eqt,Tqt,Fqt,Mqt,Wqt,Uqt,Hqt,Yqt,Jqt,njt,b9t,ijt,cjt,fjt,wjt,kjt,Cjt,Sjt,Ejt,Ajt,Rjt,Mjt,Ljt,Bjt,Wjt,Gjt,qjt,Yjt,Jjt,eKt,rKt,oKt,uKt,hKt,pKt,gKt,bKt,yKt,vKt,IKt,$Kt,NKt,DKt,AKt,_Kt,LKt,BKt,VKt,HKt,jKt,XKt,x9t,ZKt,ujt,QKt,eXt,sXt,w9t,iXt,aXt,lXt,dXt,mXt,xXt,yXt,vXt,CXt,SXt,EXt,FXt,_Xt,OXt,PXt,VXt,GXt,qXt,KXt,JXt,eYt,iYt,hYt,I9t,mYt,bYt,vYt,CYt,qqt,SYt,EYt,TYt,RYt,LYt,k9t,BYt,WYt,UYt,HYt,qYt,jqt,aYt,KYt,ZYt,tZt,$9t,rZt,aZt,hZt,fZt,bZt,wZt,kZt,CZt,SZt,DZt,FZt,MZt,zZt,PZt,UZt,HZt,Pqt,lYt,jZt,KZt,YZt,JZt,tJt,nJt,rJt,oJt,uJt,cJt,dJt,fJt,xJt,yJt,vJt,IJt,uYt,F9t,$Jt,NJt,TJt,_Jt,LJt,R9t,BJt,WJt,GJt,NYt];for(const e of HJt)dV(e);/** @license See the LICENSE file. */const qJt="4.2.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X7=kT.debug,ya=kT.layout.imageSrcLength,jJt=128;let vT;self.onmessage=e=>{switch(e.data.command){case"startLoadModel":{const t=e.data.payload.url;vT=KJt(t);break}case"startPredict":{const t=e.data.payload.inputImageData;XJt(t);break}case"startExplain":{const t=e.data.payload.inputImageData,n=e.data.payload.inputImageSeg;YJt(t,n);break}default:{console.error("Worker: unknown message",e.data.command);break}}};const KJt=async e=>{const t=await CPt(e);return postMessage({command:"finishLoadModel",payload:{}}),t},XJt=async e=>{const t=await vT,n=Y7(e.data,e.width,e.height,!0),s=ua([n]),i=t.call(s,{})[0].dataSync();return postMessage({command:"finishPredict",payload:{predictedProb:i}}),i},YJt=async(e,t)=>{const n=await vT,s=l=>{const c=[];for(const m of l){const g=ZJt(e.data,t.segData.data,m),x=Y7(g,ya,ya,!0);c.push(x)}const h=ua(c),p=n.call(h,{})[0].arraySync();return new Promise(m=>{m(p)})},r=[new Array(t.segSize).fill(0)],i=new Tz(s,r,.2022);BW("Explain image",X7);const o=new Array(t.segSize).fill(1),a=await i.explainOneInstance(o,jJt);return BW("Explain image",X7),postMessage({command:"finishExplain",payload:{shapValues:a}}),a},ZJt=(e,t,n,s=255)=>{const r=new Set;for(const[o,a]of n.entries())a!==0&&r.add(o);const i=new Array(e.length).fill(s);for(let o=0;o<e.length;o+=4)if(r.has(t[o]))for(let a=0;a<3;a++)i[o+a]=e[o+a];return new Uint8ClampedArray(i)},JJt=e=>{const t=e.length,n=e[0].length;let s=[];if(t<ya||n<ya)throw Error("Image size is smaller than the specified length.");const r=Math.floor(t/2)-Math.floor(ya/2),i=Math.floor(n/2)-Math.floor(ya/2);return s=e.slice(r,r+ya).map(o=>o.slice(i,i+ya)),s},Y7=(e,t,n,s=!0)=>{let r=vd([t,n,3],0).arraySync();for(let o=0;o<e.length;o++){const a=Math.floor(o/4),u=o%4,l=t===n?Math.floor(a/t):a%t,c=t===n?a%t:Math.floor(a/t);if(u<3){let h=e[o];s&&(h/=255),r[l][c][u]=h}}return t!=ya&&n!=ya&&(r=JJt(r)),DMt(r)}})();
